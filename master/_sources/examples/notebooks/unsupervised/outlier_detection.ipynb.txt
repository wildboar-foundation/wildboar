{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Outlier detection\n",
    "\n",
    "In this example, ``ShapeletIsolationForest`` is used to detect outliers. We\n",
    "use the ``ShapeletForestEmbedding`` to visualize the time series and mark\n",
    "each sample according to the outlier score assigned by the shapelet isolation forest.\n",
    "True anomalous samples are encircled by a red circle and samples predicted as\n",
    "anomalous are encircled by a black circle."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pylab as plt\n",
    "from sklearn.decomposition import PCA\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.pipeline import make_pipeline\n",
    "\n",
    "from wildboar.datasets import load_dataset\n",
    "from wildboar.ensemble import IsolationShapeletForest, ShapeletForestEmbedding\n",
    "\n",
    "random_state = 1234"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "First, we load the dataset from the outlier repository."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "x, y = load_dataset(\"CBF\", repository=\"wildboar/outlier:easy\")\n",
    "x_train, x_test, y_train, y_test = train_test_split(\n",
    "    x, y, test_size=0.2, random_state=random_state, stratify=y\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Second, we construct a pipeline for projecting time series to a 2-dimensional plane using PCA and the shapelet forest embedding."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "metric = \"euclidean\"\n",
    "embedding = make_pipeline(\n",
    "    ShapeletForestEmbedding(\n",
    "        metric=metric, random_state=random_state, sparse_output=False\n",
    "    ),\n",
    "    PCA(n_components=2, random_state=random_state),\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Next, we define an isolation shapelet forest that uses random shapelet trees to isolate outlier samples"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "isf = IsolationShapeletForest(\n",
    "    contamination=0.05,\n",
    "    metric=metric,\n",
    "    random_state=random_state,\n",
    "    n_jobs=-1,\n",
    ")\n",
    "isf.fit(x_train)\n",
    "embedding.fit(x_train)\n",
    "x_embedding = embedding.transform(x_test)\n",
    "\n",
    "y_score = isf.decision_function(x_test)\n",
    "y_pred = isf.predict(x_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Finally, we plot the projection and mark the correct outliers and the samples predicted outliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.colorbar.Colorbar at 0x7fc218db79a0>"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "mapping = ax.scatter(\n",
    "    x_embedding[:, 0], x_embedding[:, 1], c=y_score, cmap=\"viridis\", marker=\"x\"\n",
    ")\n",
    "ax.scatter(\n",
    "    x_embedding[y_test == -1, 0],\n",
    "    x_embedding[y_test == -1, 1],\n",
    "    edgecolors=\"red\",\n",
    "    linewidths=1,\n",
    "    alpha=0.2,\n",
    "    facecolors=\"None\",\n",
    "    s=100,\n",
    "    marker=\"o\",\n",
    ")\n",
    "ax.scatter(\n",
    "    x_embedding[y_pred == -1, 0],\n",
    "    x_embedding[y_pred == -1, 1],\n",
    "    edgecolors=\"black\",\n",
    "    linewidths=1,\n",
    "    alpha=0.2,\n",
    "    facecolors=\"None\",\n",
    "    s=200,\n",
    "    marker=\"o\",\n",
    ")\n",
    "plt.tight_layout()\n",
    "fig.colorbar(mapping, ax=ax, orientation=\"horizontal\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.9.7 ('wb2')",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  },
  "orig_nbformat": 4,
  "vscode": {
   "interpreter": {
    "hash": "52652bfa9fd4561eadaaee81a668145a0f20ccab101fde0ad61faafa07b87b33"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
