:orphan:


********************************************
:py:mod:`wildboar.transform._matrix_profile`
********************************************

.. py:module:: wildboar.transform._matrix_profile


Module Contents
---------------

Classes
-------

.. autoapisummary::

   wildboar.transform._matrix_profile.MatrixProfileTransform




.. py:class:: MatrixProfileTransform(window=0.1, exclude=None, n_jobs=None)


   Bases: :py:obj:`sklearn.base.TransformerMixin`, :py:obj:`wildboar.base.BaseEstimator`

   
   Matrix profile transform.

   Transform each time series in a dataset to its MatrixProfile similarity
   self-join.

   :Parameters:

       **window** : int or float, optional
           The subsequence size, by default 0.1.
           
           - if float, a fraction of n_timestep.
           - if int, the exact subsequence size.

       **exclude** : int or float, optional
           The size of the exclusion zone. The default exclusion zone is 0.2.
           
           - if float, expressed as a fraction of the windows size.
           - if int, exact size (0 < exclude).

       **n_jobs** : int, optional
           The number of jobs to use when computing the profile.











   .. rubric:: Examples

   >>> from wildboar.datasets import load_two_lead_ecg()
   >>> from wildboar.transform import MatrixProfileTransform
   >>> x, y = load_two_lead_ecg()
   >>> t = MatrixProfileTransform()
   >>> t.fit_transform(x)



   ..
       !! processed by numpydoc !!
   .. py:method:: fit(x, y=None)

      
      Fit the matrix profile.

      Sets the expected input dimensions.

      :Parameters:

          **x** : array-like of shape (n_samples, n_timesteps)         or (n_samples, n_dims, n_timesteps)
              The samples.

          **y** : ignored
              The optional labels.

      :Returns:

          self
              A fitted instance.













      ..
          !! processed by numpydoc !!

   .. py:method:: transform(x)

      
      Transform the samples to their MatrixProfile self-join.


      :Parameters:

          **x** : array-like of shape (n_samples, n_timesteps)         or (n_samples, n_dims, n_timesteps)
              The samples.

      :Returns:

          ndarray of shape (n_samples, n_timestep) or (n_samples, n_dims, n_timesteps)
              The matrix matrix profile of each sample.













      ..
          !! processed by numpydoc !!


