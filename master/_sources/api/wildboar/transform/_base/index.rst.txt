:orphan:


**********************************
:py:mod:`wildboar.transform._base`
**********************************

.. py:module:: wildboar.transform._base


Module Contents
---------------

Classes
-------

.. autoapisummary::

   wildboar.transform._base.BaseFeatureEngineerTransform




.. py:class:: BaseFeatureEngineerTransform(*, random_state=None, n_jobs=None)


   Bases: :py:obj:`sklearn.base.TransformerMixin`, :py:obj:`wildboar.base.BaseEstimator`

   
   Base feature engineer transform.


   :Parameters:

       **random_state** : int or RandomState
           Controls the random resampling of the original dataset.
           
           - If ``int``, ``random_state`` is the seed used by the
             random number generator.
           - If :class:`numpy.random.RandomState` instance, ``random_state`` is
             the random number generator.
           - If ``None``, the random number generator is the
             :class:`numpy.random.RandomState` instance used by
             :func:`numpy.random`.

       **n_jobs** : int, optional
           The number of jobs to run in parallel. A value of ``None`` means
           using a single core and a value of ``-1`` means using all cores.
           Positive integers mean the exact number of cores.












   :Attributes:

       **embedding_** : Embedding
           The underlying embedding.


   ..
       !! processed by numpydoc !!
   .. py:method:: fit(x, y=None)

      
      Fit the transform.


      :Parameters:

          **x** : array-like of shape (n_samples, n_timestep) or                (n_samples, n_dimensions, n_timestep)
              The time series dataset.

          **y** : None, optional
              For compatibility.

      :Returns:

          BaseFeatureEngineerTransform
              This object.













      ..
          !! processed by numpydoc !!

   .. py:method:: fit_transform(x, y=None)

      
      Fit the embedding and return the transform of x.


      :Parameters:

          **x** : array-like of shape (n_samples, n_timestep) or                (n_samples, n_dimensions, n_timestep)
              The time series dataset.

          **y** : None, optional
              For compatibility.

      :Returns:

          ndarray of shape (n_samples, n_outputs)
              The embedding.













      ..
          !! processed by numpydoc !!

   .. py:method:: transform(x)

      
      Transform the dataset.


      :Parameters:

          **x** : array-like of shape (n_samples, n_timestep) or                (n_samples, n_dimensions, n_timestep)
              The time series dataset.

      :Returns:

          ndarray of shape (n_samples, n_outputs)
              The transformation.













      ..
          !! processed by numpydoc !!


