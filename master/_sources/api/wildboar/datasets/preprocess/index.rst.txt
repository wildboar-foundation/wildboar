:py:mod:`wildboar.datasets.preprocess`
======================================

.. py:module:: wildboar.datasets.preprocess

.. autoapi-nested-parse::

   Utilities for preprocessing time series.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   wildboar.datasets.preprocess.maxabs_scale
   wildboar.datasets.preprocess.minmax_scale
   wildboar.datasets.preprocess.named_preprocess
   wildboar.datasets.preprocess.standardize
   wildboar.datasets.preprocess.truncate



.. py:function:: maxabs_scale(x)

   Scale each time series by its maximum absolute value.

   :param x: The dataset
   :type x: ndarray of shape (n_samples, n_timestep) or (n_samples, n_dims, n_timestep)

   :returns: **x** -- The transformed dataset
   :rtype: ndarray of shape (n_samples, n_timestep) or (n_samples, n_dims, n_timestep)


.. py:function:: minmax_scale(x, min=0, max=1)

   Scale x along the time dimension.

   Each time series is scaled such that each value is between min and max.

   :param x: The dataset
   :type x: ndarray of shape (n_samples, n_timestep) or (n_samples, n_dims, n_timestep)
   :param min: The minimum value
   :type min: float, optional
   :param max: The maximum value
   :type max: float, optional

   :returns: **x** -- The transformed dataset
   :rtype: ndarray of shape (n_samples, n_timestep) or (n_samples, n_dims, n_timestep)


.. py:function:: named_preprocess(name)

   Get a named preprocessor.

   :param name: The name
   :type name: str

   :returns: The preprocessor function.
   :rtype: callable


.. py:function:: standardize(x)

   Scale x along the time dimension.

   The resulting array will have zero mean and unit standard deviation.

   :param x: The dataset
   :type x: ndarray of shape (n_samples, n_timestep) or (n_samples, n_dims, n_timestep)

   :returns: **x** -- The standardized dataset
   :rtype: ndarray of shape (n_samples, n_timestep) or (n_samples, n_dims, n_timestep)


.. py:function:: truncate(x, n_shortest=None)

   Truncate x to the shortest sequence.

   :param x: The dataset
   :type x: ndarray of shape (n_samples, n_timestep) or (n_samples, n_dims, n_timestep)
   :param n_shortest: The maximum size
   :type n_shortest: int, optional

   :returns: **x** -- The truncated dataset
   :rtype: ndarray of shape (n_samples, n_shortest) or (n_samples, n_dims, n_shortest)


