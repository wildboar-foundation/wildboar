:orphan:


*******************************************
:py:mod:`wildboar.distance._matrix_profile`
*******************************************

.. py:module:: wildboar.distance._matrix_profile




Functions
---------

.. autoapisummary::

   wildboar.distance._matrix_profile.matrix_profile
   wildboar.distance._matrix_profile.paired_matrix_profile



.. py:function:: matrix_profile(X, Y=None, *, dim=0, window=5, exclude=None, kind='warn', return_index=False, n_jobs=None)

   
   Compute the matrix profile of every subsequence in X.

   If Y is given compute the metrix profile of every subsequence in X finding
   the minimum distance in any time series in Y; othervise finding the minimum
   distance in any time series in X. The former corresponds to a self-join and
   the latter to an AB join.

   The output approximately corresponds to that of
   :func:`~wildboar.distance.matrix_profile` where `X.flatten()` but without
   computing the distance where two time series overlap. The outputs exactly
   correspond when ``X.shape[0] == 1``.

   :Parameters:

       **X** : array-like of shape (x_samples, x_timestep)
           The time series for which the matrix profile is computed.

       **Y** : array-like of shape (y_samples, y_timestep), optional
           The time series used to annotate `X`. If None, `X` is used to annotate.

       **dim** : int, optional
           The dimension.

       **window** : int or float, optional
           The window size.
           
           - If float, the window size is a fraction of `x_timestep`.
           - If int, the window size is exact.

       **exclude** : int or float, optional
           The exclusion zone.
           
           - If float, the exclusion zone is a fraction of `window`.
           - If int, the exclusion zone is exact.
           - If None, the exclusion zone is determined automatically. If Y is None,
             (self-join) the value is `0.2`, otherwise (AB-join) the value is
             `0.0`.

       **kind** : {"paired", "default"}, optional
           The kind of matrix profile.
           
           - if "paired", compute the matrix profile for each time series in X
             optionally annotated with each time series in Y.
           - if "default", compute the matrix profile for every subsequence in
             every time series in X optional annotated with every time series in
             Y.

       **return_index** : bool, optional
           Return the matrix profile index.

       **n_jobs** : int, optional
           The number of parallel jobs.

   :Returns:

       **mp** : ndarray of shape (x_samples, profile_size)
           The matrix profile.

       **(mpi_sample, mpi_start)** : ndarray of shape (x_samples, profile_size), optional
           The matrix profile index sample and start positions. Returned if
           `return_index=True`.













   ..
       !! processed by numpydoc !!

.. py:function:: paired_matrix_profile(X, Y=None, *, window=5, dim=0, exclude=None, n_jobs=-1, return_index=False)

   
   Compute the matrix profile.

   - If only `X` is given, compute the similarity self-join of every subsequence in
     `X` of size ``window`` to its nearest neighbor in `X` excluding trivial matches
     according to the `exclude` parameter.
   - If both `X` and `Y` are given, compute the similarity join of every
     subsequenec in `X` of size `window` to its nearest neighbor in `Y` excluding
     matches according to the `exclude` parameter.

   :Parameters:

       **X** : array-like of shape (n_timestep, ), (n_samples, x_timestep) or         (n_samples, n_dim, x_timestep)
           The first time series.

       **Y** : array-like of shape (n_timestep, ), (n_samples, y_timestep) or         (n_samples, n_dim, y_timestep), optional
           The optional second time series. Y is broadcast to the shape of X if possible.

       **window** : int or float, optional
           The subsequence size, by default 5
           
           - if float, a fraction of y_timestep
           - if int, the exact subsequence size.

       **dim** : int, optional
           The dim to compute the matrix profile for, by default 0.

       **exclude** : int or float, optional
           The size of the exclusion zone. The default exclusion zone is  0.2 for
           similarity self-join and 0.0 for similarity join.
           
           - if float, expressed as a fraction of the windows size.
           - if int, exact size (0 >= exclude < window).

       **n_jobs** : int, optional
           The number of jobs to use when computing the profile.

       **return_index** : bool, optional
           Return the matrix profile index.

   :Returns:

       **mp** : ndarray of shape (profile_size, ) or (n_samples, profile_size)
           The matrix profile.

       **mpi** : ndarray of shape (profile_size, ) or (n_samples, profile_size), optional
           The matrix profile index.








   .. rubric:: Notes

   The `profile_size` is  ``X.shape[-1] - window + 1``.

   .. rubric:: References

   Yeh, C. C. M. et al. (2016).
       Matrix profile I: All pairs similarity joins for time series: a unifying view
       that includes motifs, discords and shapelets. In 2016 IEEE 16th international
       conference on data mining (ICDM)

   .. only:: latex

      




   ..
       !! processed by numpydoc !!

