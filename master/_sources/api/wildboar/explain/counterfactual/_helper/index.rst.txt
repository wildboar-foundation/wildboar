:orphan:


*************************************************
:py:mod:`wildboar.explain.counterfactual._helper`
*************************************************

.. py:module:: wildboar.explain.counterfactual._helper


Module Contents
---------------

Classes
-------

.. autoapisummary::

   wildboar.explain.counterfactual._helper.PredictEvaluator
   wildboar.explain.counterfactual._helper.ProbabilityEvaluator
   wildboar.explain.counterfactual._helper.TargetEvaluator



Functions
---------

.. autoapisummary::

   wildboar.explain.counterfactual._helper.counterfactuals



.. py:class:: PredictEvaluator(estimator)




   
   Evaluate if a counterfactual is predicted as y.
















   ..
       !! processed by numpydoc !!
   .. py:method:: is_counterfactual(x, y)

      
      Return true if x is a counterfactual of label y.


      :Parameters:

          **x** : ndarray of shape (n_timestep,)
              The counterfactual sample.

          **y** : object
              The counterfactual label.

      :Returns:

          bool
              Return true if counterfactual valid.













      ..
          !! processed by numpydoc !!


.. py:class:: ProbabilityEvaluator(estimator, probability=0.5)




   
   Evaluate the probability threshold.


   :Parameters:

       **estimator** : object
           The estimator.

       **probability** : float, optional
           The minimum probability of the predicted label.














   ..
       !! processed by numpydoc !!
   .. py:method:: is_counterfactual(x, y)

      
      Return true if x is a counterfactual of label y.


      :Parameters:

          **x** : ndarray of shape (n_timestep,)
              The counterfactual sample.

          **y** : object
              The counterfactual label.

      :Returns:

          bool
              Return true if counterfactual valid.













      ..
          !! processed by numpydoc !!


.. py:class:: TargetEvaluator(estimator)




   
   Evaluate if a sample is a counterfactual.


   :Parameters:

       **estimator** : object
           The estimator.














   ..
       !! processed by numpydoc !!
   .. py:method:: is_counterfactual(x, y)

      
      Return true if x is a counterfactual of label y.


      :Parameters:

          **x** : ndarray of shape (n_timestep,)
              The counterfactual sample.

          **y** : object
              The counterfactual label.

      :Returns:

          bool
              Return true if counterfactual valid.













      ..
          !! processed by numpydoc !!


.. py:function:: counterfactuals(estimator, x, y, *, train_x=None, train_y=None, method='best', scoring='deprecated', valid_scoring='deprecated', proximity=None, random_state=None, method_args=None)

   
   Compute a single counterfactual example for each sample.


   :Parameters:

       **estimator** : object
           The estimator used to compute the counterfactual example.

       **x** : array-like of shape (n_samples, n_timestep)
           The data samples to fit counterfactuals to.

       **y** : array-like broadcast to shape (n_samples,)
           The desired label of the counterfactual.

       **train_x** : array-like of shape (n_samples, n_timestep), optional
           Training samples if required by the explainer.

       **train_y** : array-like of shape (n_samples, ), optional
           Training labels if required by the explainer.

       **method** : str or BaseCounterfactual, optional
           The method to generate counterfactual explanations
           
           - if 'best', infer the most appropriate counterfactual explanation
             method based on the estimator.
           
           .. versionchanged:: 1.1.0
           
           - if str, select counterfactual explainer from named collection. See
             ``_COUNTERFACTUALS.keys()`` for a list of valid values.
           - if, BaseCounterfactual use the supplied counterfactual.

       **scoring** : str, callable, list or dict, optional
           The scoring function to determine the similarity between the counterfactual
           sample and the original sample.
           
           .. deprecated:: 1.1
               ``scoring`` was renamed to ``proximity`` in 1.1 and will be removed in 1.2.

       **valid_scoring** : bool, optional
           Only compute score for successful counterfactuals.
           
           .. deprecated:: 1.1
               ``valid_scoring`` will be removed in 1.2.

       **proximity** : str, callable, list or dict, optional
           The scoring function to determine the similarity between the counterfactual
           sample and the original sample.

       **random_state** : RandomState or int, optional
           The pseudo random number generator to ensure stable result.

       **method_args** : dict, optional
           Optional arguments to the counterfactual explainer.
           
           .. versionadded:: 1.1.0

   :Returns:

       **x_counterfactuals** : ndarray of shape (n_samples, n_timestep)
           The counterfactual example.

       **valid** : ndarray of shape (n_samples,)
           Indicator matrix for valid counterfactuals.

       **score** : ndarray of shape (n_samples,) or dict, optional
           Return score of the counterfactual transform, if ``scoring`` is not None.













   ..
       !! processed by numpydoc !!

