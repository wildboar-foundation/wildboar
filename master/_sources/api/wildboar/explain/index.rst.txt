
**************************
:py:mod:`wildboar.explain`
**************************

.. py:module:: wildboar.explain

.. autoapi-nested-parse::

   
   Explanation methods for classifiers and regressors.
















   ..
       !! processed by numpydoc !!


Subpackages
===========

.. toctree::
   :titlesonly:
   :maxdepth: 3

   counterfactual/index.rst


Package Contents
----------------

Classes
-------

.. autoapisummary::

   wildboar.explain.AmplitudeImportance
   wildboar.explain.IntervalImportance
   wildboar.explain.ShapeletImportance



Functions
---------

.. autoapisummary::

   wildboar.explain.plot_importances



.. py:class:: AmplitudeImportance(scoring=None, n_intervals='sqrt', window=None, binning='normal', n_bins=4, n_repeat=1, verbose=0, random_state=None)


   Bases: :py:obj:`wildboar.base.ExplainerMixin`, :py:obj:`PermuteImportance`

   
   Compute the importance of equi-probable amplitude intervals.

   The implementation uses
   :class:`transform.SAX` to discretize the time series and then for each bin permute
   the samples along that bin.















   ..
       !! processed by numpydoc !!
   .. py:method:: explain(X, y=None)


   .. py:method:: fit(estimator, X, y, sample_weight=None)


   .. py:method:: plot(x=None, y=None, *, ax=None, n_samples=100, scoring=None, preprocess=True, k=None, show_bins=False, show_grid=True)

      
      Plot the importances.

      If x is given, the importances are plotted over the samples optionally
      labeling each sample using the supplied labels. If x is not give, the
      importances are plotted as one or more boxplots.

      :Parameters:

          **x** : array-like of shape (n_samples, n_timesteps), optional
              The samples

          **y** : array-like of shape (n_samples, ), optional
              The labels

          **ax** : Axes, optional
              Axes to plot. If ax is set, x is None and scoring is None, the number of
              axes must be the same as the number of scorers.

          **scoring** : str, optional
              The scoring to plot if multiple scorers were used when fitting.

          **preprocess** : bool, optional
              Preprocess the time series to align with the bins, ignored if x is not None.

          **k** : int or float, optional
              The number of top bins to plot, ignored if x is not None.
              
              - if int, the specified number of bins are shown
              - if float, a fraction of the number of bins are shown

          **show_bins** : bool, optional
              Annotate the plot with the index of the bin, ignored if x is not None.

          **show_grid** : bool, optional
              Annotate the plot with the bin thresholds, ignored if x is not None.

      :Returns:

          **ax** : Axis
              The axis

          **mappable** : ScalarMappable, optional
              Return the mappable used to plot the colorbar.
              Only returned if ax is not None and x is not None.













      ..
          !! processed by numpydoc !!


.. py:class:: IntervalImportance(*, scoring=None, n_repeat=5, n_intervals='sqrt', window=None, verbose=0, random_state=None)


   Bases: :py:obj:`wildboar.base.ExplainerMixin`, :py:obj:`PermuteImportance`

   
   Interval importance for time series.














   :Attributes:

       **importances_** : dict or Importance
           The importance scores for each interval. If dict, one value per scoring
           function.

       **components_** : ndarray of shape (n_intervals, 2)
           The interval start and end positions.


   ..
       !! processed by numpydoc !!
   .. py:method:: explain(x, y=None)


   .. py:method:: fit(estimator, x, y, sample_weight=None)


   .. py:method:: plot(x=None, y=None, *, ax=None, scoring=None, k=None, n_samples=100, show_grid=True)

      
      Plot the explanation.



      :Returns:

          **ax** : Axes
              The axes object













      ..
          !! processed by numpydoc !!


.. py:class:: ShapeletImportance(scoring=None, n_repeat=1, n_shapelets=10, min_shapelet_size=0.0, max_shapelet_size=1.0, metric='euclidean', metric_params=None, verbose=0, random_state=None)


   Bases: :py:obj:`wildboar.base.ExplainerMixin`, :py:obj:`PermuteImportance`

   
   Compute the importance of shapelets.

   The importance is given by permuting time series sections with
   the minimum distance to shapelets.













   :Attributes:

       **components** : ndarray
           The shapelets


   ..
       !! processed by numpydoc !!
   .. py:method:: explain(X, y=None, kernel_scale=0.25)


   .. py:method:: fit(estimator, X, y, sample_weight=None)


   .. py:method:: plot(X=None, y=None, k=None, scoring=None, kernel_scale=0.25, ax=None)

      
      Plot the explanation.



      :Returns:

          **ax** : Axes
              The axes object













      ..
          !! processed by numpydoc !!


.. py:function:: plot_importances(importances, ax=None, labels=None)

   
   Plot the importances as a boxplot.


   :Parameters:

       **importances** : Importance or dict
           The importances.

       **ax** : Axes, optional
           The axes to plot. If importances is dict, ax must contain at least
           len(importances) Axes objects.

       **labels** : array-like, optional
           The labels for the importances.

   :Returns:

       **ax** : Axes
           The plotted Axes.













   ..
       !! processed by numpydoc !!

