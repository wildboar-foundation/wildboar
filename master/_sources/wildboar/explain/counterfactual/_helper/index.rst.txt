:orphan:

:py:mod:`wildboar.explain.counterfactual._helper`
=================================================

.. py:module:: wildboar.explain.counterfactual._helper


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   wildboar.explain.counterfactual._helper.counterfactuals



.. py:function:: counterfactuals(estimator, x, y, *, train_x=None, train_y=None, method='best', scoring='deprecated', valid_scoring='deprecated', proximity=None, random_state=None, method_args=None)

   Compute a single counterfactual example for each sample.

   :param estimator: The estimator used to compute the counterfactual example
   :type estimator: object
   :param x: The data samples to fit counterfactuals to
   :type x: array-like of shape (n_samples, n_timestep)
   :param y: The desired label of the counterfactual
   :type y: array-like broadcast to shape (n_samples,)
   :param method: The method to generate counterfactual explanations

                  - if 'best', infer the most appropriate counterfactual explanation method
                    based on the estimator

                    .. versionchanged :: 1.1.0

                  - if str, select counterfactual explainer from named collection. See
                    ``_COUNTERFACTUALS.keys()`` for a list of valid values.

                  - if, BaseCounterfactual use the supplied counterfactual
   :type method: str or BaseCounterfactual, optional
   :param scoring: The scoring function to determine the similarity between the counterfactual
                   sample and the original sample

                   .. deprecated:: 1.1
                       ``scoring`` was renamed to ``proximity`` in 1.1 and will be removed in 1.2.
   :type scoring: str, callable, list or dict, optional
   :param proximity: The scoring function to determine the similarity between the counterfactual
                     sample and the original sample
   :type proximity: str, callable, list or dict, optional
   :param valid_scoring: Only compute score for successful counterfactuals.

                         .. deprecated:: 1.1
                             ``valid_scoring`` will be removed in 1.2.
   :type valid_scoring: bool, optional
   :param random_state: The pseudo random number generator to ensure stable result
   :type random_state: RandomState or int, optional
   :param method_args: Optional arguments to the counterfactual explainer.

                       .. versionadded :: 1.1.0
   :type method_args: dict, optional

   :returns: * **x_counterfactuals** (*ndarray of shape (n_samples, n_timestep)*) -- The counterfactual example.
             * **valid** (*ndarray of shape (n_samples,)*) -- Indicator matrix for valid counterfactuals
             * **score** (*ndarray of shape (n_samples,) or dict, optional*) -- Return score of the counterfactual transform, if ``scoring`` is not None


