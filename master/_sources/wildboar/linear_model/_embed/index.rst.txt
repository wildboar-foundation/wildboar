:orphan:

:py:mod:`wildboar.linear_model._embed`
======================================

.. py:module:: wildboar.linear_model._embed


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   wildboar.linear_model._embed.BaseEmbeddingEstimator
   wildboar.linear_model._embed.EmbeddingClassifierMixin
   wildboar.linear_model._embed.EmbeddingRegressorMixin
   wildboar.linear_model._embed.EmbeddingRidgeCV
   wildboar.linear_model._embed.EmbeddingRidgeClassifierCV




.. py:class:: BaseEmbeddingEstimator(*, random_state=None, n_jobs=None)

   Bases: :py:obj:`sklearn.base.BaseEstimator`

   Base class for all estimators in scikit-learn.

   .. rubric:: Notes

   All estimators should specify all the parameters that can be set
   at the class level in their ``__init__`` as explicit keyword
   arguments (no ``*args`` or ``**kwargs``).

   .. py:method:: fit(x, y, sample_weight=None)



.. py:class:: EmbeddingClassifierMixin

   .. py:method:: decision_function(x)


   .. py:method:: predict(x)


   .. py:method:: predict_log_proba(x)


   .. py:method:: predict_proba(x)



.. py:class:: EmbeddingRegressorMixin

   .. py:method:: decision_function(x)


   .. py:method:: predict(x)



.. py:class:: EmbeddingRidgeCV(*, alphas=(0.1, 1.0, 10.0), fit_intercept=True, normalize=False, scoring=None, cv=None, gcv_mode=None, n_jobs=None, random_state=None)

   Bases: :py:obj:`sklearn.base.RegressorMixin`, :py:obj:`EmbeddingRegressorMixin`, :py:obj:`BaseEmbeddingEstimator`

   Mixin class for all regression estimators in scikit-learn.


.. py:class:: EmbeddingRidgeClassifierCV(*, alphas=(0.1, 1.0, 10.0), fit_intercept=True, normalize='deprecated', scoring=None, cv=None, class_weight=None, n_jobs=None, random_state=None)

   Bases: :py:obj:`sklearn.base.ClassifierMixin`, :py:obj:`EmbeddingClassifierMixin`, :py:obj:`BaseEmbeddingEstimator`

   Mixin class for all classifiers in scikit-learn.

   .. py:method:: predict_proba(x)



