:mod:`wildboar.embedding.shapelet`
==================================

.. py:module:: wildboar.embedding.shapelet


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   wildboar.embedding.shapelet.RandomShapeletEmbedding



.. class:: RandomShapeletEmbedding(n_shapelets=1000, *, metric='euclidean', metric_params=None, min_shapelet_size=0.1, max_shapelet_size=1.0, random_state=None)


   Bases: :class:`wildboar.embedding.base.BaseEmbedding`

   Embed a time series as the distances to a selection of random shapelets.

   .. attribute:: embedding_

      The underlying embedding object.

      :type: Embedding

   .. rubric:: References

   Wistuba, Martin, Josif Grabocka, and Lars Schmidt-Thieme.
       Ultra-fast shapelets for time series classification.
       arXiv preprint arXiv:1503.05018 (2015).

   :param n_shapelets: The number of shapelets in the resulting embedding
   :type n_shapelets: int, optional
   :param metric: The distance metric

                  - if str use optimized implementations of the named distance measure
                  - if callable a function taking two arrays as input
   :type metric: str, optional
   :param metric_params: Parameters to the metric

                         - 'euclidean' and 'scaled_euclidean' take no parameters
                         - 'dtw' and 'scaled_dtw' take a single paramater 'r'. If 'r' <= 1 it
                         is interpreted as a fraction of the time series length. If > 1 it
                         is interpreted as an exact time warping window. Use 'r' == 0 for
                         a widow size of exactly 1.
   :type metric_params: dict, optional
   :param min_shapelet_size: Minimum shapelet size.
   :type min_shapelet_size: float, optional
   :param max_shapelet_size: Maximum shapelet size.
   :type max_shapelet_size: float, optional
   :param random_state: The psudo-random number generator.
   :type random_state: int or RandomState, optional


