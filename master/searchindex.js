Search.setIndex({"alltitles": {"API Reference": [[0, null]], "Annotate": [[24, null]], "Benchmark": [[34, "benchmark"]], "Build from source": [[47, null]], "Castor transform": [[38, "castor-transform"]], "Classes": [[2, "classes"], [3, "classes"], [5, "classes"], [6, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [14, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"]], "Convolution-based transform": [[38, "convolution-based-transform"]], "Convolutional transform": [[44, "convolutional-transform"]], "Counterfactual explanations": [[31, null]], "Datasets": [[26, null]], "Decision tree structure": [[39, "decision-tree-structure"]], "Dependencies": [[48, "dependencies"]], "Dilated shapelet transform": [[38, "dilated-shapelet-transform"]], "Dimension selection": [[29, null]], "Dimension variance threshold": [[29, "dimension-variance-threshold"]], "Distance": [[34, null]], "Dyadic intervals": [[44, "dyadic-intervals"]], "Dynamic time warping": [[35, "dynamic-time-warping"]], "Edit-distance for real sequence": [[35, "edit-distance-for-real-sequence"]], "Edit-distance with real penalty": [[35, "edit-distance-with-real-penalty"]], "Elastic Ensemble": [[37, "elastic-ensemble"]], "Elastic and non-elastic metrics": [[33, "elastic-and-non-elastic-metrics"]], "Elastic metrics": [[35, null]], "Emmott outliers": [[42, "emmott-outliers"]], "Ensemble estimators": [[37, null]], "Examples": [[44, "examples"]], "Exploring model performance": [[23, "exploring-model-performance"]], "Feature summarizers": [[44, "feature-summarizers"]], "Filters": [[26, "filters"]], "Fixed intervals": [[44, "fixed-intervals"]], "Functions": [[1, "functions"], [2, "functions"], [3, "functions"], [4, "functions"], [5, "functions"], [7, "functions"], [8, "functions"], [11, "functions"], [12, "functions"], [15, "functions"], [16, "functions"], [18, "functions"], [19, "functions"], [20, "functions"], [21, "functions"], [22, "functions"]], "Glossary": [[32, null]], "Hydra": [[38, "hydra"]], "Hydra transform": [[44, "hydra-transform"]], "Install wildboar": [[46, null]], "Installing repositories": [[28, "installing-repositories"]], "Interpretability": [[30, null]], "Interval Forest": [[37, "interval-forest"]], "Interval-based decision trees": [[39, "interval-based-decision-trees"]], "Interval-based transform": [[44, "interval-based-transform"]], "JSON repositories": [[28, "json-repositories"]], "Learning and predicting": [[23, "learning-and-predicting"]], "Loading a single dataset": [[26, "loading-a-single-dataset"]], "Loading an example dataset": [[23, "loading-an-example-dataset"]], "Loading datasets": [[26, "loading-datasets"]], "Loading multiple datasets": [[26, "loading-multiple-datasets"]], "Local cache": [[28, "local-cache"]], "Longest common subsequence": [[35, "longest-common-subsequence"]], "Lower bounds and supported metric.": [[34, "id4"]], "Majority outliers": [[42, "majority-outliers"]], "MatrixProfile": [[24, "matrixprofile"]], "MatrixProfile data structure": [[24, "matrixprofile-data-structure"]], "Metric specification": [[33, "metric-specification"]], "Metrics": [[33, null], [34, "metrics"]], "Minimum distance": [[34, "minimum-distance"]], "Minority outliers": [[42, "minority-outliers"]], "Model persistence": [[23, "model-persistence"]], "Motif discovery": [[24, "motif-discovery"]], "Move-split-merge": [[35, "move-split-merge"]], "Multivariate support": [[34, "multivariate-support"]], "Nearest neighbour counterfactuals": [[31, "nearest-neighbour-counterfactuals"]], "New and changed models": [[48, "new-and-changed-models"]], "Other transformations": [[44, "other-transformations"]], "Outlier detection": [[41, null]], "Outlier detection benchmarks": [[42, null]], "Paired distance": [[34, "paired-distance"]], "Pairwise distance": [[34, "pairwise-distance"]], "Pairwise subsequence distance": [[34, "pairwise-subsequence-distance"]], "Parallelization": [[34, "parallelization"]], "Plotting": [[39, "plotting"]], "Pre-processing": [[27, null]], "Proximity forests": [[37, "proximity-forests"]], "Random intervals": [[44, "random-intervals"]], "Random shapelet transform": [[38, "random-shapelet-transform"]], "Reference": [[24, "reference"]], "References": [[31, "references"], [37, "references"], [38, "references"], [44, "references"]], "Repositories": [[28, null]], "Repository definitions": [[28, "repository-definitions"]], "Rocket": [[38, "rocket"]], "Rocket transform": [[44, "rocket-transform"]], "Segmentation": [[43, null]], "Sequential dimension selector": [[29, "sequential-dimension-selector"]], "Shapelet forest counterfactuals": [[31, "shapelet-forest-counterfactuals"]], "Shapelet forests": [[37, "shapelet-forests"]], "Shapelet-based decision trees": [[39, "shapelet-based-decision-trees"]], "Shapelet-based transform": [[38, "shapelet-based-transform"]], "Subsequence metrics": [[33, "subsequence-metrics"], [34, "subsequence-metrics"]], "Subsequence search": [[34, "subsequence-search"]], "Supervised learning": [[36, null]], "Time series": [[25, null]], "Time series transform": [[44, null]], "Time-warp edit distance": [[35, "time-warp-edit-distance"]], "Transform-based estimators": [[38, null]], "Transforming time series to tabular data": [[23, "transforming-time-series-to-tabular-data"]], "Tree-based estimators": [[39, null]], "Unsupervised learning": [[40, null]], "User Guide": [[23, null]], "Variable length time series": [[25, "variable-length-time-series"]], "Version 1.3.0": [[48, "version-1-3-0"]], "What\u2019s new": [[48, null]], "scikit-learn compatible transformers": [[27, "scikit-learn-compatible-transformers"]], "wildboar": [[13, null]], "wildboar.annotate": [[1, null]], "wildboar.base": [[2, null]], "wildboar.datasets": [[3, null]], "wildboar.datasets.outlier": [[4, null]], "wildboar.datasets.preprocess": [[5, null]], "wildboar.dimension_selection": [[6, null]], "wildboar.distance": [[8, null]], "wildboar.distance.dtw": [[7, null]], "wildboar.distance.lb": [[9, null]], "wildboar.ensemble": [[10, null]], "wildboar.explain": [[12, null]], "wildboar.explain.counterfactual": [[11, null]], "wildboar.linear_model": [[14, null]], "wildboar.metrics": [[15, null]], "wildboar.model_selection": [[16, null]], "wildboar.segment": [[17, null]], "wildboar.transform": [[18, null]], "wildboar.tree": [[19, null]], "wildboar.utils": [[20, null]], "wildboar.utils.plot": [[21, null]], "wildboar.utils.variable_len": [[22, null]]}, "docnames": ["api/index", "api/wildboar/annotate/index", "api/wildboar/base/index", "api/wildboar/datasets/index", "api/wildboar/datasets/outlier/index", "api/wildboar/datasets/preprocess/index", "api/wildboar/dimension_selection/index", "api/wildboar/distance/dtw/index", "api/wildboar/distance/index", "api/wildboar/distance/lb/index", "api/wildboar/ensemble/index", "api/wildboar/explain/counterfactual/index", "api/wildboar/explain/index", "api/wildboar/index", "api/wildboar/linear_model/index", "api/wildboar/metrics/index", "api/wildboar/model_selection/index", "api/wildboar/segment/index", "api/wildboar/transform/index", "api/wildboar/tree/index", "api/wildboar/utils/index", "api/wildboar/utils/plot/index", "api/wildboar/utils/variable_len/index", "guide", "guide/annotate", "guide/basics", "guide/datasets", "guide/datasets/preprocess", "guide/datasets/repositories", "guide/dimension_selection", "guide/explain", "guide/explain/counterfactuals", "guide/glossary", "guide/metrics", "guide/metrics/distance", "guide/metrics/elastic", "guide/supervised", "guide/supervised/ensemble", "guide/supervised/transform", "guide/supervised/trees", "guide/unsupervised", "guide/unsupervised/outlier", "guide/unsupervised/outlier/generation", "guide/unsupervised/segmentation", "guide/unsupervised/transform", "index", "install", "install/build", "more/whatsnew"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["api/index.rst", "api/wildboar/annotate/index.rst", "api/wildboar/base/index.rst", "api/wildboar/datasets/index.rst", "api/wildboar/datasets/outlier/index.rst", "api/wildboar/datasets/preprocess/index.rst", "api/wildboar/dimension_selection/index.rst", "api/wildboar/distance/dtw/index.rst", "api/wildboar/distance/index.rst", "api/wildboar/distance/lb/index.rst", "api/wildboar/ensemble/index.rst", "api/wildboar/explain/counterfactual/index.rst", "api/wildboar/explain/index.rst", "api/wildboar/index.rst", "api/wildboar/linear_model/index.rst", "api/wildboar/metrics/index.rst", "api/wildboar/model_selection/index.rst", "api/wildboar/segment/index.rst", "api/wildboar/transform/index.rst", "api/wildboar/tree/index.rst", "api/wildboar/utils/index.rst", "api/wildboar/utils/plot/index.rst", "api/wildboar/utils/variable_len/index.rst", "guide.rst", "guide/annotate.rst", "guide/basics.rst", "guide/datasets.rst", "guide/datasets/preprocess.rst", "guide/datasets/repositories.rst", "guide/dimension_selection.rst", "guide/explain.rst", "guide/explain/counterfactuals.rst", "guide/glossary.rst", "guide/metrics.rst", "guide/metrics/distance.rst", "guide/metrics/elastic.rst", "guide/supervised.rst", "guide/supervised/ensemble.rst", "guide/supervised/transform.rst", "guide/supervised/trees.rst", "guide/unsupervised.rst", "guide/unsupervised/outlier.rst", "guide/unsupervised/outlier/generation.rst", "guide/unsupervised/segmentation.rst", "guide/unsupervised/transform.rst", "index.rst", "install.rst", "install/build.rst", "more/whatsnew.rst"], "indexentries": {"amplitudeimportance (class in wildboar.explain)": [[12, "wildboar.explain.AmplitudeImportance", false]], "apply() (wildboar.tree.extrashapelettreeclassifier method)": [[19, "wildboar.tree.ExtraShapeletTreeClassifier.apply", false]], "apply() (wildboar.tree.extrashapelettreeregressor method)": [[19, "wildboar.tree.ExtraShapeletTreeRegressor.apply", false]], "apply() (wildboar.tree.intervaltreeclassifier method)": [[19, "wildboar.tree.IntervalTreeClassifier.apply", false]], "apply() (wildboar.tree.intervaltreeregressor method)": [[19, "wildboar.tree.IntervalTreeRegressor.apply", false]], "apply() (wildboar.tree.pivottreeclassifier method)": [[19, "wildboar.tree.PivotTreeClassifier.apply", false]], "apply() (wildboar.tree.proximitytreeclassifier method)": [[19, "wildboar.tree.ProximityTreeClassifier.apply", false]], "apply() (wildboar.tree.rockettreeclassifier method)": [[19, "wildboar.tree.RocketTreeClassifier.apply", false]], "apply() (wildboar.tree.rockettreeregressor method)": [[19, "wildboar.tree.RocketTreeRegressor.apply", false]], "apply() (wildboar.tree.shapelettreeclassifier method)": [[19, "wildboar.tree.ShapeletTreeClassifier.apply", false]], "apply() (wildboar.tree.shapelettreeregressor method)": [[19, "wildboar.tree.ShapeletTreeRegressor.apply", false]], "argmin_distance() (in module wildboar.distance)": [[8, "wildboar.distance.argmin_distance", false]], "argmin_subsequence_distance() (in module wildboar.distance)": [[8, "wildboar.distance.argmin_subsequence_distance", false]], "baggingclassifier (class in wildboar.ensemble)": [[10, "wildboar.ensemble.BaggingClassifier", false]], "baggingregressor (class in wildboar.ensemble)": [[10, "wildboar.ensemble.BaggingRegressor", false]], "basebagging (class in wildboar.ensemble)": [[10, "wildboar.ensemble.BaseBagging", false]], "baseestimator (class in wildboar.base)": [[2, "wildboar.base.BaseEstimator", false]], "bundle (class in wildboar.datasets)": [[3, "wildboar.datasets.Bundle", false]], "castorclassifier (class in wildboar.linear_model)": [[14, "wildboar.linear_model.CastorClassifier", false]], "castorregressor (class in wildboar.linear_model)": [[14, "wildboar.linear_model.CastorRegressor", false]], "castortransform (class in wildboar.transform)": [[18, "wildboar.transform.CastorTransform", false]], "check_array() (in module wildboar.utils)": [[20, "wildboar.utils.check_array", false]], "check_x_y() (in module wildboar.utils)": [[20, "wildboar.utils.check_X_y", false]], "clear_cache() (in module wildboar.datasets)": [[3, "wildboar.datasets.clear_cache", false]], "compactness_score() (in module wildboar.metrics)": [[15, "wildboar.metrics.compactness_score", false]], "convolve() (in module wildboar.transform)": [[18, "wildboar.transform.convolve", false]], "counterfactualmixin (class in wildboar.base)": [[2, "wildboar.base.CounterfactualMixin", false]], "counterfactuals() (in module wildboar.explain.counterfactual)": [[11, "wildboar.explain.counterfactual.counterfactuals", false]], "ddtw_distance() (in module wildboar.distance.dtw)": [[7, "wildboar.distance.dtw.ddtw_distance", false]], "decision_function() (wildboar.ensemble.baggingclassifier method)": [[10, "wildboar.ensemble.BaggingClassifier.decision_function", false]], "decision_function() (wildboar.ensemble.extrashapelettreesclassifier method)": [[10, "wildboar.ensemble.ExtraShapeletTreesClassifier.decision_function", false]], "decision_function() (wildboar.ensemble.intervalforestclassifier method)": [[10, "wildboar.ensemble.IntervalForestClassifier.decision_function", false]], "decision_function() (wildboar.ensemble.pivotforestclassifier method)": [[10, "wildboar.ensemble.PivotForestClassifier.decision_function", false]], "decision_function() (wildboar.ensemble.proximityforestclassifier method)": [[10, "wildboar.ensemble.ProximityForestClassifier.decision_function", false]], "decision_function() (wildboar.ensemble.rocketforestclassifier method)": [[10, "wildboar.ensemble.RocketForestClassifier.decision_function", false]], "decision_function() (wildboar.ensemble.shapeletforestclassifier method)": [[10, "wildboar.ensemble.ShapeletForestClassifier.decision_function", false]], "decision_path() (wildboar.tree.extrashapelettreeclassifier method)": [[19, "wildboar.tree.ExtraShapeletTreeClassifier.decision_path", false]], "decision_path() (wildboar.tree.extrashapelettreeregressor method)": [[19, "wildboar.tree.ExtraShapeletTreeRegressor.decision_path", false]], "decision_path() (wildboar.tree.intervaltreeclassifier method)": [[19, "wildboar.tree.IntervalTreeClassifier.decision_path", false]], "decision_path() (wildboar.tree.intervaltreeregressor method)": [[19, "wildboar.tree.IntervalTreeRegressor.decision_path", false]], "decision_path() (wildboar.tree.pivottreeclassifier method)": [[19, "wildboar.tree.PivotTreeClassifier.decision_path", false]], "decision_path() (wildboar.tree.proximitytreeclassifier method)": [[19, "wildboar.tree.ProximityTreeClassifier.decision_path", false]], "decision_path() (wildboar.tree.rockettreeclassifier method)": [[19, "wildboar.tree.RocketTreeClassifier.decision_path", false]], "decision_path() (wildboar.tree.rockettreeregressor method)": [[19, "wildboar.tree.RocketTreeRegressor.decision_path", false]], "decision_path() (wildboar.tree.shapelettreeclassifier method)": [[19, "wildboar.tree.ShapeletTreeClassifier.decision_path", false]], "decision_path() (wildboar.tree.shapelettreeregressor method)": [[19, "wildboar.tree.ShapeletTreeRegressor.decision_path", false]], "density_outliers() (in module wildboar.datasets.outlier)": [[4, "wildboar.datasets.outlier.density_outliers", false]], "derivativetransform (class in wildboar.transform)": [[18, "wildboar.transform.DerivativeTransform", false]], "difftransform (class in wildboar.transform)": [[18, "wildboar.transform.DiffTransform", false]], "dilatedshapeletclassifier (class in wildboar.linear_model)": [[14, "wildboar.linear_model.DilatedShapeletClassifier", false]], "dilatedshapelettransform (class in wildboar.transform)": [[18, "wildboar.transform.DilatedShapeletTransform", false]], "distance_profile() (in module wildboar.distance)": [[8, "wildboar.distance.distance_profile", false]], "distancevariancethreshold (class in wildboar.dimension_selection)": [[6, "wildboar.dimension_selection.DistanceVarianceThreshold", false]], "download_url (wildboar.datasets.jsonrepository property)": [[3, "wildboar.datasets.JSONRepository.download_url", false]], "download_url (wildboar.datasets.repository property)": [[3, "wildboar.datasets.Repository.download_url", false]], "dtw_alignment() (in module wildboar.distance.dtw)": [[7, "wildboar.distance.dtw.dtw_alignment", false]], "dtw_average() (in module wildboar.distance.dtw)": [[7, "wildboar.distance.dtw.dtw_average", false]], "dtw_distance() (in module wildboar.distance.dtw)": [[7, "wildboar.distance.dtw.dtw_distance", false]], "dtw_envelop() (in module wildboar.distance.dtw)": [[7, "wildboar.distance.dtw.dtw_envelop", false]], "dtw_lb_keogh() (in module wildboar.distance.dtw)": [[7, "wildboar.distance.dtw.dtw_lb_keogh", false]], "dtw_mapping() (in module wildboar.distance.dtw)": [[7, "wildboar.distance.dtw.dtw_mapping", false]], "dtwkeoghlowerbound (class in wildboar.distance.lb)": [[9, "wildboar.distance.lb.DtwKeoghLowerBound", false]], "dtwkimlowerbound (class in wildboar.distance.lb)": [[9, "wildboar.distance.lb.DtwKimLowerBound", false]], "ecsselector (class in wildboar.dimension_selection)": [[6, "wildboar.dimension_selection.ECSSelector", false]], "elasticensembleclassifier (class in wildboar.ensemble)": [[10, "wildboar.ensemble.ElasticEnsembleClassifier", false]], "emmott_outliers() (in module wildboar.datasets.outlier)": [[4, "wildboar.datasets.outlier.emmott_outliers", false]], "estimators_samples_ (wildboar.ensemble.baggingclassifier property)": [[10, "wildboar.ensemble.BaggingClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.baggingregressor property)": [[10, "wildboar.ensemble.BaggingRegressor.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.basebagging property)": [[10, "wildboar.ensemble.BaseBagging.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.extrashapelettreesclassifier property)": [[10, "wildboar.ensemble.ExtraShapeletTreesClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.extrashapelettreesregressor property)": [[10, "wildboar.ensemble.ExtraShapeletTreesRegressor.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.intervalforestclassifier property)": [[10, "wildboar.ensemble.IntervalForestClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.intervalforestregressor property)": [[10, "wildboar.ensemble.IntervalForestRegressor.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.isolationshapeletforest property)": [[10, "wildboar.ensemble.IsolationShapeletForest.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.pivotforestclassifier property)": [[10, "wildboar.ensemble.PivotForestClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.proximityforestclassifier property)": [[10, "wildboar.ensemble.ProximityForestClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.rocketforestclassifier property)": [[10, "wildboar.ensemble.RocketForestClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.rocketforestregressor property)": [[10, "wildboar.ensemble.RocketForestRegressor.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.shapeletforestclassifier property)": [[10, "wildboar.ensemble.ShapeletForestClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.shapeletforestembedding property)": [[10, "wildboar.ensemble.ShapeletForestEmbedding.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.shapeletforestregressor property)": [[10, "wildboar.ensemble.ShapeletForestRegressor.estimators_samples_", false]], "explainermixin (class in wildboar.base)": [[2, "wildboar.base.ExplainerMixin", false]], "extrashapelettreeclassifier (class in wildboar.tree)": [[19, "wildboar.tree.ExtraShapeletTreeClassifier", false]], "extrashapelettreeregressor (class in wildboar.tree)": [[19, "wildboar.tree.ExtraShapeletTreeRegressor", false]], "extrashapelettreesclassifier (class in wildboar.ensemble)": [[10, "wildboar.ensemble.ExtraShapeletTreesClassifier", false]], "extrashapelettreesregressor (class in wildboar.ensemble)": [[10, "wildboar.ensemble.ExtraShapeletTreesRegressor", false]], "featuretransform (class in wildboar.transform)": [[18, "wildboar.transform.FeatureTransform", false]], "ffttransform (class in wildboar.transform)": [[18, "wildboar.transform.FftTransform", false]], "fit() (wildboar.datasets.preprocess.interpolate method)": [[5, "wildboar.datasets.preprocess.Interpolate.fit", false]], "fit() (wildboar.datasets.preprocess.maxabsscale method)": [[5, "wildboar.datasets.preprocess.MaxAbsScale.fit", false]], "fit() (wildboar.datasets.preprocess.minmaxscale method)": [[5, "wildboar.datasets.preprocess.MinMaxScale.fit", false]], "fit() (wildboar.datasets.preprocess.standardize method)": [[5, "wildboar.datasets.preprocess.Standardize.fit", false]], "fit() (wildboar.datasets.preprocess.truncate method)": [[5, "wildboar.datasets.preprocess.Truncate.fit", false]], "fit() (wildboar.dimension_selection.distancevariancethreshold method)": [[6, "wildboar.dimension_selection.DistanceVarianceThreshold.fit", false]], "fit() (wildboar.dimension_selection.ecsselector method)": [[6, "wildboar.dimension_selection.ECSSelector.fit", false]], "fit() (wildboar.dimension_selection.selectdimensionpercentile method)": [[6, "wildboar.dimension_selection.SelectDimensionPercentile.fit", false]], "fit() (wildboar.dimension_selection.selectdimensionsignificance method)": [[6, "wildboar.dimension_selection.SelectDimensionSignificance.fit", false]], "fit() (wildboar.dimension_selection.selectdimensiontopk method)": [[6, "wildboar.dimension_selection.SelectDimensionTopK.fit", false]], "fit() (wildboar.dimension_selection.sequentialdimensionselector method)": [[6, "wildboar.dimension_selection.SequentialDimensionSelector.fit", false]], "fit() (wildboar.distance.kmeans method)": [[8, "wildboar.distance.KMeans.fit", false]], "fit() (wildboar.distance.kmedoids method)": [[8, "wildboar.distance.KMedoids.fit", false]], "fit() (wildboar.distance.kneighborsclassifier method)": [[8, "wildboar.distance.KNeighborsClassifier.fit", false]], "fit() (wildboar.distance.lb.dtwkeoghlowerbound method)": [[9, "wildboar.distance.lb.DtwKeoghLowerBound.fit", false]], "fit() (wildboar.distance.lb.dtwkimlowerbound method)": [[9, "wildboar.distance.lb.DtwKimLowerBound.fit", false]], "fit() (wildboar.distance.lb.paalowerbound method)": [[9, "wildboar.distance.lb.PaaLowerBound.fit", false]], "fit() (wildboar.distance.lb.saxlowerbound method)": [[9, "wildboar.distance.lb.SaxLowerBound.fit", false]], "fit() (wildboar.ensemble.baggingclassifier method)": [[10, "wildboar.ensemble.BaggingClassifier.fit", false]], "fit() (wildboar.ensemble.baggingregressor method)": [[10, "wildboar.ensemble.BaggingRegressor.fit", false]], "fit() (wildboar.ensemble.basebagging method)": [[10, "wildboar.ensemble.BaseBagging.fit", false]], "fit() (wildboar.ensemble.elasticensembleclassifier method)": [[10, "wildboar.ensemble.ElasticEnsembleClassifier.fit", false]], "fit() (wildboar.ensemble.extrashapelettreesclassifier method)": [[10, "wildboar.ensemble.ExtraShapeletTreesClassifier.fit", false]], "fit() (wildboar.ensemble.extrashapelettreesregressor method)": [[10, "wildboar.ensemble.ExtraShapeletTreesRegressor.fit", false]], "fit() (wildboar.ensemble.intervalforestclassifier method)": [[10, "wildboar.ensemble.IntervalForestClassifier.fit", false]], "fit() (wildboar.ensemble.intervalforestregressor method)": [[10, "wildboar.ensemble.IntervalForestRegressor.fit", false]], "fit() (wildboar.ensemble.isolationshapeletforest method)": [[10, "wildboar.ensemble.IsolationShapeletForest.fit", false]], "fit() (wildboar.ensemble.pivotforestclassifier method)": [[10, "wildboar.ensemble.PivotForestClassifier.fit", false]], "fit() (wildboar.ensemble.proximityforestclassifier method)": [[10, "wildboar.ensemble.ProximityForestClassifier.fit", false]], "fit() (wildboar.ensemble.rocketforestclassifier method)": [[10, "wildboar.ensemble.RocketForestClassifier.fit", false]], "fit() (wildboar.ensemble.rocketforestregressor method)": [[10, "wildboar.ensemble.RocketForestRegressor.fit", false]], "fit() (wildboar.ensemble.shapeletforestclassifier method)": [[10, "wildboar.ensemble.ShapeletForestClassifier.fit", false]], "fit() (wildboar.ensemble.shapeletforestembedding method)": [[10, "wildboar.ensemble.ShapeletForestEmbedding.fit", false]], "fit() (wildboar.ensemble.shapeletforestregressor method)": [[10, "wildboar.ensemble.ShapeletForestRegressor.fit", false]], "fit() (wildboar.segment.flusssegmenter method)": [[17, "wildboar.segment.FlussSegmenter.fit", false]], "fit() (wildboar.transform.castortransform method)": [[18, "wildboar.transform.CastorTransform.fit", false]], "fit() (wildboar.transform.dilatedshapelettransform method)": [[18, "wildboar.transform.DilatedShapeletTransform.fit", false]], "fit() (wildboar.transform.featuretransform method)": [[18, "wildboar.transform.FeatureTransform.fit", false]], "fit() (wildboar.transform.ffttransform method)": [[18, "wildboar.transform.FftTransform.fit", false]], "fit() (wildboar.transform.hydratransform method)": [[18, "wildboar.transform.HydraTransform.fit", false]], "fit() (wildboar.transform.intervaltransform method)": [[18, "wildboar.transform.IntervalTransform.fit", false]], "fit() (wildboar.transform.matrixprofiletransform method)": [[18, "wildboar.transform.MatrixProfileTransform.fit", false]], "fit() (wildboar.transform.pivottransform method)": [[18, "wildboar.transform.PivotTransform.fit", false]], "fit() (wildboar.transform.quanttransform method)": [[18, "wildboar.transform.QuantTransform.fit", false]], "fit() (wildboar.transform.randomshapelettransform method)": [[18, "wildboar.transform.RandomShapeletTransform.fit", false]], "fit() (wildboar.transform.rockettransform method)": [[18, "wildboar.transform.RocketTransform.fit", false]], "fit() (wildboar.transform.shapelettransform method)": [[18, "wildboar.transform.ShapeletTransform.fit", false]], "fit() (wildboar.tree.extrashapelettreeclassifier method)": [[19, "wildboar.tree.ExtraShapeletTreeClassifier.fit", false]], "fit() (wildboar.tree.extrashapelettreeregressor method)": [[19, "wildboar.tree.ExtraShapeletTreeRegressor.fit", false]], "fit() (wildboar.tree.intervaltreeclassifier method)": [[19, "wildboar.tree.IntervalTreeClassifier.fit", false]], "fit() (wildboar.tree.intervaltreeregressor method)": [[19, "wildboar.tree.IntervalTreeRegressor.fit", false]], "fit() (wildboar.tree.pivottreeclassifier method)": [[19, "wildboar.tree.PivotTreeClassifier.fit", false]], "fit() (wildboar.tree.proximitytreeclassifier method)": [[19, "wildboar.tree.ProximityTreeClassifier.fit", false]], "fit() (wildboar.tree.rockettreeclassifier method)": [[19, "wildboar.tree.RocketTreeClassifier.fit", false]], "fit() (wildboar.tree.rockettreeregressor method)": [[19, "wildboar.tree.RocketTreeRegressor.fit", false]], "fit() (wildboar.tree.shapelettreeclassifier method)": [[19, "wildboar.tree.ShapeletTreeClassifier.fit", false]], "fit() (wildboar.tree.shapelettreeregressor method)": [[19, "wildboar.tree.ShapeletTreeRegressor.fit", false]], "fit_explain() (wildboar.base.explainermixin method)": [[2, "wildboar.base.ExplainerMixin.fit_explain", false]], "fit_explain() (wildboar.explain.amplitudeimportance method)": [[12, "wildboar.explain.AmplitudeImportance.fit_explain", false]], "fit_explain() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[11, "wildboar.explain.counterfactual.KNeighborsCounterfactual.fit_explain", false]], "fit_explain() (wildboar.explain.counterfactual.nativeguidecounterfactual method)": [[11, "wildboar.explain.counterfactual.NativeGuideCounterfactual.fit_explain", false]], "fit_explain() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[11, "wildboar.explain.counterfactual.PrototypeCounterfactual.fit_explain", false]], "fit_explain() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[11, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.fit_explain", false]], "fit_explain() (wildboar.explain.frequencyimportance method)": [[12, "wildboar.explain.FrequencyImportance.fit_explain", false]], "fit_explain() (wildboar.explain.intervalimportance method)": [[12, "wildboar.explain.IntervalImportance.fit_explain", false]], "fit_explain() (wildboar.explain.shapeletimportance method)": [[12, "wildboar.explain.ShapeletImportance.fit_explain", false]], "fit_predict() (wildboar.distance.kmeans method)": [[8, "wildboar.distance.KMeans.fit_predict", false]], "fit_predict() (wildboar.distance.kmedoids method)": [[8, "wildboar.distance.KMedoids.fit_predict", false]], "fit_predict() (wildboar.ensemble.isolationshapeletforest method)": [[10, "wildboar.ensemble.IsolationShapeletForest.fit_predict", false]], "fit_transform() (wildboar.datasets.preprocess.interpolate method)": [[5, "wildboar.datasets.preprocess.Interpolate.fit_transform", false]], "fit_transform() (wildboar.datasets.preprocess.maxabsscale method)": [[5, "wildboar.datasets.preprocess.MaxAbsScale.fit_transform", false]], "fit_transform() (wildboar.datasets.preprocess.minmaxscale method)": [[5, "wildboar.datasets.preprocess.MinMaxScale.fit_transform", false]], "fit_transform() (wildboar.datasets.preprocess.standardize method)": [[5, "wildboar.datasets.preprocess.Standardize.fit_transform", false]], "fit_transform() (wildboar.datasets.preprocess.truncate method)": [[5, "wildboar.datasets.preprocess.Truncate.fit_transform", false]], "fit_transform() (wildboar.dimension_selection.distancevariancethreshold method)": [[6, "wildboar.dimension_selection.DistanceVarianceThreshold.fit_transform", false]], "fit_transform() (wildboar.dimension_selection.ecsselector method)": [[6, "wildboar.dimension_selection.ECSSelector.fit_transform", false]], "fit_transform() (wildboar.dimension_selection.selectdimensionpercentile method)": [[6, "wildboar.dimension_selection.SelectDimensionPercentile.fit_transform", false]], "fit_transform() (wildboar.dimension_selection.selectdimensionsignificance method)": [[6, "wildboar.dimension_selection.SelectDimensionSignificance.fit_transform", false]], "fit_transform() (wildboar.dimension_selection.selectdimensiontopk method)": [[6, "wildboar.dimension_selection.SelectDimensionTopK.fit_transform", false]], "fit_transform() (wildboar.dimension_selection.sequentialdimensionselector method)": [[6, "wildboar.dimension_selection.SequentialDimensionSelector.fit_transform", false]], "fit_transform() (wildboar.distance.kmeans method)": [[8, "wildboar.distance.KMeans.fit_transform", false]], "fit_transform() (wildboar.distance.kmedoids method)": [[8, "wildboar.distance.KMedoids.fit_transform", false]], "fit_transform() (wildboar.distance.lb.dtwkeoghlowerbound method)": [[9, "wildboar.distance.lb.DtwKeoghLowerBound.fit_transform", false]], "fit_transform() (wildboar.distance.lb.dtwkimlowerbound method)": [[9, "wildboar.distance.lb.DtwKimLowerBound.fit_transform", false]], "fit_transform() (wildboar.distance.lb.paalowerbound method)": [[9, "wildboar.distance.lb.PaaLowerBound.fit_transform", false]], "fit_transform() (wildboar.distance.lb.saxlowerbound method)": [[9, "wildboar.distance.lb.SaxLowerBound.fit_transform", false]], "fit_transform() (wildboar.segment.flusssegmenter method)": [[17, "wildboar.segment.FlussSegmenter.fit_transform", false]], "fit_transform() (wildboar.transform.castortransform method)": [[18, "wildboar.transform.CastorTransform.fit_transform", false]], "fit_transform() (wildboar.transform.derivativetransform method)": [[18, "wildboar.transform.DerivativeTransform.fit_transform", false]], "fit_transform() (wildboar.transform.difftransform method)": [[18, "wildboar.transform.DiffTransform.fit_transform", false]], "fit_transform() (wildboar.transform.dilatedshapelettransform method)": [[18, "wildboar.transform.DilatedShapeletTransform.fit_transform", false]], "fit_transform() (wildboar.transform.featuretransform method)": [[18, "wildboar.transform.FeatureTransform.fit_transform", false]], "fit_transform() (wildboar.transform.ffttransform method)": [[18, "wildboar.transform.FftTransform.fit_transform", false]], "fit_transform() (wildboar.transform.hydratransform method)": [[18, "wildboar.transform.HydraTransform.fit_transform", false]], "fit_transform() (wildboar.transform.intervaltransform method)": [[18, "wildboar.transform.IntervalTransform.fit_transform", false]], "fit_transform() (wildboar.transform.matrixprofiletransform method)": [[18, "wildboar.transform.MatrixProfileTransform.fit_transform", false]], "fit_transform() (wildboar.transform.paa method)": [[18, "wildboar.transform.PAA.fit_transform", false]], "fit_transform() (wildboar.transform.pivottransform method)": [[18, "wildboar.transform.PivotTransform.fit_transform", false]], "fit_transform() (wildboar.transform.proximitytransform method)": [[18, "wildboar.transform.ProximityTransform.fit_transform", false]], "fit_transform() (wildboar.transform.quanttransform method)": [[18, "wildboar.transform.QuantTransform.fit_transform", false]], "fit_transform() (wildboar.transform.randomshapelettransform method)": [[18, "wildboar.transform.RandomShapeletTransform.fit_transform", false]], "fit_transform() (wildboar.transform.rockettransform method)": [[18, "wildboar.transform.RocketTransform.fit_transform", false]], "fit_transform() (wildboar.transform.sax method)": [[18, "wildboar.transform.SAX.fit_transform", false]], "fit_transform() (wildboar.transform.shapelettransform method)": [[18, "wildboar.transform.ShapeletTransform.fit_transform", false]], "flusssegmenter (class in wildboar.segment)": [[17, "wildboar.segment.FlussSegmenter", false]], "frequencyimportance (class in wildboar.explain)": [[12, "wildboar.explain.FrequencyImportance", false]], "get_bundle() (wildboar.datasets.jsonrepository method)": [[3, "wildboar.datasets.JSONRepository.get_bundle", false]], "get_bundle() (wildboar.datasets.repository method)": [[3, "wildboar.datasets.Repository.get_bundle", false]], "get_bundles() (in module wildboar.datasets)": [[3, "wildboar.datasets.get_bundles", false]], "get_bundles() (wildboar.datasets.jsonrepository method)": [[3, "wildboar.datasets.JSONRepository.get_bundles", false]], "get_bundles() (wildboar.datasets.repository method)": [[3, "wildboar.datasets.Repository.get_bundles", false]], "get_collection() (wildboar.datasets.bundle method)": [[3, "wildboar.datasets.Bundle.get_collection", false]], "get_collection() (wildboar.datasets.npbundle method)": [[3, "wildboar.datasets.NpBundle.get_collection", false]], "get_dimensions() (wildboar.dimension_selection.distancevariancethreshold method)": [[6, "wildboar.dimension_selection.DistanceVarianceThreshold.get_dimensions", false]], "get_dimensions() (wildboar.dimension_selection.ecsselector method)": [[6, "wildboar.dimension_selection.ECSSelector.get_dimensions", false]], "get_dimensions() (wildboar.dimension_selection.selectdimensionpercentile method)": [[6, "wildboar.dimension_selection.SelectDimensionPercentile.get_dimensions", false]], "get_dimensions() (wildboar.dimension_selection.selectdimensionsignificance method)": [[6, "wildboar.dimension_selection.SelectDimensionSignificance.get_dimensions", false]], "get_dimensions() (wildboar.dimension_selection.selectdimensiontopk method)": [[6, "wildboar.dimension_selection.SelectDimensionTopK.get_dimensions", false]], "get_dimensions() (wildboar.dimension_selection.sequentialdimensionselector method)": [[6, "wildboar.dimension_selection.SequentialDimensionSelector.get_dimensions", false]], "get_filename() (wildboar.datasets.bundle method)": [[3, "wildboar.datasets.Bundle.get_filename", false]], "get_filename() (wildboar.datasets.npbundle method)": [[3, "wildboar.datasets.NpBundle.get_filename", false]], "get_metadata_routing() (wildboar.base.baseestimator method)": [[2, "wildboar.base.BaseEstimator.get_metadata_routing", false]], "get_metadata_routing() (wildboar.datasets.preprocess.interpolate method)": [[5, "wildboar.datasets.preprocess.Interpolate.get_metadata_routing", false]], "get_metadata_routing() (wildboar.datasets.preprocess.maxabsscale method)": [[5, "wildboar.datasets.preprocess.MaxAbsScale.get_metadata_routing", false]], "get_metadata_routing() (wildboar.datasets.preprocess.minmaxscale method)": [[5, "wildboar.datasets.preprocess.MinMaxScale.get_metadata_routing", false]], "get_metadata_routing() (wildboar.datasets.preprocess.standardize method)": [[5, "wildboar.datasets.preprocess.Standardize.get_metadata_routing", false]], "get_metadata_routing() (wildboar.datasets.preprocess.truncate method)": [[5, "wildboar.datasets.preprocess.Truncate.get_metadata_routing", false]], "get_metadata_routing() (wildboar.dimension_selection.distancevariancethreshold method)": [[6, "wildboar.dimension_selection.DistanceVarianceThreshold.get_metadata_routing", false]], "get_metadata_routing() (wildboar.dimension_selection.ecsselector method)": [[6, "wildboar.dimension_selection.ECSSelector.get_metadata_routing", false]], "get_metadata_routing() (wildboar.dimension_selection.selectdimensionpercentile method)": [[6, "wildboar.dimension_selection.SelectDimensionPercentile.get_metadata_routing", false]], "get_metadata_routing() (wildboar.dimension_selection.selectdimensionsignificance method)": [[6, "wildboar.dimension_selection.SelectDimensionSignificance.get_metadata_routing", false]], "get_metadata_routing() (wildboar.dimension_selection.selectdimensiontopk method)": [[6, "wildboar.dimension_selection.SelectDimensionTopK.get_metadata_routing", false]], "get_metadata_routing() (wildboar.dimension_selection.sequentialdimensionselector method)": [[6, "wildboar.dimension_selection.SequentialDimensionSelector.get_metadata_routing", false]], "get_metadata_routing() (wildboar.distance.kmeans method)": [[8, "wildboar.distance.KMeans.get_metadata_routing", false]], "get_metadata_routing() (wildboar.distance.kmedoids method)": [[8, "wildboar.distance.KMedoids.get_metadata_routing", false]], "get_metadata_routing() (wildboar.distance.kneighborsclassifier method)": [[8, "wildboar.distance.KNeighborsClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.distance.lb.dtwkeoghlowerbound method)": [[9, "wildboar.distance.lb.DtwKeoghLowerBound.get_metadata_routing", false]], "get_metadata_routing() (wildboar.distance.lb.dtwkimlowerbound method)": [[9, "wildboar.distance.lb.DtwKimLowerBound.get_metadata_routing", false]], "get_metadata_routing() (wildboar.distance.lb.paalowerbound method)": [[9, "wildboar.distance.lb.PaaLowerBound.get_metadata_routing", false]], "get_metadata_routing() (wildboar.distance.lb.saxlowerbound method)": [[9, "wildboar.distance.lb.SaxLowerBound.get_metadata_routing", false]], "get_metadata_routing() (wildboar.distance.mds method)": [[8, "wildboar.distance.MDS.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.baggingclassifier method)": [[10, "wildboar.ensemble.BaggingClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.baggingregressor method)": [[10, "wildboar.ensemble.BaggingRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.basebagging method)": [[10, "wildboar.ensemble.BaseBagging.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.elasticensembleclassifier method)": [[10, "wildboar.ensemble.ElasticEnsembleClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.extrashapelettreesclassifier method)": [[10, "wildboar.ensemble.ExtraShapeletTreesClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.extrashapelettreesregressor method)": [[10, "wildboar.ensemble.ExtraShapeletTreesRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.intervalforestclassifier method)": [[10, "wildboar.ensemble.IntervalForestClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.intervalforestregressor method)": [[10, "wildboar.ensemble.IntervalForestRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.isolationshapeletforest method)": [[10, "wildboar.ensemble.IsolationShapeletForest.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.pivotforestclassifier method)": [[10, "wildboar.ensemble.PivotForestClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.proximityforestclassifier method)": [[10, "wildboar.ensemble.ProximityForestClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.rocketforestclassifier method)": [[10, "wildboar.ensemble.RocketForestClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.rocketforestregressor method)": [[10, "wildboar.ensemble.RocketForestRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.shapeletforestclassifier method)": [[10, "wildboar.ensemble.ShapeletForestClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.shapeletforestembedding method)": [[10, "wildboar.ensemble.ShapeletForestEmbedding.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.shapeletforestregressor method)": [[10, "wildboar.ensemble.ShapeletForestRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain.amplitudeimportance method)": [[12, "wildboar.explain.AmplitudeImportance.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[11, "wildboar.explain.counterfactual.KNeighborsCounterfactual.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain.counterfactual.nativeguidecounterfactual method)": [[11, "wildboar.explain.counterfactual.NativeGuideCounterfactual.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[11, "wildboar.explain.counterfactual.PrototypeCounterfactual.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[11, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain.frequencyimportance method)": [[12, "wildboar.explain.FrequencyImportance.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain.intervalimportance method)": [[12, "wildboar.explain.IntervalImportance.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain.shapeletimportance method)": [[12, "wildboar.explain.ShapeletImportance.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model.castorclassifier method)": [[14, "wildboar.linear_model.CastorClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model.castorregressor method)": [[14, "wildboar.linear_model.CastorRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model.dilatedshapeletclassifier method)": [[14, "wildboar.linear_model.DilatedShapeletClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model.hydraclassifier method)": [[14, "wildboar.linear_model.HydraClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model.randomshapeletclassifier method)": [[14, "wildboar.linear_model.RandomShapeletClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model.randomshapeletregressor method)": [[14, "wildboar.linear_model.RandomShapeletRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model.rocketclassifier method)": [[14, "wildboar.linear_model.RocketClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model.rocketregressor method)": [[14, "wildboar.linear_model.RocketRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.segment.flusssegmenter method)": [[17, "wildboar.segment.FlussSegmenter.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.castortransform method)": [[18, "wildboar.transform.CastorTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.derivativetransform method)": [[18, "wildboar.transform.DerivativeTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.difftransform method)": [[18, "wildboar.transform.DiffTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.dilatedshapelettransform method)": [[18, "wildboar.transform.DilatedShapeletTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.featuretransform method)": [[18, "wildboar.transform.FeatureTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.ffttransform method)": [[18, "wildboar.transform.FftTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.hydratransform method)": [[18, "wildboar.transform.HydraTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.intervaltransform method)": [[18, "wildboar.transform.IntervalTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.matrixprofiletransform method)": [[18, "wildboar.transform.MatrixProfileTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.paa method)": [[18, "wildboar.transform.PAA.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.pivottransform method)": [[18, "wildboar.transform.PivotTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.proximitytransform method)": [[18, "wildboar.transform.ProximityTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.quanttransform method)": [[18, "wildboar.transform.QuantTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.randomshapelettransform method)": [[18, "wildboar.transform.RandomShapeletTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.rockettransform method)": [[18, "wildboar.transform.RocketTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.sax method)": [[18, "wildboar.transform.SAX.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.shapelettransform method)": [[18, "wildboar.transform.ShapeletTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.extrashapelettreeclassifier method)": [[19, "wildboar.tree.ExtraShapeletTreeClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.extrashapelettreeregressor method)": [[19, "wildboar.tree.ExtraShapeletTreeRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.intervaltreeclassifier method)": [[19, "wildboar.tree.IntervalTreeClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.intervaltreeregressor method)": [[19, "wildboar.tree.IntervalTreeRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.pivottreeclassifier method)": [[19, "wildboar.tree.PivotTreeClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.proximitytreeclassifier method)": [[19, "wildboar.tree.ProximityTreeClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.rockettreeclassifier method)": [[19, "wildboar.tree.RocketTreeClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.rockettreeregressor method)": [[19, "wildboar.tree.RocketTreeRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.shapelettreeclassifier method)": [[19, "wildboar.tree.ShapeletTreeClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.shapelettreeregressor method)": [[19, "wildboar.tree.ShapeletTreeRegressor.get_metadata_routing", false]], "get_n_splits() (wildboar.model_selection.repeatedoutliersplit method)": [[16, "wildboar.model_selection.RepeatedOutlierSplit.get_n_splits", false]], "get_params() (wildboar.base.baseestimator method)": [[2, "wildboar.base.BaseEstimator.get_params", false]], "get_params() (wildboar.datasets.preprocess.interpolate method)": [[5, "wildboar.datasets.preprocess.Interpolate.get_params", false]], "get_params() (wildboar.datasets.preprocess.maxabsscale method)": [[5, "wildboar.datasets.preprocess.MaxAbsScale.get_params", false]], "get_params() (wildboar.datasets.preprocess.minmaxscale method)": [[5, "wildboar.datasets.preprocess.MinMaxScale.get_params", false]], "get_params() (wildboar.datasets.preprocess.standardize method)": [[5, "wildboar.datasets.preprocess.Standardize.get_params", false]], "get_params() (wildboar.datasets.preprocess.truncate method)": [[5, "wildboar.datasets.preprocess.Truncate.get_params", false]], "get_params() (wildboar.dimension_selection.distancevariancethreshold method)": [[6, "wildboar.dimension_selection.DistanceVarianceThreshold.get_params", false]], "get_params() (wildboar.dimension_selection.ecsselector method)": [[6, "wildboar.dimension_selection.ECSSelector.get_params", false]], "get_params() (wildboar.dimension_selection.selectdimensionpercentile method)": [[6, "wildboar.dimension_selection.SelectDimensionPercentile.get_params", false]], "get_params() (wildboar.dimension_selection.selectdimensionsignificance method)": [[6, "wildboar.dimension_selection.SelectDimensionSignificance.get_params", false]], "get_params() (wildboar.dimension_selection.selectdimensiontopk method)": [[6, "wildboar.dimension_selection.SelectDimensionTopK.get_params", false]], "get_params() (wildboar.dimension_selection.sequentialdimensionselector method)": [[6, "wildboar.dimension_selection.SequentialDimensionSelector.get_params", false]], "get_params() (wildboar.distance.kmeans method)": [[8, "wildboar.distance.KMeans.get_params", false]], "get_params() (wildboar.distance.kmedoids method)": [[8, "wildboar.distance.KMedoids.get_params", false]], "get_params() (wildboar.distance.kneighborsclassifier method)": [[8, "wildboar.distance.KNeighborsClassifier.get_params", false]], "get_params() (wildboar.distance.lb.dtwkeoghlowerbound method)": [[9, "wildboar.distance.lb.DtwKeoghLowerBound.get_params", false]], "get_params() (wildboar.distance.lb.dtwkimlowerbound method)": [[9, "wildboar.distance.lb.DtwKimLowerBound.get_params", false]], "get_params() (wildboar.distance.lb.paalowerbound method)": [[9, "wildboar.distance.lb.PaaLowerBound.get_params", false]], "get_params() (wildboar.distance.lb.saxlowerbound method)": [[9, "wildboar.distance.lb.SaxLowerBound.get_params", false]], "get_params() (wildboar.distance.mds method)": [[8, "wildboar.distance.MDS.get_params", false]], "get_params() (wildboar.ensemble.baggingclassifier method)": [[10, "wildboar.ensemble.BaggingClassifier.get_params", false]], "get_params() (wildboar.ensemble.baggingregressor method)": [[10, "wildboar.ensemble.BaggingRegressor.get_params", false]], "get_params() (wildboar.ensemble.basebagging method)": [[10, "wildboar.ensemble.BaseBagging.get_params", false]], "get_params() (wildboar.ensemble.elasticensembleclassifier method)": [[10, "wildboar.ensemble.ElasticEnsembleClassifier.get_params", false]], "get_params() (wildboar.ensemble.extrashapelettreesclassifier method)": [[10, "wildboar.ensemble.ExtraShapeletTreesClassifier.get_params", false]], "get_params() (wildboar.ensemble.extrashapelettreesregressor method)": [[10, "wildboar.ensemble.ExtraShapeletTreesRegressor.get_params", false]], "get_params() (wildboar.ensemble.intervalforestclassifier method)": [[10, "wildboar.ensemble.IntervalForestClassifier.get_params", false]], "get_params() (wildboar.ensemble.intervalforestregressor method)": [[10, "wildboar.ensemble.IntervalForestRegressor.get_params", false]], "get_params() (wildboar.ensemble.isolationshapeletforest method)": [[10, "wildboar.ensemble.IsolationShapeletForest.get_params", false]], "get_params() (wildboar.ensemble.pivotforestclassifier method)": [[10, "wildboar.ensemble.PivotForestClassifier.get_params", false]], "get_params() (wildboar.ensemble.proximityforestclassifier method)": [[10, "wildboar.ensemble.ProximityForestClassifier.get_params", false]], "get_params() (wildboar.ensemble.rocketforestclassifier method)": [[10, "wildboar.ensemble.RocketForestClassifier.get_params", false]], "get_params() (wildboar.ensemble.rocketforestregressor method)": [[10, "wildboar.ensemble.RocketForestRegressor.get_params", false]], "get_params() (wildboar.ensemble.shapeletforestclassifier method)": [[10, "wildboar.ensemble.ShapeletForestClassifier.get_params", false]], "get_params() (wildboar.ensemble.shapeletforestembedding method)": [[10, "wildboar.ensemble.ShapeletForestEmbedding.get_params", false]], "get_params() (wildboar.ensemble.shapeletforestregressor method)": [[10, "wildboar.ensemble.ShapeletForestRegressor.get_params", false]], "get_params() (wildboar.explain.amplitudeimportance method)": [[12, "wildboar.explain.AmplitudeImportance.get_params", false]], "get_params() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[11, "wildboar.explain.counterfactual.KNeighborsCounterfactual.get_params", false]], "get_params() (wildboar.explain.counterfactual.nativeguidecounterfactual method)": [[11, "wildboar.explain.counterfactual.NativeGuideCounterfactual.get_params", false]], "get_params() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[11, "wildboar.explain.counterfactual.PrototypeCounterfactual.get_params", false]], "get_params() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[11, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.get_params", false]], "get_params() (wildboar.explain.frequencyimportance method)": [[12, "wildboar.explain.FrequencyImportance.get_params", false]], "get_params() (wildboar.explain.intervalimportance method)": [[12, "wildboar.explain.IntervalImportance.get_params", false]], "get_params() (wildboar.explain.shapeletimportance method)": [[12, "wildboar.explain.ShapeletImportance.get_params", false]], "get_params() (wildboar.linear_model.castorclassifier method)": [[14, "wildboar.linear_model.CastorClassifier.get_params", false]], "get_params() (wildboar.linear_model.castorregressor method)": [[14, "wildboar.linear_model.CastorRegressor.get_params", false]], "get_params() (wildboar.linear_model.dilatedshapeletclassifier method)": [[14, "wildboar.linear_model.DilatedShapeletClassifier.get_params", false]], "get_params() (wildboar.linear_model.hydraclassifier method)": [[14, "wildboar.linear_model.HydraClassifier.get_params", false]], "get_params() (wildboar.linear_model.randomshapeletclassifier method)": [[14, "wildboar.linear_model.RandomShapeletClassifier.get_params", false]], "get_params() (wildboar.linear_model.randomshapeletregressor method)": [[14, "wildboar.linear_model.RandomShapeletRegressor.get_params", false]], "get_params() (wildboar.linear_model.rocketclassifier method)": [[14, "wildboar.linear_model.RocketClassifier.get_params", false]], "get_params() (wildboar.linear_model.rocketregressor method)": [[14, "wildboar.linear_model.RocketRegressor.get_params", false]], "get_params() (wildboar.segment.flusssegmenter method)": [[17, "wildboar.segment.FlussSegmenter.get_params", false]], "get_params() (wildboar.transform.castortransform method)": [[18, "wildboar.transform.CastorTransform.get_params", false]], "get_params() (wildboar.transform.derivativetransform method)": [[18, "wildboar.transform.DerivativeTransform.get_params", false]], "get_params() (wildboar.transform.difftransform method)": [[18, "wildboar.transform.DiffTransform.get_params", false]], "get_params() (wildboar.transform.dilatedshapelettransform method)": [[18, "wildboar.transform.DilatedShapeletTransform.get_params", false]], "get_params() (wildboar.transform.featuretransform method)": [[18, "wildboar.transform.FeatureTransform.get_params", false]], "get_params() (wildboar.transform.ffttransform method)": [[18, "wildboar.transform.FftTransform.get_params", false]], "get_params() (wildboar.transform.hydratransform method)": [[18, "wildboar.transform.HydraTransform.get_params", false]], "get_params() (wildboar.transform.intervaltransform method)": [[18, "wildboar.transform.IntervalTransform.get_params", false]], "get_params() (wildboar.transform.matrixprofiletransform method)": [[18, "wildboar.transform.MatrixProfileTransform.get_params", false]], "get_params() (wildboar.transform.paa method)": [[18, "wildboar.transform.PAA.get_params", false]], "get_params() (wildboar.transform.pivottransform method)": [[18, "wildboar.transform.PivotTransform.get_params", false]], "get_params() (wildboar.transform.proximitytransform method)": [[18, "wildboar.transform.ProximityTransform.get_params", false]], "get_params() (wildboar.transform.quanttransform method)": [[18, "wildboar.transform.QuantTransform.get_params", false]], "get_params() (wildboar.transform.randomshapelettransform method)": [[18, "wildboar.transform.RandomShapeletTransform.get_params", false]], "get_params() (wildboar.transform.rockettransform method)": [[18, "wildboar.transform.RocketTransform.get_params", false]], "get_params() (wildboar.transform.sax method)": [[18, "wildboar.transform.SAX.get_params", false]], "get_params() (wildboar.transform.shapelettransform method)": [[18, "wildboar.transform.ShapeletTransform.get_params", false]], "get_params() (wildboar.tree.extrashapelettreeclassifier method)": [[19, "wildboar.tree.ExtraShapeletTreeClassifier.get_params", false]], "get_params() (wildboar.tree.extrashapelettreeregressor method)": [[19, "wildboar.tree.ExtraShapeletTreeRegressor.get_params", false]], "get_params() (wildboar.tree.intervaltreeclassifier method)": [[19, "wildboar.tree.IntervalTreeClassifier.get_params", false]], "get_params() (wildboar.tree.intervaltreeregressor method)": [[19, "wildboar.tree.IntervalTreeRegressor.get_params", false]], "get_params() (wildboar.tree.pivottreeclassifier method)": [[19, "wildboar.tree.PivotTreeClassifier.get_params", false]], "get_params() (wildboar.tree.proximitytreeclassifier method)": [[19, "wildboar.tree.ProximityTreeClassifier.get_params", false]], "get_params() (wildboar.tree.rockettreeclassifier method)": [[19, "wildboar.tree.RocketTreeClassifier.get_params", false]], "get_params() (wildboar.tree.rockettreeregressor method)": [[19, "wildboar.tree.RocketTreeRegressor.get_params", false]], "get_params() (wildboar.tree.shapelettreeclassifier method)": [[19, "wildboar.tree.ShapeletTreeClassifier.get_params", false]], "get_params() (wildboar.tree.shapelettreeregressor method)": [[19, "wildboar.tree.ShapeletTreeRegressor.get_params", false]], "get_repository() (in module wildboar.datasets)": [[3, "wildboar.datasets.get_repository", false]], "get_variable_length() (in module wildboar.utils.variable_len)": [[22, "wildboar.utils.variable_len.get_variable_length", false]], "hydraclassifier (class in wildboar.linear_model)": [[14, "wildboar.linear_model.HydraClassifier", false]], "hydratransform (class in wildboar.transform)": [[18, "wildboar.transform.HydraTransform", false]], "install_repository() (in module wildboar.datasets)": [[3, "wildboar.datasets.install_repository", false]], "interpolate (class in wildboar.datasets.preprocess)": [[5, "wildboar.datasets.preprocess.Interpolate", false]], "interpolate() (in module wildboar.datasets.preprocess)": [[5, "wildboar.datasets.preprocess.interpolate", false]], "intervalforestclassifier (class in wildboar.ensemble)": [[10, "wildboar.ensemble.IntervalForestClassifier", false]], "intervalforestregressor (class in wildboar.ensemble)": [[10, "wildboar.ensemble.IntervalForestRegressor", false]], "intervalimportance (class in wildboar.explain)": [[12, "wildboar.explain.IntervalImportance", false]], "intervaltransform (class in wildboar.transform)": [[18, "wildboar.transform.IntervalTransform", false]], "intervaltreeclassifier (class in wildboar.tree)": [[19, "wildboar.tree.IntervalTreeClassifier", false]], "intervaltreeregressor (class in wildboar.tree)": [[19, "wildboar.tree.IntervalTreeRegressor", false]], "inverse_transform() (wildboar.dimension_selection.distancevariancethreshold method)": [[6, "wildboar.dimension_selection.DistanceVarianceThreshold.inverse_transform", false]], "inverse_transform() (wildboar.dimension_selection.ecsselector method)": [[6, "wildboar.dimension_selection.ECSSelector.inverse_transform", false]], "inverse_transform() (wildboar.dimension_selection.selectdimensionpercentile method)": [[6, "wildboar.dimension_selection.SelectDimensionPercentile.inverse_transform", false]], "inverse_transform() (wildboar.dimension_selection.selectdimensionsignificance method)": [[6, "wildboar.dimension_selection.SelectDimensionSignificance.inverse_transform", false]], "inverse_transform() (wildboar.dimension_selection.selectdimensiontopk method)": [[6, "wildboar.dimension_selection.SelectDimensionTopK.inverse_transform", false]], "inverse_transform() (wildboar.dimension_selection.sequentialdimensionselector method)": [[6, "wildboar.dimension_selection.SequentialDimensionSelector.inverse_transform", false]], "is_counterfactual() (in module wildboar.base)": [[2, "wildboar.base.is_counterfactual", false]], "is_end_of_series() (in module wildboar.utils.variable_len)": [[22, "wildboar.utils.variable_len.is_end_of_series", false]], "is_explainer() (in module wildboar.base)": [[2, "wildboar.base.is_explainer", false]], "is_variable_length() (in module wildboar.utils.variable_len)": [[22, "wildboar.utils.variable_len.is_variable_length", false]], "isolationshapeletforest (class in wildboar.ensemble)": [[10, "wildboar.ensemble.IsolationShapeletForest", false]], "jeong_weight() (in module wildboar.distance.dtw)": [[7, "wildboar.distance.dtw.jeong_weight", false]], "jsonrepository (class in wildboar.datasets)": [[3, "wildboar.datasets.JSONRepository", false]], "kmeans (class in wildboar.distance)": [[8, "wildboar.distance.KMeans", false]], "kmeans_outliers() (in module wildboar.datasets.outlier)": [[4, "wildboar.datasets.outlier.kmeans_outliers", false]], "kmedoids (class in wildboar.distance)": [[8, "wildboar.distance.KMedoids", false]], "kneighborsclassifier (class in wildboar.distance)": [[8, "wildboar.distance.KNeighborsClassifier", false]], "kneighborscounterfactual (class in wildboar.explain.counterfactual)": [[11, "wildboar.explain.counterfactual.KNeighborsCounterfactual", false]], "list() (wildboar.datasets.bundle method)": [[3, "wildboar.datasets.Bundle.list", false]], "list() (wildboar.datasets.npbundle method)": [[3, "wildboar.datasets.NpBundle.list", false]], "list_bundles() (in module wildboar.datasets)": [[3, "wildboar.datasets.list_bundles", false]], "list_collections() (in module wildboar.datasets)": [[3, "wildboar.datasets.list_collections", false]], "list_datasets() (in module wildboar.datasets)": [[3, "wildboar.datasets.list_datasets", false]], "list_repositories() (in module wildboar.datasets)": [[3, "wildboar.datasets.list_repositories", false]], "load() (wildboar.datasets.bundle method)": [[3, "wildboar.datasets.Bundle.load", false]], "load() (wildboar.datasets.npbundle method)": [[3, "wildboar.datasets.NpBundle.load", false]], "load_appliances_energy() (in module wildboar.datasets)": [[3, "wildboar.datasets.load_appliances_energy", false]], "load_articulary_word_recognition() (in module wildboar.datasets)": [[3, "wildboar.datasets.load_articulary_word_recognition", false]], "load_basic_motions() (in module wildboar.datasets)": [[3, "wildboar.datasets.load_basic_motions", false]], "load_dataset() (in module wildboar.datasets)": [[3, "wildboar.datasets.load_dataset", false]], "load_datasets() (in module wildboar.datasets)": [[3, "wildboar.datasets.load_datasets", false]], "load_ering() (in module wildboar.datasets)": [[3, "wildboar.datasets.load_ering", false]], "load_flood_modeling() (in module wildboar.datasets)": [[3, "wildboar.datasets.load_flood_modeling", false]], "load_gun_point() (in module wildboar.datasets)": [[3, "wildboar.datasets.load_gun_point", false]], "load_synthetic_control() (in module wildboar.datasets)": [[3, "wildboar.datasets.load_synthetic_control", false]], "load_two_lead_ecg() (in module wildboar.datasets)": [[3, "wildboar.datasets.load_two_lead_ecg", false]], "majority_outliers() (in module wildboar.datasets.outlier)": [[4, "wildboar.datasets.outlier.majority_outliers", false]], "matrixprofiletransform (class in wildboar.transform)": [[18, "wildboar.transform.MatrixProfileTransform", false]], "maxabs_scale() (in module wildboar.datasets.preprocess)": [[5, "wildboar.datasets.preprocess.maxabs_scale", false]], "maxabsscale (class in wildboar.datasets.preprocess)": [[5, "wildboar.datasets.preprocess.MaxAbsScale", false]], "mds (class in wildboar.distance)": [[8, "wildboar.distance.MDS", false]], "minmax_scale() (in module wildboar.datasets.preprocess)": [[5, "wildboar.datasets.preprocess.minmax_scale", false]], "minmaxscale (class in wildboar.datasets.preprocess)": [[5, "wildboar.datasets.preprocess.MinMaxScale", false]], "minority_outliers() (in module wildboar.datasets.outlier)": [[4, "wildboar.datasets.outlier.minority_outliers", false]], "module": [[1, "module-wildboar.annotate", false], [2, "module-wildboar.base", false], [3, "module-wildboar.datasets", false], [4, "module-wildboar.datasets.outlier", false], [5, "module-wildboar.datasets.preprocess", false], [6, "module-wildboar.dimension_selection", false], [7, "module-wildboar.distance.dtw", false], [8, "module-wildboar.distance", false], [9, "module-wildboar.distance.lb", false], [10, "module-wildboar.ensemble", false], [11, "module-wildboar.explain.counterfactual", false], [12, "module-wildboar.explain", false], [13, "module-wildboar", false], [14, "module-wildboar.linear_model", false], [15, "module-wildboar.metrics", false], [16, "module-wildboar.model_selection", false], [17, "module-wildboar.segment", false], [18, "module-wildboar.transform", false], [19, "module-wildboar.tree", false], [20, "module-wildboar.utils", false], [21, "module-wildboar.utils.plot", false], [22, "module-wildboar.utils.variable_len", false]], "motifs() (in module wildboar.annotate)": [[1, "wildboar.annotate.motifs", false]], "name (wildboar.datasets.jsonrepository property)": [[3, "wildboar.datasets.JSONRepository.name", false]], "name (wildboar.datasets.repository property)": [[3, "wildboar.datasets.Repository.name", false]], "named_preprocess() (in module wildboar.datasets.preprocess)": [[5, "wildboar.datasets.preprocess.named_preprocess", false]], "nativeguidecounterfactual (class in wildboar.explain.counterfactual)": [[11, "wildboar.explain.counterfactual.NativeGuideCounterfactual", false]], "npbundle (class in wildboar.datasets)": [[3, "wildboar.datasets.NpBundle", false]], "outlier_train_test_split() (in module wildboar.model_selection)": [[16, "wildboar.model_selection.outlier_train_test_split", false]], "paa (class in wildboar.transform)": [[18, "wildboar.transform.PAA", false]], "paalowerbound (class in wildboar.distance.lb)": [[9, "wildboar.distance.lb.PaaLowerBound", false]], "paired_distance() (in module wildboar.distance)": [[8, "wildboar.distance.paired_distance", false]], "paired_subsequence_distance() (in module wildboar.distance)": [[8, "wildboar.distance.paired_subsequence_distance", false]], "paired_subsequence_match() (in module wildboar.distance)": [[8, "wildboar.distance.paired_subsequence_match", false]], "pairwise_distance() (in module wildboar.distance)": [[8, "wildboar.distance.pairwise_distance", false]], "pairwise_subsequence_distance() (in module wildboar.distance)": [[8, "wildboar.distance.pairwise_subsequence_distance", false]], "piecewice_aggregate_approximation() (in module wildboar.transform)": [[18, "wildboar.transform.piecewice_aggregate_approximation", false]], "pivotforestclassifier (class in wildboar.ensemble)": [[10, "wildboar.ensemble.PivotForestClassifier", false]], "pivottransform (class in wildboar.transform)": [[18, "wildboar.transform.PivotTransform", false]], "pivottreeclassifier (class in wildboar.tree)": [[19, "wildboar.tree.PivotTreeClassifier", false]], "plausability_score() (in module wildboar.metrics)": [[15, "wildboar.metrics.plausability_score", false]], "plot() (wildboar.base.explainermixin method)": [[2, "wildboar.base.ExplainerMixin.plot", false]], "plot() (wildboar.explain.amplitudeimportance method)": [[12, "wildboar.explain.AmplitudeImportance.plot", false]], "plot() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[11, "wildboar.explain.counterfactual.KNeighborsCounterfactual.plot", false]], "plot() (wildboar.explain.counterfactual.nativeguidecounterfactual method)": [[11, "wildboar.explain.counterfactual.NativeGuideCounterfactual.plot", false]], "plot() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[11, "wildboar.explain.counterfactual.PrototypeCounterfactual.plot", false]], "plot() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[11, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.plot", false]], "plot() (wildboar.explain.frequencyimportance method)": [[12, "wildboar.explain.FrequencyImportance.plot", false]], "plot() (wildboar.explain.intervalimportance method)": [[12, "wildboar.explain.IntervalImportance.plot", false]], "plot() (wildboar.explain.shapeletimportance method)": [[12, "wildboar.explain.ShapeletImportance.plot", false]], "plot_frequency_domain() (in module wildboar.utils.plot)": [[21, "wildboar.utils.plot.plot_frequency_domain", false]], "plot_importances() (in module wildboar.explain)": [[12, "wildboar.explain.plot_importances", false]], "plot_time_domain() (in module wildboar.utils.plot)": [[21, "wildboar.utils.plot.plot_time_domain", false]], "plot_tree() (in module wildboar.tree)": [[19, "wildboar.tree.plot_tree", false]], "predict() (wildboar.distance.kmeans method)": [[8, "wildboar.distance.KMeans.predict", false]], "predict() (wildboar.distance.kmedoids method)": [[8, "wildboar.distance.KMedoids.predict", false]], "predict() (wildboar.distance.kneighborsclassifier method)": [[8, "wildboar.distance.KNeighborsClassifier.predict", false]], "predict() (wildboar.ensemble.baggingclassifier method)": [[10, "wildboar.ensemble.BaggingClassifier.predict", false]], "predict() (wildboar.ensemble.baggingregressor method)": [[10, "wildboar.ensemble.BaggingRegressor.predict", false]], "predict() (wildboar.ensemble.elasticensembleclassifier method)": [[10, "wildboar.ensemble.ElasticEnsembleClassifier.predict", false]], "predict() (wildboar.ensemble.extrashapelettreesclassifier method)": [[10, "wildboar.ensemble.ExtraShapeletTreesClassifier.predict", false]], "predict() (wildboar.ensemble.extrashapelettreesregressor method)": [[10, "wildboar.ensemble.ExtraShapeletTreesRegressor.predict", false]], "predict() (wildboar.ensemble.intervalforestclassifier method)": [[10, "wildboar.ensemble.IntervalForestClassifier.predict", false]], "predict() (wildboar.ensemble.intervalforestregressor method)": [[10, "wildboar.ensemble.IntervalForestRegressor.predict", false]], "predict() (wildboar.ensemble.pivotforestclassifier method)": [[10, "wildboar.ensemble.PivotForestClassifier.predict", false]], "predict() (wildboar.ensemble.proximityforestclassifier method)": [[10, "wildboar.ensemble.ProximityForestClassifier.predict", false]], "predict() (wildboar.ensemble.rocketforestclassifier method)": [[10, "wildboar.ensemble.RocketForestClassifier.predict", false]], "predict() (wildboar.ensemble.rocketforestregressor method)": [[10, "wildboar.ensemble.RocketForestRegressor.predict", false]], "predict() (wildboar.ensemble.shapeletforestclassifier method)": [[10, "wildboar.ensemble.ShapeletForestClassifier.predict", false]], "predict() (wildboar.ensemble.shapeletforestembedding method)": [[10, "wildboar.ensemble.ShapeletForestEmbedding.predict", false]], "predict() (wildboar.ensemble.shapeletforestregressor method)": [[10, "wildboar.ensemble.ShapeletForestRegressor.predict", false]], "predict() (wildboar.segment.flusssegmenter method)": [[17, "wildboar.segment.FlussSegmenter.predict", false]], "predict() (wildboar.tree.extrashapelettreeclassifier method)": [[19, "wildboar.tree.ExtraShapeletTreeClassifier.predict", false]], "predict() (wildboar.tree.extrashapelettreeregressor method)": [[19, "wildboar.tree.ExtraShapeletTreeRegressor.predict", false]], "predict() (wildboar.tree.intervaltreeclassifier method)": [[19, "wildboar.tree.IntervalTreeClassifier.predict", false]], "predict() (wildboar.tree.intervaltreeregressor method)": [[19, "wildboar.tree.IntervalTreeRegressor.predict", false]], "predict() (wildboar.tree.pivottreeclassifier method)": [[19, "wildboar.tree.PivotTreeClassifier.predict", false]], "predict() (wildboar.tree.proximitytreeclassifier method)": [[19, "wildboar.tree.ProximityTreeClassifier.predict", false]], "predict() (wildboar.tree.rockettreeclassifier method)": [[19, "wildboar.tree.RocketTreeClassifier.predict", false]], "predict() (wildboar.tree.rockettreeregressor method)": [[19, "wildboar.tree.RocketTreeRegressor.predict", false]], "predict() (wildboar.tree.shapelettreeclassifier method)": [[19, "wildboar.tree.ShapeletTreeClassifier.predict", false]], "predict() (wildboar.tree.shapelettreeregressor method)": [[19, "wildboar.tree.ShapeletTreeRegressor.predict", false]], "predict_log_proba() (wildboar.ensemble.baggingclassifier method)": [[10, "wildboar.ensemble.BaggingClassifier.predict_log_proba", false]], "predict_log_proba() (wildboar.ensemble.extrashapelettreesclassifier method)": [[10, "wildboar.ensemble.ExtraShapeletTreesClassifier.predict_log_proba", false]], "predict_log_proba() (wildboar.ensemble.intervalforestclassifier method)": [[10, "wildboar.ensemble.IntervalForestClassifier.predict_log_proba", false]], "predict_log_proba() (wildboar.ensemble.pivotforestclassifier method)": [[10, "wildboar.ensemble.PivotForestClassifier.predict_log_proba", false]], "predict_log_proba() (wildboar.ensemble.proximityforestclassifier method)": [[10, "wildboar.ensemble.ProximityForestClassifier.predict_log_proba", false]], "predict_log_proba() (wildboar.ensemble.rocketforestclassifier method)": [[10, "wildboar.ensemble.RocketForestClassifier.predict_log_proba", false]], "predict_log_proba() (wildboar.ensemble.shapeletforestclassifier method)": [[10, "wildboar.ensemble.ShapeletForestClassifier.predict_log_proba", false]], "predict_proba() (wildboar.distance.kneighborsclassifier method)": [[8, "wildboar.distance.KNeighborsClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble.baggingclassifier method)": [[10, "wildboar.ensemble.BaggingClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble.elasticensembleclassifier method)": [[10, "wildboar.ensemble.ElasticEnsembleClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble.extrashapelettreesclassifier method)": [[10, "wildboar.ensemble.ExtraShapeletTreesClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble.intervalforestclassifier method)": [[10, "wildboar.ensemble.IntervalForestClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble.pivotforestclassifier method)": [[10, "wildboar.ensemble.PivotForestClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble.proximityforestclassifier method)": [[10, "wildboar.ensemble.ProximityForestClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble.rocketforestclassifier method)": [[10, "wildboar.ensemble.RocketForestClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble.shapeletforestclassifier method)": [[10, "wildboar.ensemble.ShapeletForestClassifier.predict_proba", false]], "predict_proba() (wildboar.tree.extrashapelettreeclassifier method)": [[19, "wildboar.tree.ExtraShapeletTreeClassifier.predict_proba", false]], "predict_proba() (wildboar.tree.intervaltreeclassifier method)": [[19, "wildboar.tree.IntervalTreeClassifier.predict_proba", false]], "predict_proba() (wildboar.tree.pivottreeclassifier method)": [[19, "wildboar.tree.PivotTreeClassifier.predict_proba", false]], "predict_proba() (wildboar.tree.proximitytreeclassifier method)": [[19, "wildboar.tree.ProximityTreeClassifier.predict_proba", false]], "predict_proba() (wildboar.tree.rockettreeclassifier method)": [[19, "wildboar.tree.RocketTreeClassifier.predict_proba", false]], "predict_proba() (wildboar.tree.shapelettreeclassifier method)": [[19, "wildboar.tree.ShapeletTreeClassifier.predict_proba", false]], "prototypecounterfactual (class in wildboar.explain.counterfactual)": [[11, "wildboar.explain.counterfactual.PrototypeCounterfactual", false]], "proximity() (in module wildboar.explain.counterfactual)": [[11, "wildboar.explain.counterfactual.proximity", false]], "proximity_score() (in module wildboar.metrics)": [[15, "wildboar.metrics.proximity_score", false]], "proximityforestclassifier (class in wildboar.ensemble)": [[10, "wildboar.ensemble.ProximityForestClassifier", false]], "proximitytransform (class in wildboar.transform)": [[18, "wildboar.transform.ProximityTransform", false]], "proximitytreeclassifier (class in wildboar.tree)": [[19, "wildboar.tree.ProximityTreeClassifier", false]], "quanttransform (class in wildboar.transform)": [[18, "wildboar.transform.QuantTransform", false]], "randomshapeletclassifier (class in wildboar.linear_model)": [[14, "wildboar.linear_model.RandomShapeletClassifier", false]], "randomshapeletregressor (class in wildboar.linear_model)": [[14, "wildboar.linear_model.RandomShapeletRegressor", false]], "randomshapelettransform (class in wildboar.transform)": [[18, "wildboar.transform.RandomShapeletTransform", false]], "redudancy_score() (in module wildboar.metrics)": [[15, "wildboar.metrics.redudancy_score", false]], "refresh() (wildboar.datasets.jsonrepository method)": [[3, "wildboar.datasets.JSONRepository.refresh", false]], "refresh() (wildboar.datasets.repository method)": [[3, "wildboar.datasets.Repository.refresh", false]], "refresh_repositories() (in module wildboar.datasets)": [[3, "wildboar.datasets.refresh_repositories", false]], "relative_proximity_score() (in module wildboar.metrics)": [[15, "wildboar.metrics.relative_proximity_score", false]], "repeatedoutliersplit (class in wildboar.model_selection)": [[16, "wildboar.model_selection.RepeatedOutlierSplit", false]], "repository (class in wildboar.datasets)": [[3, "wildboar.datasets.Repository", false]], "rocketclassifier (class in wildboar.linear_model)": [[14, "wildboar.linear_model.RocketClassifier", false]], "rocketforestclassifier (class in wildboar.ensemble)": [[10, "wildboar.ensemble.RocketForestClassifier", false]], "rocketforestregressor (class in wildboar.ensemble)": [[10, "wildboar.ensemble.RocketForestRegressor", false]], "rocketregressor (class in wildboar.linear_model)": [[14, "wildboar.linear_model.RocketRegressor", false]], "rockettransform (class in wildboar.transform)": [[18, "wildboar.transform.RocketTransform", false]], "rockettreeclassifier (class in wildboar.tree)": [[19, "wildboar.tree.RocketTreeClassifier", false]], "rockettreeregressor (class in wildboar.tree)": [[19, "wildboar.tree.RocketTreeRegressor", false]], "sax (class in wildboar.transform)": [[18, "wildboar.transform.SAX", false]], "saxlowerbound (class in wildboar.distance.lb)": [[9, "wildboar.distance.lb.SaxLowerBound", false]], "score() (wildboar.base.counterfactualmixin method)": [[2, "wildboar.base.CounterfactualMixin.score", false]], "score() (wildboar.distance.kneighborsclassifier method)": [[8, "wildboar.distance.KNeighborsClassifier.score", false]], "score() (wildboar.ensemble.baggingclassifier method)": [[10, "wildboar.ensemble.BaggingClassifier.score", false]], "score() (wildboar.ensemble.baggingregressor method)": [[10, "wildboar.ensemble.BaggingRegressor.score", false]], "score() (wildboar.ensemble.elasticensembleclassifier method)": [[10, "wildboar.ensemble.ElasticEnsembleClassifier.score", false]], "score() (wildboar.ensemble.extrashapelettreesclassifier method)": [[10, "wildboar.ensemble.ExtraShapeletTreesClassifier.score", false]], "score() (wildboar.ensemble.extrashapelettreesregressor method)": [[10, "wildboar.ensemble.ExtraShapeletTreesRegressor.score", false]], "score() (wildboar.ensemble.intervalforestclassifier method)": [[10, "wildboar.ensemble.IntervalForestClassifier.score", false]], "score() (wildboar.ensemble.intervalforestregressor method)": [[10, "wildboar.ensemble.IntervalForestRegressor.score", false]], "score() (wildboar.ensemble.pivotforestclassifier method)": [[10, "wildboar.ensemble.PivotForestClassifier.score", false]], "score() (wildboar.ensemble.proximityforestclassifier method)": [[10, "wildboar.ensemble.ProximityForestClassifier.score", false]], "score() (wildboar.ensemble.rocketforestclassifier method)": [[10, "wildboar.ensemble.RocketForestClassifier.score", false]], "score() (wildboar.ensemble.rocketforestregressor method)": [[10, "wildboar.ensemble.RocketForestRegressor.score", false]], "score() (wildboar.ensemble.shapeletforestclassifier method)": [[10, "wildboar.ensemble.ShapeletForestClassifier.score", false]], "score() (wildboar.ensemble.shapeletforestembedding method)": [[10, "wildboar.ensemble.ShapeletForestEmbedding.score", false]], "score() (wildboar.ensemble.shapeletforestregressor method)": [[10, "wildboar.ensemble.ShapeletForestRegressor.score", false]], "score() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[11, "wildboar.explain.counterfactual.KNeighborsCounterfactual.score", false]], "score() (wildboar.explain.counterfactual.nativeguidecounterfactual method)": [[11, "wildboar.explain.counterfactual.NativeGuideCounterfactual.score", false]], "score() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[11, "wildboar.explain.counterfactual.PrototypeCounterfactual.score", false]], "score() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[11, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.score", false]], "score() (wildboar.linear_model.castorclassifier method)": [[14, "wildboar.linear_model.CastorClassifier.score", false]], "score() (wildboar.linear_model.castorregressor method)": [[14, "wildboar.linear_model.CastorRegressor.score", false]], "score() (wildboar.linear_model.dilatedshapeletclassifier method)": [[14, "wildboar.linear_model.DilatedShapeletClassifier.score", false]], "score() (wildboar.linear_model.hydraclassifier method)": [[14, "wildboar.linear_model.HydraClassifier.score", false]], "score() (wildboar.linear_model.randomshapeletclassifier method)": [[14, "wildboar.linear_model.RandomShapeletClassifier.score", false]], "score() (wildboar.linear_model.randomshapeletregressor method)": [[14, "wildboar.linear_model.RandomShapeletRegressor.score", false]], "score() (wildboar.linear_model.rocketclassifier method)": [[14, "wildboar.linear_model.RocketClassifier.score", false]], "score() (wildboar.linear_model.rocketregressor method)": [[14, "wildboar.linear_model.RocketRegressor.score", false]], "score() (wildboar.tree.extrashapelettreeclassifier method)": [[19, "wildboar.tree.ExtraShapeletTreeClassifier.score", false]], "score() (wildboar.tree.extrashapelettreeregressor method)": [[19, "wildboar.tree.ExtraShapeletTreeRegressor.score", false]], "score() (wildboar.tree.intervaltreeclassifier method)": [[19, "wildboar.tree.IntervalTreeClassifier.score", false]], "score() (wildboar.tree.intervaltreeregressor method)": [[19, "wildboar.tree.IntervalTreeRegressor.score", false]], "score() (wildboar.tree.pivottreeclassifier method)": [[19, "wildboar.tree.PivotTreeClassifier.score", false]], "score() (wildboar.tree.proximitytreeclassifier method)": [[19, "wildboar.tree.ProximityTreeClassifier.score", false]], "score() (wildboar.tree.rockettreeclassifier method)": [[19, "wildboar.tree.RocketTreeClassifier.score", false]], "score() (wildboar.tree.rockettreeregressor method)": [[19, "wildboar.tree.RocketTreeRegressor.score", false]], "score() (wildboar.tree.shapelettreeclassifier method)": [[19, "wildboar.tree.ShapeletTreeClassifier.score", false]], "score() (wildboar.tree.shapelettreeregressor method)": [[19, "wildboar.tree.ShapeletTreeRegressor.score", false]], "segment() (in module wildboar.annotate)": [[1, "wildboar.annotate.segment", false]], "selectdimensionpercentile (class in wildboar.dimension_selection)": [[6, "wildboar.dimension_selection.SelectDimensionPercentile", false]], "selectdimensionsignificance (class in wildboar.dimension_selection)": [[6, "wildboar.dimension_selection.SelectDimensionSignificance", false]], "selectdimensiontopk (class in wildboar.dimension_selection)": [[6, "wildboar.dimension_selection.SelectDimensionTopK", false]], "sequentialdimensionselector (class in wildboar.dimension_selection)": [[6, "wildboar.dimension_selection.SequentialDimensionSelector", false]], "set_cache_dir() (in module wildboar.datasets)": [[3, "wildboar.datasets.set_cache_dir", false]], "set_output() (wildboar.datasets.preprocess.interpolate method)": [[5, "wildboar.datasets.preprocess.Interpolate.set_output", false]], "set_output() (wildboar.datasets.preprocess.maxabsscale method)": [[5, "wildboar.datasets.preprocess.MaxAbsScale.set_output", false]], "set_output() (wildboar.datasets.preprocess.minmaxscale method)": [[5, "wildboar.datasets.preprocess.MinMaxScale.set_output", false]], "set_output() (wildboar.datasets.preprocess.standardize method)": [[5, "wildboar.datasets.preprocess.Standardize.set_output", false]], "set_output() (wildboar.datasets.preprocess.truncate method)": [[5, "wildboar.datasets.preprocess.Truncate.set_output", false]], "set_output() (wildboar.dimension_selection.distancevariancethreshold method)": [[6, "wildboar.dimension_selection.DistanceVarianceThreshold.set_output", false]], "set_output() (wildboar.dimension_selection.ecsselector method)": [[6, "wildboar.dimension_selection.ECSSelector.set_output", false]], "set_output() (wildboar.dimension_selection.selectdimensionpercentile method)": [[6, "wildboar.dimension_selection.SelectDimensionPercentile.set_output", false]], "set_output() (wildboar.dimension_selection.selectdimensionsignificance method)": [[6, "wildboar.dimension_selection.SelectDimensionSignificance.set_output", false]], "set_output() (wildboar.dimension_selection.selectdimensiontopk method)": [[6, "wildboar.dimension_selection.SelectDimensionTopK.set_output", false]], "set_output() (wildboar.dimension_selection.sequentialdimensionselector method)": [[6, "wildboar.dimension_selection.SequentialDimensionSelector.set_output", false]], "set_output() (wildboar.distance.kmeans method)": [[8, "wildboar.distance.KMeans.set_output", false]], "set_output() (wildboar.distance.kmedoids method)": [[8, "wildboar.distance.KMedoids.set_output", false]], "set_output() (wildboar.distance.lb.dtwkeoghlowerbound method)": [[9, "wildboar.distance.lb.DtwKeoghLowerBound.set_output", false]], "set_output() (wildboar.distance.lb.dtwkimlowerbound method)": [[9, "wildboar.distance.lb.DtwKimLowerBound.set_output", false]], "set_output() (wildboar.distance.lb.paalowerbound method)": [[9, "wildboar.distance.lb.PaaLowerBound.set_output", false]], "set_output() (wildboar.distance.lb.saxlowerbound method)": [[9, "wildboar.distance.lb.SaxLowerBound.set_output", false]], "set_output() (wildboar.segment.flusssegmenter method)": [[17, "wildboar.segment.FlussSegmenter.set_output", false]], "set_output() (wildboar.transform.castortransform method)": [[18, "wildboar.transform.CastorTransform.set_output", false]], "set_output() (wildboar.transform.derivativetransform method)": [[18, "wildboar.transform.DerivativeTransform.set_output", false]], "set_output() (wildboar.transform.difftransform method)": [[18, "wildboar.transform.DiffTransform.set_output", false]], "set_output() (wildboar.transform.dilatedshapelettransform method)": [[18, "wildboar.transform.DilatedShapeletTransform.set_output", false]], "set_output() (wildboar.transform.featuretransform method)": [[18, "wildboar.transform.FeatureTransform.set_output", false]], "set_output() (wildboar.transform.ffttransform method)": [[18, "wildboar.transform.FftTransform.set_output", false]], "set_output() (wildboar.transform.hydratransform method)": [[18, "wildboar.transform.HydraTransform.set_output", false]], "set_output() (wildboar.transform.intervaltransform method)": [[18, "wildboar.transform.IntervalTransform.set_output", false]], "set_output() (wildboar.transform.matrixprofiletransform method)": [[18, "wildboar.transform.MatrixProfileTransform.set_output", false]], "set_output() (wildboar.transform.paa method)": [[18, "wildboar.transform.PAA.set_output", false]], "set_output() (wildboar.transform.pivottransform method)": [[18, "wildboar.transform.PivotTransform.set_output", false]], "set_output() (wildboar.transform.proximitytransform method)": [[18, "wildboar.transform.ProximityTransform.set_output", false]], "set_output() (wildboar.transform.quanttransform method)": [[18, "wildboar.transform.QuantTransform.set_output", false]], "set_output() (wildboar.transform.randomshapelettransform method)": [[18, "wildboar.transform.RandomShapeletTransform.set_output", false]], "set_output() (wildboar.transform.rockettransform method)": [[18, "wildboar.transform.RocketTransform.set_output", false]], "set_output() (wildboar.transform.sax method)": [[18, "wildboar.transform.SAX.set_output", false]], "set_output() (wildboar.transform.shapelettransform method)": [[18, "wildboar.transform.ShapeletTransform.set_output", false]], "set_params() (wildboar.base.baseestimator method)": [[2, "wildboar.base.BaseEstimator.set_params", false]], "set_params() (wildboar.datasets.preprocess.interpolate method)": [[5, "wildboar.datasets.preprocess.Interpolate.set_params", false]], "set_params() (wildboar.datasets.preprocess.maxabsscale method)": [[5, "wildboar.datasets.preprocess.MaxAbsScale.set_params", false]], "set_params() (wildboar.datasets.preprocess.minmaxscale method)": [[5, "wildboar.datasets.preprocess.MinMaxScale.set_params", false]], "set_params() (wildboar.datasets.preprocess.standardize method)": [[5, "wildboar.datasets.preprocess.Standardize.set_params", false]], "set_params() (wildboar.datasets.preprocess.truncate method)": [[5, "wildboar.datasets.preprocess.Truncate.set_params", false]], "set_params() (wildboar.dimension_selection.distancevariancethreshold method)": [[6, "wildboar.dimension_selection.DistanceVarianceThreshold.set_params", false]], "set_params() (wildboar.dimension_selection.ecsselector method)": [[6, "wildboar.dimension_selection.ECSSelector.set_params", false]], "set_params() (wildboar.dimension_selection.selectdimensionpercentile method)": [[6, "wildboar.dimension_selection.SelectDimensionPercentile.set_params", false]], "set_params() (wildboar.dimension_selection.selectdimensionsignificance method)": [[6, "wildboar.dimension_selection.SelectDimensionSignificance.set_params", false]], "set_params() (wildboar.dimension_selection.selectdimensiontopk method)": [[6, "wildboar.dimension_selection.SelectDimensionTopK.set_params", false]], "set_params() (wildboar.dimension_selection.sequentialdimensionselector method)": [[6, "wildboar.dimension_selection.SequentialDimensionSelector.set_params", false]], "set_params() (wildboar.distance.kmeans method)": [[8, "wildboar.distance.KMeans.set_params", false]], "set_params() (wildboar.distance.kmedoids method)": [[8, "wildboar.distance.KMedoids.set_params", false]], "set_params() (wildboar.distance.kneighborsclassifier method)": [[8, "wildboar.distance.KNeighborsClassifier.set_params", false]], "set_params() (wildboar.distance.lb.dtwkeoghlowerbound method)": [[9, "wildboar.distance.lb.DtwKeoghLowerBound.set_params", false]], "set_params() (wildboar.distance.lb.dtwkimlowerbound method)": [[9, "wildboar.distance.lb.DtwKimLowerBound.set_params", false]], "set_params() (wildboar.distance.lb.paalowerbound method)": [[9, "wildboar.distance.lb.PaaLowerBound.set_params", false]], "set_params() (wildboar.distance.lb.saxlowerbound method)": [[9, "wildboar.distance.lb.SaxLowerBound.set_params", false]], "set_params() (wildboar.distance.mds method)": [[8, "wildboar.distance.MDS.set_params", false]], "set_params() (wildboar.ensemble.baggingclassifier method)": [[10, "wildboar.ensemble.BaggingClassifier.set_params", false]], "set_params() (wildboar.ensemble.baggingregressor method)": [[10, "wildboar.ensemble.BaggingRegressor.set_params", false]], "set_params() (wildboar.ensemble.basebagging method)": [[10, "wildboar.ensemble.BaseBagging.set_params", false]], "set_params() (wildboar.ensemble.elasticensembleclassifier method)": [[10, "wildboar.ensemble.ElasticEnsembleClassifier.set_params", false]], "set_params() (wildboar.ensemble.extrashapelettreesclassifier method)": [[10, "wildboar.ensemble.ExtraShapeletTreesClassifier.set_params", false]], "set_params() (wildboar.ensemble.extrashapelettreesregressor method)": [[10, "wildboar.ensemble.ExtraShapeletTreesRegressor.set_params", false]], "set_params() (wildboar.ensemble.intervalforestclassifier method)": [[10, "wildboar.ensemble.IntervalForestClassifier.set_params", false]], "set_params() (wildboar.ensemble.intervalforestregressor method)": [[10, "wildboar.ensemble.IntervalForestRegressor.set_params", false]], "set_params() (wildboar.ensemble.isolationshapeletforest method)": [[10, "wildboar.ensemble.IsolationShapeletForest.set_params", false]], "set_params() (wildboar.ensemble.pivotforestclassifier method)": [[10, "wildboar.ensemble.PivotForestClassifier.set_params", false]], "set_params() (wildboar.ensemble.proximityforestclassifier method)": [[10, "wildboar.ensemble.ProximityForestClassifier.set_params", false]], "set_params() (wildboar.ensemble.rocketforestclassifier method)": [[10, "wildboar.ensemble.RocketForestClassifier.set_params", false]], "set_params() (wildboar.ensemble.rocketforestregressor method)": [[10, "wildboar.ensemble.RocketForestRegressor.set_params", false]], "set_params() (wildboar.ensemble.shapeletforestclassifier method)": [[10, "wildboar.ensemble.ShapeletForestClassifier.set_params", false]], "set_params() (wildboar.ensemble.shapeletforestembedding method)": [[10, "wildboar.ensemble.ShapeletForestEmbedding.set_params", false]], "set_params() (wildboar.ensemble.shapeletforestregressor method)": [[10, "wildboar.ensemble.ShapeletForestRegressor.set_params", false]], "set_params() (wildboar.explain.amplitudeimportance method)": [[12, "wildboar.explain.AmplitudeImportance.set_params", false]], "set_params() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[11, "wildboar.explain.counterfactual.KNeighborsCounterfactual.set_params", false]], "set_params() (wildboar.explain.counterfactual.nativeguidecounterfactual method)": [[11, "wildboar.explain.counterfactual.NativeGuideCounterfactual.set_params", false]], "set_params() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[11, "wildboar.explain.counterfactual.PrototypeCounterfactual.set_params", false]], "set_params() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[11, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.set_params", false]], "set_params() (wildboar.explain.frequencyimportance method)": [[12, "wildboar.explain.FrequencyImportance.set_params", false]], "set_params() (wildboar.explain.intervalimportance method)": [[12, "wildboar.explain.IntervalImportance.set_params", false]], "set_params() (wildboar.explain.shapeletimportance method)": [[12, "wildboar.explain.ShapeletImportance.set_params", false]], "set_params() (wildboar.linear_model.castorclassifier method)": [[14, "wildboar.linear_model.CastorClassifier.set_params", false]], "set_params() (wildboar.linear_model.castorregressor method)": [[14, "wildboar.linear_model.CastorRegressor.set_params", false]], "set_params() (wildboar.linear_model.dilatedshapeletclassifier method)": [[14, "wildboar.linear_model.DilatedShapeletClassifier.set_params", false]], "set_params() (wildboar.linear_model.hydraclassifier method)": [[14, "wildboar.linear_model.HydraClassifier.set_params", false]], "set_params() (wildboar.linear_model.randomshapeletclassifier method)": [[14, "wildboar.linear_model.RandomShapeletClassifier.set_params", false]], "set_params() (wildboar.linear_model.randomshapeletregressor method)": [[14, "wildboar.linear_model.RandomShapeletRegressor.set_params", false]], "set_params() (wildboar.linear_model.rocketclassifier method)": [[14, "wildboar.linear_model.RocketClassifier.set_params", false]], "set_params() (wildboar.linear_model.rocketregressor method)": [[14, "wildboar.linear_model.RocketRegressor.set_params", false]], "set_params() (wildboar.segment.flusssegmenter method)": [[17, "wildboar.segment.FlussSegmenter.set_params", false]], "set_params() (wildboar.transform.castortransform method)": [[18, "wildboar.transform.CastorTransform.set_params", false]], "set_params() (wildboar.transform.derivativetransform method)": [[18, "wildboar.transform.DerivativeTransform.set_params", false]], "set_params() (wildboar.transform.difftransform method)": [[18, "wildboar.transform.DiffTransform.set_params", false]], "set_params() (wildboar.transform.dilatedshapelettransform method)": [[18, "wildboar.transform.DilatedShapeletTransform.set_params", false]], "set_params() (wildboar.transform.featuretransform method)": [[18, "wildboar.transform.FeatureTransform.set_params", false]], "set_params() (wildboar.transform.ffttransform method)": [[18, "wildboar.transform.FftTransform.set_params", false]], "set_params() (wildboar.transform.hydratransform method)": [[18, "wildboar.transform.HydraTransform.set_params", false]], "set_params() (wildboar.transform.intervaltransform method)": [[18, "wildboar.transform.IntervalTransform.set_params", false]], "set_params() (wildboar.transform.matrixprofiletransform method)": [[18, "wildboar.transform.MatrixProfileTransform.set_params", false]], "set_params() (wildboar.transform.paa method)": [[18, "wildboar.transform.PAA.set_params", false]], "set_params() (wildboar.transform.pivottransform method)": [[18, "wildboar.transform.PivotTransform.set_params", false]], "set_params() (wildboar.transform.proximitytransform method)": [[18, "wildboar.transform.ProximityTransform.set_params", false]], "set_params() (wildboar.transform.quanttransform method)": [[18, "wildboar.transform.QuantTransform.set_params", false]], "set_params() (wildboar.transform.randomshapelettransform method)": [[18, "wildboar.transform.RandomShapeletTransform.set_params", false]], "set_params() (wildboar.transform.rockettransform method)": [[18, "wildboar.transform.RocketTransform.set_params", false]], "set_params() (wildboar.transform.sax method)": [[18, "wildboar.transform.SAX.set_params", false]], "set_params() (wildboar.transform.shapelettransform method)": [[18, "wildboar.transform.ShapeletTransform.set_params", false]], "set_params() (wildboar.tree.extrashapelettreeclassifier method)": [[19, "wildboar.tree.ExtraShapeletTreeClassifier.set_params", false]], "set_params() (wildboar.tree.extrashapelettreeregressor method)": [[19, "wildboar.tree.ExtraShapeletTreeRegressor.set_params", false]], "set_params() (wildboar.tree.intervaltreeclassifier method)": [[19, "wildboar.tree.IntervalTreeClassifier.set_params", false]], "set_params() (wildboar.tree.intervaltreeregressor method)": [[19, "wildboar.tree.IntervalTreeRegressor.set_params", false]], "set_params() (wildboar.tree.pivottreeclassifier method)": [[19, "wildboar.tree.PivotTreeClassifier.set_params", false]], "set_params() (wildboar.tree.proximitytreeclassifier method)": [[19, "wildboar.tree.ProximityTreeClassifier.set_params", false]], "set_params() (wildboar.tree.rockettreeclassifier method)": [[19, "wildboar.tree.RocketTreeClassifier.set_params", false]], "set_params() (wildboar.tree.rockettreeregressor method)": [[19, "wildboar.tree.RocketTreeRegressor.set_params", false]], "set_params() (wildboar.tree.shapelettreeclassifier method)": [[19, "wildboar.tree.ShapeletTreeClassifier.set_params", false]], "set_params() (wildboar.tree.shapelettreeregressor method)": [[19, "wildboar.tree.ShapeletTreeRegressor.set_params", false]], "shapeletforestclassifier (class in wildboar.ensemble)": [[10, "wildboar.ensemble.ShapeletForestClassifier", false]], "shapeletforestcounterfactual (class in wildboar.explain.counterfactual)": [[11, "wildboar.explain.counterfactual.ShapeletForestCounterfactual", false]], "shapeletforestembedding (class in wildboar.ensemble)": [[10, "wildboar.ensemble.ShapeletForestEmbedding", false]], "shapeletforestregressor (class in wildboar.ensemble)": [[10, "wildboar.ensemble.ShapeletForestRegressor", false]], "shapeletimportance (class in wildboar.explain)": [[12, "wildboar.explain.ShapeletImportance", false]], "shapelettransform (class in wildboar.transform)": [[18, "wildboar.transform.ShapeletTransform", false]], "shapelettreeclassifier (class in wildboar.tree)": [[19, "wildboar.tree.ShapeletTreeClassifier", false]], "shapelettreeregressor (class in wildboar.tree)": [[19, "wildboar.tree.ShapeletTreeRegressor", false]], "silhouette_samples() (in module wildboar.metrics)": [[15, "wildboar.metrics.silhouette_samples", false]], "silhouette_score() (in module wildboar.metrics)": [[15, "wildboar.metrics.silhouette_score", false]], "split() (wildboar.model_selection.repeatedoutliersplit method)": [[16, "wildboar.model_selection.RepeatedOutlierSplit.split", false]], "standardize (class in wildboar.datasets.preprocess)": [[5, "wildboar.datasets.preprocess.Standardize", false]], "standardize() (in module wildboar.datasets.preprocess)": [[5, "wildboar.datasets.preprocess.standardize", false]], "subsequence_match() (in module wildboar.distance)": [[8, "wildboar.distance.subsequence_match", false]], "symbolic_aggregate_approximation() (in module wildboar.transform)": [[18, "wildboar.transform.symbolic_aggregate_approximation", false]], "transform() (wildboar.datasets.preprocess.interpolate method)": [[5, "wildboar.datasets.preprocess.Interpolate.transform", false]], "transform() (wildboar.datasets.preprocess.maxabsscale method)": [[5, "wildboar.datasets.preprocess.MaxAbsScale.transform", false]], "transform() (wildboar.datasets.preprocess.minmaxscale method)": [[5, "wildboar.datasets.preprocess.MinMaxScale.transform", false]], "transform() (wildboar.datasets.preprocess.standardize method)": [[5, "wildboar.datasets.preprocess.Standardize.transform", false]], "transform() (wildboar.dimension_selection.distancevariancethreshold method)": [[6, "wildboar.dimension_selection.DistanceVarianceThreshold.transform", false]], "transform() (wildboar.dimension_selection.ecsselector method)": [[6, "wildboar.dimension_selection.ECSSelector.transform", false]], "transform() (wildboar.dimension_selection.selectdimensionpercentile method)": [[6, "wildboar.dimension_selection.SelectDimensionPercentile.transform", false]], "transform() (wildboar.dimension_selection.selectdimensionsignificance method)": [[6, "wildboar.dimension_selection.SelectDimensionSignificance.transform", false]], "transform() (wildboar.dimension_selection.selectdimensiontopk method)": [[6, "wildboar.dimension_selection.SelectDimensionTopK.transform", false]], "transform() (wildboar.dimension_selection.sequentialdimensionselector method)": [[6, "wildboar.dimension_selection.SequentialDimensionSelector.transform", false]], "transform() (wildboar.distance.kmeans method)": [[8, "wildboar.distance.KMeans.transform", false]], "transform() (wildboar.distance.kmedoids method)": [[8, "wildboar.distance.KMedoids.transform", false]], "transform() (wildboar.distance.lb.dtwkeoghlowerbound method)": [[9, "wildboar.distance.lb.DtwKeoghLowerBound.transform", false]], "transform() (wildboar.distance.lb.dtwkimlowerbound method)": [[9, "wildboar.distance.lb.DtwKimLowerBound.transform", false]], "transform() (wildboar.distance.lb.paalowerbound method)": [[9, "wildboar.distance.lb.PaaLowerBound.transform", false]], "transform() (wildboar.distance.lb.saxlowerbound method)": [[9, "wildboar.distance.lb.SaxLowerBound.transform", false]], "transform() (wildboar.segment.flusssegmenter method)": [[17, "wildboar.segment.FlussSegmenter.transform", false]], "transform() (wildboar.transform.castortransform method)": [[18, "wildboar.transform.CastorTransform.transform", false]], "transform() (wildboar.transform.dilatedshapelettransform method)": [[18, "wildboar.transform.DilatedShapeletTransform.transform", false]], "transform() (wildboar.transform.featuretransform method)": [[18, "wildboar.transform.FeatureTransform.transform", false]], "transform() (wildboar.transform.ffttransform method)": [[18, "wildboar.transform.FftTransform.transform", false]], "transform() (wildboar.transform.hydratransform method)": [[18, "wildboar.transform.HydraTransform.transform", false]], "transform() (wildboar.transform.intervaltransform method)": [[18, "wildboar.transform.IntervalTransform.transform", false]], "transform() (wildboar.transform.matrixprofiletransform method)": [[18, "wildboar.transform.MatrixProfileTransform.transform", false]], "transform() (wildboar.transform.pivottransform method)": [[18, "wildboar.transform.PivotTransform.transform", false]], "transform() (wildboar.transform.quanttransform method)": [[18, "wildboar.transform.QuantTransform.transform", false]], "transform() (wildboar.transform.randomshapelettransform method)": [[18, "wildboar.transform.RandomShapeletTransform.transform", false]], "transform() (wildboar.transform.rockettransform method)": [[18, "wildboar.transform.RocketTransform.transform", false]], "transform() (wildboar.transform.shapelettransform method)": [[18, "wildboar.transform.ShapeletTransform.transform", false]], "truncate (class in wildboar.datasets.preprocess)": [[5, "wildboar.datasets.preprocess.Truncate", false]], "truncate() (in module wildboar.datasets.preprocess)": [[5, "wildboar.datasets.preprocess.truncate", false]], "validity_score() (in module wildboar.metrics)": [[15, "wildboar.metrics.validity_score", false]], "version (wildboar.datasets.jsonrepository property)": [[3, "wildboar.datasets.JSONRepository.version", false]], "version (wildboar.datasets.repository property)": [[3, "wildboar.datasets.Repository.version", false]], "wddtw_distance() (in module wildboar.distance.dtw)": [[7, "wildboar.distance.dtw.wddtw_distance", false]], "wdtw_alignment() (in module wildboar.distance.dtw)": [[7, "wildboar.distance.dtw.wdtw_alignment", false]], "wdtw_distance() (in module wildboar.distance.dtw)": [[7, "wildboar.distance.dtw.wdtw_distance", false]], "wildboar": [[13, "module-wildboar", false]], "wildboar.annotate": [[1, "module-wildboar.annotate", false]], "wildboar.base": [[2, "module-wildboar.base", false]], "wildboar.datasets": [[3, "module-wildboar.datasets", false]], "wildboar.datasets.outlier": [[4, "module-wildboar.datasets.outlier", false]], "wildboar.datasets.preprocess": [[5, "module-wildboar.datasets.preprocess", false]], "wildboar.dimension_selection": [[6, "module-wildboar.dimension_selection", false]], "wildboar.distance": [[8, "module-wildboar.distance", false]], "wildboar.distance.dtw": [[7, "module-wildboar.distance.dtw", false]], "wildboar.distance.lb": [[9, "module-wildboar.distance.lb", false]], "wildboar.ensemble": [[10, "module-wildboar.ensemble", false]], "wildboar.explain": [[12, "module-wildboar.explain", false]], "wildboar.explain.counterfactual": [[11, "module-wildboar.explain.counterfactual", false]], "wildboar.linear_model": [[14, "module-wildboar.linear_model", false]], "wildboar.metrics": [[15, "module-wildboar.metrics", false]], "wildboar.model_selection": [[16, "module-wildboar.model_selection", false]], "wildboar.segment": [[17, "module-wildboar.segment", false]], "wildboar.transform": [[18, "module-wildboar.transform", false]], "wildboar.tree": [[19, "module-wildboar.tree", false]], "wildboar.utils": [[20, "module-wildboar.utils", false]], "wildboar.utils.plot": [[21, "module-wildboar.utils.plot", false]], "wildboar.utils.variable_len": [[22, "module-wildboar.utils.variable_len", false]], "wildboar_requires (wildboar.datasets.jsonrepository property)": [[3, "wildboar.datasets.JSONRepository.wildboar_requires", false]], "wildboar_requires (wildboar.datasets.repository property)": [[3, "wildboar.datasets.Repository.wildboar_requires", false]]}, "objects": {"": [[13, 0, 0, "-", "wildboar"]], "wildboar": [[1, 0, 0, "-", "annotate"], [2, 0, 0, "-", "base"], [3, 0, 0, "-", "datasets"], [6, 0, 0, "-", "dimension_selection"], [8, 0, 0, "-", "distance"], [10, 0, 0, "-", "ensemble"], [12, 0, 0, "-", "explain"], [14, 0, 0, "-", "linear_model"], [15, 0, 0, "-", "metrics"], [16, 0, 0, "-", "model_selection"], [17, 0, 0, "-", "segment"], [18, 0, 0, "-", "transform"], [19, 0, 0, "-", "tree"], [20, 0, 0, "-", "utils"]], "wildboar.annotate": [[1, 1, 1, "", "motifs"], [1, 1, 1, "", "segment"]], "wildboar.base": [[2, 2, 1, "", "BaseEstimator"], [2, 2, 1, "", "CounterfactualMixin"], [2, 2, 1, "", "ExplainerMixin"], [2, 1, 1, "", "is_counterfactual"], [2, 1, 1, "", "is_explainer"]], "wildboar.base.BaseEstimator": [[2, 3, 1, "", "get_metadata_routing"], [2, 3, 1, "", "get_params"], [2, 3, 1, "", "set_params"]], "wildboar.base.CounterfactualMixin": [[2, 3, 1, "", "score"]], "wildboar.base.ExplainerMixin": [[2, 3, 1, "", "fit_explain"], [2, 3, 1, "", "plot"]], "wildboar.datasets": [[3, 2, 1, "", "Bundle"], [3, 2, 1, "", "JSONRepository"], [3, 2, 1, "", "NpBundle"], [3, 2, 1, "", "Repository"], [3, 1, 1, "", "clear_cache"], [3, 1, 1, "", "get_bundles"], [3, 1, 1, "", "get_repository"], [3, 1, 1, "", "install_repository"], [3, 1, 1, "", "list_bundles"], [3, 1, 1, "", "list_collections"], [3, 1, 1, "", "list_datasets"], [3, 1, 1, "", "list_repositories"], [3, 1, 1, "", "load_appliances_energy"], [3, 1, 1, "", "load_articulary_word_recognition"], [3, 1, 1, "", "load_basic_motions"], [3, 1, 1, "", "load_dataset"], [3, 1, 1, "", "load_datasets"], [3, 1, 1, "", "load_ering"], [3, 1, 1, "", "load_flood_modeling"], [3, 1, 1, "", "load_gun_point"], [3, 1, 1, "", "load_synthetic_control"], [3, 1, 1, "", "load_two_lead_ecg"], [4, 0, 0, "-", "outlier"], [5, 0, 0, "-", "preprocess"], [3, 1, 1, "", "refresh_repositories"], [3, 1, 1, "", "set_cache_dir"]], "wildboar.datasets.Bundle": [[3, 3, 1, "", "get_collection"], [3, 3, 1, "", "get_filename"], [3, 3, 1, "", "list"], [3, 3, 1, "", "load"]], "wildboar.datasets.JSONRepository": [[3, 4, 1, "", "download_url"], [3, 3, 1, "", "get_bundle"], [3, 3, 1, "", "get_bundles"], [3, 4, 1, "", "name"], [3, 3, 1, "", "refresh"], [3, 4, 1, "", "version"], [3, 4, 1, "", "wildboar_requires"]], "wildboar.datasets.NpBundle": [[3, 3, 1, "", "get_collection"], [3, 3, 1, "", "get_filename"], [3, 3, 1, "", "list"], [3, 3, 1, "", "load"]], "wildboar.datasets.Repository": [[3, 4, 1, "", "download_url"], [3, 3, 1, "", "get_bundle"], [3, 3, 1, "", "get_bundles"], [3, 4, 1, "", "name"], [3, 3, 1, "", "refresh"], [3, 4, 1, "", "version"], [3, 4, 1, "", "wildboar_requires"]], "wildboar.datasets.outlier": [[4, 1, 1, "", "density_outliers"], [4, 1, 1, "", "emmott_outliers"], [4, 1, 1, "", "kmeans_outliers"], [4, 1, 1, "", "majority_outliers"], [4, 1, 1, "", "minority_outliers"]], "wildboar.datasets.preprocess": [[5, 2, 1, "", "Interpolate"], [5, 2, 1, "", "MaxAbsScale"], [5, 2, 1, "", "MinMaxScale"], [5, 2, 1, "", "Standardize"], [5, 2, 1, "", "Truncate"], [5, 1, 1, "", "interpolate"], [5, 1, 1, "", "maxabs_scale"], [5, 1, 1, "", "minmax_scale"], [5, 1, 1, "", "named_preprocess"], [5, 1, 1, "", "standardize"], [5, 1, 1, "", "truncate"]], "wildboar.datasets.preprocess.Interpolate": [[5, 3, 1, "", "fit"], [5, 3, 1, "", "fit_transform"], [5, 3, 1, "", "get_metadata_routing"], [5, 3, 1, "", "get_params"], [5, 3, 1, "", "set_output"], [5, 3, 1, "", "set_params"], [5, 3, 1, "", "transform"]], "wildboar.datasets.preprocess.MaxAbsScale": [[5, 3, 1, "", "fit"], [5, 3, 1, "", "fit_transform"], [5, 3, 1, "", "get_metadata_routing"], [5, 3, 1, "", "get_params"], [5, 3, 1, "", "set_output"], [5, 3, 1, "", "set_params"], [5, 3, 1, "", "transform"]], "wildboar.datasets.preprocess.MinMaxScale": [[5, 3, 1, "", "fit"], [5, 3, 1, "", "fit_transform"], [5, 3, 1, "", "get_metadata_routing"], [5, 3, 1, "", "get_params"], [5, 3, 1, "", "set_output"], [5, 3, 1, "", "set_params"], [5, 3, 1, "", "transform"]], "wildboar.datasets.preprocess.Standardize": [[5, 3, 1, "", "fit"], [5, 3, 1, "", "fit_transform"], [5, 3, 1, "", "get_metadata_routing"], [5, 3, 1, "", "get_params"], [5, 3, 1, "", "set_output"], [5, 3, 1, "", "set_params"], [5, 3, 1, "", "transform"]], "wildboar.datasets.preprocess.Truncate": [[5, 3, 1, "", "fit"], [5, 3, 1, "", "fit_transform"], [5, 3, 1, "", "get_metadata_routing"], [5, 3, 1, "", "get_params"], [5, 3, 1, "", "set_output"], [5, 3, 1, "", "set_params"]], "wildboar.dimension_selection": [[6, 2, 1, "", "DistanceVarianceThreshold"], [6, 2, 1, "", "ECSSelector"], [6, 2, 1, "", "SelectDimensionPercentile"], [6, 2, 1, "", "SelectDimensionSignificance"], [6, 2, 1, "", "SelectDimensionTopK"], [6, 2, 1, "", "SequentialDimensionSelector"]], "wildboar.dimension_selection.DistanceVarianceThreshold": [[6, 3, 1, "", "fit"], [6, 3, 1, "", "fit_transform"], [6, 3, 1, "", "get_dimensions"], [6, 3, 1, "", "get_metadata_routing"], [6, 3, 1, "", "get_params"], [6, 3, 1, "", "inverse_transform"], [6, 3, 1, "", "set_output"], [6, 3, 1, "", "set_params"], [6, 3, 1, "", "transform"]], "wildboar.dimension_selection.ECSSelector": [[6, 3, 1, "", "fit"], [6, 3, 1, "", "fit_transform"], [6, 3, 1, "", "get_dimensions"], [6, 3, 1, "", "get_metadata_routing"], [6, 3, 1, "", "get_params"], [6, 3, 1, "", "inverse_transform"], [6, 3, 1, "", "set_output"], [6, 3, 1, "", "set_params"], [6, 3, 1, "", "transform"]], "wildboar.dimension_selection.SelectDimensionPercentile": [[6, 3, 1, "", "fit"], [6, 3, 1, "", "fit_transform"], [6, 3, 1, "", "get_dimensions"], [6, 3, 1, "", "get_metadata_routing"], [6, 3, 1, "", "get_params"], [6, 3, 1, "", "inverse_transform"], [6, 3, 1, "", "set_output"], [6, 3, 1, "", "set_params"], [6, 3, 1, "", "transform"]], "wildboar.dimension_selection.SelectDimensionSignificance": [[6, 3, 1, "", "fit"], [6, 3, 1, "", "fit_transform"], [6, 3, 1, "", "get_dimensions"], [6, 3, 1, "", "get_metadata_routing"], [6, 3, 1, "", "get_params"], [6, 3, 1, "", "inverse_transform"], [6, 3, 1, "", "set_output"], [6, 3, 1, "", "set_params"], [6, 3, 1, "", "transform"]], "wildboar.dimension_selection.SelectDimensionTopK": [[6, 3, 1, "", "fit"], [6, 3, 1, "", "fit_transform"], [6, 3, 1, "", "get_dimensions"], [6, 3, 1, "", "get_metadata_routing"], [6, 3, 1, "", "get_params"], [6, 3, 1, "", "inverse_transform"], [6, 3, 1, "", "set_output"], [6, 3, 1, "", "set_params"], [6, 3, 1, "", "transform"]], "wildboar.dimension_selection.SequentialDimensionSelector": [[6, 3, 1, "", "fit"], [6, 3, 1, "", "fit_transform"], [6, 3, 1, "", "get_dimensions"], [6, 3, 1, "", "get_metadata_routing"], [6, 3, 1, "", "get_params"], [6, 3, 1, "", "inverse_transform"], [6, 3, 1, "", "set_output"], [6, 3, 1, "", "set_params"], [6, 3, 1, "", "transform"]], "wildboar.distance": [[8, 2, 1, "", "KMeans"], [8, 2, 1, "", "KMedoids"], [8, 2, 1, "", "KNeighborsClassifier"], [8, 2, 1, "", "MDS"], [8, 1, 1, "", "argmin_distance"], [8, 1, 1, "", "argmin_subsequence_distance"], [8, 1, 1, "", "distance_profile"], [7, 0, 0, "-", "dtw"], [9, 0, 0, "-", "lb"], [8, 1, 1, "", "paired_distance"], [8, 1, 1, "", "paired_subsequence_distance"], [8, 1, 1, "", "paired_subsequence_match"], [8, 1, 1, "", "pairwise_distance"], [8, 1, 1, "", "pairwise_subsequence_distance"], [8, 1, 1, "", "subsequence_match"]], "wildboar.distance.KMeans": [[8, 3, 1, "", "fit"], [8, 3, 1, "", "fit_predict"], [8, 3, 1, "", "fit_transform"], [8, 3, 1, "", "get_metadata_routing"], [8, 3, 1, "", "get_params"], [8, 3, 1, "", "predict"], [8, 3, 1, "", "set_output"], [8, 3, 1, "", "set_params"], [8, 3, 1, "", "transform"]], "wildboar.distance.KMedoids": [[8, 3, 1, "", "fit"], [8, 3, 1, "", "fit_predict"], [8, 3, 1, "", "fit_transform"], [8, 3, 1, "", "get_metadata_routing"], [8, 3, 1, "", "get_params"], [8, 3, 1, "", "predict"], [8, 3, 1, "", "set_output"], [8, 3, 1, "", "set_params"], [8, 3, 1, "", "transform"]], "wildboar.distance.KNeighborsClassifier": [[8, 3, 1, "", "fit"], [8, 3, 1, "", "get_metadata_routing"], [8, 3, 1, "", "get_params"], [8, 3, 1, "", "predict"], [8, 3, 1, "", "predict_proba"], [8, 3, 1, "", "score"], [8, 3, 1, "", "set_params"]], "wildboar.distance.MDS": [[8, 3, 1, "", "get_metadata_routing"], [8, 3, 1, "", "get_params"], [8, 3, 1, "", "set_params"]], "wildboar.distance.dtw": [[7, 1, 1, "", "ddtw_distance"], [7, 1, 1, "", "dtw_alignment"], [7, 1, 1, "", "dtw_average"], [7, 1, 1, "", "dtw_distance"], [7, 1, 1, "", "dtw_envelop"], [7, 1, 1, "", "dtw_lb_keogh"], [7, 1, 1, "", "dtw_mapping"], [7, 1, 1, "", "jeong_weight"], [7, 1, 1, "", "wddtw_distance"], [7, 1, 1, "", "wdtw_alignment"], [7, 1, 1, "", "wdtw_distance"]], "wildboar.distance.lb": [[9, 2, 1, "", "DtwKeoghLowerBound"], [9, 2, 1, "", "DtwKimLowerBound"], [9, 2, 1, "", "PaaLowerBound"], [9, 2, 1, "", "SaxLowerBound"]], "wildboar.distance.lb.DtwKeoghLowerBound": [[9, 3, 1, "", "fit"], [9, 3, 1, "", "fit_transform"], [9, 3, 1, "", "get_metadata_routing"], [9, 3, 1, "", "get_params"], [9, 3, 1, "", "set_output"], [9, 3, 1, "", "set_params"], [9, 3, 1, "", "transform"]], "wildboar.distance.lb.DtwKimLowerBound": [[9, 3, 1, "", "fit"], [9, 3, 1, "", "fit_transform"], [9, 3, 1, "", "get_metadata_routing"], [9, 3, 1, "", "get_params"], [9, 3, 1, "", "set_output"], [9, 3, 1, "", "set_params"], [9, 3, 1, "", "transform"]], "wildboar.distance.lb.PaaLowerBound": [[9, 3, 1, "", "fit"], [9, 3, 1, "", "fit_transform"], [9, 3, 1, "", "get_metadata_routing"], [9, 3, 1, "", "get_params"], [9, 3, 1, "", "set_output"], [9, 3, 1, "", "set_params"], [9, 3, 1, "", "transform"]], "wildboar.distance.lb.SaxLowerBound": [[9, 3, 1, "", "fit"], [9, 3, 1, "", "fit_transform"], [9, 3, 1, "", "get_metadata_routing"], [9, 3, 1, "", "get_params"], [9, 3, 1, "", "set_output"], [9, 3, 1, "", "set_params"], [9, 3, 1, "", "transform"]], "wildboar.ensemble": [[10, 2, 1, "", "BaggingClassifier"], [10, 2, 1, "", "BaggingRegressor"], [10, 2, 1, "", "BaseBagging"], [10, 2, 1, "", "ElasticEnsembleClassifier"], [10, 2, 1, "", "ExtraShapeletTreesClassifier"], [10, 2, 1, "", "ExtraShapeletTreesRegressor"], [10, 2, 1, "", "IntervalForestClassifier"], [10, 2, 1, "", "IntervalForestRegressor"], [10, 2, 1, "", "IsolationShapeletForest"], [10, 2, 1, "", "PivotForestClassifier"], [10, 2, 1, "", "ProximityForestClassifier"], [10, 2, 1, "", "RocketForestClassifier"], [10, 2, 1, "", "RocketForestRegressor"], [10, 2, 1, "", "ShapeletForestClassifier"], [10, 2, 1, "", "ShapeletForestEmbedding"], [10, 2, 1, "", "ShapeletForestRegressor"]], "wildboar.ensemble.BaggingClassifier": [[10, 3, 1, "", "decision_function"], [10, 4, 1, "", "estimators_samples_"], [10, 3, 1, "", "fit"], [10, 3, 1, "", "get_metadata_routing"], [10, 3, 1, "", "get_params"], [10, 3, 1, "", "predict"], [10, 3, 1, "", "predict_log_proba"], [10, 3, 1, "", "predict_proba"], [10, 3, 1, "", "score"], [10, 3, 1, "", "set_params"]], "wildboar.ensemble.BaggingRegressor": [[10, 4, 1, "", "estimators_samples_"], [10, 3, 1, "", "fit"], [10, 3, 1, "", "get_metadata_routing"], [10, 3, 1, "", "get_params"], [10, 3, 1, "", "predict"], [10, 3, 1, "", "score"], [10, 3, 1, "", "set_params"]], "wildboar.ensemble.BaseBagging": [[10, 4, 1, "", "estimators_samples_"], [10, 3, 1, "", "fit"], [10, 3, 1, "", "get_metadata_routing"], [10, 3, 1, "", "get_params"], [10, 3, 1, "", "set_params"]], "wildboar.ensemble.ElasticEnsembleClassifier": [[10, 3, 1, "", "fit"], [10, 3, 1, "", "get_metadata_routing"], [10, 3, 1, "", "get_params"], [10, 3, 1, "", "predict"], [10, 3, 1, "", "predict_proba"], [10, 3, 1, "", "score"], [10, 3, 1, "", "set_params"]], "wildboar.ensemble.ExtraShapeletTreesClassifier": [[10, 3, 1, "", "decision_function"], [10, 4, 1, "", "estimators_samples_"], [10, 3, 1, "", "fit"], [10, 3, 1, "", "get_metadata_routing"], [10, 3, 1, "", "get_params"], [10, 3, 1, "", "predict"], [10, 3, 1, "", "predict_log_proba"], [10, 3, 1, "", "predict_proba"], [10, 3, 1, "", "score"], [10, 3, 1, "", "set_params"]], "wildboar.ensemble.ExtraShapeletTreesRegressor": [[10, 4, 1, "", "estimators_samples_"], [10, 3, 1, "", "fit"], [10, 3, 1, "", "get_metadata_routing"], [10, 3, 1, "", "get_params"], [10, 3, 1, "", "predict"], [10, 3, 1, "", "score"], [10, 3, 1, "", "set_params"]], "wildboar.ensemble.IntervalForestClassifier": [[10, 3, 1, "", "decision_function"], [10, 4, 1, "", "estimators_samples_"], [10, 3, 1, "", "fit"], [10, 3, 1, "", "get_metadata_routing"], [10, 3, 1, "", "get_params"], [10, 3, 1, "", "predict"], [10, 3, 1, "", "predict_log_proba"], [10, 3, 1, "", "predict_proba"], [10, 3, 1, "", "score"], [10, 3, 1, "", "set_params"]], "wildboar.ensemble.IntervalForestRegressor": [[10, 4, 1, "", "estimators_samples_"], [10, 3, 1, "", "fit"], [10, 3, 1, "", "get_metadata_routing"], [10, 3, 1, "", "get_params"], [10, 3, 1, "", "predict"], [10, 3, 1, "", "score"], [10, 3, 1, "", "set_params"]], "wildboar.ensemble.IsolationShapeletForest": [[10, 4, 1, "", "estimators_samples_"], [10, 3, 1, "", "fit"], [10, 3, 1, "", "fit_predict"], [10, 3, 1, "", "get_metadata_routing"], [10, 3, 1, "", "get_params"], [10, 3, 1, "", "set_params"]], "wildboar.ensemble.PivotForestClassifier": [[10, 3, 1, "", "decision_function"], [10, 4, 1, "", "estimators_samples_"], [10, 3, 1, "", "fit"], [10, 3, 1, "", "get_metadata_routing"], [10, 3, 1, "", "get_params"], [10, 3, 1, "", "predict"], [10, 3, 1, "", "predict_log_proba"], [10, 3, 1, "", "predict_proba"], [10, 3, 1, "", "score"], [10, 3, 1, "", "set_params"]], "wildboar.ensemble.ProximityForestClassifier": [[10, 3, 1, "", "decision_function"], [10, 4, 1, "", "estimators_samples_"], [10, 3, 1, "", "fit"], [10, 3, 1, "", "get_metadata_routing"], [10, 3, 1, "", "get_params"], [10, 3, 1, "", "predict"], [10, 3, 1, "", "predict_log_proba"], [10, 3, 1, "", "predict_proba"], [10, 3, 1, "", "score"], [10, 3, 1, "", "set_params"]], "wildboar.ensemble.RocketForestClassifier": [[10, 3, 1, "", "decision_function"], [10, 4, 1, "", "estimators_samples_"], [10, 3, 1, "", "fit"], [10, 3, 1, "", "get_metadata_routing"], [10, 3, 1, "", "get_params"], [10, 3, 1, "", "predict"], [10, 3, 1, "", "predict_log_proba"], [10, 3, 1, "", "predict_proba"], [10, 3, 1, "", "score"], [10, 3, 1, "", "set_params"]], "wildboar.ensemble.RocketForestRegressor": [[10, 4, 1, "", "estimators_samples_"], [10, 3, 1, "", "fit"], [10, 3, 1, "", "get_metadata_routing"], [10, 3, 1, "", "get_params"], [10, 3, 1, "", "predict"], [10, 3, 1, "", "score"], [10, 3, 1, "", "set_params"]], "wildboar.ensemble.ShapeletForestClassifier": [[10, 3, 1, "", "decision_function"], [10, 4, 1, "", "estimators_samples_"], [10, 3, 1, "", "fit"], [10, 3, 1, "", "get_metadata_routing"], [10, 3, 1, "", "get_params"], [10, 3, 1, "", "predict"], [10, 3, 1, "", "predict_log_proba"], [10, 3, 1, "", "predict_proba"], [10, 3, 1, "", "score"], [10, 3, 1, "", "set_params"]], "wildboar.ensemble.ShapeletForestEmbedding": [[10, 4, 1, "", "estimators_samples_"], [10, 3, 1, "", "fit"], [10, 3, 1, "", "get_metadata_routing"], [10, 3, 1, "", "get_params"], [10, 3, 1, "", "predict"], [10, 3, 1, "", "score"], [10, 3, 1, "", "set_params"]], "wildboar.ensemble.ShapeletForestRegressor": [[10, 4, 1, "", "estimators_samples_"], [10, 3, 1, "", "fit"], [10, 3, 1, "", "get_metadata_routing"], [10, 3, 1, "", "get_params"], [10, 3, 1, "", "predict"], [10, 3, 1, "", "score"], [10, 3, 1, "", "set_params"]], "wildboar.explain": [[12, 2, 1, "", "AmplitudeImportance"], [12, 2, 1, "", "FrequencyImportance"], [12, 2, 1, "", "IntervalImportance"], [12, 2, 1, "", "ShapeletImportance"], [11, 0, 0, "-", "counterfactual"], [12, 1, 1, "", "plot_importances"]], "wildboar.explain.AmplitudeImportance": [[12, 3, 1, "", "fit_explain"], [12, 3, 1, "", "get_metadata_routing"], [12, 3, 1, "", "get_params"], [12, 3, 1, "", "plot"], [12, 3, 1, "", "set_params"]], "wildboar.explain.FrequencyImportance": [[12, 3, 1, "", "fit_explain"], [12, 3, 1, "", "get_metadata_routing"], [12, 3, 1, "", "get_params"], [12, 3, 1, "", "plot"], [12, 3, 1, "", "set_params"]], "wildboar.explain.IntervalImportance": [[12, 3, 1, "", "fit_explain"], [12, 3, 1, "", "get_metadata_routing"], [12, 3, 1, "", "get_params"], [12, 3, 1, "", "plot"], [12, 3, 1, "", "set_params"]], "wildboar.explain.ShapeletImportance": [[12, 3, 1, "", "fit_explain"], [12, 3, 1, "", "get_metadata_routing"], [12, 3, 1, "", "get_params"], [12, 3, 1, "", "plot"], [12, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual": [[11, 2, 1, "", "KNeighborsCounterfactual"], [11, 2, 1, "", "NativeGuideCounterfactual"], [11, 2, 1, "", "PrototypeCounterfactual"], [11, 2, 1, "", "ShapeletForestCounterfactual"], [11, 1, 1, "", "counterfactuals"], [11, 1, 1, "", "proximity"]], "wildboar.explain.counterfactual.KNeighborsCounterfactual": [[11, 3, 1, "", "fit_explain"], [11, 3, 1, "", "get_metadata_routing"], [11, 3, 1, "", "get_params"], [11, 3, 1, "", "plot"], [11, 3, 1, "", "score"], [11, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual.NativeGuideCounterfactual": [[11, 3, 1, "", "fit_explain"], [11, 3, 1, "", "get_metadata_routing"], [11, 3, 1, "", "get_params"], [11, 3, 1, "", "plot"], [11, 3, 1, "", "score"], [11, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual.PrototypeCounterfactual": [[11, 3, 1, "", "fit_explain"], [11, 3, 1, "", "get_metadata_routing"], [11, 3, 1, "", "get_params"], [11, 3, 1, "", "plot"], [11, 3, 1, "", "score"], [11, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual.ShapeletForestCounterfactual": [[11, 3, 1, "", "fit_explain"], [11, 3, 1, "", "get_metadata_routing"], [11, 3, 1, "", "get_params"], [11, 3, 1, "", "plot"], [11, 3, 1, "", "score"], [11, 3, 1, "", "set_params"]], "wildboar.linear_model": [[14, 2, 1, "", "CastorClassifier"], [14, 2, 1, "", "CastorRegressor"], [14, 2, 1, "", "DilatedShapeletClassifier"], [14, 2, 1, "", "HydraClassifier"], [14, 2, 1, "", "RandomShapeletClassifier"], [14, 2, 1, "", "RandomShapeletRegressor"], [14, 2, 1, "", "RocketClassifier"], [14, 2, 1, "", "RocketRegressor"]], "wildboar.linear_model.CastorClassifier": [[14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.linear_model.CastorRegressor": [[14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.linear_model.DilatedShapeletClassifier": [[14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.linear_model.HydraClassifier": [[14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.linear_model.RandomShapeletClassifier": [[14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.linear_model.RandomShapeletRegressor": [[14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.linear_model.RocketClassifier": [[14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.linear_model.RocketRegressor": [[14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.metrics": [[15, 1, 1, "", "compactness_score"], [15, 1, 1, "", "plausability_score"], [15, 1, 1, "", "proximity_score"], [15, 1, 1, "", "redudancy_score"], [15, 1, 1, "", "relative_proximity_score"], [15, 1, 1, "", "silhouette_samples"], [15, 1, 1, "", "silhouette_score"], [15, 1, 1, "", "validity_score"]], "wildboar.model_selection": [[16, 2, 1, "", "RepeatedOutlierSplit"], [16, 1, 1, "", "outlier_train_test_split"]], "wildboar.model_selection.RepeatedOutlierSplit": [[16, 3, 1, "", "get_n_splits"], [16, 3, 1, "", "split"]], "wildboar.segment": [[17, 2, 1, "", "FlussSegmenter"]], "wildboar.segment.FlussSegmenter": [[17, 3, 1, "", "fit"], [17, 3, 1, "", "fit_transform"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "predict"], [17, 3, 1, "", "set_output"], [17, 3, 1, "", "set_params"], [17, 3, 1, "", "transform"]], "wildboar.transform": [[18, 2, 1, "", "CastorTransform"], [18, 2, 1, "", "DerivativeTransform"], [18, 2, 1, "", "DiffTransform"], [18, 2, 1, "", "DilatedShapeletTransform"], [18, 2, 1, "", "FeatureTransform"], [18, 2, 1, "", "FftTransform"], [18, 2, 1, "", "HydraTransform"], [18, 2, 1, "", "IntervalTransform"], [18, 2, 1, "", "MatrixProfileTransform"], [18, 2, 1, "", "PAA"], [18, 2, 1, "", "PivotTransform"], [18, 2, 1, "", "ProximityTransform"], [18, 2, 1, "", "QuantTransform"], [18, 2, 1, "", "RandomShapeletTransform"], [18, 2, 1, "", "RocketTransform"], [18, 2, 1, "", "SAX"], [18, 2, 1, "", "ShapeletTransform"], [18, 1, 1, "", "convolve"], [18, 1, 1, "", "piecewice_aggregate_approximation"], [18, 1, 1, "", "symbolic_aggregate_approximation"]], "wildboar.transform.CastorTransform": [[18, 3, 1, "", "fit"], [18, 3, 1, "", "fit_transform"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "set_output"], [18, 3, 1, "", "set_params"], [18, 3, 1, "", "transform"]], "wildboar.transform.DerivativeTransform": [[18, 3, 1, "", "fit_transform"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "set_output"], [18, 3, 1, "", "set_params"]], "wildboar.transform.DiffTransform": [[18, 3, 1, "", "fit_transform"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "set_output"], [18, 3, 1, "", "set_params"]], "wildboar.transform.DilatedShapeletTransform": [[18, 3, 1, "", "fit"], [18, 3, 1, "", "fit_transform"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "set_output"], [18, 3, 1, "", "set_params"], [18, 3, 1, "", "transform"]], "wildboar.transform.FeatureTransform": [[18, 3, 1, "", "fit"], [18, 3, 1, "", "fit_transform"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "set_output"], [18, 3, 1, "", "set_params"], [18, 3, 1, "", "transform"]], "wildboar.transform.FftTransform": [[18, 3, 1, "", "fit"], [18, 3, 1, "", "fit_transform"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "set_output"], [18, 3, 1, "", "set_params"], [18, 3, 1, "", "transform"]], "wildboar.transform.HydraTransform": [[18, 3, 1, "", "fit"], [18, 3, 1, "", "fit_transform"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "set_output"], [18, 3, 1, "", "set_params"], [18, 3, 1, "", "transform"]], "wildboar.transform.IntervalTransform": [[18, 3, 1, "", "fit"], [18, 3, 1, "", "fit_transform"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "set_output"], [18, 3, 1, "", "set_params"], [18, 3, 1, "", "transform"]], "wildboar.transform.MatrixProfileTransform": [[18, 3, 1, "", "fit"], [18, 3, 1, "", "fit_transform"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "set_output"], [18, 3, 1, "", "set_params"], [18, 3, 1, "", "transform"]], "wildboar.transform.PAA": [[18, 3, 1, "", "fit_transform"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "set_output"], [18, 3, 1, "", "set_params"]], "wildboar.transform.PivotTransform": [[18, 3, 1, "", "fit"], [18, 3, 1, "", "fit_transform"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "set_output"], [18, 3, 1, "", "set_params"], [18, 3, 1, "", "transform"]], "wildboar.transform.ProximityTransform": [[18, 3, 1, "", "fit_transform"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "set_output"], [18, 3, 1, "", "set_params"]], "wildboar.transform.QuantTransform": [[18, 3, 1, "", "fit"], [18, 3, 1, "", "fit_transform"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "set_output"], [18, 3, 1, "", "set_params"], [18, 3, 1, "", "transform"]], "wildboar.transform.RandomShapeletTransform": [[18, 3, 1, "", "fit"], [18, 3, 1, "", "fit_transform"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "set_output"], [18, 3, 1, "", "set_params"], [18, 3, 1, "", "transform"]], "wildboar.transform.RocketTransform": [[18, 3, 1, "", "fit"], [18, 3, 1, "", "fit_transform"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "set_output"], [18, 3, 1, "", "set_params"], [18, 3, 1, "", "transform"]], "wildboar.transform.SAX": [[18, 3, 1, "", "fit_transform"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "set_output"], [18, 3, 1, "", "set_params"]], "wildboar.transform.ShapeletTransform": [[18, 3, 1, "", "fit"], [18, 3, 1, "", "fit_transform"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "set_output"], [18, 3, 1, "", "set_params"], [18, 3, 1, "", "transform"]], "wildboar.tree": [[19, 2, 1, "", "ExtraShapeletTreeClassifier"], [19, 2, 1, "", "ExtraShapeletTreeRegressor"], [19, 2, 1, "", "IntervalTreeClassifier"], [19, 2, 1, "", "IntervalTreeRegressor"], [19, 2, 1, "", "PivotTreeClassifier"], [19, 2, 1, "", "ProximityTreeClassifier"], [19, 2, 1, "", "RocketTreeClassifier"], [19, 2, 1, "", "RocketTreeRegressor"], [19, 2, 1, "", "ShapeletTreeClassifier"], [19, 2, 1, "", "ShapeletTreeRegressor"], [19, 1, 1, "", "plot_tree"]], "wildboar.tree.ExtraShapeletTreeClassifier": [[19, 3, 1, "", "apply"], [19, 3, 1, "", "decision_path"], [19, 3, 1, "", "fit"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "predict"], [19, 3, 1, "", "predict_proba"], [19, 3, 1, "", "score"], [19, 3, 1, "", "set_params"]], "wildboar.tree.ExtraShapeletTreeRegressor": [[19, 3, 1, "", "apply"], [19, 3, 1, "", "decision_path"], [19, 3, 1, "", "fit"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "predict"], [19, 3, 1, "", "score"], [19, 3, 1, "", "set_params"]], "wildboar.tree.IntervalTreeClassifier": [[19, 3, 1, "", "apply"], [19, 3, 1, "", "decision_path"], [19, 3, 1, "", "fit"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "predict"], [19, 3, 1, "", "predict_proba"], [19, 3, 1, "", "score"], [19, 3, 1, "", "set_params"]], "wildboar.tree.IntervalTreeRegressor": [[19, 3, 1, "", "apply"], [19, 3, 1, "", "decision_path"], [19, 3, 1, "", "fit"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "predict"], [19, 3, 1, "", "score"], [19, 3, 1, "", "set_params"]], "wildboar.tree.PivotTreeClassifier": [[19, 3, 1, "", "apply"], [19, 3, 1, "", "decision_path"], [19, 3, 1, "", "fit"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "predict"], [19, 3, 1, "", "predict_proba"], [19, 3, 1, "", "score"], [19, 3, 1, "", "set_params"]], "wildboar.tree.ProximityTreeClassifier": [[19, 3, 1, "", "apply"], [19, 3, 1, "", "decision_path"], [19, 3, 1, "", "fit"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "predict"], [19, 3, 1, "", "predict_proba"], [19, 3, 1, "", "score"], [19, 3, 1, "", "set_params"]], "wildboar.tree.RocketTreeClassifier": [[19, 3, 1, "", "apply"], [19, 3, 1, "", "decision_path"], [19, 3, 1, "", "fit"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "predict"], [19, 3, 1, "", "predict_proba"], [19, 3, 1, "", "score"], [19, 3, 1, "", "set_params"]], "wildboar.tree.RocketTreeRegressor": [[19, 3, 1, "", "apply"], [19, 3, 1, "", "decision_path"], [19, 3, 1, "", "fit"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "predict"], [19, 3, 1, "", "score"], [19, 3, 1, "", "set_params"]], "wildboar.tree.ShapeletTreeClassifier": [[19, 3, 1, "", "apply"], [19, 3, 1, "", "decision_path"], [19, 3, 1, "", "fit"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "predict"], [19, 3, 1, "", "predict_proba"], [19, 3, 1, "", "score"], [19, 3, 1, "", "set_params"]], "wildboar.tree.ShapeletTreeRegressor": [[19, 3, 1, "", "apply"], [19, 3, 1, "", "decision_path"], [19, 3, 1, "", "fit"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "predict"], [19, 3, 1, "", "score"], [19, 3, 1, "", "set_params"]], "wildboar.utils": [[20, 1, 1, "", "check_X_y"], [20, 1, 1, "", "check_array"], [21, 0, 0, "-", "plot"], [22, 0, 0, "-", "variable_len"]], "wildboar.utils.plot": [[21, 1, 1, "", "plot_frequency_domain"], [21, 1, 1, "", "plot_time_domain"]], "wildboar.utils.variable_len": [[22, 1, 1, "", "get_variable_length"], [22, 1, 1, "", "is_end_of_series"], [22, 1, 1, "", "is_variable_length"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property"}, "terms": {"": [2, 4, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19, 23, 30, 31, 33, 34, 37, 39, 42, 43, 45], "0": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 42, 43, 44, 46], "00": [7, 18, 44], "00000000e": 18, "0001": 8, "00019": 34, "00021": 34, "00022": 34, "00028": 34, "00029": 34, "00030": 34, "00032": 34, "00035": 34, "00048": 34, "00052": 34, "00054": 34, "00056": 34, "00061": 34, "00064": 34, "00071": 34, "00074": 34, "00091": 34, "00095": 34, "00096": 34, "00097": 34, "00099": 34, "001": [8, 33], "00100": 34, "00101": 34, "00102": 34, "00103": 34, "00104": 34, "00106": 34, "00107": 34, "00120332": 8, "00136": 34, "00146": 34, "00153": 34, "00181": 34, "00182": 34, "00185": 34, "00189": 34, "00190": 34, "00194": 34, "00195": 34, "00216": 34, "00226": 34, "00278": 34, "00413": 34, "00425122e": 7, "00606825": 34, "0061231459189364": 39, "0061831": 31, "00701": 44, "00939": 44, "01": [6, 7, 18, 33, 44], "01036": [18, 44], "01881424": 8, "02": [7, 18, 30, 44], "020": 44, "023": 44, "02389872e": 7, "024": [18, 44], "02764482": 44, "03": [7, 44], "03208655": 44, "03608265e": 7, "03658537": 34, "04": 44, "0414979": 44, "04521294": 31, "04712544": 18, "05": [4, 6, 7, 10, 11, 14, 16, 18, 33, 42], "05018": [14, 18, 38], "05212617": 31, "06": 30, "06099416": 34, "06460666": 34, "06653283e": 7, "06851": 34, "06939656": 34, "07092": 34, "08": 15, "08536585": 34, "08588712e": 7, "08999765": 44, "09010828e": 7, "09056v1": 15, "09256769": 44, "09269015": 31, "09274984800003949": 34, "0961576": 8, "09710811": 34, "09711063": 31, "09756098": 34, "09806374": 34, "09954847e": 7, "0x7f262ce95d00": 26, "1": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 38, 39, 42, 43, 44, 46, 47], "10": [1, 6, 8, 9, 10, 12, 14, 18, 19, 21, 30, 33, 34, 38, 44, 47], "100": [6, 10, 11, 12, 18, 19, 21, 26, 30, 31, 33, 34, 39], "1000": [14, 18, 19], "10000": [14, 43, 44], "1007": [18, 44], "101": 34, "1024": 38, "10321": 34, "1053": 19, "1085": 19, "109": 34, "10973127": 34, "11": [8, 10, 14, 18, 34, 38], "111": 34, "11131": 34, "11177626": 34, "11248815e": 7, "11514381": 34, "115143810620726": 34, "11526939": 18, "1162": [3, 26], "11914265": 34, "12": [18, 24, 34], "120": 34, "12069088": 31, "12075424e": 44, "12195122": 34, "12209986": 31, "12372897": 44, "128": 38, "12877": 11, "12879240199993092": 34, "13": [10, 14, 18], "13076667": 34, "13211v2": 15, "13350353": 34, "13364922": 31, "13414634": 34, "1344171278001063": 39, "13489775": 34, "137": 33, "1374": 24, "13964118e": 7, "14": [8, 27, 30, 34], "14157": 34, "142": 37, "1425": 33, "1438": 33, "1454": [18, 38, 44], "146": 34, "147": 34, "14763103": 31, "1495": [18, 38], "15": 18, "150": [3, 5, 18, 26, 31], "1503": [14, 18, 38], "15083281": 8, "15122819": 31, "153": 37, "15611733": 34, "1568": 24, "16": [4, 30, 38, 42], "160": 34, "16256033": 31, "164": 34, "1671": [11, 15, 31], "16754772": 34, "16th": [1, 24], "17": [44, 48], "1700": [11, 15, 31], "17437783e": 7, "17725071": 34, "1779": 44, "1805": 44, "1821": [18, 37], "18266071": 44, "18507116": 34, "1852": [18, 37], "18777928": 34, "18811169": 31, "18th": 34, "193": 34, "19426882": 44, "19426882e": 44, "19633603e": 18, "1977": 33, "19807473e": 7, "1d": [8, 18, 20, 32, 34], "1dyg3rww_zpd": [24, 43], "1e": [7, 15], "2": [1, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 37, 38, 44, 46, 48], "20": [9, 19, 34, 37, 44], "200": [3, 5, 24, 26, 27, 43], "20000": [24, 43], "2002": 7, "2004": 33, "2005": 33, "2008": 33, "2009": 15, "20106232": 31, "2011": 7, "2012": 34, "2013": [4, 33, 37, 42], "2015": [10, 14, 18, 37, 38], "2016": [1, 19, 24], "2017": [1, 17], "2018": [11, 31], "2019": [10, 18, 19, 37, 47], "2020": [10, 11, 15, 18, 19, 31, 38, 44], "2021": [7, 11, 15, 38, 48], "2022": [14, 18, 38], "2023": [14, 18, 33, 38, 44], "2024": [18, 38, 44, 48], "2028058": 34, "20372777": 31, "204": 34, "207": 31, "208": 34, "20881199": 34, "21": [4, 42], "2101": 15, "21051": 34, "213": 34, "21476510e": 18, "2155": 24, "216": 31, "21688671": 34, "217": 34, "21757": 34, "21780536": 34, "22": [39, 44], "2231": 7, "2240": 7, "226": 34, "22602081": 44, "22602081e": 44, "23": [10, 14, 19, 44], "23060212": 34, "2356": 24, "2377": [18, 44], "239": 37, "23968406e": 7, "24": 18, "2402": [18, 44], "244": 34, "24551102": 34, "246": 34, "24606299e": 7, "24621125": 8, "24666667": 18, "24695077": 8, "24823344": 34, "25": [12, 19, 27, 33, 42], "25159669e": 7, "25302505": 31, "25302660e": 7, "25333333": 18, "254": 34, "255": 34, "25609756": 34, "25666948": 8, "26": [18, 27], "262": 34, "26442901e": 7, "26611524": 18, "26666667e": 18, "26677146": 34, "27": [34, 38], "270": 34, "27083874e": 7, "274": 34, "27419835": 34, "27442791e": 7, "276": 34, "27646127": 34, "277": 34, "27919601": 8, "28": [30, 34], "282": 34, "286": [3, 26], "28666866": 31, "288": 34, "28805337e": 7, "28841158": 18, "28th": 7, "29": [10, 37], "29468998": 34, "29476759": 31, "29583168e": 7, "2d": [20, 23, 32, 34], "3": [4, 5, 7, 8, 10, 11, 18, 19, 20, 22, 25, 27, 29, 30, 32, 33, 34, 37, 38, 39, 42, 44], "30": [8, 9, 19, 24, 33, 34, 37], "300": [6, 8, 23, 29, 34], "30000": [24, 43], "30073636": 8, "306": 33, "31": 33, "31570726e": 18, "31634668": 31, "318": 33, "31930140e": 7, "32": [11, 18, 26], "32272574": 31, "32666667": 18, "32964692": 31, "3299048": 34, "33": [18, 37], "33156061": 34, "33281894": 31, "33366128e": 7, "33595675e": 7, "33645889": 31, "33659": 34, "34": [18, 19, 34, 38, 44], "34083722": 34, "34687887e": 7, "34982908": 31, "35": 44, "35294735": 44, "35294735e": 44, "35333333": 18, "35671953e": 7, "35905618": 34, "35954194e": 7, "35954558": 34, "36": 31, "36613719": 31, "36929508": 44, "37": 44, "37925246": 31, "37941185": 31, "38": [18, 27, 44], "38342948e": 7, "38359833": 31, "38542271e": 44, "38897019": 34, "38965963": 34, "39192971": 44, "39410523e": 7, "3d": [20, 23, 32, 34], "4": [3, 4, 5, 6, 7, 8, 9, 10, 12, 17, 18, 19, 22, 24, 25, 31, 33, 34, 37, 38, 39, 42, 44, 48], "40": 34, "40259039e": 7, "40887": 34, "4096": 44, "41023092e": 7, "41066892": 31, "41709413": 18, "41850936": 31, "41892": 34, "41918778": 31, "41943788": 8, "42492836e": 7, "42761": 34, "42765": 34, "42778": 34, "42857143e": 18, "43": [26, 34], "43290016": 31, "43474": 34, "43553": 34, "43869163": 44, "43925941e": 7, "44": 7, "444": 44, "44590342e": 7, "45333333": 18, "4545415": 31, "45513015": 34, "45907116": 44, "46126151e": 44, "47": [11, 34], "470": [3, 26], "47311800e": 18, "47333333": 18, "47433305e": 7, "47560976": 34, "48196194": 44, "48441896e": 18, "48683192": 34, "48742855": 31, "48856368": 8, "4902": [24, 43], "49048": 34, "49142159": 34, "49453": 34, "4975822": 31, "49988": 34, "5": [4, 6, 7, 8, 10, 11, 12, 14, 15, 18, 19, 21, 24, 31, 33, 34, 38, 42, 44], "50": [6, 7, 26, 27, 31, 34, 39], "50000000e": 18, "50507001": 34, "50583639": 34, "50816474": 34, "50884094": 34, "51": 11, "510": 44, "51047206e": 18, "51158857": 34, "51301643": 31, "51333333": 18, "52170730e": 7, "5265": 43, "52666667": 18, "5286341": 44, "53269314e": 7, "5347352": 31, "53756324": 18, "53921955": 44, "54": [18, 34], "54666287e": 7, "54666667": 18, "55193242": 34, "5536877": 34, "55527": 34, "55538": 34, "55819192e": 7, "56": [3, 26], "56024904": 34, "56196": 34, "56287": 34, "56436416e": 7, "56698045": 34, "56701557e": 7, "56791544": 31, "5716536": 31, "57927975e": 44, "58025": 34, "5807386": 31, "58982": 34, "59627": 34, "59657389e": 7, "59756098": 34, "59786396": 34, "59799892": 31, "6": [6, 7, 8, 18, 23, 25, 33, 34, 37, 44], "60": [3, 26, 34], "600": [3, 26], "60000000e": 18, "60035454": 44, "60041068": 34, "60301954": 34, "60441308e": 7, "60658533": 34, "60777092e": 44, "60786006": 34, "60983434e": 7, "61275": 34, "61924171e": 7, "62": [11, 15, 31], "62554784": 34, "6364614": 31, "64": [14, 18, 26, 38, 44, 47], "64041732": 34, "64184026e": 7, "64275557": 31, "64445581": 34, "64634146": 34, "64988482": 44, "64988482e": 44, "65": [6, 29], "65083422": 34, "653": 38, "65346307": 8, "65634235": 18, "66": 18, "66077834": 31, "6614969": 44, "66240546": 31, "66371456": 34, "66394": 34, "664": 38, "66537309": 31, "668": 26, "67113": 34, "67511125": 44, "67630249": 18, "6790517": 34, "67955301": 44, "68666667": 18, "688": 26, "69": 34, "69898474": 44, "7": [7, 8, 10, 14, 18, 34, 38, 39], "70000000e": 18, "70155561": 8, "70210329e": 7, "70502518e": 18, "71049064": 44, "71210092": 18, "71408958e": 7, "71443248e": 7, "71687181e": 7, "719448": 44, "72118437e": 7, "72681005": 8, "72938203": 18, "73": 34, "73145568": 44, "73285": 34, "73293560e": 18, "73352049e": 7, "73408875": 34, "73646376": 44, "74405634": 31, "74926655": 31, "75": 42, "75114125": 34, "75219094": 8, "75595579": 8, "75622584": 34, "75645164": 34, "75967": 34, "76": 34, "76357782e": 7, "77": 39, "77475023e": 44, "77490053e": 7, "7757554": 31, "77697444e": 7, "78": 39, "78345146e": 7, "7870391": 31, "79102936": 34, "79202": 34, "79557304": 44, "79583152": 8, "79797679e": 44, "7lcgyel0y2nhtkr2fi0o": [24, 43], "8": [7, 8, 14, 18, 21, 24, 38, 44, 48], "80": [6, 31, 38], "80000000e": 18, "80524683e": 7, "80533684": 18, "81": 34, "81245725": 34, "81260641": 18, "8152728": 31, "81597243": 8, "82": [3, 26], "82203705": 18, "82372": 34, "8250243865539288": 39, "82518334e": 7, "82717462e": 7, "82912261": 18, "83": 39, "83139294": 8, "83210644": 34, "83231": 34, "8380654": 18, "84": [31, 44], "84227457": 34, "84775554": 44, "85": 34, "8533333333333334": 37, "85367621": 34, "85497117": 34, "85575661": 18, "85832342e": 7, "85972633": 34, "86093158": 31, "86477128": 44, "86658733": 34, "8674": 10, "86957415": 34, "87686": 34, "87747502": 44, "87851584": 31, "88": 34, "89": 39, "89974643e": 18, "9": [6, 7, 8, 14, 18, 28, 29, 38, 44], "90000000e": 18, "90476179": 31, "90873852e": 18, "90920635": 34, "91": 39, "9142979223080065": 39, "92": 29, "92207": 34, "93690730e": 7, "94": 39, "94631": 34, "9466666666666667": 37, "94724793": 18, "949": 19, "95": [39, 44], "954": 44, "95506": 34, "96": 31, "96041": 34, "96086309": 34, "96522188": 31, "9666666666666667": 37, "9733333333333334": 37, "97539989e": 7, "97686": 34, "979": 19, "98": 29, "98047216": 18, "98268": 34, "98282": 34, "98368": 34, "98654485e": 7, "9866666666666667": [10, 37], "990342405618964": 38, "99043671": 34, "9920983318700615": 38, "9933333333333333": 30, "99355168e": 7, "99489626": 34, "9991220368744512": 38, "99915956e": 7, "A": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 37, 38, 42, 43, 44, 48], "And": 29, "As": [18, 23, 26, 28, 33, 34, 44], "At": [6, 29, 37], "But": 37, "By": [4, 10, 12, 14, 18, 19, 20, 21, 23, 25, 28, 29, 34, 37, 38, 42, 43, 44, 48], "For": [4, 6, 8, 9, 10, 14, 18, 19, 23, 24, 26, 27, 28, 32, 33, 34, 37, 38, 39, 44, 46, 47], "If": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 24, 26, 27, 28, 34, 38, 39, 42, 44, 46, 48], "In": [1, 4, 7, 8, 10, 11, 14, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 42, 43, 44, 48], "It": [5, 23, 24, 30, 31, 37, 38, 43, 44, 45], "No": 44, "Not": [8, 10], "Of": [31, 44], "On": [33, 34, 44], "One": [14, 23, 24, 26, 27, 31, 39], "Or": 34, "That": 28, "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48], "Then": [23, 44], "There": 46, "These": [24, 26, 31, 33, 34, 38, 43], "To": [11, 19, 24, 26, 27, 28, 31, 32, 42, 44, 46, 48], "_": [5, 8, 27, 39], "__": [2, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19], "__init__": [5, 18], "_attr": 19, "_counterfactu": 11, "_elastic_": 33, "_euclidean": 34, "_metric": [8, 11, 14, 15, 17, 18], "_pairs_": 34, "_preprocess": 3, "_subsequence_metr": 8, "_summar": [10, 18, 19], "_test": 28, "_threshold_": 34, "_train": 28, "ab": [10, 19], "abandon": 34, "abl": 39, "abnorm": [31, 44], "about": [6, 8, 10, 11, 14, 15, 17, 18, 19, 20, 23, 34, 37], "abov": [6, 14, 18, 23, 27, 33, 37, 39], "absolut": [5, 15, 19, 27, 44], "abstract": 3, "accept": [10, 14, 18, 20, 23, 26, 27, 28, 33, 34, 44, 48], "access": [23, 46], "accommod": 44, "accompani": 24, "accomplish": [27, 34], "accord": [4, 8, 10, 14, 18, 19, 21, 28, 42], "accordingli": 43, "account": [30, 44], "accur": [14, 18, 30, 34, 36, 38, 44], "accuraci": [8, 10, 14, 15, 19, 29, 31, 37, 38, 39, 48], "achiev": [23, 30, 37, 44], "acm": [4, 33, 34, 42], "acquir": 23, "across": [8, 34, 44], "activ": [44, 46], "actual": 34, "ad": [3, 5, 6, 8, 9, 10, 11, 17, 18, 19, 29, 48], "add": [6, 10, 11, 19, 21, 29, 48], "addit": [5, 6, 8, 9, 17, 18, 23, 26, 32, 34, 44, 48], "addition": [26, 28, 39], "adjust": [19, 33, 38, 43, 44], "advanc": [26, 44], "advis": [34, 37], "after": [5, 39, 48], "again": 44, "aggreg": [11, 18, 37, 44], "agnost": [1, 11, 17], "ahm": [10, 19, 37], "akima": [5, 27], "akin": 38, "al": [1, 4, 7, 10, 17, 18, 19, 24, 31, 37, 38, 42, 44, 48], "alert": 48, "algorithm": [4, 6, 7, 8, 9, 11, 13, 24, 25, 27, 29, 31, 33, 44, 48], "align": [7, 12, 15], "all": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 33, 34, 37, 38, 39, 44, 46, 47, 48], "alloc": 37, "allow": [4, 18, 19, 20, 23, 24, 28, 34, 42, 43, 44], "allow_3d": 20, "allow_eo": 20, "allow_nd": 20, "along": [5, 12, 14, 27], "alongsid": 31, "alpha": [6, 10, 14, 19, 21, 48], "alphanumer": 28, "alreadi": [3, 26, 39, 46], "also": [3, 5, 15, 19, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 37, 38, 39, 42, 43, 44, 46, 48], "alter": [30, 31], "altern": [28, 31, 47], "although": 31, "alwai": [10, 11, 14, 16, 19, 33], "amerc": 33, "among": [4, 19, 34, 38], "amount": [8, 24], "amplitud": [12, 21], "amplitudeimport": 12, "an": [2, 4, 5, 6, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 42, 43, 44, 45, 48], "anaconda": 46, "analog": 38, "analysi": [24, 33, 37, 43, 44], "analyt": 24, "analyz": [43, 44], "angu": [18, 44], "angular": [33, 34], "ani": [3, 4, 5, 19, 28, 29, 31, 32, 33], "annot": [0, 12, 17, 19, 43, 48], "anomal": 16, "anomali": [4, 16, 24, 31, 42, 43, 44], "anomalies_train_s": [10, 16], "anoth": [8, 28, 31, 33, 34, 42], "anthoni": [10, 37], "antoin": [14, 18], "anytim": 24, "api": [5, 6, 8, 9, 10, 17, 18, 23, 25, 30, 45, 48], "appear": [10, 31], "appli": [3, 4, 5, 6, 8, 18, 19, 26, 39, 44], "appliancesenergi": 3, "applic": [24, 27, 31, 44], "approach": [11, 14, 18, 23, 24, 26, 29, 31, 38, 42, 44, 46], "appropri": [11, 32, 34], "approxim": [4, 9, 18, 34, 44], "apt": [46, 47], "ar": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 36, 37, 38, 39, 42, 43, 44, 46, 48], "arang": 27, "arbitrarili": [10, 14, 19], "arc": [1, 17], "arc_curv": 1, "architectur": 47, "archiv": [3, 44], "area": 43, "argmax": 27, "argmin": [24, 34], "argmin_dist": [8, 9, 34], "argmin_subsequence_dist": 8, "argpartit": 34, "argument": [2, 3, 8, 10, 11, 12, 14, 18, 19, 23, 28, 33, 34, 47, 48], "arithmet": 31, "armi": 19, "around": [1, 8, 15, 17], "arr": 32, "arrai": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 37, 39, 43, 44], "arrow": 19, "arrow_arg": 19, "arrowstyl": 19, "articularywordrecognit": 3, "artifici": [14, 18, 38], "arxiv": [14, 15, 18, 38], "asarrai": 32, "ascend": 43, "ascertain": 38, "asset": 26, "assign": [4, 8, 11, 23, 31, 37, 39, 42, 43, 44], "associ": [10, 14, 19], "assum": [18, 21, 25, 28, 31, 32, 44], "athitso": 33, "atol": 15, "attempt": 20, "attr": 39, "attribut": [3, 8, 10, 11, 12, 14, 17, 18, 19, 23, 26, 28, 37, 39, 44], "august": 34, "author": 11, "auto": [1, 6, 8, 10, 11, 14, 18, 19, 31], "automat": [5, 18, 19, 46], "auxiliari": 47, "avail": [4, 10, 27, 28, 30, 34, 37, 38, 39], "avareg": 15, "averag": [7, 10, 15, 31, 44], "avoid": [34, 46, 48], "ax": [2, 11, 12, 19, 21, 24, 27], "axi": [12, 19, 20, 27, 34], "b": [15, 31, 34, 37], "backward": [6, 29, 48], "bad": 23, "bag": 10, "baggingclassifi": 10, "baggingregressor": 10, "bagnal": [10, 37], "bake": [3, 23], "balanc": [10, 14, 19], "balanced_accuracy_scor": 10, "bar": 3, "bart": [10, 19, 37], "barycent": [7, 8], "base": [0, 3, 4, 5, 6, 7, 9, 10, 11, 14, 15, 17, 18, 19, 24, 28, 29, 33, 37, 46, 47, 48], "base_estim": 10, "baseattributetransform": 18, "basebag": 10, "basecounterfactu": 11, "baseestim": [2, 5, 18], "baselin": [37, 48], "basicmot": 3, "bat": 47, "batch": 11, "batch_siz": 11, "batista": 34, "bbox_arg": 19, "becaus": [10, 14, 19, 24], "beef": [3, 26, 28], "been": [6, 10, 18, 21, 28, 33], "befor": [4, 8, 14, 48], "begin": 44, "behavior": [6, 24, 31, 43, 44, 48], "behaviour": [8, 48], "being": [8, 11, 38, 43], "belong": [8, 23, 31, 43], "below": [6, 8, 14, 18, 28, 39, 48], "ben": 18, "benchmark": [4, 26, 31], "benefici": 44, "benjamin": [10, 19, 37], "benjamini": 6, "best": [6, 8, 10, 11, 14, 18, 19, 29, 34, 48], "better": [14, 15, 18, 24, 38, 48], "between": [1, 5, 6, 7, 8, 9, 10, 11, 15, 18, 19, 23, 24, 27, 29, 31, 33, 34, 39, 42, 43, 44, 48], "beyond": 24, "bia": [10, 14, 18], "bias_prob": [10, 14, 18, 19], "bin": [9, 12, 18, 21, 42, 46], "binari": [3, 4, 10, 31, 42, 46], "bit": [26, 47], "bonferroni": 6, "bool": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22], "boolean": [6, 7, 17, 22, 43], "bootstrap": 10, "bostr\u00f6m": 19, "both": [4, 7, 8, 9, 10, 14, 18, 20, 25, 27, 28, 30, 33, 34, 38, 39, 42, 43, 44, 48], "bound": [7, 8, 9, 10, 14, 16, 18, 19, 38, 48], "boundari": [17, 43], "boundri": 1, "box": 19, "boxplot": 12, "branch": [19, 37, 39], "break": [23, 43], "brew": 46, "broacast": 8, "broadcast": [8, 11, 34], "broadcast_to": 8, "broader": 44, "brute": 24, "build": [10, 19, 23, 30, 34, 39, 46], "buildtool": 47, "built": [39, 46], "bundl": [3, 26, 28, 42], "bundle_url": 28, "bypass": 19, "c": [1, 10, 20, 23, 24, 33, 37, 38, 47], "cach": [3, 26], "cache_dir": [3, 28], "calcul": [6, 8, 14, 15, 31, 33, 34, 38, 44], "call": [3, 8, 10, 14, 19, 28, 34, 37], "callabl": [3, 5, 6, 8, 11, 12, 14, 15, 17, 18, 19, 39], "campana": 34, "can": [3, 4, 5, 6, 10, 14, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48], "candid": [11, 15, 24], "cannot": 20, "canon": [18, 37], "captur": [15, 23, 44], "cardiac": 31, "carl": 18, "carri": 19, "case": [10, 11, 19, 33, 34], "castorclassifi": [14, 38], "castorregressor": 14, "castortransform": 18, "catch22": [18, 37, 39, 44], "categor": 30, "categori": [23, 33], "caus": 30, "ceavet": 46, "ceil": [1, 8, 19], "center": 8, "centroid": [8, 31], "certain": [30, 31, 34], "cf": [11, 30], "cf_pred": 31, "chain": 26, "cham": [11, 38], "chang": [1, 3, 7, 10, 11, 15, 17, 19, 25, 26, 28, 30, 31, 34, 37, 38, 43, 44], "charact": 28, "character": 38, "characterist": [18, 37, 43, 44], "charlott": [10, 19, 37], "cheaper": 14, "chebyshev": [33, 34], "check": [2, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19, 20, 27, 32, 39, 45], "check_arrai": 20, "check_input": 19, "check_x_i": 20, "chen": 33, "child": 19, "children": 19, "choos": [6, 29, 34, 39], "chosen": 39, "christel": [14, 18], "chronolog": 23, "chunk": 44, "ci": 34, "clasess_": 11, "class": [0, 4, 23, 28, 30, 31, 37, 39, 42, 43, 44, 45, 48], "class_label": [14, 19], "class_weight": [10, 14, 19, 39], "classes_": [8, 10, 11, 19, 31, 39], "classif": [4, 7, 8, 10, 11, 14, 15, 16, 18, 19, 23, 24, 26, 30, 31, 37, 38, 39, 42, 44], "classifi": [4, 8, 10, 11, 12, 14, 18, 19, 23, 29, 30, 31, 37, 38, 39, 44], "classnameprefixfeaturesoutmixin": [5, 18], "clear": 3, "clear_cach": 3, "clearer": 44, "clf": [6, 10, 11, 19, 23, 37, 38, 39], "clf_": 23, "clone": [23, 47], "close": [2, 11, 20, 31, 38], "closensess": [2, 11], "closer": [8, 15], "closest": [4, 8, 11, 15, 17, 24, 34, 43, 48], "cluster": [4, 8, 24, 31, 42, 43], "cluster_centers_": 8, "cluter": 4, "cmap": 21, "cmd": 47, "code": [10, 19, 27, 31, 34, 39, 48], "coeffici": [10, 14, 15, 19], "coffe": [3, 26, 28], "collect": [3, 11, 18, 23, 28, 30, 36, 38, 42, 44, 46], "color": 21, "colorbar": 12, "colormap": 21, "column": [10, 20, 24, 28, 32, 38, 39], "com": [24, 43, 47], "combin": [10, 18, 19, 44], "come": 30, "command": 47, "comment": [33, 34], "common": [26, 27, 32, 33, 34, 46], "commun": 23, "compact": 15, "compactness_scor": 15, "companion": 24, "compar": [9, 37, 44], "comparis": 26, "comparison": [3, 26], "compat": [9, 16, 18, 48], "compens": 44, "compet": [14, 18, 38, 44], "competit": 38, "compil": [46, 47], "complex": [30, 34, 37, 43, 44], "compon": [2, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19, 28, 34, 44], "components_": 12, "compos": 28, "compress": 44, "compris": [25, 31, 38], "comput": [1, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 24, 29, 30, 31, 33, 34, 39, 43, 44, 48], "computation": [19, 24], "concept": 45, "concern": 23, "concurr": 34, "condit": [18, 31], "confer": [1, 7, 11, 17, 24, 31, 33, 34, 38], "configur": [5, 6, 8, 9, 17, 18, 23, 31, 33, 34, 37, 38, 47], "conflict": 46, "conform": 26, "confus": [4, 42], "confusion_estim": 4, "conjunct": [3, 31], "consecut": [8, 44], "consequ": [34, 38], "consid": [4, 6, 8, 10, 15, 16, 19, 23, 37, 44, 48], "consider": 43, "consist": [8, 10, 11, 14, 18, 19, 34, 37, 38, 44], "consol": 47, "constant": [9, 10, 14, 19], "constraint": [4, 33], "construct": [4, 11, 15, 18, 19, 20, 25, 31, 37, 38, 39, 42, 44, 48], "contain": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19, 20, 22, 25, 28, 29, 31, 33, 34, 39, 44, 45, 48], "contamin": [10, 16], "context": [24, 25], "contigu": [3, 20, 23, 24, 39], "continu": [20, 23, 39, 44], "contrari": 16, "contrast": [27, 31, 44], "contribut": 7, "control": [6, 7, 10, 11, 12, 14, 18, 47, 48], "conveni": [8, 15, 23], "convent": [8, 10, 20, 23, 26, 37, 38], "converg": 8, "convers": [20, 38, 39], "convert": [20, 26, 38, 42, 44], "convolut": [10, 14, 18, 19], "convolv": [14, 18], "copi": [20, 34], "core": [8, 10, 14, 18, 34, 37], "correct": [6, 11, 15, 17, 36], "correctli": [8, 10, 14, 18, 19], "correspond": [8, 10, 14, 15, 19, 24, 31, 34, 37, 39, 43, 44], "correspondingli": 39, "cosin": [11, 33, 34], "cost": [7, 11, 17, 33, 34, 48], "could": [27, 31], "couldn": 48, "count": [14, 18, 38, 39, 43, 44], "counterfact": [2, 11], "counterfactu": [0, 2, 15, 23, 30, 48], "counterfactualmixin": 2, "counterfacut": 15, "counterpart": 34, "cpu": 34, "creat": [3, 4, 10, 19, 27, 28, 31, 34, 46, 47], "create_cache_dir": 3, "criteria": 39, "criterion": [10, 19, 39], "critic": 31, "cross": [6, 10, 14, 16, 29, 37], "crucial": [24, 30, 34], "crude": 27, "csr": 10, "csr_arrai": 17, "cubic": [5, 27], "cumul": 7, "current": [10, 11, 19, 26, 27, 28, 47, 48], "curv": [1, 17], "custom": [10, 18, 19, 37], "cv": [6, 14], "cycl": 44, "cython": [18, 34], "d": [11, 14, 15, 18, 26, 33, 34, 37, 38, 39], "da": [4, 33, 42], "dai": 44, "daili": 24, "daniel": [18, 44], "dark2": 21, "data": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 26, 27, 28, 30, 31, 33, 34, 37, 38, 42, 43, 44], "databas": 9, "datafram": [5, 6, 8, 9, 17, 18], "dataset": [0, 6, 7, 8, 9, 10, 11, 12, 14, 16, 18, 19, 20, 21, 24, 25, 27, 28, 30, 31, 34, 38, 42, 44, 48], "dataset_nam": 28, "dba": 7, "dbscan": 4, "ddtw": [10, 33, 34], "ddtw_distanc": 7, "deal": 27, "debian": [46, 47], "decai": 7, "decis": [10, 11, 19, 30, 31, 37, 44, 48], "decision_funct": [10, 15], "decision_path": [19, 39], "declar": [8, 28], "decomposit": 14, "decreas": [10, 19], "deep": [2, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19], "def": [5, 18, 31, 34], "default": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19, 20, 21, 23, 26, 27, 28, 33, 34, 37, 38, 42, 44, 48], "defin": [5, 6, 10, 14, 18, 19, 28, 31, 38, 39, 44], "degrad": 39, "degre": [11, 30], "delanei": [11, 15, 48], "deleg": [5, 18, 20, 48], "delet": 3, "delin": [31, 38], "demand": [26, 28], "dempsar": 44, "dempster": [14, 18, 38, 44, 48], "dempster_hydra": 18, "demystifi": 30, "deng": 37, "denot": [4, 16, 27, 33, 34, 39], "dens": 14, "densiti": 4, "densitii": 4, "density_outli": 4, "depend": [3, 4, 6, 8, 14, 18, 19, 23, 25, 34, 39, 44, 46, 47], "depmster": 44, "deprec": [10, 11, 18, 19, 37, 48], "depth": [10, 18, 19, 39, 44, 47], "deriv": [7, 15, 33, 44], "derivativetransform": [18, 44], "descret": 18, "describ": [4, 7, 10, 11, 17, 18, 24, 26, 28, 31, 34, 37, 38, 44, 45], "descript": [3, 4, 28, 42, 45], "design": [23, 24, 38], "desir": [2, 4, 11, 15, 18, 31, 34, 42], "desired_label": 31, "despit": 23, "detail": [1, 3, 4, 5, 8, 10, 18, 19, 30, 34, 44, 45], "detect": [4, 10, 24, 34, 43, 44], "determin": [8, 10, 11, 14, 15, 16, 18, 19, 28, 30, 37, 38, 39, 42, 44, 48], "dev": 47, "develop": [5, 11, 18, 47, 48], "deviat": [5, 7, 10, 14, 18, 24, 38, 42, 44], "di": 24, "diagnost": 8, "diagon": 7, "dialat": [18, 38], "dict": [2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 26, 28, 33, 37, 44], "dictat": 44, "dictionari": [3, 10, 11, 14, 18, 19, 28, 33, 38], "didn": 48, "dietterich": [4, 42], "differ": [8, 11, 14, 15, 16, 18, 19, 23, 24, 28, 31, 32, 33, 34, 43, 44, 48], "difficult": [4, 42], "difficulti": [4, 42], "difficulty_estim": 4, "difftransform": [18, 44], "digit": 4, "dilat": [8, 14, 18, 44], "dilatedshapeletclassifi": [14, 38], "dilatedshapelettransform": 18, "dim": [8, 19, 27, 34, 39], "dimens": [5, 6, 7, 8, 14, 15, 18, 19, 20, 23, 25, 26, 27, 32, 34, 38, 48], "dimension": [10, 44], "dimension_select": [0, 29, 48], "direct": [6, 27], "directli": [28, 44], "directori": [3, 28, 46], "disabl": [14, 20, 23, 38, 48], "discord": [1, 24], "discov": 24, "discoveri": [6, 10, 14, 18, 19, 34, 37, 38, 44], "discret": [12, 14, 18, 21, 42, 44, 48], "discriminatori": 38, "discuss": 34, "disk": [23, 28], "dispers": [4, 42], "displai": 39, "disregard": [10, 14, 19], "dissimilar": 8, "dissimilarity_param": 8, "dist": [8, 19, 34, 39], "distanc": [0, 1, 4, 6, 10, 11, 12, 14, 15, 17, 18, 19, 24, 29, 33, 37, 38, 39, 43, 48], "distance_profil": 8, "distancevariancethreshold": [6, 48], "distinct": [33, 43], "distinguish": [31, 33], "distribut": [4, 10, 14, 18, 19, 26, 34, 46, 47], "distutils_use_sdk": 47, "divers": 15, "divid": [43, 44], "divis": 48, "do": [10, 19, 33, 34, 47, 48], "document": [23, 30, 46, 48], "doe": [3, 4, 16, 18, 23, 33, 34], "doi": [18, 44], "domain": [1, 17, 21, 43, 44], "domin": 44, "don": [19, 46], "done": 24, "doubl": 38, "down": 43, "download": [3, 24, 26, 28, 31, 39, 43, 44, 47], "download_url": 3, "downsampl": 27, "downstream": 18, "draw": [6, 10, 14, 18], "drawback": 26, "drawn": [10, 39], "drive": [24, 43], "dst": 38, "dtw": [0, 6, 8, 9, 10, 11, 18, 19, 31, 33, 34], "dtw_align": 7, "dtw_averag": 7, "dtw_distanc": 7, "dtw_envelop": 7, "dtw_lb_keogh": 7, "dtw_map": 7, "dtwkeoghlowerbound": [8, 9, 34, 48], "dtwkimlowerbound": [9, 34, 48], "dtwtransform": 44, "dtype": [3, 8, 11, 20, 25, 26, 37], "dump": 23, "durat": 44, "dure": [8, 11], "dv": 6, "dyadic": [18, 48], "dynam": [7, 9, 10, 19, 31, 33, 34, 44, 48], "e": [4, 7, 8, 10, 11, 15, 19, 20, 23, 24, 25, 26, 27, 28, 30, 33, 34, 37, 38, 39, 42, 44, 46, 47, 48], "each": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 37, 38, 39, 43, 44], "earli": 34, "earlier": 23, "eas": 47, "easi": [4, 26], "easier": [43, 44], "easili": 44, "ec": 6, "ecg": 31, "ecg200": [8, 31], "ecsselector": [6, 48], "edit": [33, 47], "edit_penalti": 33, "edr": [33, 34], "effect": [4, 10, 18, 19, 20, 33, 37, 38, 43, 44, 48], "effici": [9, 19, 24, 34, 43, 44, 45, 48], "eigen": 14, "eigendecomposit": 14, "eigenvalu": 14, "either": [4, 7, 16, 18, 19, 23, 26, 28, 31, 34, 37, 39, 42], "elast": [10, 34], "elasticensembleclassifi": 10, "elboxclasssum": 6, "eleasticensembl": 33, "electrocardiogram": 31, "element": [3, 8, 10, 14, 18, 19, 22, 24, 34, 44], "elimin": 38, "elloumi": [14, 18, 38], "els": 39, "emb": 18, "embed": 18, "embedding_": 18, "embrac": 32, "emmott": 4, "emmott_outli": [4, 42], "emploi": [31, 34, 38, 44], "empti": [20, 38], "empty_lik": 31, "enabl": [24, 34, 38, 44, 48], "enable_metadata_rout": 10, "encapsul": [2, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19], "encompass": 34, "end": [12, 19, 20, 25, 27, 32, 43], "endpoint": 28, "enforc": 20, "engin": 33, "enhanc": [9, 38, 44, 48], "ensembl": [0, 23, 39, 42], "ensur": [3, 5, 11, 14, 16, 18, 20, 28, 30, 31, 38, 44], "ensure_2d": 20, "ensure_min_dim": 20, "ensure_min_sampl": 20, "ensure_min_timestep": 20, "ensure_ts_arrai": 20, "entir": [39, 44], "entiti": 43, "entri": 26, "entropi": [10, 19], "enumer": [27, 46], "envelop": 7, "environ": [46, 47], "eo": [20, 22, 25, 27, 32], "ep": [4, 8], "epoch": 7, "epsilon": [11, 33], "equal": [8, 10, 18, 19, 25, 26, 30, 33, 42, 44, 48], "equal_nan": 43, "equi": 12, "equip": 34, "equival": [7, 34, 37, 44], "equvival": 19, "er": 3, "erp": [18, 33, 34], "error": [4, 6, 10, 20, 24, 48], "especi": 44, "essenti": [23, 30, 31, 44, 47], "estim": [2, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 23, 26, 31, 32, 33, 34, 36, 42, 48], "estimator_": 11, "estimators_samples_": 10, "et": [1, 4, 7, 10, 17, 18, 19, 24, 31, 37, 38, 42, 44, 48], "etc": 24, "euclidean": [4, 6, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 24, 31, 33, 34, 38, 48], "evalu": [6, 10, 11, 15, 19, 23, 26, 34, 44], "even": [18, 23, 24], "event": 24, "everi": [8, 18, 19, 20, 34, 44, 48], "evid": 34, "exact": [1, 7, 8, 10, 12, 14, 17, 18, 19, 34], "exactli": [11, 26, 32], "examin": 34, "exampl": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 28, 30, 31, 33, 34, 38, 39], "example1": 28, "exce": [11, 39], "excel": 37, "except": [10, 14, 19, 28, 42], "exception": [18, 38, 44], "exclud": [1, 8, 17, 18], "exclus": [1, 8, 17, 18, 31], "execut": 11, "exemplifi": [24, 28], "exhibit": 44, "exist": [3, 16, 23, 26, 33, 48], "exp": [7, 10, 19], "expand": [10, 19, 38], "expect": [10, 14, 18, 19, 23, 27, 31, 42], "experi": 26, "experiment": 23, "expertis": 43, "explain": [0, 2, 15, 23, 30, 31, 44, 48], "explainer_": 11, "explainermixin": 2, "explan": [2, 11, 12, 15, 30], "explanatori": 26, "explor": 44, "exponenti": 44, "export": [24, 43], "expos": 43, "express": [1, 4, 10, 15, 17, 18, 19, 26, 28, 44], "ext": 3, "extens": [3, 28, 44], "extra": [2, 3, 11, 12, 19, 28, 34], "extract": [19, 37], "extraordinari": 24, "extrashapelettreeclassifi": [19, 39], "extrashapelettreeregressor": [19, 39], "extrashapelettreesclassifi": 10, "extrashapelettreesregressor": 10, "extrem": [10, 24, 34], "extrins": [3, 23], "f": [3, 4, 10, 11, 14, 18, 19, 20, 23, 27, 30, 33, 38, 39, 42, 44], "f_classif": 6, "facil": 4, "facilit": 31, "factual": 15, "fail": [4, 11], "failur": 20, "fall": [10, 23, 33], "fallback": 28, "fals": [1, 3, 6, 7, 8, 10, 11, 12, 14, 15, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 38], "famili": 6, "familiar": 45, "far": 34, "farther": 4, "fashion": 39, "fast": [8, 9, 14, 17, 18, 33, 38, 44], "faster": 34, "fastest": 46, "fdr": 6, "featur": [10, 14, 18, 19, 24, 26, 27, 29, 30, 37, 38, 39, 47, 48], "featuretransform": [18, 44], "fern": [4, 42], "fetch": [10, 47], "few": [4, 15, 29, 46], "fewer": [4, 15], "ffttransform": [18, 48], "field": 38, "fig": [24, 27], "figsiz": 24, "figur": 27, "file": [3, 28, 47], "filenam": 3, "fill_valu": [5, 18], "filter": [3, 10, 14, 18, 23, 29, 38, 44], "final": [4, 8, 10, 30], "find": [1, 8, 24, 26, 34, 47, 48], "find_counterfactu": 31, "finit": 20, "first": [7, 8, 10, 14, 18, 19, 20, 24, 28, 30, 31, 32, 34, 37, 39, 42, 43, 44, 47, 48], "fit": [2, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 23, 26, 30, 31, 34, 37, 38, 43, 44], "fit_explain": [2, 11, 12], "fit_intercept": 14, "fit_param": [5, 6, 8, 9, 10, 17, 18], "fit_predict": [8, 10], "fit_transform": [5, 6, 8, 9, 17, 18, 44], "five": 31, "fix": [10, 18, 19, 37, 48], "flag": 14, "flexibl": 34, "flip": 31, "float": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 33, 37, 44, 48], "float32": [11, 37], "floodmodeling1": [3, 23], "floor": 18, "fluctuat": 44, "fluss": 17, "flusssegment": [17, 43], "focu": [23, 42, 44], "focus": 44, "fold": 16, "folder": 46, "follow": [5, 10, 14, 18, 19, 23, 26, 27, 28, 33, 34, 37, 39, 42, 47], "font": 19, "fontsiz": 19, "footprint": 10, "forc": [3, 14, 20, 24, 26], "force_all_finit": 20, "forecast": [23, 24, 43], "forest": [4, 10, 11, 19, 23], "form": [2, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19, 23, 29], "format": [3, 5, 6, 8, 9, 17, 18, 28, 38, 39], "former": 31, "formul": 37, "forthcom": 38, "fortran": 20, "forward": [6, 29], "found": 8, "four": [39, 42, 44, 48], "fourier": [18, 44, 48], "fourth": 44, "fpr": 6, "frac": [10, 14, 19], "fraction": [1, 4, 6, 7, 10, 11, 12, 15, 16, 17, 18, 19, 42, 44, 48], "framework": 23, "fran\u00e7oi": [10, 18, 19, 37, 44], "freqenc": 21, "frequenc": [10, 19, 21, 44], "frequencyimport": 12, "frequent": 24, "from": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 42, 44, 46], "fulcher": [18, 37], "full": [5, 8, 15, 18, 23, 26, 34, 37, 43, 44], "func": 28, "function": [0, 6, 10, 23, 24, 26, 27, 28, 29, 31, 33, 34, 37, 39, 43, 44, 48], "further": [43, 44], "furthermor": [38, 44], "futur": [18, 26, 48], "fwe": 6, "fwer": 6, "g": [4, 7, 8, 11, 14, 18, 23, 26, 27, 30, 33, 34, 37, 38, 39, 42, 44, 46, 47], "gain": [34, 44], "gap": [10, 19, 33, 48], "gcv_mode": 14, "gener": [3, 4, 6, 7, 8, 10, 11, 12, 14, 15, 16, 18, 19, 23, 24, 26, 31, 33, 34, 38, 42, 44], "geoffrei": [10, 18, 19, 33, 37, 44], "get": [2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19, 23, 27, 37, 43, 45], "get_bundl": 3, "get_collect": 3, "get_dimens": [6, 29], "get_feature_names_out": [5, 18], "get_filenam": 3, "get_metadata_rout": [2, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19], "get_n_split": 16, "get_param": [2, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19], "get_repositori": 3, "get_variable_length": 22, "gharghabi": [1, 17], "gil": 18, "gini": [10, 19], "gioni": [11, 15, 31], "git": 47, "github": [34, 47], "give": [10, 12, 14, 18, 19, 37], "given": [1, 4, 5, 7, 8, 9, 10, 12, 14, 18, 19, 32, 34, 36, 37, 39], "global": [3, 11, 15, 18, 28, 30, 31, 39], "gnu": [28, 46, 47], "goal": [23, 30, 31, 36, 43], "goe": 39, "goethal": [10, 19, 37], "good": [8, 11, 15, 42], "googl": [24, 43], "grabocka": [14, 18, 38], "gradcam": 11, "granular": 44, "greater": [26, 29, 39], "greatest": 19, "greedili": [6, 29, 48], "green": [11, 15], "grid": [10, 14, 18, 19, 37], "group": [14, 16, 18, 38, 44], "grow": 11, "gt": 33, "guarante": [4, 23], "guid": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 38, 45, 48], "guillaum": [14, 18, 38], "gunpoint": [3, 18, 19, 26, 27, 28, 42], "h": [18, 19, 37], "ha": [4, 8, 10, 15, 18, 19, 20, 21, 24, 25, 28, 29, 31, 33, 34, 37, 38, 39, 44, 48], "had": [44, 48], "half": [6, 14, 34], "halv": 34, "handl": [3, 26, 43], "hard": 28, "hardest": [4, 42], "harsh": [8, 10, 14, 19], "hash": [24, 28], "have": [2, 5, 6, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 31, 32, 33, 38, 39, 43, 44, 46, 48], "haystack": 8, "heart": [31, 44], "heartbeat": 31, "help": [5, 18, 24, 31, 43, 44], "here": [28, 30, 31, 34, 37, 38, 44, 46], "herrmann": 33, "hidden": 44, "hierarch": 44, "high": [10, 44], "higher": 8, "highest": [6, 10, 44, 48], "highli": 37, "highlight": [31, 43, 44], "hirschberg": 33, "hochberg": 6, "hold": [23, 33], "homebrew": 46, "homogen": 43, "hope": 26, "how": [2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 23, 30, 31, 38, 48], "howev": [25, 26, 28, 34, 38, 43], "http": [18, 24, 28, 43, 44, 47], "human": [3, 30], "hydra": [14, 18], "hydraclassifi": [14, 18], "hydratransform": 18, "hyper": 48, "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 42, 43, 44, 46, 47, 48], "icdm": [1, 11, 24, 31], "id": [24, 39, 43], "identifi": [1, 10, 14, 18, 19, 20, 23, 24, 25, 28, 31, 34, 43, 44], "idx": 34, "ieee": [1, 11, 24, 31, 33], "ieee754": 25, "ignor": [1, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 25], "ignore_i": 18, "imag": 34, "immers": 8, "impact": 15, "implement": [7, 8, 9, 10, 11, 12, 15, 18, 23, 24, 27, 28, 29, 31, 33, 34, 37, 38, 39, 42, 44, 48], "implic": 8, "implicit": 18, "import": [3, 5, 6, 7, 8, 9, 10, 11, 12, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 38, 39, 42, 43, 44, 48], "importance_": 11, "importances_": [12, 30], "improv": [24, 26, 34, 48], "impur": [10, 19, 39, 48], "impurity_equality_toler": [10, 19, 48], "incic": 15, "includ": [1, 4, 5, 8, 11, 13, 20, 23, 24, 25, 26, 34, 37, 38, 44], "inclus": 33, "incorpor": [31, 38], "incorrect": 8, "increas": [6, 10, 19, 34, 38, 39, 48], "increasingli": 44, "increment": 38, "independ": 19, "independeth": 10, "index": [1, 6, 7, 8, 10, 12, 17, 18, 19, 24, 25, 32, 34, 38, 39, 43], "indic": [3, 6, 7, 8, 10, 11, 14, 15, 19, 22, 24, 31, 32, 38, 39, 43], "indici": [1, 8, 16], "individu": [15, 27, 43, 44], "indptr": 39, "induc": 44, "ineffect": 9, "inequ": [33, 39], "inf": [4, 20], "infer": 11, "infinit": 20, "influenc": [7, 10, 14, 19, 30], "influenti": [30, 38], "inform": [2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 23, 24, 31, 37, 38, 44], "init": [7, 8], "initi": [7, 8, 19, 28, 31, 39, 44], "inlier": [4, 10, 16, 42], "input": [2, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 30, 31, 32, 34, 38, 44], "input_nam": 20, "insert": [6, 16, 38], "insight": [24, 30, 44], "inspect": [19, 44], "inspir": 29, "instal": [3, 26, 27, 42, 45, 47], "install_repositori": [3, 28], "instanc": [2, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 28, 30, 31, 33, 38, 44], "instanti": 33, "instead": [6, 7, 8, 10, 14, 16, 19, 23, 29, 34, 44, 48], "int": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 26, 34, 42], "int64": [8, 34, 43], "integ": [6, 8, 10, 14, 18, 34, 42, 44], "integr": [13, 28], "intellig": [14, 18, 33, 38], "intend": 14, "intens": 19, "interact": 31, "intercept": 14, "interdimension": 34, "interest": 34, "interfac": [23, 28], "intern": [1, 7, 10, 11, 17, 19, 24, 31, 33, 34, 38], "interoper": 23, "interpol": [5, 27, 48], "interpret": [11, 15, 18, 39], "interv": [4, 9, 10, 11, 12, 15, 18, 19, 23, 24, 30, 38, 42, 48], "interval_length": 44, "intervalforestclassifi": [10, 37], "intervalforestregressor": 10, "intervalimport": [11, 12, 23, 30], "intervaltransform": [4, 18, 42, 44, 48], "intervaltreeclassifi": 19, "intervaltreeregressor": 19, "introduc": [5, 6, 8, 9, 10, 17, 18, 19, 24, 37, 44, 48], "introduct": 45, "intuit": 33, "invalid": 8, "invers": [10, 19, 31], "inverse_transform": 6, "involv": [23, 24, 30, 34], "irrespect": 23, "irrevers": [11, 31], "is_counterfactu": 2, "is_end_of_seri": [22, 25, 27, 32], "is_explain": 2, "is_variable_length": 22, "isak": 11, "isaksamsten": 47, "isnan": [25, 32], "isol": [10, 47], "isolationshapeletforest": 10, "issu": [46, 48], "iter": [6, 8, 11, 14, 16, 26, 29, 38], "its": [5, 10, 18, 19, 20, 21, 24, 26, 33, 39, 43, 44, 46], "itself": [6, 24, 33], "j": [9, 11, 15, 31, 34, 38, 39], "jacm": 33, "jag": 34, "jason": [10, 37], "jeong": 7, "jeong_weight": 7, "jitter": 21, "job": [6, 8, 10, 11, 14, 17, 18], "join": [1, 18, 19, 24], "jone": [18, 37], "josif": [14, 18], "journal": 33, "json": 3, "jsonrepositori": [3, 28], "juli": [18, 44], "june": [24, 38], "just": [10, 25, 30, 47], "k": [4, 6, 8, 10, 11, 12, 18, 19, 30, 31, 34, 37, 42, 44, 48], "karlsson": [11, 15, 19, 31], "kb": 26, "kean": [11, 15], "keep": [3, 10, 14, 19, 48], "keep_last_vers": 3, "kei": [3, 8, 10, 11, 14, 15, 17, 18, 19, 28, 33], "keogh": [7, 34], "kept": 20, "kernel": [4, 6, 10, 14, 18, 19, 38, 42, 44], "kernel_s": [10, 14, 18, 19], "kernel_scal": 12, "kind": [9, 24, 48], "kmean": 8, "kmeans_outli": 4, "kmedoid": 8, "knaut": [18, 37], "kneighborclassifi": 8, "kneighborsclassifi": [6, 8, 10, 11, 31], "kneighborscounterfactu": [11, 31], "knife": 19, "know": 19, "knowledg": [10, 11, 14, 15, 18, 19, 31, 33, 34, 37, 38, 44], "known": [8, 11], "kwarg": [2, 3, 8, 10, 11, 12], "l": [33, 38], "label": [2, 3, 4, 6, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 31, 36, 43, 44], "labels_": [8, 17], "labl": 4, "lachlan": [10, 19, 37], "lambda": 33, "laptop": 34, "lar": [14, 18], "larg": [7, 19, 24, 26, 33, 37, 38, 43, 44], "large_multiclass": 26, "large_multivari": 26, "larger": [6, 10, 15, 19, 21, 23, 32, 33], "largest": [6, 8], "last": [3, 23, 27, 28, 34], "latest": [3, 46, 47], "latter": [2, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19, 31, 34], "layout": 20, "lb": [0, 8, 34, 48], "lb_keogh": [7, 9, 34], "lbkeogh": [8, 9], "lbpaa": 9, "lbsax": 9, "lcss": [33, 34], "le": 34, "lead": [10, 31, 38], "leaf": [10, 19, 39], "leaf_id": 39, "learn": [5, 6, 7, 13, 18, 20, 29, 32, 44, 45, 48], "learning_r": 7, "least": [5, 12, 20], "leav": [10, 14, 19, 37], "led": 31, "lee": 38, "left": [9, 39, 44], "leftmost": 39, "legend": 21, "len": [4, 5, 8, 12, 18], "lenght": 22, "length": [8, 10, 14, 17, 18, 19, 20, 22, 27, 32, 33, 38, 44], "less": [8, 10, 19, 23, 26, 27, 34, 39], "letter": 28, "level": [1, 8, 11, 17, 34, 38, 39, 44, 48], "lib": 8, "librari": 13, "librarycach": 28, "like": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 32], "likelihood": 38, "limit": [26, 38], "limits_": 34, "line": [10, 19, 21, 37, 47], "linear": [5, 14, 27, 38], "linear_model": [0, 23, 30, 38, 48], "linewidth": 21, "linux": [28, 46, 47], "list": [1, 3, 8, 10, 11, 12, 14, 15, 17, 18, 19, 20, 26, 27, 28, 34, 37, 39, 42, 44], "list_bundl": [3, 28], "list_collect": 3, "list_dataset": [3, 28], "list_repositori": [3, 28], "load": [3, 24, 28, 31, 44], "load_appliances_energi": [3, 26], "load_articulary_word_recognit": [3, 26], "load_basic_mot": [3, 6, 8], "load_dataset": [3, 8, 18, 19, 23, 26, 27, 28, 31, 44, 48], "load_er": [3, 6, 26], "load_flood_model": [3, 26], "load_gun_point": [3, 5, 9, 10, 11, 18, 19, 21, 26, 30, 42], "load_gunpoint": 18, "load_synthetic_control": [3, 10, 23, 26], "load_two_lead_ecg": [3, 7, 10, 16, 18, 23, 26, 34, 38], "loadtxt": [24, 43], "local": [11, 15, 31], "localappdata": 28, "localoutlierfactor": 15, "locat": [4, 24, 28, 34, 46], "lock": [18, 39], "log": [10, 18, 19], "log2": [9, 10, 12, 14, 15, 18, 19], "logic": 23, "logist": [4, 42], "logisticregress": 23, "long": [6, 28], "longer": [24, 27], "longest": 33, "loos": 33, "loss": 27, "low": [6, 17, 29, 39, 44], "lower": [4, 7, 8, 9, 10, 14, 15, 18, 19, 21, 38, 48], "lower_bound": [8, 9, 34], "lowest": [6, 7, 8, 34, 44], "lp": 33, "lt": 33, "lubba": [18, 37], "luca": [10, 19, 37], "m": [1, 7, 11, 15, 18, 24, 33, 34, 37, 38, 46], "m2": 34, "m_sampl": 15, "m_timestep": [7, 8, 18], "macbook": 34, "machin": [13, 23, 33, 44, 45], "maco": [28, 46, 47], "made": 30, "magnitud": 34, "mai": [4, 10, 14, 19, 34, 43, 44, 48], "main": [1, 23, 26, 45], "major": [4, 7], "majority_outli": [4, 42], "make": [20, 30, 31, 33, 44], "make_pipelin": [18, 23, 29], "make_union": 18, "makima": [5, 27], "manag": 33, "mandatori": [10, 14, 18, 19], "manhattan": [11, 33, 34, 38], "mani": [8, 10, 20, 24, 27, 43, 44], "manifold": 8, "manner": [24, 44], "map": [2, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19, 36], "mappabl": 12, "marker": 27, "marriag": 33, "marteau": 33, "martin": [14, 18], "mask": 6, "mass": [8, 33, 34], "match": [1, 8, 24, 28, 31, 33, 34, 44, 48], "math": [1, 8], "mathcal": 34, "matplotlib": [21, 24, 27, 43], "matric": [10, 38], "matrix": [1, 7, 10, 11, 14, 17, 18, 19, 23, 24, 34, 43, 48], "matrix_profil": [1, 24, 48], "matrixprofil": [17, 18], "matrixprofiletransform": 18, "matthieu": 33, "max": [5, 7, 19, 33, 34], "max_": 33, "max_c": [19, 33], "max_depth": [10, 19, 39], "max_dist": [1, 24], "max_ep": 4, "max_epoch": 7, "max_g": 18, "max_it": [8, 11], "max_match": 8, "max_motif": [1, 24], "max_neighbor": 1, "max_path": 11, "max_r": [10, 14, 18, 19, 33], "max_sampl": 10, "max_shapelet_s": [10, 11, 12, 14, 18, 19, 38], "max_siz": [10, 14, 18, 19, 44], "max_stabl": 7, "maxabs_scal": [5, 27, 48], "maxabsscal": [5, 27, 48], "maxim": [4, 10, 14, 18, 19, 38, 39], "maximum": [1, 5, 7, 8, 9, 10, 11, 12, 14, 16, 18, 19, 21, 24, 27, 32, 34, 44], "md": 8, "mean": [3, 4, 5, 6, 7, 8, 10, 11, 14, 15, 18, 19, 23, 27, 30, 31, 33, 34, 37, 38, 39, 44, 48], "mean_var_slop": [10, 18, 19, 44], "measu": 8, "measur": [4, 8, 10, 14, 15, 18, 19, 24, 33, 34, 37], "mechan": [2, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19], "median": 6, "medium": 44, "medoid": [8, 11, 31], "medoid_indices_": 8, "member": 10, "memori": [3, 10, 20, 23, 34, 48], "mention": 37, "merg": [3, 19, 28, 33], "merge_train_test": [3, 10, 11, 23, 26, 28, 30, 38], "messag": [8, 20, 48], "met": 31, "meta": 10, "metadata": [2, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19], "metadatarequest": [2, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19], "method": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 23, 24, 27, 30, 31, 37, 38, 39, 43, 44, 45], "method_arg": 11, "metric": [0, 4, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19, 31, 37, 38, 39], "metric_factori": [10, 19], "metric_param": [6, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 33, 34], "metric_sampl": [10, 18, 19], "microsoft": 47, "middl": 44, "might": [20, 24, 31, 44], "millisecond": 34, "min": [3, 5, 7, 8, 18, 19, 34], "min_": 33, "min_c": [19, 33], "min_dist": 7, "min_g": 18, "min_impurity_decreas": [10, 19], "min_neighbor": 1, "min_r": [10, 14, 18, 19, 33], "min_sampl": 4, "min_samples_leaf": [10, 19], "min_samples_split": [10, 19], "min_shapelet_s": [10, 11, 12, 14, 18, 19, 38], "min_siz": [10, 14, 18, 19, 44], "mine": [1, 10, 11, 14, 17, 18, 19, 24, 31, 34, 37, 38, 44], "miniconda": 46, "minim": [7, 14, 18, 26, 30, 34, 38, 44], "minimalist": [18, 44], "minimum": [1, 3, 5, 7, 8, 10, 12, 14, 18, 19, 20, 24, 28, 31, 33, 38, 44], "minkowski": [31, 33, 34], "minmax": 27, "minmax_scal": [5, 18, 26, 27, 48], "minmaxscal": [5, 27, 48], "minmum": [7, 19], "minor": [4, 48], "minority_outli": [4, 42], "minumum": 8, "mirror": 34, "miscellan": 48, "miss": [3, 5, 8, 25, 27, 32, 48], "mix": 4, "mixin": [2, 5, 12, 18], "mm": 7, "mode": [14, 47], "model": [4, 5, 6, 10, 11, 14, 16, 19, 30, 31, 37, 39, 42, 44], "model_select": [0, 10, 23, 31, 44], "modifi": [31, 38], "modul": [7, 8, 11, 23, 27, 29, 31, 42, 48], "momentum": 44, "month": 44, "monthli": 24, "more": [1, 3, 4, 6, 8, 10, 11, 12, 14, 15, 17, 18, 19, 20, 23, 24, 26, 28, 30, 33, 34, 37, 38, 39, 42, 43, 44], "moreov": 33, "most": [11, 18, 24, 25, 29, 30, 31, 32, 34, 38, 42, 44, 46, 48], "motestrain": 44, "motif": 1, "motif_dist": 1, "motif_indic": 24, "motif_indici": 1, "move": [19, 33], "mp": [1, 24], "mpi": [1, 24], "mse": [10, 19], "msm": [19, 33, 34], "much": [7, 15, 48], "mueen": 34, "mult": 48, "multi": [8, 10, 14, 18, 19, 20, 26, 29, 42], "multi_output": 20, "multiclass": [4, 42], "multidimension": 8, "multioutput": [10, 14, 19], "multioutputregressor": [10, 14, 19], "multipl": [4, 8, 10, 12, 14, 18, 19, 23, 25, 27, 28, 30, 33, 34, 38, 42, 43, 44], "multitud": 34, "multivarait": 8, "multivaret": 25, "multivari": [3, 8, 11, 14, 15, 18, 23, 25, 26, 27, 32, 38], "must": [1, 4, 5, 7, 11, 12, 15, 28, 33, 42, 46], "my": 34, "mytransform": [5, 18], "n": [7, 23, 34, 37, 38, 39, 42, 44], "n_alpha": 14, "n_bin": [9, 12, 15, 18], "n_class": [4, 8, 10, 19], "n_classes_": 19, "n_cluster": [4, 8], "n_compon": 8, "n_counterfactu": 15, "n_dim": [5, 6, 8, 10, 14, 15, 16, 18, 19, 20, 23, 25, 26, 27, 32, 34, 38], "n_dimens": [18, 20], "n_estim": 10, "n_featur": [5, 6, 8, 9, 10, 14, 17, 18, 19], "n_features_new": [5, 6, 8, 9, 17, 18], "n_group": [14, 18, 38, 44], "n_init": 8, "n_inlier": [4, 16], "n_interv": [9, 10, 12, 15, 18, 19, 44], "n_iter_": 8, "n_job": [6, 8, 10, 11, 14, 17, 18, 34, 37], "n_kernel": [10, 14, 18, 19, 44], "n_label": [26, 39], "n_match": 8, "n_nativ": 15, "n_neighbor": [8, 10, 11], "n_node": 19, "n_node_sampl": [19, 39], "n_outlier": [4, 16, 42], "n_output": [5, 6, 8, 9, 10, 14, 17, 18, 19], "n_pivot": [10, 18, 19], "n_prototyp": 11, "n_queri": 9, "n_repeat": 12, "n_sampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 32, 34], "n_samples_fit": [10, 14, 19], "n_segment": [1, 17, 43], "n_selected_dim": 6, "n_shapelet": [10, 12, 14, 18, 19, 30, 38], "n_shortest": 5, "n_split": 16, "n_subsequ": [8, 34], "n_timestep": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 32, 34, 37, 38], "n_timetep": 15, "n_training_sampl": 3, "na": 20, "naiv": 34, "name": [2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19, 20, 23, 26, 27, 28, 33, 34, 44], "named_preprocess": 5, "nan": [5, 20, 25, 32], "nativ": [11, 15, 18, 48], "nativeguidecounterfactu": [11, 30, 48], "natur": 31, "nayyar": [10, 19, 37], "nd": 44, "ndarrai": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 22, 23, 27], "ndim": [8, 20, 23], "ne": 33, "nearest": [8, 11, 24, 37, 43], "necessit": 43, "need": [30, 31, 33, 34, 44, 47, 48], "needl": 8, "neg": [6, 10, 14, 19, 48], "neighbor": [8, 10, 11, 24, 31, 37, 43], "neighbour": 1, "neill": [10, 19, 37], "neither": 20, "nest": [2, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19], "net": 19, "networkx": [4, 42], "never": [10, 19, 20, 33, 34, 44], "new": [8, 10, 14, 16, 18, 23, 27, 31, 38, 39, 45, 47], "newer": 23, "newli": 3, "next": [30, 31, 39, 43], "nfc": 11, "ng": 33, "ngc": 11, "nick": 18, "nn": 31, "node": [10, 14, 18, 19, 37, 39], "node_count": [19, 39], "node_id": 39, "node_ind": 39, "node_index": 39, "node_label": 19, "nois": 44, "nomin": 23, "non": [8, 10, 15, 18, 19, 20, 24, 34, 37, 38, 48], "non_elast": 10, "none": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 28, 33, 38, 39, 48], "nonmetr": 8, "nonzero": [19, 43], "norm": [8, 24, 33], "normal": [5, 9, 10, 12, 14, 16, 18, 19, 24, 27, 31, 33, 34, 38, 44, 48], "normal_class": 16, "normalize_prob": [10, 14, 18, 19, 38], "normalized_euclidean": [11, 15, 33, 34], "normalized_stress": 8, "notabl": [34, 38], "notat": 33, "note": [4, 5, 7, 8, 10, 11, 14, 15, 16, 18, 19, 27, 33, 34, 43, 44], "noth": 20, "novel": 24, "novemb": 31, "now": [31, 48], "np": [3, 4, 5, 7, 8, 10, 11, 12, 15, 18, 19, 20, 22, 24, 25, 27, 31, 34, 43], "npbundl": 3, "npy": 28, "npz": 28, "nrow": [24, 27], "nu": 33, "num_": 33, "num_c": 19, "num_r": [10, 14, 18, 19], "number": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 29, 32, 34, 37, 38, 39, 43, 44], "numer": [11, 13, 20, 23, 34, 44], "numpi": [3, 5, 6, 8, 10, 12, 14, 18, 19, 23, 24, 25, 27, 28, 32, 34, 43, 48], "nupi": 25, "o": [7, 10, 19, 34, 37], "obei": 33, "object": [2, 4, 5, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 23, 26, 33, 34], "observ": [24, 34, 39, 44], "obtain": 39, "occur": 24, "occurr": [8, 38, 44], "odd": 38, "off": [3, 23, 48], "offer": [26, 30, 44], "offici": 46, "offlin": 28, "offset": 10, "offset_": 10, "often": [23, 24, 29, 30, 38, 43], "older": 23, "omitaomu": 7, "onc": 43, "one": [10, 12, 14, 18, 19, 23, 25, 26, 28, 31, 33, 34, 37, 38, 39, 43, 44], "ones": 10, "onetoonefeaturemixin": [5, 18], "onli": [3, 6, 7, 8, 9, 10, 11, 12, 18, 19, 20, 23, 26, 27, 28, 29, 33, 34, 37, 38, 44, 47, 48], "onlin": [1, 17], "oob_scor": 10, "opac": 21, "oper": [23, 26, 27, 28, 46, 47], "oppos": 42, "opt": 23, "optic": 4, "optim": [7, 10, 26, 34, 37, 39, 47], "option": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 28, 33, 34, 42, 46, 47], "order": [8, 10, 14, 15, 18, 19, 20, 21, 23, 24, 25, 31, 34, 43, 44, 48], "org": [18, 28, 44], "oria": 33, "origin": [3, 10, 11, 12, 14, 15, 18, 20, 23, 24, 27, 31, 37, 44], "other": [4, 8, 11, 16, 19, 23, 24, 26, 28, 34, 37, 39, 42], "otherwis": [4, 5, 6, 8, 10, 11, 14, 15, 18, 20], "our": 27, "out": [7, 10, 14, 23, 29, 37, 45], "outcom": [8, 31], "outlier": [0, 10, 15, 16, 28], "outlier_train_test_split": [10, 16], "output": [5, 6, 8, 9, 10, 17, 18, 20, 23, 30, 34, 39], "output_s": [8, 18], "outsid": 46, "over": [10, 12, 14, 15, 18, 19, 23, 24, 30, 33, 37, 44], "overal": 34, "overhead": 9, "overlai": 43, "overlap": [10, 15, 18, 19, 24, 37, 38, 44], "overview": 30, "own": [11, 18, 43], "p": [6, 10, 11, 15, 19, 31, 33, 34, 37, 48], "paa": [9, 18, 44], "paalowerbound": [9, 34, 48], "packag": [4, 42, 46, 47], "pad": [8, 10, 14, 18, 44], "padding_prob": [10, 14, 18, 19], "pair": [1, 3, 6, 8, 10, 14, 15, 18, 19, 24, 48], "paired_dist": [8, 34], "paired_matrix_profil": 48, "paired_subsequence_dist": [8, 34], "paired_subsequence_match": 8, "pairwis": [6, 8, 29, 48], "pairwise_dist": [8, 33, 34], "pairwise_sd_ful": 34, "pairwise_subsequence_dist": [8, 33, 34, 39], "pam": 8, "panda": [5, 6, 8, 9, 17, 18], "papapetr": [11, 15, 19, 31], "paper": 37, "paralel": 10, "parallel": [6, 8, 10, 11, 14, 17, 18, 39], "param": [2, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19], "paramet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 31, 33, 34, 37, 38, 42, 43, 44, 45, 48], "parameter": [10, 19, 33], "parameter_nam": 33, "part": [3, 11, 26, 27, 28, 30, 31, 32, 34, 44], "particular": [23, 31], "particularli": [24, 44], "partit": [3, 8, 19, 23, 39, 44], "partitions_": 11, "pass": [8, 10, 20, 34, 37, 39, 42], "path": [7, 11, 19, 28, 31, 39, 47], "paths_": 11, "pattern": [7, 14, 18, 24, 30, 33, 34, 38, 42, 44], "pca": 44, "pchip": [5, 27], "pd": 20, "peicewis": 18, "pelleti": [10, 19, 37], "penal": 7, "penalti": [7, 8, 33], "pend": 3, "per": [4, 11, 12, 14, 18, 19, 37, 39, 44, 48], "percent": [6, 38, 44], "percentil": [4, 6, 10, 14, 18, 42], "perf_count": 34, "perform": [1, 6, 8, 9, 10, 14, 15, 17, 18, 20, 24, 26, 27, 29, 34, 38, 39, 44], "perhap": 42, "period": 44, "permut": 12, "petitjean": [10, 18, 19, 37, 38, 44], "phase": 33, "philip": 18, "pick": 14, "pickl": 23, "piec": 43, "piecewice_aggregate_approxim": 18, "piecewis": 44, "pip": [42, 46, 47], "pipelin": [2, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19, 23, 27, 44], "pivot": [4, 10, 18, 19, 37], "pivot_sampl": [10, 19], "pivotforestclassifi": 10, "pivottransform": 18, "pivottreeclassifi": 19, "plai": 30, "platform": 46, "plausability_scor": 15, "plausabl": 15, "plausibl": 15, "pleas": [2, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19], "plot": [0, 2, 11, 12, 19, 23, 24, 27, 30, 31, 44, 48], "plot_frequency_domain": 21, "plot_import": 12, "plot_time_domain": [21, 24], "plot_tre": [19, 39, 48], "plt": [24, 27, 30, 43], "point": [4, 7, 8, 11, 17, 19, 23, 24, 26, 28, 30, 31, 33, 42, 43, 44], "polar": [5, 6, 8, 9, 17, 18], "poor": 39, "portion": 24, "posit": [6, 8, 10, 11, 12, 14, 17, 18, 25, 33, 34, 44], "possibl": [2, 5, 6, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 34, 36, 37, 44, 46], "possibli": [10, 18, 19, 37], "potenti": [43, 44], "power": [24, 44], "pp": [4, 11, 19, 31, 34, 37, 38, 42], "practic": 23, "precomput": [7, 10, 14, 19], "pred": 39, "predefin": [24, 27, 30, 44], "predict": [6, 8, 10, 11, 14, 15, 17, 19, 24, 29, 30, 31, 37, 39, 43, 44], "predict_log_proba": 10, "predict_proba": [4, 8, 10, 19, 37], "prefer": 23, "preprint": [14, 18, 38], "preprocess": [0, 3, 12, 14, 18, 23, 26, 27, 48], "preprocessor": [5, 27], "present": [8, 10, 28, 31, 39], "preserv": [3, 20, 23], "previou": [10, 27, 44], "previous": [23, 26, 31, 36, 43, 48], "price": 24, "primari": [24, 31, 42, 43], "princip": [38, 44], "print": [3, 8, 11, 23, 26, 39], "probabl": [2, 4, 8, 10, 11, 12, 14, 18, 19], "problem": [23, 24, 33, 42], "procedur": [4, 6], "proceed": [1, 4, 17, 33, 34, 42], "process": [24, 30, 34, 43, 44, 47], "processor": [10, 18, 34, 37, 47], "produc": [32, 36, 44], "profil": [1, 8, 17, 18, 19, 24, 43, 48], "profile_s": 1, "program": 47, "progress": 3, "project": [18, 47], "promis": 18, "proper": 23, "properli": 43, "properti": [3, 10, 39, 43], "proport": [10, 18, 19], "propos": [31, 48], "prototyp": 6, "prototypecounterfactu": 11, "prototypesampl": 11, "provid": [5, 7, 11, 23, 24, 27, 28, 30, 31, 33, 39, 43, 44, 46], "proxim": [10, 11, 15, 19], "proximity_scor": 15, "proximityforestclassifi": [10, 33, 37], "proximitytransform": 18, "proximitytreeclassifi": 19, "pseudo": [7, 11], "psudo": 16, "publish": [11, 38, 42], "pull": 47, "pure": [10, 19], "purpos": [23, 31, 34, 39, 44], "pylab": [24, 43], "pypi": 46, "pyplot": 27, "python": [23, 26, 28, 33, 34, 45, 46, 47, 48], "python3": [46, 47], "q": 34, "quant": [18, 44], "quantil": [18, 42, 44, 48], "quantiz": [4, 42], "quanttransform": [18, 44, 48], "queri": [9, 34], "question": 24, "r": [6, 7, 8, 9, 10, 11, 14, 18, 19, 33, 34, 37, 47], "r2_score": [10, 14, 19], "rainfal": 24, "rais": [4, 20, 48], "rakthanmanon": 34, "random": [4, 6, 7, 8, 10, 11, 12, 14, 15, 16, 18, 19, 23, 31, 37, 39, 48], "random_st": [4, 6, 7, 8, 10, 11, 12, 14, 15, 16, 18, 19, 30, 31, 38, 44], "randomforestclassifi": 42, "randomli": [8, 10, 18, 19, 37, 39, 44], "randomshapeletclassifi": [14, 30, 38], "randomshapeletregressor": 14, "randomshapelettransform": [18, 48], "randomst": [4, 6, 7, 8, 10, 11, 12, 14, 15, 16, 18, 19], "rang": [4, 5, 10, 14, 18, 19, 27, 33, 34, 38, 42], "rank": 32, "rate": [6, 7, 44], "rather": [38, 44], "ravel": 20, "ravel_1d": 20, "raw": [8, 18], "rbf": [4, 42], "re": [3, 8, 10, 26], "reach": [19, 39], "read": [3, 6, 8, 10, 11, 14, 15, 17, 18, 19, 23, 24, 34, 37], "readabl": 3, "real": [4, 10, 25, 33, 42], "reason": [11, 23], "reban": [11, 15, 31], "recal": 24, "recent": 38, "recept": 38, "recognit": [7, 14, 18, 33, 38], "recommend": [11, 38, 46], "recomput": 24, "record": [31, 39, 44], "recur": 24, "recurs": 44, "reduc": [6, 9, 10, 18, 26, 27, 29, 44], "redud": 15, "redudancy_scor": 15, "redund": 15, "reevalu": 23, "refer": [1, 4, 7, 10, 11, 14, 15, 17, 18, 19, 30, 34, 39, 43, 45], "reflect": 34, "refresh": [3, 28, 48], "refresh_repositori": [3, 28, 48], "regardless": 44, "regim": [1, 43], "region": [1, 11, 17, 23, 43, 44], "regress": [3, 4, 10, 14, 19, 23, 26, 39, 42], "regressor": [10, 12, 14, 19, 29, 37, 38], "regular": 28, "reject": 20, "rel": [8, 15, 24, 34], "relat": 33, "relative_proximity_scor": 15, "releas": [18, 39], "reliabl": [4, 23, 30], "relianc": 23, "remain": 29, "remot": 28, "remov": [6, 10, 11, 19, 28, 29, 37, 44, 48], "renam": [10, 11, 18, 48], "repeat": [12, 16, 24], "repeatedli": [16, 23, 24, 26], "repeatedoutliersplit": 16, "repetit": 24, "replac": [10, 11, 15, 28, 46, 47], "replic": 11, "repo": 28, "report": [20, 34], "repositori": [3, 23, 26, 27, 48], "repr": 23, "repres": [10, 24, 25, 31, 32, 33, 39, 43, 44], "represent": [10, 18, 19, 23, 38, 39, 42, 44], "reproduc": 8, "request": [3, 4, 24, 28, 34, 42, 47], "requir": [3, 4, 7, 8, 10, 11, 14, 18, 19, 20, 28, 31, 34, 42, 43, 44, 47, 48], "resampl": [10, 12, 14, 18], "research": 11, "resembl": 38, "reset": [3, 28], "reshap": [8, 34, 43], "residu": [10, 14, 19], "resort": 10, "respect": [8, 26, 28, 31, 37], "respons": 23, "rest": 24, "result": [5, 8, 10, 11, 14, 16, 18, 19, 20, 22, 27, 29, 31, 33, 34, 37, 38, 39, 42, 44], "retain": [6, 44, 48], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 31, 32, 34, 42, 43, 44], "return_arc_curv": 1, "return_cost": 7, "return_count": 43, "return_dist": [1, 8], "return_extra": 3, "return_index": [7, 8, 24, 34, 43], "reus": [10, 23, 27, 31], "revers": [6, 11, 31, 48], "rewritten": 27, "ridg": 44, "ridgeclassifiercv": 38, "right": [9, 39, 44], "robust": [23, 33], "rocket": [10, 14, 18, 23, 29], "rocketclassifi": 14, "rocketforestclassifi": 10, "rocketforestregressor": 10, "rocketregressor": 14, "rockettransform": [18, 23], "rockettreeclassifi": 19, "rockettreeregressor": 19, "root": [3, 12, 14, 18, 19, 39], "roughli": 34, "rout": [2, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19], "row": [20, 32, 38, 39], "rsf": 31, "rule": [6, 39], "run": [8, 10, 11, 14, 18, 26, 47], "runger": 37, "runtim": 7, "s10618": [18, 44], "sai": 33, "same": [7, 8, 10, 11, 12, 15, 18, 19, 23, 27, 28, 31, 33, 34, 39, 43, 44, 48], "sampl": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 31, 32, 34, 37, 38, 39, 42, 43, 44, 48], "sample_id": 39, "sample_s": [10, 15, 18, 19, 37, 44, 48], "sample_spac": 21, "sample_weight": [7, 8, 10, 14, 15, 19, 39], "sampler": [14, 18], "sampling_param": [10, 14, 18, 19], "samsten": [11, 38], "sarab": 18, "satisfi": [4, 33], "save": 28, "savez": 28, "sax": [9, 12, 15, 18, 44, 48], "saxlowerbound": [9, 34, 48], "saxtransform": 44, "scalabl": [10, 19, 24, 37], "scalar": [8, 34], "scalarmapp": 12, "scale": [4, 5, 8, 10, 14, 18, 27, 33, 42, 44, 48], "scaled_dtw": [19, 33, 34], "scaled_euclidean": [10, 19, 33, 34, 39], "scaled_manhattan": 38, "scaler": 44, "scatter": 27, "schmidt": [14, 18, 38, 44], "schultz": [18, 37], "scienc": [11, 37], "scikit": [5, 13, 18, 20, 23, 29, 32, 44, 48], "scipi": [5, 27, 48], "scope": 46, "score": [2, 4, 6, 8, 10, 11, 12, 14, 15, 19, 23, 29, 30, 37, 38, 42, 48], "score_func": 6, "scorer": [12, 14], "screen": 23, "scrimp": 24, "sd": 6, "sdp": 6, "sdt": 6, "seamlessli": [13, 23], "search": [8, 9, 19, 24, 33], "season": 44, "second": [7, 10, 14, 18, 19, 25, 28, 34, 43, 44], "section": [1, 3, 12, 37, 38, 42, 43], "secur": 23, "see": [1, 3, 4, 5, 6, 8, 9, 10, 11, 14, 15, 17, 18, 34, 38], "seed": [4, 6, 10, 11, 12, 14, 18, 19, 23], "seek": 30, "segment": [0, 1, 24, 30, 44], "select": [4, 6, 8, 10, 11, 15, 16, 18, 19, 23, 24, 26, 27, 31, 34, 37, 39, 42, 44, 47, 48], "selectdimensionpercentil": [6, 48], "selectdimensionsignific": 6, "selectdimensiontopk": [6, 48], "selector": [6, 48], "self": [1, 2, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19, 26], "semant": [1, 17], "separ": [8, 10, 19, 28, 42, 43, 48], "sequenc": [5, 9, 20, 24, 25, 27, 30, 33, 43, 44], "sequenti": [6, 24, 48], "sequentialdimensionselector": [6, 48], "seri": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 42, 43, 48], "server": 34, "session": 28, "set": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 23, 24, 26, 28, 29, 31, 33, 34, 37, 38, 39, 43, 44, 46, 47, 48], "set_cache_dir": [3, 28], "set_config": 10, "set_output": [5, 6, 8, 9, 17, 18], "set_param": [2, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19], "set_ylabel": 27, "sethi": [18, 37], "sever": [7, 19, 23, 33, 38, 39, 48], "sha": 28, "sha1": 28, "shaghayegh": [1, 17], "shape": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 32, 33, 34, 39], "shapel": 8, "shapelet": [1, 8, 10, 11, 12, 14, 18, 19, 23, 24, 48], "shapelet_s": [14, 18, 19, 38, 48], "shapeletforestclassifi": [10, 23, 31, 37], "shapeletforestcounterfactu": [11, 31], "shapeletforestembed": 10, "shapeletforestregressor": [10, 37], "shapeletimport": 12, "shapelettransform": [18, 48], "shapelettreeclassifi": [19, 39], "shapelettreeregressor": [10, 19, 39], "shaplet": [14, 18, 19], "sharex": 24, "shifaz": [10, 19, 37], "shift": [33, 44], "short": 34, "shortcut": 33, "shorter": [18, 32, 33], "shortest": [5, 27], "should": [4, 8, 15, 16, 23, 27, 28, 30, 33], "show": [3, 7, 19, 21, 30, 39], "show_bin": 12, "show_grid": 12, "show_legend": 21, "shown": [3, 12], "shuffl": [16, 23], "side": [9, 18, 44], "sigkdd": [4, 34, 42], "signal": 31, "signatur": 14, "signifi": 39, "signific": [8, 19, 24, 44], "significantli": [24, 43], "silhouett": 15, "silhouette_sampl": 15, "silhouette_scor": 15, "similar": [1, 9, 11, 18, 23, 24, 27, 31, 33, 34, 37], "similarli": [34, 39, 43], "simon": 18, "simpl": [2, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19, 39, 42, 45, 47], "simpler": 4, "simplest": [4, 26, 29, 38, 42], "simplic": 34, "simplifi": [23, 27, 43, 44], "sinc": [6, 8, 10, 11, 14, 18, 19, 23, 27, 31, 34, 39, 42, 43], "singl": [8, 10, 11, 14, 15, 18, 19, 25, 28, 32, 34, 37, 38, 39, 44], "singular": [14, 38], "situat": 44, "size": [1, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 23, 26, 38, 39, 43, 44, 48], "sklearn": [5, 8, 10, 15, 18, 20, 23, 31, 42, 44], "slice": 34, "slide": 33, "sliding_window_view": 8, "slightli": [10, 31], "sligtli": 44, "slope": [10, 18, 19, 37, 39, 44], "slower": 10, "smacof": 8, "small": [26, 34, 39, 42, 48], "smaller": [10, 37, 44], "smallest": [8, 38, 44], "smart": 34, "smooth": 18, "smyth": 15, "snippet": [23, 27], "so": [2, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19, 23, 26, 33], "soft_max": [14, 18], "soft_min": [14, 18], "soft_threshold": [14, 18], "softdtw": 8, "solut": [10, 24, 34], "solv": [23, 24], "some": [10, 14, 19, 20, 25, 26, 32, 33, 39, 46], "someth": 48, "sometim": 34, "sophist": [24, 42], "sort": [3, 8, 10], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 31, 39, 43, 44, 46], "space": [8, 18, 21, 24, 34, 38, 44], "spars": [10, 14, 19, 20, 43, 44], "sparse_output": 10, "sparsescal": 14, "sparsiti": 44, "spec": 3, "special": [10, 23, 26], "specici": 12, "specif": [3, 5, 10, 14, 18, 19, 20, 26, 27, 28, 31, 34, 37, 38, 44, 46], "specifi": [3, 5, 6, 10, 12, 14, 15, 18, 19, 23, 26, 27, 28, 31, 33, 34, 37, 38, 39, 42, 43, 44, 46, 48], "specifii": [10, 18, 19], "split": [3, 6, 10, 14, 16, 19, 23, 28, 33, 37, 39, 44], "spokenarabicdigit": 27, "springer": [11, 38], "sqrt": [9, 10, 12, 14, 15, 18, 19, 27, 37], "squar": [10, 12, 14, 18, 19], "squared_error": [10, 19], "squeez": 8, "ssg": 7, "stabl": [11, 16, 25], "stack": 34, "stage": 44, "stamp": 24, "standard": [5, 10, 14, 18, 23, 27, 38, 44, 48], "standardscal": 14, "start": [1, 8, 12, 17, 23, 34, 43, 44, 45], "state": [16, 18, 27], "stationar": 44, "std": [18, 33], "stdout": 11, "stefan": 33, "step": [7, 11, 14, 18, 23, 26, 27, 31, 34, 43, 44], "step_siz": 11, "stiff": [33, 34], "still": [3, 46], "stochast": 7, "stock": 24, "stomp": 24, "storag": 44, "store": [7, 10, 24, 26, 31, 39, 44], "str": [1, 3, 4, 5, 6, 8, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 26], "strategi": [6, 10, 14, 16, 18, 19, 29, 48], "stress": 8, "stride": 18, "stride_trick": 8, "string": [3, 10, 14, 18, 19, 26, 27, 28], "strongli": 46, "structur": 19, "studio": 47, "style": [20, 48], "sub": [10, 19, 24, 48], "subgradi": 7, "subobject": [2, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19], "subplot": [24, 27], "subsampl": 11, "subsequ": [1, 8, 10, 14, 18, 24, 31, 38, 44, 48], "subsequence_match": [1, 8, 34], "subsequnc": 8, "subset": [6, 8, 10, 14, 15, 19, 29, 44, 48], "subtract": 18, "success": [11, 24, 38], "suddenli": 43, "suffici": 4, "suggest": [10, 19, 37], "suit": [18, 34], "suitabl": [6, 38, 39, 44], "sum": [6, 10, 14, 18, 19, 48], "summar": [10, 18, 19, 37, 39, 48], "summari": 24, "summarizer_param": [18, 44], "superhuman": [1, 17], "superset": 37, "supervis": [18, 23], "suppli": [4, 11, 12], "support": [4, 5, 8, 10, 11, 14, 15, 17, 18, 19, 23, 25, 26, 27, 28, 29, 33, 38, 42, 48], "sure": [19, 20], "svd": 14, "swap": 48, "swiss": 19, "symbol": [18, 44], "symbolic_aggregate_approxim": 18, "symmetr": 33, "synthet": [4, 42], "synthetic_control": [3, 23], "syntheticcontrol": [3, 26, 28], "system": [11, 15, 24, 26, 28, 31, 46, 47], "systemat": [4, 34, 42], "t": [4, 8, 10, 11, 14, 15, 18, 19, 20, 29, 33, 34, 42, 46, 48], "t1": 25, "t2": 25, "t3": 25, "tabluar_x": 23, "tabular": 18, "tag": [3, 28], "tailor": 34, "take": [3, 6, 9, 18, 19, 28, 33, 34], "taken": 39, "target": [5, 6, 8, 9, 10, 11, 17, 18, 19, 31, 46], "target_": 11, "targetevalu": 11, "task": [23, 24, 30, 31, 34, 37, 39, 42, 43], "techniqu": [24, 38, 44], "temperatur": 24, "templat": 3, "tempor": [11, 13, 23, 25, 31, 44, 45], "ten": 19, "term": [2, 10, 11, 14, 18, 32, 33], "termin": 39, "test": [3, 6, 8, 10, 14, 15, 16, 19, 22, 23, 26, 27, 28, 34, 37], "test_idx": 16, "test_siz": [10, 16, 23], "text": [34, 44], "th": [8, 9, 10, 15, 38, 39, 44], "than": [3, 4, 6, 8, 10, 11, 18, 19, 21, 23, 26, 29, 32, 33, 34, 38, 39, 43, 44], "thei": [4, 10, 18, 19, 24, 28, 31], "them": [4, 13, 25, 27, 28, 30, 44], "theoret": 34, "therebi": 38, "thi": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 23, 24, 26, 27, 30, 31, 33, 34, 37, 38, 39, 43, 44, 46], "thiem": [14, 18, 38], "thing": 19, "third": [29, 34], "thirtieth": 33, "those": [3, 24, 29, 31, 44], "thought": 43, "thread": 34, "three": [18, 29, 31, 33, 34, 39, 44], "threshold": [6, 8, 10, 11, 12, 14, 18, 19, 24, 37, 38, 39, 48], "threshold_sign": 39, "through": [33, 37, 38, 39, 46], "thu": [10, 34, 43], "tight": [4, 42], "time": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 42, 43, 48], "timeout": [3, 28, 48], "timepoint": 18, "timestep": [8, 14, 15, 18, 19, 20, 23, 25, 26, 27, 32, 34], "tini": [3, 26, 28], "togeth": [24, 28, 39], "tol": [6, 7, 8], "toler": [6, 8, 10, 15, 19, 33], "tool": [24, 30, 47], "top": [6, 8, 12, 19, 48], "total": [10, 14, 18, 19, 39, 44], "total_n_outli": 16, "toward": [10, 19], "trade": 48, "tradit": [8, 27, 29, 33, 38, 42, 43, 44], "train": [3, 6, 8, 10, 11, 14, 15, 16, 17, 18, 19, 23, 26, 27, 28, 39], "train_i": 11, "train_idx": 16, "train_test_split": [16, 23, 31, 44], "train_x": 11, "trajectori": 33, "tranform": 18, "transact": 33, "transform": [0, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 17, 19, 29, 31, 34, 42, 43, 48], "transformermixin": [5, 18], "transpar": 30, "travers": [19, 31, 39], "treat": [25, 43, 48], "tree": [0, 10, 31, 37, 48], "tree_": [19, 39], "trend": [24, 30, 43, 44], "treshold": 8, "tri": 34, "triad": 38, "triangl": [33, 34], "trigger": 20, "trillion": 34, "trivial": [8, 24], "true": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 29, 32, 33, 34, 43, 48], "truncat": [5, 27, 48], "trust": 23, "trustworthi": 30, "try": 14, "tsereg": [23, 26], "tunabl": 38, "tune": [8, 38, 43, 48], "tupl": [3, 7, 10, 14, 18, 19, 39], "turn": 44, "tuv": 37, "twe": [33, 34], "tweak": [11, 15, 31], "twice": 44, "two": [6, 7, 8, 10, 14, 18, 19, 23, 26, 28, 31, 33, 34, 38, 39, 43, 44, 48], "twoleadecg": [3, 23, 26, 28, 38], "txt": 47, "type": [3, 5, 18, 20, 23, 31, 39, 44], "typic": [15, 23, 24, 30, 34, 38, 43], "u": [10, 14, 19, 44], "ubuntu": 47, "uc": [24, 43], "ucr": [3, 23, 26, 28, 34, 44], "ucrmt": [26, 27], "uea": 23, "ultim": 44, "ultra": [14, 18, 38], "unchang": [5, 6, 7, 8, 9, 17, 18], "uncov": [24, 44], "undefin": [33, 39], "under": [34, 47], "undergo": 38, "underli": [10, 18, 24, 44], "understand": [24, 30, 31, 43, 44], "unequ": [25, 27, 33], "unfamiliar": 23, "unfit": 6, "unfortun": 11, "unifi": [1, 24], "uniform": [10, 14, 18, 19, 24, 27, 34, 44], "uniform_averag": [10, 14, 19], "uniformli": [18, 19], "unipot": 17, "uniqu": [3, 15, 17, 28, 43], "unit": [5, 14, 18, 23, 27, 33], "univarait": 26, "univari": [8, 15, 23, 25, 26, 32, 34], "unlabel": 23, "unless": [1, 10, 14, 18, 19, 20, 28, 33, 39], "unpickl": 23, "unseen": [23, 36, 43], "unset": 28, "unsupervis": [5, 6, 8, 9, 10, 17, 18], "until": [10, 19, 48], "unusu": 24, "unwant": 34, "up": [19, 46], "updat": [2, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19], "upon": [34, 39, 48], "upper": [7, 9, 10, 14, 16, 18, 19, 34, 38], "upward": 44, "url": [3, 28], "us": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48], "user": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 28, 30, 31, 34, 42, 45, 46, 48], "util": [0, 3, 4, 5, 10, 19, 24, 25, 27, 31, 32, 34, 37, 38, 39, 43, 44], "v": [10, 14, 18, 19, 28, 33, 44], "v1": [10, 19, 26, 28], "valid": [3, 5, 6, 10, 11, 14, 15, 16, 19, 20, 25, 26, 28, 29, 37, 48], "valid_scor": 11, "validity_scor": 15, "valu": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 37, 38, 39, 44, 48], "valuabl": [24, 44], "vari": 44, "variabl": [14, 18, 22, 32, 38, 44, 47], "variable_len": [0, 20, 25, 27, 32], "varial": 20, "varianc": [6, 10, 18, 19, 23, 27, 33, 37, 39, 44, 48], "variant": 39, "variat": [4, 26, 29, 42, 48], "varieti": 37, "variou": [24, 34, 39, 44], "vc": 47, "vcvarsal": 47, "vector": [7, 20, 24], "venv": 46, "verbos": [7, 8, 10, 11, 47], "veri": [7, 9, 24, 27, 33], "versa": [23, 31], "version": [3, 5, 6, 8, 9, 10, 11, 14, 17, 18, 19, 23, 27, 28, 37, 42, 46, 47], "via": [11, 14, 31], "vice": [23, 31], "vicin": 8, "view": [1, 24], "viii": [1, 17], "virtual": [46, 47], "visual": [23, 30, 39, 47], "vladimir": 37, "vol": 11, "volatil": 44, "volum": 33, "vote": 10, "vrain": [14, 18, 38], "vstack": 25, "w": [4, 7, 8, 10, 14, 19, 26, 28, 38, 42], "wa": [5, 6, 8, 9, 10, 11, 17, 18, 19, 24, 31, 37, 44], "wael": [14, 18], "wai": [18, 27, 44], "want": [34, 44, 47], "warm_start": 10, "warn": [8, 19, 20, 48], "warp": [6, 7, 8, 9, 19, 31, 33, 34, 48], "wddtw": [33, 34], "wddtw_distanc": 7, "wdtw": [11, 33, 34], "wdtw_align": 7, "wdtw_distanc": 7, "we": [3, 6, 8, 10, 14, 15, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 42, 43, 44, 46, 48], "weak": 30, "webb": [10, 14, 18, 19, 33, 37, 38, 44], "week": 44, "weight": [7, 8, 10, 14, 15, 18, 19, 33], "weighted_n_node_sampl": 39, "well": [2, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19], "were": [12, 18, 30, 32], "westov": 34, "what": [19, 42, 45], "wheight": 39, "when": [4, 8, 10, 11, 12, 14, 15, 18, 19, 20, 23, 26, 28, 31, 33, 34, 43, 44, 48], "where": [3, 4, 6, 7, 8, 10, 11, 14, 15, 16, 18, 19, 21, 23, 25, 28, 29, 30, 31, 33, 34, 37, 39, 43, 44, 46, 48], "wherea": [25, 37, 39, 43], "wherein": 44, "whether": [8, 14, 20, 21, 31], "which": [3, 4, 7, 8, 10, 11, 14, 15, 18, 19, 23, 24, 26, 28, 30, 31, 32, 33, 34, 37, 38, 39, 42, 43, 44, 45, 47, 48], "while": [3, 10, 19, 23, 26, 28, 30, 31, 34, 39, 44, 46], "whole": 10, "whose": 44, "why": 30, "width": [6, 21], "wildboar": [0, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 42, 43, 44, 45, 47, 48], "wildboar_build": 47, "wildboar_cach": 3, "wildboar_requir": [3, 28], "wildoar": 8, "window": [1, 7, 8, 9, 11, 12, 15, 17, 18, 24, 28, 33, 43, 46, 47], "window_shap": 8, "wise": [6, 22, 23, 24, 27], "wistuba": [14, 18, 38], "within": [5, 8, 19, 24, 29, 31, 34, 38, 43, 44], "without": [3, 25, 28, 33, 38], "wlcss": 34, "wong": [4, 42], "work": [2, 5, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19, 23, 34, 46, 47, 48], "workflow": [26, 34], "workshop": [4, 42], "wors": [10, 14, 19], "would": [4, 6, 10, 14, 18, 19, 31, 34, 44], "wrap": [5, 18], "wrapper": [8, 15], "write": 46, "written": 28, "www": 28, "x": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 39, 42, 43, 44, 48], "x64": 47, "x86": 47, "x_cf": [30, 31], "x_counterfactu": [11, 15], "x_factual": 15, "x_indic": 7, "x_nativ": 15, "x_new": [5, 6, 8, 9, 17, 18], "x_orig": 27, "x_outlier": [4, 42], "x_plausibl": 15, "x_sampl": [8, 34], "x_t": 18, "x_test": [3, 10, 11, 16, 23, 26, 28, 30, 31, 37, 38, 39, 44], "x_test_transform": 44, "x_timestep": [7, 8, 34], "x_train": [3, 10, 11, 16, 23, 26, 28, 30, 31, 38, 44], "x_true": 11, "xcode": 47, "xdg_cache_hom": 28, "xt": 43, "y": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 31, 33, 34, 39, 42, 44, 48], "y_contigu": 20, "y_counterfactu": 15, "y_desir": 31, "y_hat": 10, "y_indic": 7, "y_nativ": 15, "y_numer": 20, "y_outlier": [4, 42], "y_plausibl": 15, "y_pred": [10, 14, 19, 31], "y_predict": 15, "y_sampl": [8, 34], "y_test": [3, 10, 11, 16, 23, 26, 28, 30, 31, 37, 38, 44], "y_timestep": [7, 8, 34], "y_train": [3, 10, 11, 16, 23, 26, 28, 30, 31, 38, 44], "y_true": [10, 14, 19], "year": 24, "yearli": 24, "yeh": [1, 24], "yield": [3, 8, 16, 38], "yn_timestep": 8, "you": [8, 10, 11, 14, 19, 23, 24, 37, 46, 47, 48], "your": [11, 19, 46, 47, 48], "z": [9, 24, 28, 33, 34, 38, 44, 48], "z0": 28, "za": 28, "zaidi": [10, 19, 37], "zakaria": 34, "zero": [5, 6, 10, 14, 18, 19, 23, 27, 33, 38, 44, 48], "zhu": [19, 34], "zip": [3, 26, 28, 43], "zipfil": 3, "zone": [1, 8, 17, 18], "zorder": 21, "\u00f6zsu": 33}, "titles": ["API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.annotate</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets.outlier</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets.preprocess</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.dimension_selection</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance.dtw</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance.lb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.ensemble</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain.counterfactual</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.linear_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.model_selection</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.segment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.tree</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils.plot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils.variable_len</span></code>", "User Guide", "Annotate", "Time series", "Datasets", "Pre-processing", "Repositories", "Dimension selection", "Interpretability", "Counterfactual explanations", "Glossary", "Metrics", "Distance", "Elastic metrics", "Supervised learning", "Ensemble estimators", "Transform-based estimators", "Tree-based estimators", "Unsupervised learning", "Outlier detection", "Outlier detection benchmarks", "Segmentation", "Time series transform", "&lt;no title&gt;", "Install wildboar", "Build from source", "What\u2019s new"], "titleterms": {"": 48, "0": 48, "1": 48, "3": 48, "an": 23, "annot": [1, 24], "api": 0, "base": [2, 38, 39, 44], "benchmark": [34, 42], "bound": 34, "build": 47, "cach": 28, "castor": 38, "chang": 48, "class": [2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19], "common": 35, "compat": 27, "convolut": [38, 44], "counterfactu": [11, 31], "data": [23, 24], "dataset": [3, 4, 5, 23, 26], "decis": 39, "definit": 28, "depend": 48, "detect": [41, 42], "dilat": 38, "dimens": 29, "dimension_select": 6, "discoveri": 24, "distanc": [7, 8, 9, 34, 35], "dtw": 7, "dyadic": 44, "dynam": 35, "edit": 35, "elast": [33, 35, 37], "emmott": 42, "ensembl": [10, 37], "estim": [37, 38, 39], "exampl": [23, 44], "explain": [11, 12], "explan": 31, "explor": 23, "featur": 44, "filter": 26, "fix": 44, "forest": [31, 37], "from": 47, "function": [1, 2, 3, 4, 5, 7, 8, 11, 12, 15, 16, 18, 19, 20, 21, 22], "glossari": 32, "guid": 23, "hydra": [38, 44], "instal": [28, 46], "interpret": 30, "interv": [37, 39, 44], "json": 28, "lb": 9, "learn": [23, 27, 36, 40], "length": 25, "linear_model": 14, "load": [23, 26], "local": 28, "longest": 35, "lower": 34, "major": 42, "matrixprofil": 24, "merg": 35, "metric": [15, 33, 34, 35], "minimum": 34, "minor": 42, "model": [23, 48], "model_select": 16, "motif": 24, "move": 35, "multipl": 26, "multivari": 34, "nearest": 31, "neighbour": 31, "new": 48, "non": 33, "other": 44, "outlier": [4, 41, 42], "pair": 34, "pairwis": 34, "parallel": 34, "penalti": 35, "perform": 23, "persist": 23, "plot": [21, 39], "pre": 27, "predict": 23, "preprocess": 5, "process": 27, "proxim": 37, "random": [38, 44], "real": 35, "refer": [0, 24, 31, 37, 38, 44], "repositori": 28, "rocket": [38, 44], "scikit": 27, "search": 34, "segment": [17, 43], "select": 29, "selector": 29, "sequenc": 35, "sequenti": 29, "seri": [23, 25, 44], "shapelet": [31, 37, 38, 39], "singl": 26, "sourc": 47, "specif": 33, "split": 35, "structur": [24, 39], "subsequ": [33, 34, 35], "summar": 44, "supervis": 36, "support": 34, "tabular": 23, "threshold": 29, "time": [23, 25, 35, 44], "transform": [18, 23, 27, 38, 44], "tree": [19, 39], "unsupervis": 40, "user": 23, "util": [20, 21, 22], "variabl": 25, "variable_len": 22, "varianc": 29, "version": 48, "warp": 35, "what": 48, "wildboar": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 46]}})