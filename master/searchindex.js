Search.setIndex({"docnames": ["api/index", "api/wildboar/annotate/_motifs/index", "api/wildboar/annotate/_segment/index", "api/wildboar/annotate/index", "api/wildboar/base/index", "api/wildboar/datasets/_filter/index", "api/wildboar/datasets/_repository/index", "api/wildboar/datasets/index", "api/wildboar/datasets/outlier/index", "api/wildboar/datasets/preprocess/index", "api/wildboar/distance/_multi_metric/index", "api/wildboar/distance/dtw/index", "api/wildboar/distance/index", "api/wildboar/ensemble/_ensemble/index", "api/wildboar/ensemble/index", "api/wildboar/explain/_importance/index", "api/wildboar/explain/counterfactual/_helper/index", "api/wildboar/explain/counterfactual/_nn/index", "api/wildboar/explain/counterfactual/_proto/index", "api/wildboar/explain/counterfactual/_sf/index", "api/wildboar/explain/counterfactual/index", "api/wildboar/explain/index", "api/wildboar/index", "api/wildboar/linear_model/_rocket/index", "api/wildboar/linear_model/_shapelet/index", "api/wildboar/linear_model/_transform/index", "api/wildboar/linear_model/index", "api/wildboar/metrics/_counterfactual/index", "api/wildboar/metrics/index", "api/wildboar/model_selection/_cv/index", "api/wildboar/model_selection/_outlier/index", "api/wildboar/model_selection/index", "api/wildboar/transform/_base/index", "api/wildboar/transform/_interval/index", "api/wildboar/transform/_matrix_profile/index", "api/wildboar/transform/_pivot/index", "api/wildboar/transform/_rocket/index", "api/wildboar/transform/_sax/index", "api/wildboar/transform/_shapelet/index", "api/wildboar/transform/index", "api/wildboar/tree/_base/index", "api/wildboar/tree/_ptree/index", "api/wildboar/tree/_tree/index", "api/wildboar/tree/index", "api/wildboar/utils/_parallel/index", "api/wildboar/utils/_testing/index", "api/wildboar/utils/decorators/index", "api/wildboar/utils/estimator_checks/index", "api/wildboar/utils/index", "api/wildboar/utils/plot/index", "api/wildboar/utils/validation/index", "api/wildboar/utils/variable_len/index", "api/wildboar/version/index", "guide", "guide/annotate", "guide/basics", "guide/datasets", "guide/datasets/preprocess", "guide/datasets/repositories", "guide/glossary", "guide/metrics", "guide/metrics/distance", "guide/metrics/elastic", "guide/supervised", "guide/supervised/ensemble", "guide/supervised/transform", "guide/supervised/trees", "guide/unsupervised", "guide/unsupervised/outlier", "guide/unsupervised/outlier/generation", "index", "more/whatsnew", "quickstart", "quickstart/getting-started", "quickstart/install"], "filenames": ["api/index.rst", "api/wildboar/annotate/_motifs/index.rst", "api/wildboar/annotate/_segment/index.rst", "api/wildboar/annotate/index.rst", "api/wildboar/base/index.rst", "api/wildboar/datasets/_filter/index.rst", "api/wildboar/datasets/_repository/index.rst", "api/wildboar/datasets/index.rst", "api/wildboar/datasets/outlier/index.rst", "api/wildboar/datasets/preprocess/index.rst", "api/wildboar/distance/_multi_metric/index.rst", "api/wildboar/distance/dtw/index.rst", "api/wildboar/distance/index.rst", "api/wildboar/ensemble/_ensemble/index.rst", "api/wildboar/ensemble/index.rst", "api/wildboar/explain/_importance/index.rst", "api/wildboar/explain/counterfactual/_helper/index.rst", "api/wildboar/explain/counterfactual/_nn/index.rst", "api/wildboar/explain/counterfactual/_proto/index.rst", "api/wildboar/explain/counterfactual/_sf/index.rst", "api/wildboar/explain/counterfactual/index.rst", "api/wildboar/explain/index.rst", "api/wildboar/index.rst", "api/wildboar/linear_model/_rocket/index.rst", "api/wildboar/linear_model/_shapelet/index.rst", "api/wildboar/linear_model/_transform/index.rst", "api/wildboar/linear_model/index.rst", "api/wildboar/metrics/_counterfactual/index.rst", "api/wildboar/metrics/index.rst", "api/wildboar/model_selection/_cv/index.rst", "api/wildboar/model_selection/_outlier/index.rst", "api/wildboar/model_selection/index.rst", "api/wildboar/transform/_base/index.rst", "api/wildboar/transform/_interval/index.rst", "api/wildboar/transform/_matrix_profile/index.rst", "api/wildboar/transform/_pivot/index.rst", "api/wildboar/transform/_rocket/index.rst", "api/wildboar/transform/_sax/index.rst", "api/wildboar/transform/_shapelet/index.rst", "api/wildboar/transform/index.rst", "api/wildboar/tree/_base/index.rst", "api/wildboar/tree/_ptree/index.rst", "api/wildboar/tree/_tree/index.rst", "api/wildboar/tree/index.rst", "api/wildboar/utils/_parallel/index.rst", "api/wildboar/utils/_testing/index.rst", "api/wildboar/utils/decorators/index.rst", "api/wildboar/utils/estimator_checks/index.rst", "api/wildboar/utils/index.rst", "api/wildboar/utils/plot/index.rst", "api/wildboar/utils/validation/index.rst", "api/wildboar/utils/variable_len/index.rst", "api/wildboar/version/index.rst", "guide.rst", "guide/annotate.rst", "guide/basics.rst", "guide/datasets.rst", "guide/datasets/preprocess.rst", "guide/datasets/repositories.rst", "guide/glossary.rst", "guide/metrics.rst", "guide/metrics/distance.rst", "guide/metrics/elastic.rst", "guide/supervised.rst", "guide/supervised/ensemble.rst", "guide/supervised/transform.rst", "guide/supervised/trees.rst", "guide/unsupervised.rst", "guide/unsupervised/outlier.rst", "guide/unsupervised/outlier/generation.rst", "index.rst", "more/whatsnew.rst", "quickstart.rst", "quickstart/getting-started.rst", "quickstart/install.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.annotate._motifs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.annotate._segment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.annotate</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets._filter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets._repository</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets.outlier</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets.preprocess</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance._multi_metric</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance.dtw</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.ensemble._ensemble</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.ensemble</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain._importance</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain.counterfactual._helper</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain.counterfactual._nn</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain.counterfactual._proto</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain.counterfactual._sf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain.counterfactual</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.linear_model._rocket</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.linear_model._shapelet</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.linear_model._transform</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.linear_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.metrics._counterfactual</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.model_selection._cv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.model_selection._outlier</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.model_selection</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._interval</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._matrix_profile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._pivot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._rocket</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._sax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._shapelet</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.tree._base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.tree._ptree</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.tree._tree</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.tree</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils._parallel</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils._testing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils.decorators</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils.estimator_checks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils.plot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils.validation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils.variable_len</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.version</span></code>", "User guide", "Annotate", "Time series", "Datasets", "Pre-processing", "Repositories", "Glossary", "Metrics", "Distance", "Elastic metrics", "Supervised learning", "Ensemble estimators", "Transform-based estimators", "Tree-based estimators", "Unsupervised learning", "Outlier detection", "Outlier detection benchmarks", "Wildboar", "What\u2019s new", "Quickstart", "Getting started", "Install wildboar"], "terms": {"librari": [0, 22, 70], "tempor": [0, 19, 20, 22, 55, 70, 73], "machin": [0, 22, 60, 70], "learn": [0, 8, 11, 22, 25, 40, 42, 47, 48, 50, 59, 69, 70, 71], "includ": [0, 1, 3, 8, 12, 20, 22, 48, 50, 61, 66, 70, 73], "numer": [0, 20, 22, 48, 50, 70, 73], "algorithm": [0, 8, 11, 19, 20, 22, 55, 57, 60, 70], "seamlessli": [0, 22, 70, 73], "integr": [0, 22, 58, 61, 70], "them": [0, 8, 22, 49, 55, 57, 58, 70], "scikit": [0, 8, 22, 25, 40, 42, 47, 48, 50, 59, 69, 70, 71, 73], "iseo": [0, 22, 55, 57, 70], "boolean": [0, 11, 22, 51, 70], "indic": [0, 7, 11, 12, 13, 14, 16, 20, 22, 27, 28, 40, 41, 42, 43, 51, 59, 70], "valu": [0, 4, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 50, 55, 56, 57, 58, 59, 61, 64, 70, 71, 73], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 63, 64, 69, 70, 71, 73, 74], "end": [0, 15, 21, 22, 40, 41, 42, 43, 48, 50, 55, 57, 59, 70], "sequenc": [0, 9, 22, 48, 49, 50, 55, 57, 60, 70], "time": [0, 1, 2, 3, 4, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 56, 57, 58, 59, 60, 61, 63, 64, 65, 69, 70], "seri": [0, 1, 2, 3, 4, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 50, 51, 56, 57, 58, 59, 60, 61, 63, 64, 65, 69, 70], "see": [0, 3, 7, 8, 12, 16, 20, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 61, 70, 71], "section": [0, 3, 7, 15, 21, 70], "user": [0, 3, 4, 7, 8, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 58, 61, 69, 70, 73, 74], "guid": [0, 3, 4, 7, 8, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 70], "more": [0, 3, 7, 8, 12, 13, 14, 15, 20, 21, 27, 28, 35, 38, 39, 41, 42, 43, 48, 50, 58, 60, 61, 69, 70, 73], "detail": [0, 3, 7, 8, 12, 61, 70, 71], "exampl": [0, 3, 7, 8, 11, 12, 13, 14, 16, 18, 20, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 49, 51, 55, 56, 57, 58, 61, 70], "motif": [0, 1, 3, 12, 70], "find": [0, 1, 2, 3, 12, 56, 70, 74], "segment": [0, 2, 3, 70], "chang": [0, 2, 3, 7, 11, 13, 14, 16, 20, 27, 28, 42, 43, 55, 56, 58, 61, 70], "regim": [0, 2, 3, 70], "all": [0, 1, 3, 4, 6, 7, 8, 12, 13, 14, 15, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 36, 38, 39, 40, 42, 43, 45, 47, 48, 49, 50, 56, 57, 58, 60, 61, 70, 71, 73, 74], "estim": [0, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 50, 53, 56, 59, 61, 63, 69, 70, 71, 73], "baseestim": [0, 4, 45, 70], "counterfactualmixin": [0, 4, 70], "mixin": [0, 4, 13, 25, 33, 35, 36, 38, 40, 42, 70], "explainermixin": [0, 4, 70], "is_counterfactu": [0, 4, 18, 70], "check": [0, 4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 50, 57, 59, 70], "is_explain": [0, 4, 70], "an": [0, 4, 8, 12, 13, 14, 18, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 48, 50, 55, 56, 58, 59, 61, 63, 64, 69, 70, 71, 74], "load": [0, 6, 7, 58, 70], "from": [0, 1, 3, 6, 7, 8, 11, 13, 14, 16, 18, 20, 23, 24, 25, 26, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 49, 51, 56, 57, 58, 60, 61, 69, 70, 71, 73], "import": [0, 7, 11, 13, 14, 15, 21, 30, 31, 33, 34, 36, 38, 39, 40, 41, 42, 43, 49, 51, 55, 56, 57, 58, 61, 69, 70, 73], "load_dataset": [0, 7, 33, 39, 41, 43, 56, 57, 58, 61, 70, 73], "x": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 50, 51, 55, 56, 57, 58, 60, 61, 69, 70, 73], "y": [0, 4, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 50, 56, 57, 58, 60, 61, 69, 70, 73], "gunpoint": [0, 7, 33, 39, 41, 43, 56, 57, 58, 70], "shape": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 49, 55, 56, 57, 59, 60, 61, 70, 73], "200": [0, 7, 56, 70], "60": [0, 7, 56, 61, 70], "bundl": [0, 6, 7, 56, 58, 69, 70], "handl": [0, 6, 7, 56, 70], "jsonrepositori": [0, 6, 7, 58, 70], "A": [0, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 49, 55, 56, 57, 58, 59, 60, 61, 69, 70, 73], "repositori": [0, 6, 7, 56, 70, 73], "collect": [0, 6, 7, 16, 20, 33, 39, 58, 63, 69, 70, 73, 74], "npbundl": [0, 6, 7, 70], "numpi": [0, 6, 7, 13, 14, 15, 21, 32, 33, 36, 39, 42, 43, 55, 57, 58, 59, 61, 70, 71, 73, 74], "binari": [0, 6, 7, 8, 13, 14, 69, 70, 74], "file": [0, 6, 7, 58, 70, 74], "clear_cach": [0, 7, 70], "clear": [0, 7, 70], "cach": [0, 6, 7, 56, 70], "delet": [0, 7, 70], "get_bundl": [0, 6, 7, 70], "get": [0, 4, 6, 7, 9, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 57, 70], "get_repositori": [0, 7, 70], "name": [0, 4, 6, 7, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 50, 56, 57, 58, 60, 61, 70, 73], "install_repositori": [0, 7, 58, 70], "instal": [0, 7, 56, 69, 70], "list_bundl": [0, 7, 58, 70], "list": [0, 1, 3, 5, 6, 7, 12, 13, 14, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 33, 35, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 56, 58, 61, 69, 70, 71], "specifi": [0, 6, 7, 13, 14, 15, 21, 27, 28, 35, 38, 39, 42, 43, 49, 56, 57, 58, 60, 61, 69, 70, 73, 74], "list_collect": [0, 7, 70], "list_dataset": [0, 7, 58, 70], "list_repositori": [0, 7, 58, 70], "kei": [0, 6, 7, 12, 13, 14, 16, 20, 27, 28, 33, 35, 38, 39, 41, 42, 43, 50, 58, 70], "gener": [0, 7, 8, 11, 13, 14, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 36, 38, 39, 40, 41, 42, 43, 47, 56, 69, 70, 73], "load_gun_point": [0, 7, 33, 36, 39, 40, 41, 42, 43, 49, 56, 70], "load_synthetic_control": [0, 7, 13, 14, 70, 73], "synthetic_control": [0, 7, 70, 73], "load_two_lead_ecg": [0, 7, 11, 13, 14, 30, 31, 34, 39, 61, 70, 73], "twoleadecg": [0, 7, 56, 58, 61, 70, 73], "refresh_repositori": [0, 7, 58, 70], "refresh": [0, 6, 7, 58, 70], "set_cache_dir": [0, 7, 58, 70], "global": [0, 7, 17, 19, 20, 27, 28, 33, 39, 58, 70], "directori": [0, 7, 58, 70, 74], "synthet": [0, 8, 69, 70], "us": [0, 7, 8, 11, 12, 13, 14, 15, 16, 18, 20, 21, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 48, 49, 50, 56, 57, 58, 59, 60, 61, 65, 69, 70, 71, 73, 74], "density_outli": [0, 8, 70], "densitii": [0, 8, 70], "emmott_outli": [0, 8, 69, 70], "difficulti": [0, 8, 69, 70], "kmeans_outli": [0, 8, 70], "k": [0, 8, 13, 14, 15, 17, 20, 21, 41, 43, 64, 69, 70], "mean": [0, 7, 8, 9, 11, 12, 13, 14, 19, 20, 23, 24, 25, 26, 27, 28, 32, 33, 36, 38, 39, 40, 41, 42, 43, 57, 60, 61, 70, 71, 73], "majority_outli": [0, 8, 70], "label": [0, 4, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 39, 40, 41, 42, 43, 48, 49, 50, 56, 58, 63, 68, 70, 73], "major": [0, 8, 11, 58, 68, 70], "inlier": [0, 8, 13, 14, 29, 31, 69, 70], "minority_outli": [0, 8, 69, 70], "fraction": [0, 1, 2, 3, 8, 11, 12, 13, 14, 15, 21, 27, 28, 29, 31, 34, 39, 40, 41, 42, 43, 69, 70], "minor": [0, 8, 58, 68, 70, 71], "maxabs_scal": [0, 9, 57, 70], "scale": [0, 8, 9, 13, 14, 36, 37, 39, 49, 57, 60, 69, 70], "each": [0, 2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 55, 57, 58, 59, 60, 61, 70, 73], "its": [0, 9, 12, 33, 34, 39, 48, 49, 50, 56, 70, 74], "maximum": [0, 1, 3, 9, 11, 13, 14, 15, 21, 29, 31, 33, 36, 38, 39, 41, 42, 43, 49, 57, 59, 61, 70], "absolut": [0, 9, 27, 28, 57, 70], "minmax_scal": [0, 9, 37, 39, 56, 57, 70], "along": [0, 9, 15, 21, 57, 70], "dimens": [0, 9, 11, 27, 28, 34, 39, 48, 50, 55, 56, 57, 59, 61, 70, 71, 73], "named_preprocess": [0, 9, 70], "preprocessor": [0, 9, 57, 70], "standard": [0, 9, 13, 14, 18, 33, 39, 57, 70, 73], "truncat": [0, 9, 57, 70], "shortest": [0, 9, 57, 70], "fast": [0, 12, 36, 38, 39, 60, 70], "comput": [0, 1, 2, 3, 11, 12, 13, 14, 15, 16, 18, 20, 21, 27, 28, 34, 35, 39, 40, 41, 42, 43, 60, 61, 70, 71], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 69, 70, 71, 73, 74], "modul": [0, 12, 20, 56, 57, 69, 70, 71, 73], "pair": [0, 1, 3, 7, 12, 13, 14, 27, 28, 35, 38, 39, 41, 42, 43, 50, 70], "pairwis": [0, 12, 70], "between": [0, 1, 3, 9, 11, 12, 16, 20, 27, 28, 38, 39, 57, 60, 61, 69, 70, 73], "subsequ": [0, 1, 3, 12, 13, 14, 34, 36, 39, 70, 71], "matrix_profil": [0, 1, 2, 3, 12, 70], "matrix": [0, 1, 2, 3, 11, 12, 13, 14, 16, 18, 20, 23, 24, 25, 26, 34, 39, 40, 41, 42, 43, 61, 70, 73], "profil": [0, 1, 2, 3, 12, 34, 39, 70], "mean_paired_dist": [0, 70], "paired_dist": [0, 12, 61, 70, 71], "th": [0, 12, 13, 14, 70], "paired_subsequence_dist": [0, 12, 61, 70], "minimum": [0, 1, 3, 6, 7, 9, 11, 12, 13, 14, 15, 21, 33, 36, 38, 39, 41, 42, 43, 48, 50, 58, 60, 61, 70], "paired_subsequence_match": [0, 12, 70], "match": [0, 1, 3, 12, 18, 58, 60, 61, 70, 71], "subsequnc": [0, 12, 70], "pairwise_dist": [0, 12, 60, 61, 70, 71], "pairwise_subsequence_dist": [0, 12, 60, 61, 70], "subsequence_match": [0, 1, 3, 12, 61, 70], "align": [0, 11, 15, 18, 21, 70], "implement": [0, 11, 13, 14, 15, 19, 20, 21, 23, 26, 33, 36, 39, 57, 58, 60, 61, 64, 69, 70, 71, 73], "sever": [0, 11, 40, 41, 42, 43, 60, 70, 73], "ddtw_distanc": [0, 11, 70], "deriv": [0, 11, 13, 60, 70], "dynam": [0, 11, 13, 14, 41, 42, 43, 60, 61, 70], "warp": [0, 11, 41, 43, 60, 61, 70], "dtw_align": [0, 11, 70], "dtw_averag": [0, 11, 70], "barycent": [0, 11, 70], "averag": [0, 11, 13, 14, 27, 28, 70], "dba": [0, 11, 70], "dtw_distanc": [0, 11, 70], "dtw_envelop": [0, 11, 70], "envelop": [0, 11, 70], "lb_keogh": [0, 11, 70], "dtw_lb_keogh": [0, 11, 70], "lower": [0, 8, 11, 12, 13, 14, 27, 28, 35, 36, 38, 39, 41, 42, 43, 49, 61, 70], "bound": [0, 11, 13, 14, 29, 31, 35, 38, 39, 41, 42, 43, 61, 70], "dtw_map": [0, 11, 70], "optim": [0, 11, 61, 70, 74], "path": [0, 11, 19, 20, 40, 41, 42, 43, 58, 70, 74], "two": [0, 11, 13, 14, 33, 35, 38, 39, 41, 42, 43, 49, 58, 60, 61, 66, 70, 71, 73], "given": [0, 2, 3, 8, 11, 12, 13, 14, 15, 21, 23, 24, 25, 26, 37, 39, 40, 41, 42, 43, 59, 63, 70], "jeong_weight": [0, 11, 70], "weight": [0, 11, 13, 14, 23, 24, 25, 26, 27, 28, 35, 39, 40, 41, 42, 43, 60, 70], "describ": [0, 8, 11, 19, 20, 56, 58, 61, 70], "jeong": [0, 11, 70], "et": [0, 1, 2, 3, 8, 11, 12, 13, 14, 41, 43, 69, 70], "al": [0, 1, 2, 3, 8, 11, 12, 13, 14, 41, 43, 69, 70], "2011": [0, 11, 70], "r4bf7d056babf": [0, 11, 70], "1": [0, 1, 2, 3, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 69, 70, 73, 74], "_": [0, 11, 70], "wddtw_distanc": [0, 11, 70], "wdtw_align": [0, 11, 70], "wdtw_distanc": [0, 11, 70], "method": [0, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 53, 64, 70, 73], "classif": [0, 8, 11, 13, 14, 23, 24, 25, 26, 27, 28, 30, 31, 36, 38, 39, 40, 41, 42, 43, 66, 69, 70, 73], "regress": [0, 8, 13, 14, 25, 26, 40, 41, 42, 43, 65, 69, 70, 73], "detect": [0, 8, 14, 61, 70], "baggingclassifi": [0, 13, 14, 70, 71], "bag": [0, 13, 14, 70], "classifi": [0, 8, 13, 14, 17, 19, 20, 21, 23, 24, 25, 26, 41, 42, 43, 47, 64, 70, 73], "baggingregressor": [0, 13, 14, 70, 71], "regressor": [0, 13, 14, 21, 23, 24, 25, 26, 40, 42, 43, 47, 64, 70], "basebag": [0, 13, 14, 70], "extrashapelettreesclassifi": [0, 13, 14, 70], "extrem": [0, 13, 14, 70], "random": [0, 8, 11, 13, 14, 15, 16, 18, 20, 21, 24, 26, 29, 30, 31, 32, 33, 35, 36, 38, 39, 41, 42, 43, 64, 65, 70, 73], "shapelet": [0, 1, 3, 12, 13, 14, 15, 18, 19, 20, 21, 24, 26, 36, 38, 39, 42, 43, 66, 70, 73], "extrashapelettreesregressor": [0, 13, 14, 70, 71], "intervalforestclassifi": [0, 13, 14, 70], "interv": [0, 8, 13, 14, 15, 21, 33, 37, 39, 42, 43, 69, 70, 73], "intervalforestregressor": [0, 13, 14, 70], "isolationshapeletforest": [0, 13, 14, 70], "isol": [0, 13, 14, 70, 74], "forest": [0, 8, 13, 14, 19, 20, 41, 43, 70, 73], "pivotforestclassifi": [0, 13, 14, 70], "proximityforestclassifi": [0, 13, 14, 64, 70], "proxim": [0, 13, 14, 16, 20, 27, 28, 41, 43, 70], "rocketforestclassifi": [0, 13, 14, 70, 71], "rocket": [0, 13, 14, 23, 26, 36, 39, 70, 73], "rocketforestregressor": [0, 13, 14, 70, 71], "shapeletforestclassifi": [0, 13, 14, 64, 70, 71, 73], "shapeletforestembed": [0, 13, 14, 70], "shapeletforestregressor": [0, 13, 14, 64, 70, 71], "explan": [0, 4, 15, 16, 17, 18, 19, 20, 21, 27, 28, 70], "amplitudeimport": [0, 15, 21, 70], "equi": [0, 15, 21, 70], "probabl": [0, 4, 8, 13, 14, 15, 18, 21, 35, 36, 39, 40, 41, 42, 43, 70], "amplitud": [0, 15, 21, 49, 70], "intervalimport": [0, 15, 21, 70, 73], "shapeletimport": [0, 15, 21, 70], "plot_import": [0, 15, 21, 70], "plot": [0, 4, 15, 17, 18, 19, 20, 21, 57, 70, 73], "boxplot": [0, 15, 21, 70], "kneighborscounterfactu": [0, 17, 20, 70], "fit": [0, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 56, 65, 70, 73], "nearest": [0, 12, 17, 18, 20, 70], "neighbor": [0, 12, 17, 18, 20, 70], "prototypecounterfactu": [0, 18, 20, 70], "model": [0, 8, 13, 14, 18, 20, 23, 24, 25, 26, 31, 40, 42, 43, 65, 69, 70], "agnost": [0, 2, 3, 18, 20, 70], "approach": [0, 18, 20, 56, 69, 70, 73, 74], "construct": [0, 8, 18, 20, 37, 39, 42, 43, 48, 50, 64, 69, 70], "shapeletforestcounterfactu": [0, 19, 20, 70], "singl": [0, 13, 14, 16, 20, 32, 36, 39, 40, 41, 42, 43, 46, 55, 58, 59, 61, 70, 71], "sampl": [0, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 48, 49, 50, 55, 56, 57, 58, 59, 61, 66, 69, 70, 71, 73], "linear": [0, 26, 70], "both": [0, 8, 11, 12, 26, 48, 50, 55, 57, 58, 60, 61, 66, 69, 70], "randomshapeletclassifi": [0, 24, 26, 70], "randomshapeletregressor": [0, 24, 26, 70], "rocketclassifi": [0, 23, 26, 65, 70, 71], "rocketregressor": [0, 23, 26, 65, 70, 71], "evalu": [0, 13, 14, 18, 20, 27, 28, 42, 43, 47, 56, 70, 73], "compactness_scor": [0, 27, 28, 70], "compact": [0, 27, 28, 70], "score": [0, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 40, 41, 42, 43, 69, 70, 73], "plausability_scor": [0, 27, 28, 70], "plausibl": [0, 27, 28, 70], "proximity_scor": [0, 27, 28, 70], "relative_proximity_scor": [0, 27, 28, 70], "rel": [0, 27, 28, 61, 70], "validity_scor": [0, 27, 28, 70], "valid": [0, 7, 16, 20, 27, 28, 29, 31, 40, 41, 42, 43, 48, 55, 56, 58, 70, 71], "select": [0, 8, 12, 16, 20, 31, 33, 38, 39, 56, 57, 69, 70, 73, 74], "repeatedoutliersplit": [0, 29, 31, 70], "repeat": [0, 15, 21, 29, 31, 70], "cross": [0, 29, 31, 70], "outlier_train_test_split": [0, 13, 14, 30, 31, 70], "train": [0, 6, 7, 13, 14, 27, 28, 29, 30, 31, 36, 39, 40, 41, 42, 43, 56, 57, 58, 70, 73], "test": [0, 7, 13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 45, 47, 51, 56, 57, 58, 61, 64, 70, 73], "split": [0, 7, 13, 14, 29, 30, 31, 40, 41, 42, 43, 58, 60, 70, 73], "raw": [0, 39, 70], "tabular": [0, 39, 70], "represent": [0, 13, 14, 39, 42, 43, 65, 69, 70, 73], "featuretransform": [0, 33, 39, 70], "number": [0, 1, 2, 3, 6, 7, 8, 11, 12, 13, 14, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 56, 59, 61, 70, 73], "featur": [0, 13, 14, 23, 24, 25, 26, 32, 33, 36, 39, 40, 42, 43, 46, 56, 57, 70, 71, 74], "intervaltransform": [0, 8, 33, 39, 69, 70, 71], "emb": [0, 33, 39, 70], "per": [0, 8, 15, 19, 20, 21, 33, 35, 39, 70], "matrixprofiletransform": [0, 34, 39, 70], "paa": [0, 37, 39, 70], "peicewis": [0, 37, 39, 70], "aggreg": [0, 19, 20, 37, 39, 70], "approxim": [0, 8, 37, 39, 70], "pivottransform": [0, 35, 39, 70, 71], "pivot": [0, 8, 13, 14, 35, 39, 41, 42, 43, 64, 70], "proximitytransform": [0, 35, 39, 70], "condit": [0, 35, 39, 70], "randomshapelettransform": [0, 38, 39, 70, 71], "tranform": [0, 38, 39, 70], "rockettransform": [0, 36, 39, 70, 71, 73], "convolut": [0, 13, 14, 36, 39, 42, 43, 65, 70], "sax": [0, 15, 21, 27, 28, 37, 39, 70], "symbol": [0, 37, 39, 70], "piecewice_aggregate_approxim": [0, 37, 39, 70], "symbolic_aggregate_approxim": [0, 37, 39, 70], "extrashapelettreeclassifi": [0, 42, 43, 66, 70], "extra": [0, 4, 6, 7, 8, 15, 17, 18, 19, 20, 21, 42, 43, 58, 61, 69, 70], "extrashapelettreeregressor": [0, 42, 43, 66, 70, 71], "intervaltreeclassifi": [0, 42, 43, 70], "intervaltreeregressor": [0, 42, 43, 70], "pivottreeclassifi": [0, 42, 43, 70], "proximitytreeclassifi": [0, 41, 43, 70, 71], "branch": [0, 41, 43, 64, 70], "rockettreeclassifi": [0, 42, 43, 70, 71], "rockettreeregressor": [0, 42, 43, 70, 71], "shapelettreeclassifi": [0, 40, 41, 42, 43, 66, 70, 71], "shapelettreeregressor": [0, 13, 14, 42, 43, 66, 70, 71], "check_arrai": [0, 48, 50, 70], "input": [0, 4, 8, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 30, 31, 34, 35, 37, 39, 40, 41, 42, 43, 48, 49, 50, 51, 59, 61, 70, 73], "check_x_i": [0, 48, 50, 70], "mp": [1, 3, 12], "none": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 58, 61], "window": [1, 2, 3, 11, 12, 15, 21, 27, 28, 34, 37, 39, 58, 60, 74], "auto": [1, 3, 13, 14, 18, 20, 35, 39, 41, 43], "exclud": [1, 2, 3, 12, 34, 39], "0": [1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 50, 55, 56, 57, 58, 60, 61, 69, 73, 74], "2": [1, 2, 3, 8, 11, 12, 13, 14, 15, 16, 20, 21, 23, 24, 25, 26, 29, 30, 31, 33, 34, 36, 39, 40, 41, 42, 43, 48, 50, 51, 55, 56, 58, 59, 60, 61, 73], "max_dist": [1, 3], "best": [1, 3, 12, 13, 14, 16, 18, 20, 23, 24, 25, 26, 38, 39, 40, 42, 43, 61], "max_neighbour": [1, 3], "10": [1, 3, 12, 13, 14, 15, 21, 23, 24, 25, 26, 33, 35, 36, 38, 39, 41, 42, 43, 49, 61, 74], "min_neighbour": [1, 3], "max_motif": [1, 3], "return_dist": [1, 3, 12], "fals": [1, 2, 3, 7, 11, 12, 13, 14, 15, 18, 19, 20, 21, 24, 26, 27, 28, 37, 39, 47, 48, 49, 50, 55, 56, 58, 73], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 73], "paramet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 60, 61, 69, 71, 73], "arrai": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 48, 49, 50, 51, 55, 57, 58, 59, 61, 73], "like": [1, 2, 3, 4, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 50, 59], "n_sampl": [1, 2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 50, 55, 56, 57, 59, 61, 71, 73], "n_timestep": [1, 2, 3, 4, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 50, 55, 56, 57, 59, 61, 73], "ndarrai": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 48, 50, 51, 57, 73], "profile_s": [1, 2, 3, 12], "option": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 56, 58, 61, 69, 73, 74], "int": [1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 20, 21, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 48, 49, 50, 56, 61, 69], "float": [1, 2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 50, 51, 55, 56, 60], "size": [1, 2, 3, 9, 11, 12, 13, 14, 15, 21, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 56, 73], "math": [1, 3, 12, 61], "ceil": [1, 3, 12, 42, 43], "exact": [1, 2, 3, 11, 12, 13, 14, 15, 21, 32, 34, 36, 39], "exclus": [1, 2, 3, 12, 34, 39], "zone": [1, 3, 12, 34, 39], "str": [1, 3, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 20, 21, 27, 28, 33, 35, 37, 38, 39, 41, 42, 43, 46, 48, 49, 50, 56], "distanc": [1, 2, 3, 8, 13, 14, 15, 19, 20, 21, 22, 27, 28, 35, 38, 39, 41, 42, 43, 60, 64, 66, 71], "neighbour": [1, 3], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 56, 57, 58, 59, 61, 69, 71, 73], "bool": [1, 2, 3, 4, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51], "main": [1, 3, 56, 73], "motif_indici": [1, 3], "indici": [1, 3, 12, 29, 31], "motif_dist": [1, 3], "refer": [1, 2, 3, 8, 11, 12, 13, 14, 17, 18, 19, 20, 27, 28, 33, 36, 38, 39, 41, 43, 61, 70], "yeh": [1, 3, 12], "c": [1, 3, 12, 13, 14, 48, 50, 60, 73, 74], "m": [1, 3, 11, 12, 27, 28, 60, 61, 74], "2016": [1, 3, 12], "similar": [1, 3, 12, 16, 20, 34, 39, 57, 60, 61, 73], "join": [1, 2, 3, 12, 34, 39], "unifi": [1, 3, 12], "view": [1, 3, 12], "discord": [1, 3, 12], "In": [1, 2, 3, 8, 11, 12, 13, 14, 19, 20, 23, 24, 25, 26, 33, 39, 40, 41, 42, 43, 55, 56, 57, 58, 60, 61, 63, 69, 71, 73], "ieee": [1, 3, 12, 19, 20, 60], "16th": [1, 3, 12], "intern": [1, 2, 3, 11, 12, 13, 14, 19, 20, 42, 43, 60, 61], "confer": [1, 2, 3, 11, 12, 19, 20, 60, 61], "data": [1, 2, 3, 6, 7, 8, 11, 12, 13, 14, 16, 19, 20, 23, 24, 25, 26, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 48, 50, 56, 57, 58, 60, 61, 69], "mine": [1, 2, 3, 12, 13, 14, 19, 20, 33, 36, 39, 41, 43, 61], "icdm": [1, 3, 12, 19, 20], "mpi": [2, 3, 12], "n_segment": [2, 3], "boundri": [2, 3], "return_arc_curv": [2, 3], "If": [2, 3, 4, 7, 8, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 50, 56, 58, 61, 69, 74], "index": [2, 3, 11, 12, 13, 14, 15, 18, 21, 40, 41, 42, 43, 55, 59, 61], "must": [2, 3, 8, 11, 15, 21, 33, 36, 58, 60, 69, 74], "unless": [2, 3, 13, 14, 35, 38, 39, 40, 41, 42, 43, 48, 50, 58, 60], "identifi": [2, 3, 13, 14, 38, 39, 42, 43, 48, 50, 55, 58, 61, 73], "ignor": [2, 3, 11, 12, 13, 14, 15, 21, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 55], "self": [2, 3, 4, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 56], "region": [2, 3, 73], "around": [2, 3], "express": [2, 3, 8, 12, 13, 14, 34, 39, 42, 43, 56, 58], "arc": [2, 3], "curv": [2, 3], "start": [2, 3, 12, 15, 21], "arc_curv": [2, 3], "gharghabi": [2, 3], "shaghayegh": [2, 3], "2017": [2, 3], "viii": [2, 3], "domain": [2, 3, 49], "onlin": [2, 3], "semant": [2, 3], "superhuman": [2, 3], "perform": [2, 3, 13, 14, 27, 28, 33, 36, 39, 47, 48, 50, 56, 57, 61, 65], "level": [2, 3], "proceed": [2, 3, 8, 60, 61, 69], "get_metadata_rout": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "metadata": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "rout": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "thi": [4, 6, 7, 8, 11, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 50, 56, 57, 61, 65, 70, 71, 73, 74], "object": [4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 56, 60, 61, 73], "pleas": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "how": [4, 11, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 73], "mechan": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "work": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 61, 71, 73, 74], "metadatarequest": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "encapsul": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "inform": [4, 11, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 73], "get_param": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "deep": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "true": [4, 7, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 50, 51, 55, 56, 59, 60, 61], "default": [4, 7, 8, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 56, 57, 58, 60, 61, 69, 71, 73], "contain": [4, 7, 8, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 50, 51, 55, 58, 61], "subobject": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "ar": [4, 6, 7, 8, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 55, 56, 57, 58, 60, 61, 63, 64, 66, 69, 71, 73, 74], "param": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "dict": [4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 56, 58], "map": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 63], "set_param": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "set": [4, 7, 8, 11, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 50, 56, 58, 61, 71, 73, 74], "simpl": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 69, 74], "well": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "nest": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "pipelin": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 73], "latter": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "have": [4, 9, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 50, 55, 56, 57, 59, 60, 71, 73, 74], "form": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 73], "compon": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 58], "__": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "so": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 56, 73], "": [4, 8, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 50, 60, 61, 69, 73], "possibl": [4, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 50, 63, 74], "updat": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "instanc": [4, 8, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 50, 58], "counterfactu": [4, 21, 22, 27, 28, 73], "explain": [4, 22, 27, 28, 73], "term": [4, 13, 14, 17, 18, 19, 20, 36, 39, 59, 60], "close": [4, 17, 18, 19, 20, 48, 50], "desir": [4, 8, 16, 17, 18, 19, 20, 27, 28, 61, 69], "counterfact": [4, 17, 18, 19, 20], "closensess": [4, 17, 18, 19, 20], "fit_explain": [4, 15, 17, 18, 19, 20, 21], "kwarg": [4, 7, 15, 17, 18, 19, 20, 21], "argument": [4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 35, 38, 39, 41, 42, 43, 46, 58, 60, 61, 71, 73, 74], "ax": [4, 15, 17, 18, 19, 20, 21, 49, 57], "make_dict_filt": 5, "filter": [5, 7, 13, 14, 36, 39, 73], "make": [5, 48, 50, 60], "new": [5, 7, 13, 14, 16, 18, 20, 29, 31, 47, 57, 73, 74], "subject": 5, "op": 5, "verb": 5, "callabl": [5, 7, 9, 12, 15, 16, 20, 21, 27, 28, 46], "make_filt": 5, "creat": [5, 7, 8, 13, 14, 18, 40, 41, 42, 43, 55, 58, 74], "make_list_filt": 5, "base": [5, 6, 7, 8, 11, 13, 14, 15, 16, 20, 22, 25, 27, 28, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 58, 60, 74], "string": [5, 7, 13, 14, 35, 38, 39, 41, 42, 43, 56, 57, 58], "make_str_filt": 5, "version": [6, 7, 13, 14, 16, 20, 23, 24, 25, 26, 33, 34, 35, 37, 39, 40, 41, 42, 43, 58, 69, 73, 74], "tag": [6, 7, 47, 58], "descript": [6, 7, 8, 46, 58, 69], "uniqu": [6, 7, 27, 28, 58], "human": [6, 7], "readabl": [6, 7], "get_collect": [6, 7], "get_filenam": [6, 7], "ext": [6, 7], "extens": [6, 7, 58], "filenam": [6, 7], "archiv": [6, 7], "zipfil": [6, 7], "sort": [6, 7, 13, 14], "zip": [6, 7, 56, 58], "n_training_sampl": [6, 7], "url": [6, 7, 58], "properti": [6, 7, 13, 14, 33, 36], "download_url": [6, 7], "templat": [6, 7], "download": [6, 7, 56, 58, 74], "wildboar_requir": [6, 7, 58], "requir": [6, 7, 8, 11, 13, 14, 23, 24, 25, 26, 40, 41, 42, 43, 48, 50, 56, 58, 61, 69, 71, 74], "min": [6, 7, 9, 11, 42, 43, 49, 55, 61], "dictionari": [6, 7, 13, 14, 18, 19, 20, 35, 38, 39, 41, 42, 43, 50, 58], "timeout": [6, 7, 58], "abstract": [6, 7, 18, 37], "util": [7, 8, 9, 13, 14, 22, 42, 43, 59, 61], "outlier": [7, 13, 14, 22, 27, 28, 29, 30, 31, 58], "preprocess": [7, 15, 21, 22, 37, 39, 56, 57, 73], "cache_dir": [7, 58], "keep_last_vers": 7, "keep": [7, 13, 14, 23, 24, 25, 26, 40, 42, 43], "latest": [7, 58], "json": 7, "request": [7, 8, 56, 58, 61, 69, 74], "ucr": [7, 56, 58, 61, 73], "tini": [7, 56, 58], "format": [7, 32, 33, 34, 35, 36, 37, 38, 39, 58], "bake": [7, 73], "off": [7, 73], "create_cache_dir": 7, "progress": 7, "forc": [7, 48, 50, 56], "where": [7, 8, 11, 12, 13, 14, 23, 24, 25, 26, 30, 31, 33, 35, 38, 39, 40, 41, 42, 43, 49, 55, 58, 60, 61, 71, 73, 74], "wildboar_cach": 7, "miss": [7, 55, 59], "show": [7, 11, 49], "bar": 7, "while": [7, 13, 14, 40, 41, 42, 43, 56, 58, 73, 74], "re": [7, 13, 14, 56], "we": [7, 13, 14, 33, 35, 38, 39, 41, 42, 43, 47, 48, 49, 50, 55, 56, 57, 58, 60, 61, 63, 69, 71, 73, 74], "can": [7, 8, 13, 14, 23, 24, 25, 26, 40, 41, 42, 43, 46, 49, 55, 56, 57, 58, 59, 60, 61, 63, 69, 73, 74], "also": [7, 40, 41, 42, 43, 47, 56, 59, 60, 61, 66, 69, 71, 73, 74], "ani": [7, 8, 40, 41, 42, 43, 58, 59, 60], "newli": 7, "ad": [7, 13, 14, 42, 43], "still": [7, 74], "pend": 7, "dtype": [7, 48, 49, 50, 55, 56], "contigu": [7, 48, 50, 73], "merge_train_test": [7, 56, 58, 73], "return_extra": 7, "read": [7, 12, 13, 14, 20, 27, 28, 35, 38, 39, 41, 42, 43, 61, 73], "type": [7, 48, 49, 50, 66, 73], "_preprocess": 7, "take": [7, 33, 39, 40, 41, 42, 43, 58, 60], "np": [7, 8, 11, 13, 14, 15, 21, 27, 28, 33, 35, 38, 39, 41, 42, 43, 48, 49, 50, 51, 55, 57, 61], "ensur": [7, 16, 20, 29, 31, 48, 50, 58], "memori": [7, 13, 14, 48, 50, 61, 71, 73], "merg": [7, 41, 43, 58, 60], "exist": [7, 29, 31, 56, 71, 73], "partit": [7, 73], "alreadi": [7, 56, 74], "4": [7, 8, 11, 13, 14, 15, 21, 33, 36, 37, 39, 51, 55, 60, 61, 69, 71], "x_train": [7, 13, 14, 30, 31, 56, 58, 73], "x_test": [7, 13, 14, 27, 28, 30, 31, 56, 58, 73], "y_train": [7, 13, 14, 30, 31, 56, 58, 73], "y_test": [7, 13, 14, 30, 31, 56, 58, 73], "syntheticcontrol": [7, 56, 58], "600": [7, 56], "origin": [7, 13, 14, 15, 16, 20, 21, 27, 28, 32, 36, 39, 48, 50, 71, 73], "preserv": [7, 48, 49, 50, 73], "specif": [7, 13, 14, 35, 38, 39, 41, 42, 43, 47, 48, 50, 56, 57, 58, 71, 74], "doe": [7, 8, 29, 31, 61, 73], "shown": [7, 15, 21], "onli": [7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 40, 41, 42, 43, 48, 50, 56, 57, 58, 60, 61, 71, 73, 74], "yield": [7, 29, 31, 47, 57], "those": 7, "which": [7, 8, 11, 13, 14, 18, 20, 23, 24, 25, 26, 33, 39, 40, 41, 42, 43, 56, 58, 59, 60, 61, 69, 71, 73, 74], "f": [7, 8, 13, 14, 33, 39, 41, 43, 46, 48, 50, 57, 60, 69, 73], "attribut": [7, 13, 14, 15, 17, 18, 19, 20, 21, 32, 36, 38, 39, 40, 41, 42, 43, 45, 56, 58, 64, 73], "comparison": [7, 56], "spec": 7, "conjunct": 7, "appli": [7, 8, 40, 41, 42, 43, 56], "part": [7, 56, 57, 58, 59, 61], "depend": [7, 8, 12, 33, 39, 55, 61, 73, 74], "tupl": [7, 11, 13, 14, 35, 38, 39, 41, 42, 43, 47, 50, 71], "last": [7, 57, 58, 61, 73], "element": [7, 13, 14, 35, 38, 39, 41, 42, 43, 46, 51], "print": [7, 56, 73], "beef": [7, 56, 58], "470": [7, 56], "coffe": [7, 56, 58], "56": [7, 56], "286": [7, 56], "150": [7, 33, 39, 56], "1162": [7, 56], "82": [7, 56], "than": [7, 8, 12, 13, 14, 42, 43, 49, 56, 59, 60, 61, 73], "call": [7, 13, 14, 23, 24, 25, 26, 40, 42, 43, 47, 58], "without": [7, 46, 55, 58, 60], "reset": [7, 58], "root": [7, 15, 21], "n_outlier": [8, 29, 31, 69], "05": [8, 11, 13, 14, 18, 20, 29, 30, 31, 33, 39, 60, 69], "dbscan": 8, "ep": 8, "min_sampl": 8, "5": [8, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 26, 27, 28, 33, 36, 39, 42, 43, 49, 60, 61, 69], "metric": [8, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 35, 38, 39, 40, 41, 42, 43, 71], "euclidean": [8, 12, 13, 14, 15, 18, 19, 20, 21, 24, 26, 27, 28, 38, 39, 42, 43, 60, 61], "max_ep": 8, "inf": [8, 48, 50], "random_st": [8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 29, 30, 31, 32, 33, 35, 36, 38, 39, 41, 42, 43], "densiti": 8, "cluster": [8, 69], "fail": 8, "assign": [8, 69, 73], "By": [8, 13, 14, 15, 21, 35, 37, 39, 41, 43, 48, 49, 50, 55, 58, 61, 69, 71, 73], "class": [8, 30, 58, 69, 73], "consid": [8, 12, 13, 14, 27, 28, 30, 31, 41, 43, 73], "optic": 8, "when": [8, 12, 13, 14, 15, 21, 23, 24, 25, 26, 34, 37, 39, 40, 42, 43, 47, 48, 49, 50, 56, 58, 60, 61, 71, 73], "cluter": 8, "randomst": [8, 11, 13, 14, 15, 16, 20, 21, 29, 30, 31, 32, 33, 35, 36, 38, 39, 41, 42, 43], "seed": [8, 13, 14, 15, 21, 32, 33, 36, 38, 39, 41, 42, 43, 73], "x_outlier": [8, 69], "n_inlier": [8, 29, 31], "y_outlier": [8, 69], "labl": 8, "confusion_estim": 8, "difficulty_estim": 8, "transform": [8, 9, 13, 14, 15, 16, 18, 19, 20, 21, 22, 27, 28, 42, 43, 47, 69, 71], "simplest": [8, 56, 69], "variat": [8, 69], "tight": [8, 69], "emmott": [8, 68], "2013": [8, 60, 69], "reliabl": [8, 73], "multiclass": [8, 69], "For": [8, 12, 13, 14, 23, 24, 25, 26, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 56, 57, 58, 59, 61, 64, 65, 66, 71, 73, 74], "maxim": 8, "confus": [8, 69], "measur": [8, 13, 14, 27, 28, 35, 38, 39, 41, 42, 43, 60, 71], "digit": 8, "rang": [8, 13, 14, 35, 38, 39, 40, 41, 42, 43, 57, 61, 69], "accord": [8, 12, 13, 14, 36, 37, 39, 42, 43, 49, 58, 69], "final": [8, 13, 14, 47], "either": [8, 11, 30, 31, 38, 39, 40, 41, 42, 43, 56, 58, 61, 69, 73], "dispers": [8, 69], "guarante": [8, 73], "error": [8, 13, 14, 48, 50], "rais": [8, 48, 50], "ha": [8, 13, 14, 33, 37, 39, 41, 42, 43, 46, 48, 49, 50, 53, 55, 58, 60, 61, 71], "few": [8, 27, 28, 74], "n_class": [8, 13, 14, 40, 41, 42, 43], "support": [8, 12, 13, 14, 19, 20, 27, 28, 33, 36, 42, 43, 55, 56, 57, 58, 60, 69, 71, 73], "predict_proba": [8, 13, 14, 40, 41, 42, 43], "kernel": [8, 13, 14, 23, 24, 25, 26, 36, 39, 40, 42, 43, 69], "logist": [8, 69], "rbf": [8, 69], "befor": [8, 71, 74], "otherwis": [8, 13, 14, 27, 28, 48, 50], "suppli": [8, 15, 16, 20, 21], "hardest": [8, 69], "point": [8, 11, 40, 42, 43, 56, 58, 60, 69, 73], "quantiz": [8, 69], "should": [8, 13, 30, 31, 57, 58, 60, 73], "len": [8, 12, 15, 21], "denot": [8, 30, 31, 57, 60, 61], "simpler": 8, "multipl": [8, 13, 14, 15, 21, 35, 38, 39, 42, 43, 55, 58, 61, 69, 71, 73], "e": [8, 11, 13, 14, 19, 20, 27, 28, 42, 43, 48, 50, 55, 56, 57, 58, 60, 61, 69, 73, 74], "g": [8, 11, 18, 20, 38, 39, 56, 57, 60, 61, 69, 73, 74], "would": [8, 13, 14, 23, 24, 25, 26, 35, 38, 39, 40, 41, 42, 43, 57], "mix": 8, "easi": [8, 49, 56], "difficult": [8, 69], "16": [8, 69], "3": [8, 11, 13, 14, 33, 36, 39, 48, 50, 51, 55, 57, 59, 60, 61, 69, 71], "percentil": [8, 13, 14, 69], "procedur": 8, "effect": [8, 13, 14, 37, 39, 41, 43, 48, 50, 71], "closest": [8, 18, 27, 28], "facil": 8, "locat": [8, 58, 61, 74], "thei": [8, 13, 14, 35, 39, 40, 41, 42, 43, 58, 61], "distribut": [8, 13, 14, 36, 37, 39, 40, 41, 42, 43, 56, 74], "among": [8, 18], "avail": [8, 58, 66], "suffici": 8, "fewer": [8, 27, 28], "mai": [8, 13, 14, 23, 24, 25, 26, 40, 42, 43, 71], "note": [8, 11, 12, 13, 14, 19, 20, 23, 24, 25, 26, 29, 31, 33, 39, 40, 42, 43, 49, 57, 61], "packag": [8, 56, 69, 74], "networkx": [8, 69], "da": [8, 60, 69], "dietterich": [8, 69], "t": [8, 13, 14, 23, 24, 25, 26, 27, 28, 33, 34, 36, 38, 39, 40, 41, 42, 43, 48, 50, 60, 61, 69, 71, 74], "fern": [8, 69], "wong": [8, 69], "w": [8, 11, 13, 14, 23, 24, 25, 26, 40, 41, 42, 43, 56, 58, 69], "systemat": [8, 69], "anomali": [8, 30, 31, 69], "benchmark": [8, 56, 65, 68], "real": [8, 13, 14, 55, 60, 69], "acm": [8, 60, 61, 69], "sigkdd": [8, 61, 69], "workshop": [8, 69], "pp": [8, 61, 69], "21": [8, 69], "n_cluster": 8, "farther": 8, "other": [8, 29, 31, 56, 58, 61, 69, 73], "satisfi": [8, 60], "constraint": [8, 45], "allow": [8, 33, 39, 40, 41, 42, 43, 47, 48, 50, 58, 69, 73], "n_dim": [9, 12, 27, 28, 30, 31, 34, 39, 40, 41, 42, 43, 55, 56, 57, 59, 61, 71, 73], "max": [9, 11, 42, 43, 49, 60, 61], "result": [9, 13, 14, 16, 18, 20, 30, 31, 38, 39, 40, 41, 42, 43, 48, 49, 50, 51, 57, 60, 69], "zero": [9, 13, 14, 36, 39, 40, 41, 42, 43, 57, 60, 73], "unit": [9, 57, 60, 73], "deviat": [9, 11, 33, 39, 69], "n_shortest": 9, "r": [11, 13, 14, 18, 20, 23, 24, 25, 26, 33, 35, 38, 39, 40, 41, 42, 43, 60, 74], "x_timestep": [11, 61], "first": [11, 12, 13, 14, 35, 38, 39, 41, 42, 43, 48, 50, 58, 59, 61, 69, 74], "y_timestep": [11, 61], "second": [11, 12, 13, 14, 35, 38, 39, 41, 42, 43, 58, 61], "out": [11, 13, 14, 73], "vector": [11, 48, 50], "penal": 11, "store": [11, 13, 14, 56], "instead": [11, 13, 14, 23, 24, 25, 26, 29, 31, 40, 42, 43, 61, 73], "sample_weight": [11, 13, 14, 23, 24, 25, 26, 27, 28, 40, 41, 42, 43], "init": 11, "mm": 11, "max_stabl": 11, "learning_r": 11, "decai": 11, "9": [11, 33, 39, 58], "tol": 11, "1e": [11, 27, 28], "max_epoch": 11, "50": [11, 56, 61], "return_cost": 11, "verbos": [11, 13, 14, 18, 19, 20, 74], "penalti": [11, 60], "control": [11, 13, 14, 15, 21, 32, 35, 36, 39, 74], "exp": [11, 13, 14, 42, 43], "influenc": [11, 13, 14, 23, 24, 25, 26, 40, 42, 43], "much": [11, 71], "contribut": 11, "m_timestep": [11, 12], "initi": [11, 18, 58], "ssg": 11, "minim": 11, "equival": 11, "stochast": 11, "subgradi": 11, "epoch": 11, "lowest": 11, "cost": [11, 19, 20, 60, 61], "unchang": [11, 32, 33, 34, 35, 36, 37, 38, 39], "rate": 11, "minmum": 11, "runtim": 11, "pseudo": [11, 16, 20], "dataset": [11, 13, 14, 15, 21, 22, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 49, 50, 55, 57, 58, 61, 69], "27442791e": 11, "01": [11, 33, 39], "19807473e": 11, "02": [11, 33, 39], "77490053e": 11, "60441308e": 11, "31930140e": 11, "17437783e": 11, "43925941e": 11, "60983434e": 11, "72118437e": 11, "7": [11, 13, 14, 33, 36, 39, 61], "73352049e": 11, "56701557e": 11, "53269314e": 11, "33366128e": 11, "09010828e": 11, "97539989e": 11, "71443248e": 11, "42492836e": 11, "71408958e": 11, "82518334e": 11, "35671953e": 11, "26442901e": 11, "38342948e": 11, "11248815e": 11, "99355168e": 11, "00": [11, 33, 39], "08588712e": 11, "35954194e": 11, "78345146e": 11, "41023092e": 11, "99915956e": 11, "82717462e": 11, "71687181e": 11, "55819192e": 11, "28805337e": 11, "06653283e": 11, "25159669e": 11, "02389872e": 11, "39410523e": 11, "34687887e": 11, "03": 11, "98654485e": 11, "85832342e": 11, "6": [11, 33, 39, 55, 60, 61, 73], "56436416e": 11, "25302660e": 11, "77697444e": 11, "8": [11, 33, 39, 49, 71], "24606299e": 11, "76357782e": 11, "27083874e": 11, "44590342e": 11, "64184026e": 11, "03608265e": 11, "13964118e": 11, "33595675e": 11, "09954847e": 11, "61924171e": 11, "47433305e": 11, "29583168e": 11, "00425122e": 11, "80524683e": 11, "70210329e": 11, "40259039e": 11, "59657389e": 11, "52170730e": 11, "54666287e": 11, "93690730e": 11, "23968406e": 11, "upper": [11, 13, 14, 29, 31, 35, 36, 38, 39, 41, 42, 43, 61], "keogh": [11, 61], "2002": 11, "28th": 11, "veri": [11, 57, 60], "larg": [11, 49, 56, 60, 64], "same": [11, 13, 14, 15, 21, 40, 41, 42, 43, 49, 57, 58, 60, 61, 71, 73], "min_dist": 11, "cumul": 11, "step": [11, 56, 57, 73], "return_index": [11, 12, 61], "precomput": [11, 13, 14, 23, 24, 25, 26, 40, 42, 43], "x_indic": 11, "y_indic": 11, "provid": [11, 18, 33, 36, 58, 60, 73, 74], "n": [11, 61, 69, 73], "omitaomu": 11, "o": [11, 13, 14, 18, 41, 43, 61], "2021": [11, 27, 28], "pattern": [11, 60, 69], "recognit": 11, "44": 11, "2231": 11, "2240": 11, "diagon": 11, "raec1aca773": 11, "dtw": [12, 18, 22, 38, 39, 41, 42, 43, 60, 61], "dim": [12, 57, 61, 71], "n_job": [12, 13, 14, 23, 24, 25, 26, 32, 33, 34, 35, 36, 38, 39, 44], "everi": [12, 40, 41, 42, 43, 48, 50, 61], "trivial": 12, "subsequenec": 12, "xn_timestep": 12, "yn_timestep": 12, "broadcast": [12, 16, 20, 61], "job": [12, 13, 14, 32, 34, 36, 38, 39, 44], "warn": [12, 13, 48, 50, 71], "metric_param": [12, 13, 14, 15, 20, 21, 24, 26, 27, 28, 35, 38, 39, 41, 42, 43, 60, 61, 71], "full": [12, 27, 28, 33, 39, 56, 61, 71, 73], "_metric": [12, 20, 27, 28], "about": [12, 13, 14, 20, 27, 28, 33, 35, 36, 38, 39, 41, 42, 43, 48, 50, 61, 73], "parallel": [12, 13, 14, 32, 36, 38, 39, 44], "ndim": [12, 48, 50, 73], "scalar": [12, 46, 49, 61], "search": [12, 40, 41, 42, 43, 60], "_subsequence_metr": 12, "mani": [12, 13, 14, 48, 50, 57, 61], "equal": [12, 13, 14, 35, 39, 40, 41, 42, 43, 55, 56, 60, 69], "good": [12, 27, 28, 69], "run": [12, 13, 14, 32, 36, 38, 39, 47, 56, 57, 74], "dist": [12, 42, 43, 61], "minumum": [12, 49], "posit": [12, 13, 14, 15, 21, 32, 36, 39, 60], "threshold": [12, 13, 14, 15, 18, 21, 37, 42, 43, 64, 66, 71], "max_match": 12, "less": [12, 13, 14, 42, 43, 56, 57, 73], "behaviour": 12, "order": [12, 13, 14, 27, 28, 40, 41, 42, 43, 48, 49, 50, 55, 61, 73], "occurr": 12, "top": [12, 15, 21], "length": [12, 13, 14, 42, 43, 46, 48, 50, 51, 57, 59, 60], "below": [12, 58], "n_match": 12, "x_sampl": [12, 61], "y_sampl": [12, 61], "n_subsequ": [12, 61], "closer": [12, 18, 27, 28], "treshold": 12, "vicin": 12, "within": [12, 61], "timestep": [12, 27, 28, 36, 39, 48, 50, 55, 56, 57, 59, 61, 73], "anoth": [12, 58, 69], "higher": 12, "n_estim": [13, 14], "max_sampl": [13, 14], "bootstrap": [13, 14], "oob_scor": [13, 14], "class_weight": [13, 14, 23, 24, 25, 26, 41, 42, 43], "warm_start": [13, 14], "base_estim": [13, 14, 71], "deprec": [13, 14, 16, 20, 33, 39, 41, 42, 43, 71], "meta": [13, 14], "subset": [13, 14, 23, 24, 25, 26, 40, 41, 42, 43], "draw": [13, 14], "drawn": [13, 14], "replac": [13, 14, 58, 74], "balanc": [13, 14, 41, 42, 43], "associ": [13, 14, 41, 42, 43], "invers": [13, 14, 41, 42, 43], "proport": [13, 14, 41, 42, 43], "frequenc": [13, 14, 41, 42, 43, 49], "reus": [13, 14, 57, 73], "solut": [13, 14], "previou": [13, 14, 57], "add": [13, 14, 47, 49, 71], "just": [13, 14, 55, 74], "whole": [13, 14], "core": [13, 14, 32, 33, 35, 36, 39], "integ": [13, 14, 32, 36, 39, 49, 69], "resampl": [13, 14, 15, 21, 32, 36, 39], "output": [13, 14, 32, 33, 34, 35, 36, 37, 38, 39, 48, 50, 61, 73], "predict": [13, 14, 18, 19, 20, 23, 24, 25, 26, 27, 28, 40, 41, 42, 43, 65], "sinc": [13, 14, 16, 20, 23, 24, 25, 26, 33, 39, 40, 41, 42, 43, 57, 61, 69, 73], "been": [13, 14, 33, 39, 49, 60, 71], "remov": [13, 14, 16, 20, 42, 43, 46, 71], "base_estimator_": [13, 14], "grow": [13, 14], "estimators_samples_": [13, 14], "member": [13, 14], "reduc": [13, 14, 33, 39, 56], "footprint": [13, 14], "thu": [13, 14], "fetch": [13, 14, 74], "slower": [13, 14, 61], "expect": [13, 14, 23, 24, 25, 26, 34, 39, 40, 42, 43, 57, 69, 73], "decision_funct": [13, 14], "decis": [13, 14, 40, 41, 42, 43, 64], "function": [13, 14, 33, 56, 57, 58, 60, 61, 73], "spars": [13, 14, 40, 41, 42, 43, 48, 50], "n_featur": [13, 14, 23, 24, 25, 26, 34, 35, 37, 39, 40, 41, 42, 43], "matric": [13, 14], "accept": [13, 14, 48, 50, 56, 57, 58, 61, 73], "column": [13, 14, 48, 50, 58, 59], "correspond": [13, 14, 40, 41, 42, 43], "appear": [13, 14], "classes_": [13, 14, 18, 20, 40, 41, 42, 43], "special": [13, 14, 73], "case": [13, 14, 60], "build": [13, 14, 41, 43, 73], "target": [13, 14, 18, 20, 34, 35, 37, 39, 40, 41, 42, 43, 50, 74], "highest": [13, 14], "do": [13, 14, 40, 41, 42, 43, 60, 61, 71, 74], "resort": [13, 14], "vote": [13, 14], "predict_log_proba": [13, 14], "log": [13, 14, 33, 37, 39, 71], "p": [13, 14, 17, 18, 19, 20, 27, 28, 60, 61], "repres": [13, 14, 55, 59, 60, 65], "accuraci": [13, 14, 23, 24, 25, 26, 27, 28, 40, 41, 42, 43], "multi": [13, 14, 23, 24, 25, 26, 33, 39, 40, 41, 42, 43, 48, 50, 69], "harsh": [13, 14, 23, 24, 25, 26, 40, 41, 42, 43], "you": [13, 14, 23, 24, 25, 26, 40, 41, 42, 43, 71, 73, 74], "correctli": [13, 14, 23, 24, 25, 26, 40, 41, 42, 43, 71], "n_output": [13, 14, 23, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "100": [13, 14, 15, 18, 20, 21, 35, 39, 41, 43, 49, 56], "coeffici": [13, 14, 23, 24, 25, 26, 40, 42, 43], "determin": [13, 14, 16, 20, 23, 24, 25, 26, 29, 31, 33, 39, 40, 42, 43, 58, 69], "defin": [13, 14, 23, 24, 25, 26, 35, 37, 38, 39, 40, 41, 42, 43, 58], "frac": [13, 14, 23, 24, 25, 26, 40, 42, 43], "u": [13, 14, 23, 24, 25, 26, 40, 42, 43], "v": [13, 14, 23, 24, 25, 26, 40, 42, 43, 58, 60], "residu": [13, 14, 23, 24, 25, 26, 40, 42, 43], "sum": [13, 14, 23, 24, 25, 26, 40, 42, 43], "squar": [13, 14, 15, 21, 23, 24, 25, 26, 40, 42, 43], "y_true": [13, 14, 23, 24, 25, 26, 40, 42, 43], "y_pred": [13, 14, 23, 24, 25, 26, 27, 28, 40, 42, 43], "total": [13, 14, 23, 24, 25, 26, 40, 42, 43], "neg": [13, 14, 23, 24, 25, 26, 40, 41, 42, 43], "becaus": [13, 14, 23, 24, 25, 26, 40, 42, 43], "arbitrarili": [13, 14, 23, 24, 25, 26, 40, 42, 43], "wors": [13, 14, 23, 24, 25, 26, 40, 42, 43], "constant": [13, 14, 23, 24, 25, 26, 40, 42, 43], "alwai": [13, 14, 23, 24, 25, 26, 29, 31, 40, 42, 43, 60], "disregard": [13, 14, 23, 24, 25, 26, 40, 42, 43], "some": [13, 14, 23, 24, 25, 26, 40, 42, 43, 47, 48, 50, 55, 56, 59, 74], "n_samples_fit": [13, 14, 23, 24, 25, 26, 40, 42, 43], "multioutput": [13, 14, 23, 24, 25, 26, 40, 42, 43], "uniform_averag": [13, 14, 23, 24, 25, 26, 40, 42, 43], "23": [13, 14, 23, 24, 25, 26, 40, 42, 43], "consist": [13, 14, 23, 24, 25, 26, 40, 42, 43, 61], "r2_score": [13, 14, 23, 24, 25, 26, 40, 42, 43], "except": [13, 14, 23, 24, 25, 26, 40, 42, 43, 58, 69], "multioutputregressor": [13, 14, 23, 24, 25, 26, 40, 42, 43], "baseforestclassifi": 13, "estimator_param": 13, "max_depth": [13, 14, 40, 41, 42, 43], "min_samples_split": [13, 14, 40, 41, 42, 43], "min_samples_leaf": [13, 14, 40, 41, 42, 43, 71], "min_impurity_decreas": [13, 14, 40, 41, 42, 43], "criterion": [13, 14, 41, 42, 43, 71], "entropi": [13, 14, 41, 42, 43], "tree": [13, 14, 22, 64, 71], "baseforestregressor": 13, "squared_error": [13, 14, 42, 43], "baseshapeletforestclassifi": 13, "n_shapelet": [13, 14, 15, 21, 24, 26, 38, 39, 42, 43, 71], "min_shapelet_s": [13, 14, 15, 18, 20, 21, 24, 26, 38, 39, 42, 43], "max_shapelet_s": [13, 14, 15, 18, 20, 21, 24, 26, 38, 39, 42, 43], "directli": [13, 58], "baseshapeletforestregressor": 13, "log2": [13, 14, 15, 21, 33, 37, 39, 42, 43, 71], "depth": [13, 14, 41, 42, 43, 74], "expand": [13, 14, 42, 43], "until": [13, 14, 42, 43], "leav": [13, 14, 40, 41, 42, 43], "pure": [13, 14, 42, 43], "node": [13, 14, 36, 39, 40, 41, 42, 43], "leaf": [13, 14, 40, 41, 42, 43], "introduc": [13, 14, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 53, 71], "impur": [13, 14, 41, 42, 43], "decreas": [13, 14, 41, 42, 43], "larger": [13, 14, 27, 28, 42, 43, 49, 59, 73], "grid": [13, 14, 35, 38, 39, 41, 42, 43], "mandatori": [13, 14, 35, 38, 39, 41, 42, 43], "one": [13, 14, 15, 21, 35, 38, 39, 41, 42, 43, 46, 56, 61, 64, 73], "specifii": [13, 14, 35, 38, 39, 41, 42, 43], "over": [13, 14, 15, 21, 27, 28, 35, 38, 39, 41, 42, 43, 60, 71, 73], "give": [13, 14, 15, 21, 35, 38, 39, 41, 42, 43, 65], "follow": [13, 14, 33, 35, 36, 38, 39, 41, 42, 43, 56, 57, 58, 60, 61, 73, 74], "min_r": [13, 14, 35, 38, 39, 41, 42, 43], "max_r": [13, 14, 35, 38, 39, 41, 42, 43], "num_r": [13, 14, 35, 38, 39, 41, 42, 43], "gini": [13, 14, 41, 42, 43], "scaled_euclidean": [13, 14, 42, 43, 60, 61], "y_hat": [13, 14], "mse": [13, 14, 42, 43, 71], "wa": [13, 14, 16, 20, 42, 43, 71], "v1": [13, 14, 42, 43, 56, 58], "forestmixin": 13, "n_interv": [13, 14, 15, 21, 33, 37, 39, 42, 43, 71], "sqrt": [13, 14, 15, 21, 33, 37, 39, 42, 43], "fix": [13, 14, 33, 39, 42, 43, 71], "summar": [13, 14, 33, 39, 42, 43], "mean_var_std": [13, 14], "sample_s": [13, 14, 33, 39, 42, 43], "min_siz": [13, 14, 33, 36, 39, 42, 43, 71], "max_siz": [13, 14, 33, 36, 39, 42, 43, 71], "contamin": [13, 14, 30, 31], "strategi": [13, 14, 29, 31, 36, 37, 39], "offset": [13, 14], "offset_": [13, 14], "model_select": [13, 14, 22, 73], "sklearn": [13, 14, 48, 50, 69, 73], "balanced_accuracy_scor": [13, 14], "test_siz": [13, 14, 29, 30, 31, 73], "anomalies_train_s": [13, 14, 30, 31], "8674": [13, 14], "fit_predict": [13, 14], "Not": [13, 14], "present": [13, 14, 58], "api": [13, 14, 32, 33, 34, 35, 36, 37, 38, 39, 55, 70, 71, 73], "convent": [13, 14, 47, 48, 50, 56, 64, 73], "n_pivot": [13, 14, 35, 39, 41, 42, 43], "pivot_sampl": [13, 14, 41, 43], "metric_sampl": [13, 14, 35, 39, 41, 43], "metric_factori": [13, 14, 41, 43, 71], "uniform": [13, 14, 35, 36, 37, 39, 41, 43, 57, 61], "parameter": [13, 14, 41, 43], "suggest": [13, 14, 41, 43], "luca": [13, 14, 41, 43], "2019": [13, 14, 33, 39, 41, 43, 74], "2020": [13, 14, 17, 18, 19, 20, 27, 28, 36, 39, 41, 43], "custom": [13, 14, 33, 39, 41, 43], "combin": [13, 14, 18, 33, 39, 41, 43], "sub": [13, 14, 41, 43], "benjamin": [13, 14, 41, 43], "ahm": [13, 14, 41, 43], "shifaz": [13, 14, 41, 43], "charlott": [13, 14, 41, 43], "pelleti": [13, 14, 41, 43], "lachlan": [13, 14, 41, 43], "neill": [13, 14, 41, 43], "nayyar": [13, 14, 41, 43], "zaidi": [13, 14, 41, 43], "bart": [13, 14, 41, 43], "goethal": [13, 14, 41, 43], "fran\u00e7oi": [13, 14, 36, 39, 41, 43], "petitjean": [13, 14, 36, 39, 41, 43], "geoffrei": [13, 14, 36, 39, 41, 43], "webb": [13, 14, 36, 39, 41, 43], "scalabl": [13, 14, 41, 43], "knowledg": [13, 14, 17, 19, 20, 27, 28, 33, 36, 39, 41, 43, 60, 61], "discoveri": [13, 14, 33, 36, 39, 41, 43, 61], "n_kernel": [13, 14, 23, 26, 36, 39, 42, 43], "normal": [13, 14, 15, 21, 23, 24, 25, 26, 30, 31, 36, 37, 39, 42, 43, 49, 57, 60, 71], "sampling_param": [13, 14, 23, 26, 36, 39, 42, 43], "kernel_s": [13, 14, 23, 26, 36, 39, 42, 43, 71], "bias_prob": [13, 14, 23, 26, 36, 39, 42, 43], "normalize_prob": [13, 14, 23, 26, 36, 39, 42, 43], "padding_prob": [13, 14, 23, 26, 36, 39, 42, 43], "11": [13, 14, 36, 39], "13": [13, 14, 36, 39], "bia": [13, 14, 36, 39], "pad": [13, 14, 36, 39], "processor": [13, 14, 38, 39, 74], "alpha": [13, 14, 23, 24, 25, 26, 42, 43, 49], "current": [13, 14, 18, 42, 43, 56, 57, 58, 71, 74], "ab": [13, 14, 42, 43], "toward": [13, 14, 18, 42, 43, 47], "increas": [13, 14, 42, 43], "independeth": [13, 14, 42, 43], "sparse_output": [13, 14], "unsupervis": [13, 14, 34, 35, 37, 39], "high": [13, 14], "dimension": [13, 14], "fall": [13, 14, 60, 73], "lead": [13, 14, 71], "code": [13, 14, 57, 61, 71], "ones": [13, 14], "csr": [13, 14], "bin": [15, 21, 37, 39, 49, 69, 74], "n_bin": [15, 21, 27, 28, 37, 39], "n_repeat": [15, 21], "discret": [15, 21, 49, 69], "permut": [15, 21], "show_bin": [15, 21], "show_grid": [15, 21], "scorer": [15, 21], "were": [15, 21, 59], "annot": [15, 21, 22], "axi": [15, 21, 40, 41, 42, 43, 46, 48, 50, 57, 61], "mappabl": [15, 21], "scalarmapp": [15, 21], "colorbar": [15, 21], "specici": [15, 21], "least": [15, 21, 48, 50], "importances_": [15, 21], "components_": [15, 21], "permuteimport": 15, "kernel_scal": [15, 21], "25": [15, 21, 41, 43, 60, 69], "train_x": [16, 20], "train_i": [16, 20], "valid_scor": [16, 20], "method_arg": [16, 20], "basecounterfactu": [16, 20], "infer": [16, 20], "most": [16, 20, 55, 59, 69, 74], "appropri": [16, 20, 59], "_counterfactu": [16, 20], "renam": [16, 20, 33, 39, 71], "success": [16, 20], "stabl": [16, 20, 30, 31, 55], "x_counterfactu": [16, 20, 27, 28], "karlsson": [17, 19, 20, 27, 28], "reban": [17, 19, 20, 27, 28], "j": [17, 19, 20, 27, 28, 61], "papapetr": [17, 19, 20, 27, 28], "gioni": [17, 19, 20, 27, 28], "local": [17, 19, 20, 27, 28], "tweak": [17, 19, 20, 27, 28], "system": [17, 19, 20, 27, 28, 56, 58, 74], "62": [17, 19, 20, 27, 28], "1671": [17, 19, 20, 27, 28], "1700": [17, 19, 20, 27, 28], "explainer_": [17, 20], "dynamictimewarptransform": 18, "gamma": 18, "move": [18, 41, 43, 60], "euclideantransform": 18, "space": [18, 49, 61], "knearestprototypesampl": 18, "prototype_indici": 18, "metric_transform": 18, "prototyp": 18, "new_counterfactu": 18, "nearest_index": 18, "sample_mov": 18, "sampla": 18, "knearestshapeletprototypesampl": 18, "shapeletprototypesampl": 18, "metrictransform": 18, "predictevalu": 18, "probabilityevalu": 18, "max_it": [18, 20], "step_siz": [18, 20], "n_prototyp": [18, 20], "samsten": [18, 20], "isak": [18, 20], "estimator_": [18, 20], "partitions_": [18, 20], "prototypesampl": [18, 20], "target_": [18, 20], "targetevalu": [18, 20], "prototype_indic": 18, "helper": 18, "wai": [18, 57], "abc": 18, "inherit": 18, "_o": 18, "sample_shapelet": 18, "uniformprototypesampl": 18, "uniformli": [18, 37, 39, 42, 43], "weighteddynamictimewarptransform": 18, "epsilon": [19, 20, 60, 71], "batch_siz": [19, 20], "max_path": [19, 20], "revers": [19, 20], "2018": [19, 20], "via": [19, 20], "irrevers": [19, 20], "paths_": [19, 20], "x_true": [20, 27, 28], "normalized_euclidean": [20, 27, 28, 60, 61], "ensembl": [22, 69, 71, 73], "linear_model": [22, 65, 71, 73], "variable_len": [22, 48, 50, 59], "10000": [23, 26], "fit_intercept": [23, 24, 25, 26], "cv": [23, 24, 25, 26], "gcv_mode": [23, 24, 25, 26], "1000": [24, 26, 36, 38, 39], "basetransformclassifi": 25, "basetransformestim": 25, "basetransformregressor": 25, "transformridgecv": 25, "transformridgeclassifiercv": 25, "atol": [27, 28], "08": [27, 28], "n_timetep": [27, 28], "differ": [27, 28, 29, 31, 58, 59, 60, 61, 73], "overlap": [27, 28, 33, 39], "toler": [27, 28, 60], "x_plausibl": [27, 28], "y_plausibl": [27, 28], "y_counterfactu": [27, 28], "typic": [27, 28, 61, 73], "m_sampl": [27, 28], "individu": [27, 28, 57], "plausabl": [27, 28], "incic": [27, 28], "better": [27, 28], "delanei": [27, 28], "green": [27, 28], "d": [27, 28, 33, 39, 56, 58, 60, 61], "kean": [27, 28], "arxiv": [27, 28, 38, 39], "2009": [27, 28], "13211v2": [27, 28], "x_nativ": [27, 28], "y_nativ": [27, 28], "captur": [27, 28, 73], "nativ": [27, 28], "n_nativ": [27, 28], "candid": [27, 28], "n_counterfactu": [27, 28], "avareg": [27, 28], "smyth": [27, 28], "b": [27, 28, 61], "interpret": [27, 28, 33, 39], "divers": [27, 28], "2101": [27, 28], "09056v1": [27, 28], "correct": [27, 28, 45, 63], "n_split": [29, 31], "shuffl": [29, 31, 73], "total_n_outli": [29, 31], "iter": [29, 31, 56], "psudo": [29, 30, 31], "contrari": [29, 31], "fold": [29, 31], "insert": [29, 31], "repeatedli": [29, 31, 56, 73], "get_n_split": [29, 31], "group": [29, 31], "compat": [29, 31, 32, 33, 35, 36, 38, 39], "train_idx": [29, 31], "test_idx": [29, 31], "normal_class": [30, 31], "state": [30, 31, 35, 39, 57, 65], "anomal": [30, 31], "train_test_split": [30, 31, 73], "basefeatureengineertransform": [32, 33, 35, 36, 38, 39], "engin": [32, 60], "embedding_": [32, 36, 38, 39], "embed": [32, 33, 35, 36, 38, 39, 65], "underli": [32, 36, 38, 39], "n_dimens": [32, 33, 35, 36, 38, 39, 48, 50], "fit_transform": [32, 33, 34, 35, 36, 37, 38, 39], "set_output": [32, 33, 34, 35, 36, 37, 38, 39], "panda": [32, 33, 34, 35, 36, 37, 38, 39], "configur": [32, 33, 34, 35, 36, 37, 38, 39, 61, 65, 73, 74], "datafram": [32, 33, 34, 35, 36, 37, 38, 39], "catch22": [33, 39], "_summar": [33, 39], "x_t": [33, 39], "19633603e": [33, 39], "51047206e": [33, 39], "90000000e": [33, 39], "80000000e": [33, 39], "48441896e": [33, 39], "73293560e": [33, 39], "21476510e": [33, 39], "70000000e": [33, 39], "00000000e": [33, 39], "70502518e": [33, 39], "60000000e": [33, 39], "42857143e": [33, 39], "26666667e": [33, 39], "89974643e": [33, 39], "31570726e": [33, 39], "50000000e": [33, 39], "90873852e": [33, 39], "47311800e": [33, 39], "intervalmixin": 33, "It": [33, 73], "_get_feature_engin": [33, 36], "mean_var_slop": [33, 39, 42, 43], "non": [33, 39, 48, 50, 61], "possibli": [33, 39], "randomli": [33, 38, 39, 66], "slope": [33, 39], "paralel": [33, 39], "releas": [33, 39], "lock": [33, 39], "gil": [33, 39], "As": [33, 39, 56, 58, 60, 61, 73], "varianc": [33, 39, 57, 60, 73], "suit": [33, 39, 47, 61], "futur": [33, 39, 56, 71], "downstream": [33, 39], "project": [33, 39, 74], "own": [33, 39], "cython": [33, 39, 61], "lubba": [33, 39], "carl": [33, 39], "h": [33, 39], "sarab": [33, 39], "sethi": [33, 39], "philip": [33, 39], "knaut": [33, 39], "simon": [33, 39], "schultz": [33, 39], "ben": [33, 39], "fulcher": [33, 39], "nick": [33, 39], "jone": [33, 39], "canon": [33, 39], "characterist": [33, 39], "33": [33, 39], "1821": [33, 39], "1852": [33, 39], "15": [33, 39], "timepoint": [33, 39], "std": [33, 39, 60], "12": [33, 39, 61, 74], "matrixprofil": [34, 39], "fit_param": [34, 35, 37, 39], "addit": [34, 35, 37, 39, 56, 59, 61, 73], "x_new": [34, 35, 37, 39], "n_features_new": [34, 35, 37, 39], "pivotmixin": 35, "rocketmixin": 36, "dempster": [36, 39], "angu": [36, 39], "exception": [36, 39], "accur": [36, 39, 63], "34": [36, 39, 61, 73], "1454": [36, 39], "1495": [36, 39], "51333333": [36, 39], "11526939": [36, 39], "47333333": [36, 39], "04712544": [36, 39], "24": [36, 39], "82912261": [36, 39], "52666667": [36, 39], "26611524": [36, 39], "54": [36, 39, 61], "98047216": [36, 39], "81260641": [36, 39], "54666667": [36, 39], "71210092": [36, 39], "35333333": [36, 39], "28841158": [36, 39], "25333333": [36, 39], "82203705": [36, 39], "72938203": [36, 39], "45333333": [36, 39], "53756324": [36, 39], "24666667": [36, 39], "8380654": [36, 39], "68666667": [36, 39], "80533684": [36, 39], "26": [36, 39, 57], "41709413": [36, 39], "65634235": [36, 39], "66": [36, 39], "94724793": [36, 39], "32666667": [36, 39], "85575661": [36, 39], "67630249": [36, 39], "piecewic": 37, "get_threshold": 37, "calcul": 37, "suitabl": 37, "normalbin": 37, "assum": [37, 39, 49, 55, 57, 58, 59], "uniformbin": 37, "wistuba": [38, 39], "martin": [38, 39], "josif": [38, 39], "grabocka": [38, 39], "lar": [38, 39], "schmidt": [38, 39], "thiem": [38, 39], "ultra": [38, 39], "preprint": [38, 39], "1503": [38, 39], "05018": [38, 39], "2015": [38, 39], "load_gunpoint": [38, 39], "erp": [38, 39, 60, 61, 71], "min_g": [38, 39], "max_g": [38, 39], "shapeletmixin": [38, 71], "estiom": 38, "basetre": 40, "check_input": [40, 41, 42, 43], "bypass": [40, 41, 42, 43], "sure": [40, 41, 42, 43, 48, 50], "your": [40, 41, 42, 43, 71, 74], "up": [40, 41, 42, 43, 74], "node_count": [40, 41, 42, 43], "tree_": [40, 41, 42, 43], "equvival": [40, 41, 42, 43], "decision_path": [40, 41, 42, 43], "n_node": [40, 41, 42, 43], "nonzero": [40, 41, 42, 43, 55], "travers": [40, 41, 42, 43], "basetreeclassifi": 40, "child": [40, 41, 42, 43], "net": [40, 41, 42, 43], "carri": [40, 41, 42, 43], "don": [40, 41, 42, 43, 74], "know": [40, 41, 42, 43], "what": [40, 41, 42, 43, 69], "basetreeregressor": 40, "msm": [41, 43, 60, 61, 71], "min_c": [41, 43], "max_c": [41, 43], "num_c": [41, 43], "20": [41, 43, 61], "basefeaturetreeclassifi": 42, "basefeaturetreeregressor": 42, "scaled_dtw": [42, 43, 60, 61], "structur": [42, 43], "n_classes_": [42, 43], "run_in_parallel": 44, "parallel_arg": 44, "execut": 44, "batch": 44, "assert_exhaustive_parameter_check": 45, "assert": 45, "ok": 45, "assert_parameter_check": 45, "skip": [45, 47], "extend": 45, "array_or_scalar": 46, "optional_f": 46, "squeez": 46, "item": 46, "singleton": 46, "recursivlei": 46, "try": [46, 74], "unwrap": 46, "Such": 46, "wrap": 46, "wrapper": 46, "unstabl": 46, "stabil": 46, "beta": 46, "unsat": 46, "check_estim": 47, "generate_onli": 47, "skip_scikit": 47, "adher": 47, "deleg": [47, 48, 50], "monkei": 47, "patch": 47, "relat": [47, 60], "silent": 47, "tailor": 47, "copi": [48, 50, 61], "ensure_2d": [48, 50], "ensure_ts_arrai": [48, 50], "allow_3d": [48, 50], "allow_nd": [48, 50], "force_all_finit": [48, 50], "multi_output": [48, 50], "ensure_min_sampl": [48, 50], "ensure_min_timestep": [48, 50], "ensure_min_dim": [48, 50], "allow_eo": [48, 50], "y_numer": [48, 50], "y_contigu": [48, 50], "2d": [48, 50, 59, 61, 73], "3d": [48, 50, 59, 61, 73], "finit": [48, 50], "varial": [48, 50], "report": [48, 50, 61], "ravel_1d": [48, 50], "input_nam": [48, 50], "convert": [48, 49, 50, 56, 69], "never": [48, 50, 60], "empti": [48, 50], "attempt": [48, 50], "failur": [48, 50], "convers": [48, 50], "whether": [48, 49, 50], "fortran": [48, 50], "style": [48, 50], "noth": [48, 50], "layout": [48, 50], "kept": [48, 50], "trigger": [48, 50], "might": [48, 50], "ravel": [48, 50], "1d": [48, 50, 59, 61], "neither": [48, 50], "eo": [48, 50, 51, 55, 57, 59], "nan": [48, 50, 55, 59, 71], "pd": [48, 50], "na": [48, 50], "cannot": [48, 50], "infinit": [48, 50], "row": [48, 50, 59], "disabl": [48, 50, 73], "reject": [48, 50], "enforc": [48, 50], "pass": [48, 50, 61, 69, 71], "messag": [48, 50], "midpointnorm": 49, "vmin": 49, "vmax": 49, "midpoint": 49, "normalis": 49, "autoscal": 49, "autoscale_non": 49, "static": 49, "process_valu": 49, "homogen": 49, "effici": [49, 71], "mask": 49, "is_scalar": 49, "byte": 49, "smaller": 49, "float32": 49, "float64": 49, "place": 49, "oper": [49, 56, 57, 58, 73, 74], "greatli": 49, "improv": [49, 56], "speed": 49, "plot_frequency_domain": 49, "jitter": 49, "sample_spac": 49, "cmap": 49, "dark2": 49, "freqenc": 49, "matplotlib": [49, 57], "line": [49, 74], "colormap": 49, "plot_time_domain": 49, "linewidth": 49, "zorder": 49, "show_legend": 49, "opac": 49, "width": 49, "color": 49, "legend": 49, "check_opt": 50, "option_valu": 50, "valueerror": 50, "check_typ": 50, "target_typ": 50, "variabl": [51, 59, 74], "get_variable_length": 51, "lenght": 51, "is_end_of_seri": [51, 59], "wise": [51, 57, 73], "is_variable_length": 51, "intend": 53, "wildboar": [53, 55, 56, 57, 58, 59, 60, 61, 66, 69, 71, 73], "offer": [53, 56], "univari": [55, 59, 61, 73], "wherea": [55, 64], "multivari": [55, 57, 59, 73], "context": 55, "multivaret": 55, "howev": [55, 56, 58, 61], "unequ": [55, 57, 60], "ieee754": 55, "treat": 55, "isnan": [55, 59], "wb": 55, "t1": 55, "t2": 55, "t3": 55, "vstack": 55, "pip": [56, 69, 74], "conda": 56, "advanc": 56, "previous": [56, 63, 71, 73], "entri": 56, "hope": 56, "One": [56, 57, 73], "drawback": 56, "asset": 56, "demand": [56, 58], "small": [56, 69], "experi": 56, "brows": 56, "688": 56, "43": 56, "kb": 56, "668": 56, "python": [56, 58, 61, 71, 73, 74], "To": [56, 57, 58, 59, 69, 74], "32": 56, "bit": [56, 74], "64": [56, 74], "conform": 56, "common": [56, 57, 59, 60, 74], "workflow": [56, 61], "comparis": 56, "explanatori": 56, "n_label": 56, "greater": 56, "exactli": [56, 59], "respect": [56, 58, 64], "chain": 56, "large_multivari": 56, "large_multiclass": 56, "0x7f262ce95d00": 56, "predefin": 57, "contrast": 57, "our": 57, "simplifi": [57, 73], "applic": 57, "enumer": [57, 74], "abov": [57, 60, 73], "snippet": [57, 73], "could": 57, "rewritten": 57, "crude": 57, "deal": 57, "longer": 57, "accomplish": [57, 61], "tradit": [57, 60, 69], "argmax": 57, "pyplot": 57, "plt": 57, "fig": 57, "subplot": 57, "nrow": 57, "scatter": 57, "arang": 57, "marker": 57, "set_ylabel": 57, "spokenarabicdigit": 57, "ucrmt": 57, "figur": 57, "loss": 57, "togeth": 58, "compos": 58, "written": 58, "letter": 58, "regular": 58, "alphanumer": 58, "charact": 58, "za": 58, "z0": 58, "revis": 58, "z": [58, 60], "exemplifi": 58, "declar": 58, "hard": 58, "interfac": [58, 73], "endpoint": 58, "http": [58, 74], "www": 58, "org": [58, 74], "repo": 58, "addition": 58, "offlin": 58, "disk": [58, 73], "localappdata": 58, "gnu": [58, 74], "linux": [58, 74], "xdg_cache_hom": 58, "unset": 58, "maco": [58, 74], "librarycach": 58, "fallback": 58, "long": 58, "session": 58, "here": [58, 74], "func": [58, 61], "bundle_url": 58, "example1": 58, "altern": [58, 74], "remot": 58, "sha": 58, "sha1": 58, "hash": 58, "npy": 58, "npz": 58, "save": 58, "savez": 58, "dataset_nam": 58, "_train": 58, "_test": 58, "That": 58, "separ": [58, 69], "embrac": 59, "asarrai": 59, "produc": [59, 63], "rank": 59, "arr": 59, "shorter": [59, 60], "These": 60, "loos": 60, "obei": 60, "inequ": 60, "itself": 60, "distinct": 60, "gt": 60, "ne": 60, "symmetr": 60, "sai": 60, "triangl": [60, 61], "hold": [60, 73], "lt": 60, "shortcut": 60, "through": [60, 74], "three": [60, 61], "categori": [60, 73], "lp": 60, "norm": 60, "shift": 60, "distinguish": 60, "min_": 60, "notat": 60, "_elastic_": 60, "slide": 60, "need": [60, 61, 71, 74], "moreov": 60, "comment": 60, "undefin": 60, "mass": [60, 61], "manhattan": [60, 61], "minkowski": [60, 61], "chebyshev": [60, 61], "cosin": [60, 61], "angular": [60, 61, 71], "wdtw": [60, 61], "phase": 60, "ddtw": [60, 61], "wddtw": [60, 61], "longest": 60, "lcss": [60, 61, 71], "edit": [60, 74], "gap": 60, "edr": [60, 61, 71], "twe": [60, 61, 71], "edit_penalti": 60, "stiff": [60, 61], "lambda": 60, "nu": 60, "001": 60, "hirschberg": 60, "1977": 60, "problem": [60, 69, 73], "journal": 60, "jacm": 60, "chen": 60, "l": 60, "ng": 60, "2004": 60, "On": 60, "marriag": 60, "30": [60, 61, 73], "thirtieth": 60, "\u00f6zsu": 60, "oria": 60, "2005": 60, "robust": [60, 73], "trajectori": 60, "manag": 60, "stefan": 60, "athitso": 60, "transact": 60, "1425": 60, "1438": 60, "marteau": 60, "2008": 60, "adjust": 60, "analysi": 60, "intellig": 60, "31": [60, 73], "306": 60, "318": 60, "involv": [61, 73], "_euclidean": 61, "51158857": 61, "11514381": 61, "35905618": 61, "mirror": 61, "imag": 61, "half": 61, "halv": 61, "advis": 61, "tri": 61, "smart": 61, "85497117": 61, "96086309": 61, "18777928": 61, "00606825": 61, "23060212": 61, "27419835": 61, "64445581": 61, "38965963": 61, "79102936": 61, "59756098": 61, "47560976": 61, "64634146": 61, "08536585": 61, "03658537": 61, "13414634": 61, "09756098": 61, "25609756": 61, "12195122": 61, "76": 61, "20881199": 61, "73": 61, "62554784": 61, "88": 61, "5536877": 61, "27": 61, "49142159": 61, "56024904": 61, "24551102": 61, "45513015": 61, "81": 61, "60658533": 61, "06099416": 61, "multitud": 61, "reshap": 61, "48683192": 61, "60301954": 61, "34083722": 61, "35954558": 61, "sometim": 61, "_pairs_": 61, "purpos": [61, 73], "elast": 61, "50816474": 61, "3299048": 61, "55193242": 61, "interdimension": 61, "50507001": 61, "90920635": 61, "27646127": 61, "60041068": 61, "60786006": 61, "75645164": 61, "26677146": 61, "24823344": 61, "similarli": 61, "interest": 61, "slice": 61, "want": [61, 74], "avoid": [61, 74], "unwant": 61, "limits_": 61, "queri": 61, "le": 61, "counterpart": 61, "_threshold_": 61, "jag": 61, "66371456": 61, "11914265": 61, "13076667": 61, "99043671": 61, "73408875": 61, "84227457": 61, "2028058": 61, "85972633": 61, "85367621": 61, "86957415": 61, "64041732": 61, "33156061": 61, "56698045": 61, "99489626": 61, "6790517": 61, "16754772": 61, "10973127": 61, "50583639": 61, "def": 61, "pairwise_sd_ful": 61, "stack": 61, "14": 61, "21688671": 61, "83210644": 61, "50884094": 61, "18507116": 61, "11177626": 61, "15611733": 61, "21780536": 61, "13350353": 61, "09710811": 61, "75114125": 61, "13489775": 61, "09806374": 61, "idx": 61, "28": 61, "third": 61, "continu": [61, 73], "investig": 61, "particular": [61, 73], "task": [61, 64, 65, 69, 73], "cpu": 61, "inspect": 61, "theoret": 61, "complex": 61, "magnitud": 61, "97686": 61, "87686": 61, "98368": 61, "98282": 61, "11131": 61, "98268": 61, "95506": 61, "14157": 61, "96041": 61, "94631": 61, "83231": 61, "92207": 61, "55527": 61, "73285": 61, "55538": 61, "41892": 61, "40887": 61, "42778": 61, "00061": 61, "00104": 61, "00064": 61, "wlcss": 61, "00054": 61, "00091": 61, "00056": 61, "00030": 61, "00052": 61, "00032": 61, "00028": 61, "00048": 61, "00029": 61, "00021": 61, "00035": 61, "00022": 61, "00019": 61, "82372": 61, "49048": 61, "79202": 61, "66394": 61, "75967": 61, "67113": 61, "56287": 61, "61275": 61, "56196": 61, "text": 61, "49453": 61, "59627": 61, "49988": 61, "42765": 61, "58025": 61, "43553": 61, "42761": 61, "58982": 61, "43474": 61, "21051": 61, "33659": 61, "21757": 61, "06851": 61, "10321": 61, "07092": 61, "00216": 61, "00413": 61, "00226": 61, "00146": 61, "00278": 61, "00153": 61, "00102": 61, "00195": 61, "00107": 61, "00194": 61, "00106": 61, "00099": 61, "00190": 61, "00189": 61, "00103": 61, "00097": 61, "00185": 61, "00101": 61, "00096": 61, "00182": 61, "00100": 61, "00095": 61, "00181": 61, "00071": 61, "00136": 61, "00074": 61, "rakthanmanon": 61, "campana": 61, "mueen": 61, "batista": 61, "westov": 61, "zhu": 61, "q": 61, "zakaria": 61, "2012": 61, "august": 61, "trillion": 61, "under": [61, 74], "18th": 61, "262": 61, "270": 61, "goal": [63, 73], "unseen": [63, 73], "varieti": 64, "excel": 64, "baselin": 64, "highli": 64, "ridg": 65, "often": [65, 73], "art": 65, "emmott_label": 69, "varitaion": 69, "primari": 69, "focu": [69, 73], "oppos": 69, "perhap": 69, "minority_label": 69, "majority_label": 69, "sophist": 69, "publish": 69, "randomforestclassifi": 69, "four": 69, "75": 69, "quantil": 69, "manual": [70, 74], "enhanc": 71, "someth": 71, "couldn": 71, "now": 71, "miscellan": 71, "didn": 71, "document": [71, 73, 74], "17": 71, "scipi": 71, "develop": [71, 74], "3darrai": 71, "issu": [71, 74], "bug": 71, "incorrect": 71, "_distanc": 71, "distancemeasur": 71, "subsequencedistancemeasur": 71, "subsequencemetr": 71, "affect": 71, "cimport": 71, "constructor": 71, "incorrectli": 71, "drop": 71, "undeprec": 71, "old": 71, "migrat": 71, "framework": [71, 73], "forecast": 73, "unfamiliar": 73, "chronolog": 73, "logic": 73, "solv": 73, "concern": 73, "supervis": 73, "nomin": 73, "belong": 73, "unlabel": 73, "essenti": [73, 74], "acquir": 73, "conveni": 73, "commun": 73, "access": [73, 74], "achiev": 73, "opt": 73, "prefer": 73, "irrespect": 73, "floodmodeling1": 73, "uea": 73, "extrins": 73, "tsereg": 73, "clf": 73, "experiment": 73, "300": 73, "clone": [73, 74], "Then": 73, "screen": 73, "despit": 73, "even": 73, "tabluar_x": 73, "design": 73, "interoper": 73, "make_pipelin": 73, "logisticregress": 73, "bad": 73, "practic": 73, "proper": 73, "reason": 73, "respons": 73, "break": 73, "reevalu": 73, "relianc": 73, "visual": [73, 74], "importance_": 73, "pickl": 73, "repr": 73, "dump": 73, "earlier": 73, "clf_": 73, "older": 73, "newer": 73, "vice": 73, "versa": 73, "secur": 73, "unpickl": 73, "trust": 73, "There": 74, "offici": 74, "pypi": 74, "recommend": 74, "fastest": 74, "platform": 74, "automat": 74, "built": 74, "write": 74, "due": 74, "mistak": 74, "incompat": 74, "19": 74, "conflict": 74, "strongli": 74, "virtual": 74, "environ": 74, "venv": 74, "python3": 74, "folder": 74, "activ": 74, "ceavet": 74, "outsid": 74, "scope": 74, "debian": 74, "apt": 74, "homebrew": 74, "brew": 74, "anaconda": 74, "miniconda": 74, "pull": 74, "process": 74, "git": 74, "github": 74, "com": 74, "isaksamsten": 74, "tool": 74, "studio": 74, "command": 74, "cmd": 74, "consol": 74, "distutils_use_sdk": 74, "program": 74, "x86": 74, "microsoft": 74, "buildtool": 74, "vc": 74, "auxiliari": 74, "vcvarsal": 74, "bat": 74, "x64": 74, "xcode": 74, "ubuntu": 74, "dev": 74, "txt": 74, "mode": 74, "eas": 74, "wildboar_build": 74, "architectur": 74}, "objects": {"": [[22, 0, 0, "-", "wildboar"]], "wildboar": [[3, 0, 0, "-", "annotate"], [4, 0, 0, "-", "base"], [7, 0, 0, "-", "datasets"], [12, 0, 0, "-", "distance"], [14, 0, 0, "-", "ensemble"], [21, 0, 0, "-", "explain"], [22, 1, 1, "", "iseos"], [26, 0, 0, "-", "linear_model"], [28, 0, 0, "-", "metrics"], [31, 0, 0, "-", "model_selection"], [39, 0, 0, "-", "transform"], [43, 0, 0, "-", "tree"], [48, 0, 0, "-", "utils"], [52, 0, 0, "-", "version"]], "wildboar.annotate": [[1, 0, 0, "-", "_motifs"], [2, 0, 0, "-", "_segment"], [3, 1, 1, "", "motifs"], [3, 1, 1, "", "segment"]], "wildboar.annotate._motifs": [[1, 1, 1, "", "motifs"]], "wildboar.annotate._segment": [[2, 1, 1, "", "segment"]], "wildboar.base": [[4, 2, 1, "", "BaseEstimator"], [4, 2, 1, "", "CounterfactualMixin"], [4, 2, 1, "", "ExplainerMixin"], [4, 1, 1, "", "is_counterfactual"], [4, 1, 1, "", "is_explainer"]], "wildboar.base.BaseEstimator": [[4, 3, 1, "", "get_metadata_routing"], [4, 3, 1, "", "get_params"], [4, 3, 1, "", "set_params"]], "wildboar.base.CounterfactualMixin": [[4, 3, 1, "", "score"]], "wildboar.base.ExplainerMixin": [[4, 3, 1, "", "fit_explain"], [4, 3, 1, "", "plot"]], "wildboar.datasets": [[7, 2, 1, "", "Bundle"], [7, 2, 1, "", "JSONRepository"], [7, 2, 1, "", "NpBundle"], [7, 2, 1, "", "Repository"], [5, 0, 0, "-", "_filter"], [6, 0, 0, "-", "_repository"], [7, 1, 1, "", "clear_cache"], [7, 1, 1, "", "get_bundles"], [7, 1, 1, "", "get_repository"], [7, 1, 1, "", "install_repository"], [7, 1, 1, "", "list_bundles"], [7, 1, 1, "", "list_collections"], [7, 1, 1, "", "list_datasets"], [7, 1, 1, "", "list_repositories"], [7, 1, 1, "", "load_dataset"], [7, 1, 1, "", "load_datasets"], [7, 1, 1, "", "load_gun_point"], [7, 1, 1, "", "load_synthetic_control"], [7, 1, 1, "", "load_two_lead_ecg"], [8, 0, 0, "-", "outlier"], [9, 0, 0, "-", "preprocess"], [7, 1, 1, "", "refresh_repositories"], [7, 1, 1, "", "set_cache_dir"]], "wildboar.datasets.Bundle": [[7, 3, 1, "", "get_collection"], [7, 3, 1, "", "get_filename"], [7, 3, 1, "", "list"], [7, 3, 1, "", "load"]], "wildboar.datasets.JSONRepository": [[7, 4, 1, "", "download_url"], [7, 3, 1, "", "get_bundle"], [7, 3, 1, "", "get_bundles"], [7, 4, 1, "", "name"], [7, 3, 1, "", "refresh"], [7, 4, 1, "", "version"], [7, 4, 1, "", "wildboar_requires"]], "wildboar.datasets.NpBundle": [[7, 3, 1, "", "get_collection"], [7, 3, 1, "", "get_filename"], [7, 3, 1, "", "list"], [7, 3, 1, "", "load"]], "wildboar.datasets.Repository": [[7, 4, 1, "", "download_url"], [7, 3, 1, "", "get_bundle"], [7, 3, 1, "", "get_bundles"], [7, 4, 1, "", "name"], [7, 3, 1, "", "refresh"], [7, 4, 1, "", "version"], [7, 4, 1, "", "wildboar_requires"]], "wildboar.datasets._filter": [[5, 1, 1, "", "make_dict_filter"], [5, 1, 1, "", "make_filter"], [5, 1, 1, "", "make_list_filter"], [5, 1, 1, "", "make_str_filter"]], "wildboar.datasets._repository": [[6, 2, 1, "", "Bundle"], [6, 2, 1, "", "JSONRepository"], [6, 2, 1, "", "NpBundle"], [6, 2, 1, "", "Repository"]], "wildboar.datasets._repository.Bundle": [[6, 3, 1, "", "get_collection"], [6, 3, 1, "", "get_filename"], [6, 3, 1, "", "list"], [6, 3, 1, "", "load"]], "wildboar.datasets._repository.JSONRepository": [[6, 4, 1, "", "download_url"], [6, 3, 1, "", "get_bundle"], [6, 3, 1, "", "get_bundles"], [6, 4, 1, "", "name"], [6, 3, 1, "", "refresh"], [6, 4, 1, "", "version"], [6, 4, 1, "", "wildboar_requires"]], "wildboar.datasets._repository.NpBundle": [[6, 3, 1, "", "get_collection"], [6, 3, 1, "", "get_filename"], [6, 3, 1, "", "list"], [6, 3, 1, "", "load"]], "wildboar.datasets._repository.Repository": [[6, 4, 1, "", "download_url"], [6, 3, 1, "", "get_bundle"], [6, 3, 1, "", "get_bundles"], [6, 4, 1, "", "name"], [6, 3, 1, "", "refresh"], [6, 4, 1, "", "version"], [6, 4, 1, "", "wildboar_requires"]], "wildboar.datasets.outlier": [[8, 1, 1, "", "density_outliers"], [8, 1, 1, "", "emmott_outliers"], [8, 1, 1, "", "kmeans_outliers"], [8, 1, 1, "", "majority_outliers"], [8, 1, 1, "", "minority_outliers"]], "wildboar.datasets.preprocess": [[9, 1, 1, "", "maxabs_scale"], [9, 1, 1, "", "minmax_scale"], [9, 1, 1, "", "named_preprocess"], [9, 1, 1, "", "standardize"], [9, 1, 1, "", "truncate"]], "wildboar.distance": [[10, 0, 0, "-", "_multi_metric"], [11, 0, 0, "-", "dtw"], [12, 1, 1, "", "matrix_profile"], [12, 1, 1, "", "paired_distance"], [12, 1, 1, "", "paired_subsequence_distance"], [12, 1, 1, "", "paired_subsequence_match"], [12, 1, 1, "", "pairwise_distance"], [12, 1, 1, "", "pairwise_subsequence_distance"], [12, 1, 1, "", "subsequence_match"]], "wildboar.distance.dtw": [[11, 1, 1, "", "ddtw_distance"], [11, 1, 1, "", "dtw_alignment"], [11, 1, 1, "", "dtw_average"], [11, 1, 1, "", "dtw_distance"], [11, 1, 1, "", "dtw_envelop"], [11, 1, 1, "", "dtw_lb_keogh"], [11, 1, 1, "", "dtw_mapping"], [11, 1, 1, "", "jeong_weight"], [11, 1, 1, "", "wddtw_distance"], [11, 1, 1, "", "wdtw_alignment"], [11, 1, 1, "", "wdtw_distance"]], "wildboar.ensemble": [[14, 2, 1, "", "BaggingClassifier"], [14, 2, 1, "", "BaggingRegressor"], [14, 2, 1, "", "BaseBagging"], [14, 2, 1, "", "ExtraShapeletTreesClassifier"], [14, 2, 1, "", "ExtraShapeletTreesRegressor"], [14, 2, 1, "", "IntervalForestClassifier"], [14, 2, 1, "", "IntervalForestRegressor"], [14, 2, 1, "", "IsolationShapeletForest"], [14, 2, 1, "", "PivotForestClassifier"], [14, 2, 1, "", "ProximityForestClassifier"], [14, 2, 1, "", "RocketForestClassifier"], [14, 2, 1, "", "RocketForestRegressor"], [14, 2, 1, "", "ShapeletForestClassifier"], [14, 2, 1, "", "ShapeletForestEmbedding"], [14, 2, 1, "", "ShapeletForestRegressor"], [13, 0, 0, "-", "_ensemble"]], "wildboar.ensemble.BaggingClassifier": [[14, 4, 1, "", "base_estimator_"], [14, 3, 1, "", "decision_function"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "predict_log_proba"], [14, 3, 1, "", "predict_proba"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble.BaggingRegressor": [[14, 4, 1, "", "base_estimator_"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble.BaseBagging": [[14, 4, 1, "", "base_estimator_"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble.ExtraShapeletTreesClassifier": [[14, 4, 1, "", "base_estimator_"], [14, 3, 1, "", "decision_function"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "predict_log_proba"], [14, 3, 1, "", "predict_proba"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble.ExtraShapeletTreesRegressor": [[14, 4, 1, "", "base_estimator_"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble.IntervalForestClassifier": [[14, 4, 1, "", "base_estimator_"], [14, 3, 1, "", "decision_function"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "predict_log_proba"], [14, 3, 1, "", "predict_proba"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble.IntervalForestRegressor": [[14, 4, 1, "", "base_estimator_"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble.IsolationShapeletForest": [[14, 4, 1, "", "base_estimator_"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "fit_predict"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble.PivotForestClassifier": [[14, 4, 1, "", "base_estimator_"], [14, 3, 1, "", "decision_function"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "predict_log_proba"], [14, 3, 1, "", "predict_proba"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble.ProximityForestClassifier": [[14, 4, 1, "", "base_estimator_"], [14, 3, 1, "", "decision_function"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "predict_log_proba"], [14, 3, 1, "", "predict_proba"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble.RocketForestClassifier": [[14, 4, 1, "", "base_estimator_"], [14, 3, 1, "", "decision_function"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "predict_log_proba"], [14, 3, 1, "", "predict_proba"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble.RocketForestRegressor": [[14, 4, 1, "", "base_estimator_"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble.ShapeletForestClassifier": [[14, 4, 1, "", "base_estimator_"], [14, 3, 1, "", "decision_function"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "predict_log_proba"], [14, 3, 1, "", "predict_proba"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble.ShapeletForestEmbedding": [[14, 4, 1, "", "base_estimator_"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble.ShapeletForestRegressor": [[14, 4, 1, "", "base_estimator_"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble": [[13, 2, 1, "", "BaggingClassifier"], [13, 2, 1, "", "BaggingRegressor"], [13, 2, 1, "", "BaseBagging"], [13, 2, 1, "", "BaseForestClassifier"], [13, 2, 1, "", "BaseForestRegressor"], [13, 2, 1, "", "BaseShapeletForestClassifier"], [13, 2, 1, "", "BaseShapeletForestRegressor"], [13, 2, 1, "", "ExtraShapeletTreesClassifier"], [13, 2, 1, "", "ExtraShapeletTreesRegressor"], [13, 2, 1, "", "ForestMixin"], [13, 2, 1, "", "IntervalForestClassifier"], [13, 2, 1, "", "IntervalForestRegressor"], [13, 2, 1, "", "IsolationShapeletForest"], [13, 2, 1, "", "PivotForestClassifier"], [13, 2, 1, "", "ProximityForestClassifier"], [13, 2, 1, "", "RocketForestClassifier"], [13, 2, 1, "", "RocketForestRegressor"], [13, 2, 1, "", "ShapeletForestClassifier"], [13, 2, 1, "", "ShapeletForestEmbedding"], [13, 2, 1, "", "ShapeletForestRegressor"]], "wildboar.ensemble._ensemble.BaggingClassifier": [[13, 4, 1, "", "base_estimator_"], [13, 3, 1, "", "decision_function"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "predict_log_proba"], [13, 3, 1, "", "predict_proba"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaggingRegressor": [[13, 4, 1, "", "base_estimator_"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaseBagging": [[13, 4, 1, "", "base_estimator_"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaseForestClassifier": [[13, 4, 1, "", "base_estimator_"], [13, 3, 1, "", "decision_function"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "predict_log_proba"], [13, 3, 1, "", "predict_proba"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaseForestRegressor": [[13, 4, 1, "", "base_estimator_"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaseShapeletForestClassifier": [[13, 4, 1, "", "base_estimator_"], [13, 3, 1, "", "decision_function"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "predict_log_proba"], [13, 3, 1, "", "predict_proba"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaseShapeletForestRegressor": [[13, 4, 1, "", "base_estimator_"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier": [[13, 4, 1, "", "base_estimator_"], [13, 3, 1, "", "decision_function"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "predict_log_proba"], [13, 3, 1, "", "predict_proba"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor": [[13, 4, 1, "", "base_estimator_"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.IntervalForestClassifier": [[13, 4, 1, "", "base_estimator_"], [13, 3, 1, "", "decision_function"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "predict_log_proba"], [13, 3, 1, "", "predict_proba"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.IntervalForestRegressor": [[13, 4, 1, "", "base_estimator_"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.IsolationShapeletForest": [[13, 4, 1, "", "base_estimator_"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "fit_predict"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.PivotForestClassifier": [[13, 4, 1, "", "base_estimator_"], [13, 3, 1, "", "decision_function"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "predict_log_proba"], [13, 3, 1, "", "predict_proba"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ProximityForestClassifier": [[13, 4, 1, "", "base_estimator_"], [13, 3, 1, "", "decision_function"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "predict_log_proba"], [13, 3, 1, "", "predict_proba"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.RocketForestClassifier": [[13, 4, 1, "", "base_estimator_"], [13, 3, 1, "", "decision_function"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "predict_log_proba"], [13, 3, 1, "", "predict_proba"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.RocketForestRegressor": [[13, 4, 1, "", "base_estimator_"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ShapeletForestClassifier": [[13, 4, 1, "", "base_estimator_"], [13, 3, 1, "", "decision_function"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "predict_log_proba"], [13, 3, 1, "", "predict_proba"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ShapeletForestEmbedding": [[13, 4, 1, "", "base_estimator_"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ShapeletForestRegressor": [[13, 4, 1, "", "base_estimator_"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.explain": [[21, 2, 1, "", "AmplitudeImportance"], [21, 2, 1, "", "IntervalImportance"], [21, 2, 1, "", "ShapeletImportance"], [15, 0, 0, "-", "_importance"], [20, 0, 0, "-", "counterfactual"], [21, 1, 1, "", "plot_importances"]], "wildboar.explain.AmplitudeImportance": [[21, 3, 1, "", "fit_explain"], [21, 3, 1, "", "get_metadata_routing"], [21, 3, 1, "", "get_params"], [21, 3, 1, "", "plot"], [21, 3, 1, "", "set_params"]], "wildboar.explain.IntervalImportance": [[21, 3, 1, "", "fit_explain"], [21, 3, 1, "", "get_metadata_routing"], [21, 3, 1, "", "get_params"], [21, 3, 1, "", "plot"], [21, 3, 1, "", "set_params"]], "wildboar.explain.ShapeletImportance": [[21, 3, 1, "", "fit_explain"], [21, 3, 1, "", "get_metadata_routing"], [21, 3, 1, "", "get_params"], [21, 3, 1, "", "plot"], [21, 3, 1, "", "set_params"]], "wildboar.explain._importance": [[15, 2, 1, "", "AmplitudeImportance"], [15, 2, 1, "", "IntervalImportance"], [15, 2, 1, "", "PermuteImportance"], [15, 2, 1, "", "ShapeletImportance"], [15, 1, 1, "", "plot_importances"]], "wildboar.explain._importance.AmplitudeImportance": [[15, 3, 1, "", "fit_explain"], [15, 3, 1, "", "get_metadata_routing"], [15, 3, 1, "", "get_params"], [15, 3, 1, "", "plot"], [15, 3, 1, "", "set_params"]], "wildboar.explain._importance.IntervalImportance": [[15, 3, 1, "", "fit_explain"], [15, 3, 1, "", "get_metadata_routing"], [15, 3, 1, "", "get_params"], [15, 3, 1, "", "plot"], [15, 3, 1, "", "set_params"]], "wildboar.explain._importance.PermuteImportance": [[15, 3, 1, "", "get_metadata_routing"], [15, 3, 1, "", "get_params"], [15, 3, 1, "", "set_params"]], "wildboar.explain._importance.ShapeletImportance": [[15, 3, 1, "", "fit_explain"], [15, 3, 1, "", "get_metadata_routing"], [15, 3, 1, "", "get_params"], [15, 3, 1, "", "plot"], [15, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual": [[20, 2, 1, "", "KNeighborsCounterfactual"], [20, 2, 1, "", "PrototypeCounterfactual"], [20, 2, 1, "", "ShapeletForestCounterfactual"], [16, 0, 0, "-", "_helper"], [17, 0, 0, "-", "_nn"], [18, 0, 0, "-", "_proto"], [19, 0, 0, "-", "_sf"], [20, 1, 1, "", "counterfactuals"], [20, 1, 1, "", "proximity"]], "wildboar.explain.counterfactual.KNeighborsCounterfactual": [[20, 3, 1, "", "fit_explain"], [20, 3, 1, "", "get_metadata_routing"], [20, 3, 1, "", "get_params"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "score"], [20, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual.PrototypeCounterfactual": [[20, 3, 1, "", "fit_explain"], [20, 3, 1, "", "get_metadata_routing"], [20, 3, 1, "", "get_params"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "score"], [20, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual.ShapeletForestCounterfactual": [[20, 3, 1, "", "fit_explain"], [20, 3, 1, "", "get_metadata_routing"], [20, 3, 1, "", "get_params"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "score"], [20, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual._helper": [[16, 1, 1, "", "counterfactuals"]], "wildboar.explain.counterfactual._nn": [[17, 2, 1, "", "KNeighborsCounterfactual"]], "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual": [[17, 3, 1, "", "fit_explain"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "plot"], [17, 3, 1, "", "score"], [17, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual._proto": [[18, 2, 1, "", "DynamicTimeWarpTransform"], [18, 2, 1, "", "EuclideanTransform"], [18, 2, 1, "", "KNearestPrototypeSampler"], [18, 2, 1, "", "KNearestShapeletPrototypeSampler"], [18, 2, 1, "", "MetricTransform"], [18, 2, 1, "", "PredictEvaluator"], [18, 2, 1, "", "ProbabilityEvaluator"], [18, 2, 1, "", "PrototypeCounterfactual"], [18, 2, 1, "", "PrototypeSampler"], [18, 2, 1, "", "ShapeletPrototypeSampler"], [18, 2, 1, "", "TargetEvaluator"], [18, 2, 1, "", "UniformPrototypeSampler"], [18, 2, 1, "", "WeightedDynamicTimeWarpTransform"]], "wildboar.explain.counterfactual._proto.DynamicTimeWarpTransform": [[18, 3, 1, "", "move"]], "wildboar.explain.counterfactual._proto.EuclideanTransform": [[18, 3, 1, "", "move"]], "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler": [[18, 3, 1, "", "move"], [18, 3, 1, "", "nearest_index"], [18, 3, 1, "", "sample"], [18, 3, 1, "", "sample_move"]], "wildboar.explain.counterfactual._proto.KNearestShapeletPrototypeSampler": [[18, 3, 1, "", "move"], [18, 3, 1, "", "sample"], [18, 3, 1, "", "sample_move"]], "wildboar.explain.counterfactual._proto.MetricTransform": [[18, 3, 1, "", "move"]], "wildboar.explain.counterfactual._proto.PredictEvaluator": [[18, 3, 1, "", "is_counterfactual"]], "wildboar.explain.counterfactual._proto.ProbabilityEvaluator": [[18, 3, 1, "", "is_counterfactual"]], "wildboar.explain.counterfactual._proto.PrototypeCounterfactual": [[18, 3, 1, "", "fit_explain"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "plot"], [18, 3, 1, "", "score"], [18, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual._proto.PrototypeSampler": [[18, 3, 1, "", "move"], [18, 3, 1, "", "sample"], [18, 3, 1, "", "sample_move"]], "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler": [[18, 3, 1, "", "move"], [18, 3, 1, "", "sample"], [18, 3, 1, "", "sample_move"], [18, 3, 1, "", "sample_shapelet"]], "wildboar.explain.counterfactual._proto.TargetEvaluator": [[18, 3, 1, "", "is_counterfactual"]], "wildboar.explain.counterfactual._proto.UniformPrototypeSampler": [[18, 3, 1, "", "move"], [18, 3, 1, "", "sample"], [18, 3, 1, "", "sample_move"]], "wildboar.explain.counterfactual._proto.WeightedDynamicTimeWarpTransform": [[18, 3, 1, "", "move"]], "wildboar.explain.counterfactual._sf": [[19, 2, 1, "", "ShapeletForestCounterfactual"]], "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual": [[19, 3, 1, "", "fit_explain"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "plot"], [19, 3, 1, "", "score"], [19, 3, 1, "", "set_params"]], "wildboar.linear_model": [[26, 2, 1, "", "RandomShapeletClassifier"], [26, 2, 1, "", "RandomShapeletRegressor"], [26, 2, 1, "", "RocketClassifier"], [26, 2, 1, "", "RocketRegressor"], [23, 0, 0, "-", "_rocket"], [24, 0, 0, "-", "_shapelet"], [25, 0, 0, "-", "_transform"]], "wildboar.linear_model.RandomShapeletClassifier": [[26, 3, 1, "", "get_metadata_routing"], [26, 3, 1, "", "get_params"], [26, 3, 1, "", "score"], [26, 3, 1, "", "set_params"]], "wildboar.linear_model.RandomShapeletRegressor": [[26, 3, 1, "", "get_metadata_routing"], [26, 3, 1, "", "get_params"], [26, 3, 1, "", "score"], [26, 3, 1, "", "set_params"]], "wildboar.linear_model.RocketClassifier": [[26, 3, 1, "", "get_metadata_routing"], [26, 3, 1, "", "get_params"], [26, 3, 1, "", "score"], [26, 3, 1, "", "set_params"]], "wildboar.linear_model.RocketRegressor": [[26, 3, 1, "", "get_metadata_routing"], [26, 3, 1, "", "get_params"], [26, 3, 1, "", "score"], [26, 3, 1, "", "set_params"]], "wildboar.linear_model._rocket": [[23, 2, 1, "", "RocketClassifier"], [23, 2, 1, "", "RocketRegressor"]], "wildboar.linear_model._rocket.RocketClassifier": [[23, 3, 1, "", "get_metadata_routing"], [23, 3, 1, "", "get_params"], [23, 3, 1, "", "score"], [23, 3, 1, "", "set_params"]], "wildboar.linear_model._rocket.RocketRegressor": [[23, 3, 1, "", "get_metadata_routing"], [23, 3, 1, "", "get_params"], [23, 3, 1, "", "score"], [23, 3, 1, "", "set_params"]], "wildboar.linear_model._shapelet": [[24, 2, 1, "", "RandomShapeletClassifier"], [24, 2, 1, "", "RandomShapeletRegressor"]], "wildboar.linear_model._shapelet.RandomShapeletClassifier": [[24, 3, 1, "", "get_metadata_routing"], [24, 3, 1, "", "get_params"], [24, 3, 1, "", "score"], [24, 3, 1, "", "set_params"]], "wildboar.linear_model._shapelet.RandomShapeletRegressor": [[24, 3, 1, "", "get_metadata_routing"], [24, 3, 1, "", "get_params"], [24, 3, 1, "", "score"], [24, 3, 1, "", "set_params"]], "wildboar.linear_model._transform": [[25, 2, 1, "", "BaseTransformClassifier"], [25, 2, 1, "", "BaseTransformEstimator"], [25, 2, 1, "", "BaseTransformRegressor"], [25, 2, 1, "", "TransformRidgeCV"], [25, 2, 1, "", "TransformRidgeClassifierCV"]], "wildboar.linear_model._transform.BaseTransformClassifier": [[25, 3, 1, "", "get_metadata_routing"], [25, 3, 1, "", "get_params"], [25, 3, 1, "", "score"], [25, 3, 1, "", "set_params"]], "wildboar.linear_model._transform.BaseTransformEstimator": [[25, 3, 1, "", "get_metadata_routing"], [25, 3, 1, "", "get_params"], [25, 3, 1, "", "set_params"]], "wildboar.linear_model._transform.BaseTransformRegressor": [[25, 3, 1, "", "get_metadata_routing"], [25, 3, 1, "", "get_params"], [25, 3, 1, "", "score"], [25, 3, 1, "", "set_params"]], "wildboar.linear_model._transform.TransformRidgeCV": [[25, 3, 1, "", "get_metadata_routing"], [25, 3, 1, "", "get_params"], [25, 3, 1, "", "score"], [25, 3, 1, "", "set_params"]], "wildboar.linear_model._transform.TransformRidgeClassifierCV": [[25, 3, 1, "", "get_metadata_routing"], [25, 3, 1, "", "get_params"], [25, 3, 1, "", "score"], [25, 3, 1, "", "set_params"]], "wildboar.metrics": [[27, 0, 0, "-", "_counterfactual"], [28, 1, 1, "", "compactness_score"], [28, 1, 1, "", "plausability_score"], [28, 1, 1, "", "proximity_score"], [28, 1, 1, "", "relative_proximity_score"], [28, 1, 1, "", "validity_score"]], "wildboar.metrics._counterfactual": [[27, 1, 1, "", "compactness_score"], [27, 1, 1, "", "plausability_score"], [27, 1, 1, "", "proximity_score"], [27, 1, 1, "", "relative_proximity_score"], [27, 1, 1, "", "validity_score"]], "wildboar.model_selection": [[31, 2, 1, "", "RepeatedOutlierSplit"], [29, 0, 0, "-", "_cv"], [30, 0, 0, "-", "_outlier"], [31, 1, 1, "", "outlier_train_test_split"]], "wildboar.model_selection.RepeatedOutlierSplit": [[31, 3, 1, "", "get_n_splits"], [31, 3, 1, "", "split"]], "wildboar.model_selection._cv": [[29, 2, 1, "", "RepeatedOutlierSplit"]], "wildboar.model_selection._cv.RepeatedOutlierSplit": [[29, 3, 1, "", "get_n_splits"], [29, 3, 1, "", "split"]], "wildboar.model_selection._outlier": [[30, 1, 1, "", "outlier_train_test_split"]], "wildboar.transform": [[39, 2, 1, "", "FeatureTransform"], [39, 2, 1, "", "IntervalTransform"], [39, 2, 1, "", "MatrixProfileTransform"], [39, 2, 1, "", "PAA"], [39, 2, 1, "", "PivotTransform"], [39, 2, 1, "", "ProximityTransform"], [39, 2, 1, "", "RandomShapeletTransform"], [39, 2, 1, "", "RocketTransform"], [39, 2, 1, "", "SAX"], [32, 0, 0, "-", "_base"], [33, 0, 0, "-", "_interval"], [34, 0, 0, "-", "_matrix_profile"], [35, 0, 0, "-", "_pivot"], [36, 0, 0, "-", "_rocket"], [37, 0, 0, "-", "_sax"], [38, 0, 0, "-", "_shapelet"], [39, 1, 1, "", "piecewice_aggregate_approximation"], [39, 1, 1, "", "symbolic_aggregate_approximation"]], "wildboar.transform.FeatureTransform": [[39, 3, 1, "", "fit"], [39, 3, 1, "", "fit_transform"], [39, 3, 1, "", "get_metadata_routing"], [39, 3, 1, "", "get_params"], [39, 3, 1, "", "set_output"], [39, 3, 1, "", "set_params"], [39, 3, 1, "", "transform"]], "wildboar.transform.IntervalTransform": [[39, 3, 1, "", "fit"], [39, 3, 1, "", "fit_transform"], [39, 3, 1, "", "get_metadata_routing"], [39, 3, 1, "", "get_params"], [39, 3, 1, "", "set_output"], [39, 3, 1, "", "set_params"], [39, 3, 1, "", "transform"]], "wildboar.transform.MatrixProfileTransform": [[39, 3, 1, "", "fit"], [39, 3, 1, "", "fit_transform"], [39, 3, 1, "", "get_metadata_routing"], [39, 3, 1, "", "get_params"], [39, 3, 1, "", "set_output"], [39, 3, 1, "", "set_params"], [39, 3, 1, "", "transform"]], "wildboar.transform.PAA": [[39, 3, 1, "", "fit_transform"], [39, 3, 1, "", "get_metadata_routing"], [39, 3, 1, "", "get_params"], [39, 3, 1, "", "set_output"], [39, 3, 1, "", "set_params"]], "wildboar.transform.PivotTransform": [[39, 3, 1, "", "fit"], [39, 3, 1, "", "fit_transform"], [39, 3, 1, "", "get_metadata_routing"], [39, 3, 1, "", "get_params"], [39, 3, 1, "", "set_output"], [39, 3, 1, "", "set_params"], [39, 3, 1, "", "transform"]], "wildboar.transform.ProximityTransform": [[39, 3, 1, "", "fit_transform"], [39, 3, 1, "", "get_metadata_routing"], [39, 3, 1, "", "get_params"], [39, 3, 1, "", "set_output"], [39, 3, 1, "", "set_params"]], "wildboar.transform.RandomShapeletTransform": [[39, 3, 1, "", "fit"], [39, 3, 1, "", "fit_transform"], [39, 3, 1, "", "get_metadata_routing"], [39, 3, 1, "", "get_params"], [39, 3, 1, "", "set_output"], [39, 3, 1, "", "set_params"], [39, 3, 1, "", "transform"]], "wildboar.transform.RocketTransform": [[39, 3, 1, "", "fit"], [39, 3, 1, "", "fit_transform"], [39, 3, 1, "", "get_metadata_routing"], [39, 3, 1, "", "get_params"], [39, 3, 1, "", "set_output"], [39, 3, 1, "", "set_params"], [39, 3, 1, "", "transform"]], "wildboar.transform.SAX": [[39, 3, 1, "", "fit_transform"], [39, 3, 1, "", "get_metadata_routing"], [39, 3, 1, "", "get_params"], [39, 3, 1, "", "set_output"], [39, 3, 1, "", "set_params"]], "wildboar.transform._base": [[32, 2, 1, "", "BaseFeatureEngineerTransform"]], "wildboar.transform._base.BaseFeatureEngineerTransform": [[32, 3, 1, "", "fit"], [32, 3, 1, "", "fit_transform"], [32, 3, 1, "", "get_metadata_routing"], [32, 3, 1, "", "get_params"], [32, 3, 1, "", "set_output"], [32, 3, 1, "", "set_params"], [32, 3, 1, "", "transform"]], "wildboar.transform._interval": [[33, 2, 1, "", "FeatureTransform"], [33, 2, 1, "", "IntervalMixin"], [33, 2, 1, "", "IntervalTransform"]], "wildboar.transform._interval.FeatureTransform": [[33, 3, 1, "", "fit"], [33, 3, 1, "", "fit_transform"], [33, 3, 1, "", "get_metadata_routing"], [33, 3, 1, "", "get_params"], [33, 3, 1, "", "set_output"], [33, 3, 1, "", "set_params"], [33, 3, 1, "", "transform"]], "wildboar.transform._interval.IntervalTransform": [[33, 3, 1, "", "fit"], [33, 3, 1, "", "fit_transform"], [33, 3, 1, "", "get_metadata_routing"], [33, 3, 1, "", "get_params"], [33, 3, 1, "", "set_output"], [33, 3, 1, "", "set_params"], [33, 3, 1, "", "transform"]], "wildboar.transform._matrix_profile": [[34, 2, 1, "", "MatrixProfileTransform"]], "wildboar.transform._matrix_profile.MatrixProfileTransform": [[34, 3, 1, "", "fit"], [34, 3, 1, "", "fit_transform"], [34, 3, 1, "", "get_metadata_routing"], [34, 3, 1, "", "get_params"], [34, 3, 1, "", "set_output"], [34, 3, 1, "", "set_params"], [34, 3, 1, "", "transform"]], "wildboar.transform._pivot": [[35, 2, 1, "", "PivotMixin"], [35, 2, 1, "", "PivotTransform"], [35, 2, 1, "", "ProximityTransform"]], "wildboar.transform._pivot.PivotTransform": [[35, 3, 1, "", "fit"], [35, 3, 1, "", "fit_transform"], [35, 3, 1, "", "get_metadata_routing"], [35, 3, 1, "", "get_params"], [35, 3, 1, "", "set_output"], [35, 3, 1, "", "set_params"], [35, 3, 1, "", "transform"]], "wildboar.transform._pivot.ProximityTransform": [[35, 3, 1, "", "fit_transform"], [35, 3, 1, "", "get_metadata_routing"], [35, 3, 1, "", "get_params"], [35, 3, 1, "", "set_output"], [35, 3, 1, "", "set_params"]], "wildboar.transform._rocket": [[36, 2, 1, "", "RocketMixin"], [36, 2, 1, "", "RocketTransform"]], "wildboar.transform._rocket.RocketTransform": [[36, 3, 1, "", "fit"], [36, 3, 1, "", "fit_transform"], [36, 3, 1, "", "get_metadata_routing"], [36, 3, 1, "", "get_params"], [36, 3, 1, "", "set_output"], [36, 3, 1, "", "set_params"], [36, 3, 1, "", "transform"]], "wildboar.transform._sax": [[37, 2, 1, "", "Binning"], [37, 2, 1, "", "NormalBinning"], [37, 2, 1, "", "PAA"], [37, 2, 1, "", "SAX"], [37, 2, 1, "", "UniformBinning"], [37, 1, 1, "", "piecewice_aggregate_approximation"], [37, 1, 1, "", "symbolic_aggregate_approximation"]], "wildboar.transform._sax.Binning": [[37, 3, 1, "", "get_thresholds"], [37, 3, 1, "", "scale"]], "wildboar.transform._sax.NormalBinning": [[37, 3, 1, "", "get_thresholds"], [37, 3, 1, "", "scale"]], "wildboar.transform._sax.PAA": [[37, 3, 1, "", "fit_transform"], [37, 3, 1, "", "get_metadata_routing"], [37, 3, 1, "", "get_params"], [37, 3, 1, "", "set_output"], [37, 3, 1, "", "set_params"]], "wildboar.transform._sax.SAX": [[37, 3, 1, "", "fit_transform"], [37, 3, 1, "", "get_metadata_routing"], [37, 3, 1, "", "get_params"], [37, 3, 1, "", "set_output"], [37, 3, 1, "", "set_params"]], "wildboar.transform._sax.UniformBinning": [[37, 3, 1, "", "get_thresholds"], [37, 3, 1, "", "scale"]], "wildboar.transform._shapelet": [[38, 2, 1, "", "RandomShapeletTransform"], [38, 2, 1, "", "ShapeletMixin"]], "wildboar.transform._shapelet.RandomShapeletTransform": [[38, 3, 1, "", "fit"], [38, 3, 1, "", "fit_transform"], [38, 3, 1, "", "get_metadata_routing"], [38, 3, 1, "", "get_params"], [38, 3, 1, "", "set_output"], [38, 3, 1, "", "set_params"], [38, 3, 1, "", "transform"]], "wildboar.tree": [[43, 2, 1, "", "ExtraShapeletTreeClassifier"], [43, 2, 1, "", "ExtraShapeletTreeRegressor"], [43, 2, 1, "", "IntervalTreeClassifier"], [43, 2, 1, "", "IntervalTreeRegressor"], [43, 2, 1, "", "PivotTreeClassifier"], [43, 2, 1, "", "ProximityTreeClassifier"], [43, 2, 1, "", "RocketTreeClassifier"], [43, 2, 1, "", "RocketTreeRegressor"], [43, 2, 1, "", "ShapeletTreeClassifier"], [43, 2, 1, "", "ShapeletTreeRegressor"], [40, 0, 0, "-", "_base"], [41, 0, 0, "-", "_ptree"], [42, 0, 0, "-", "_tree"]], "wildboar.tree.ExtraShapeletTreeClassifier": [[43, 3, 1, "", "apply"], [43, 3, 1, "", "decision_path"], [43, 3, 1, "", "fit"], [43, 3, 1, "", "get_metadata_routing"], [43, 3, 1, "", "get_params"], [43, 3, 1, "", "predict"], [43, 3, 1, "", "predict_proba"], [43, 3, 1, "", "score"], [43, 3, 1, "", "set_params"]], "wildboar.tree.ExtraShapeletTreeRegressor": [[43, 3, 1, "", "apply"], [43, 3, 1, "", "decision_path"], [43, 3, 1, "", "fit"], [43, 3, 1, "", "get_metadata_routing"], [43, 3, 1, "", "get_params"], [43, 3, 1, "", "predict"], [43, 3, 1, "", "score"], [43, 3, 1, "", "set_params"]], "wildboar.tree.IntervalTreeClassifier": [[43, 3, 1, "", "apply"], [43, 3, 1, "", "decision_path"], [43, 3, 1, "", "fit"], [43, 3, 1, "", "get_metadata_routing"], [43, 3, 1, "", "get_params"], [43, 3, 1, "", "predict"], [43, 3, 1, "", "predict_proba"], [43, 3, 1, "", "score"], [43, 3, 1, "", "set_params"]], "wildboar.tree.IntervalTreeRegressor": [[43, 3, 1, "", "apply"], [43, 3, 1, "", "decision_path"], [43, 3, 1, "", "fit"], [43, 3, 1, "", "get_metadata_routing"], [43, 3, 1, "", "get_params"], [43, 3, 1, "", "predict"], [43, 3, 1, "", "score"], [43, 3, 1, "", "set_params"]], "wildboar.tree.PivotTreeClassifier": [[43, 3, 1, "", "apply"], [43, 3, 1, "", "decision_path"], [43, 3, 1, "", "fit"], [43, 3, 1, "", "get_metadata_routing"], [43, 3, 1, "", "get_params"], [43, 3, 1, "", "predict"], [43, 3, 1, "", "predict_proba"], [43, 3, 1, "", "score"], [43, 3, 1, "", "set_params"]], "wildboar.tree.ProximityTreeClassifier": [[43, 3, 1, "", "apply"], [43, 3, 1, "", "decision_path"], [43, 3, 1, "", "fit"], [43, 3, 1, "", "get_metadata_routing"], [43, 3, 1, "", "get_params"], [43, 3, 1, "", "predict"], [43, 3, 1, "", "predict_proba"], [43, 3, 1, "", "score"], [43, 3, 1, "", "set_params"]], "wildboar.tree.RocketTreeClassifier": [[43, 3, 1, "", "apply"], [43, 3, 1, "", "decision_path"], [43, 3, 1, "", "fit"], [43, 3, 1, "", "get_metadata_routing"], [43, 3, 1, "", "get_params"], [43, 3, 1, "", "predict"], [43, 3, 1, "", "predict_proba"], [43, 3, 1, "", "score"], [43, 3, 1, "", "set_params"]], "wildboar.tree.RocketTreeRegressor": [[43, 3, 1, "", "apply"], [43, 3, 1, "", "decision_path"], [43, 3, 1, "", "fit"], [43, 3, 1, "", "get_metadata_routing"], [43, 3, 1, "", "get_params"], [43, 3, 1, "", "predict"], [43, 3, 1, "", "score"], [43, 3, 1, "", "set_params"]], "wildboar.tree.ShapeletTreeClassifier": [[43, 3, 1, "", "apply"], [43, 3, 1, "", "decision_path"], [43, 3, 1, "", "fit"], [43, 3, 1, "", "get_metadata_routing"], [43, 3, 1, "", "get_params"], [43, 3, 1, "", "predict"], [43, 3, 1, "", "predict_proba"], [43, 3, 1, "", "score"], [43, 3, 1, "", "set_params"]], "wildboar.tree.ShapeletTreeRegressor": [[43, 3, 1, "", "apply"], [43, 3, 1, "", "decision_path"], [43, 3, 1, "", "fit"], [43, 3, 1, "", "get_metadata_routing"], [43, 3, 1, "", "get_params"], [43, 3, 1, "", "predict"], [43, 3, 1, "", "score"], [43, 3, 1, "", "set_params"]], "wildboar.tree._base": [[40, 2, 1, "", "BaseTree"], [40, 2, 1, "", "BaseTreeClassifier"], [40, 2, 1, "", "BaseTreeRegressor"]], "wildboar.tree._base.BaseTree": [[40, 3, 1, "", "apply"], [40, 3, 1, "", "decision_path"], [40, 3, 1, "", "get_metadata_routing"], [40, 3, 1, "", "get_params"], [40, 3, 1, "", "set_params"]], "wildboar.tree._base.BaseTreeClassifier": [[40, 3, 1, "", "apply"], [40, 3, 1, "", "decision_path"], [40, 3, 1, "", "fit"], [40, 3, 1, "", "get_metadata_routing"], [40, 3, 1, "", "get_params"], [40, 3, 1, "", "predict"], [40, 3, 1, "", "predict_proba"], [40, 3, 1, "", "score"], [40, 3, 1, "", "set_params"]], "wildboar.tree._base.BaseTreeRegressor": [[40, 3, 1, "", "apply"], [40, 3, 1, "", "decision_path"], [40, 3, 1, "", "fit"], [40, 3, 1, "", "get_metadata_routing"], [40, 3, 1, "", "get_params"], [40, 3, 1, "", "predict"], [40, 3, 1, "", "score"], [40, 3, 1, "", "set_params"]], "wildboar.tree._ptree": [[41, 2, 1, "", "ProximityTreeClassifier"]], "wildboar.tree._ptree.ProximityTreeClassifier": [[41, 3, 1, "", "apply"], [41, 3, 1, "", "decision_path"], [41, 3, 1, "", "fit"], [41, 3, 1, "", "get_metadata_routing"], [41, 3, 1, "", "get_params"], [41, 3, 1, "", "predict"], [41, 3, 1, "", "predict_proba"], [41, 3, 1, "", "score"], [41, 3, 1, "", "set_params"]], "wildboar.tree._tree": [[42, 2, 1, "", "BaseFeatureTreeClassifier"], [42, 2, 1, "", "BaseFeatureTreeRegressor"], [42, 2, 1, "", "ExtraShapeletTreeClassifier"], [42, 2, 1, "", "ExtraShapeletTreeRegressor"], [42, 2, 1, "", "IntervalTreeClassifier"], [42, 2, 1, "", "IntervalTreeRegressor"], [42, 2, 1, "", "PivotTreeClassifier"], [42, 2, 1, "", "RocketTreeClassifier"], [42, 2, 1, "", "RocketTreeRegressor"], [42, 2, 1, "", "ShapeletTreeClassifier"], [42, 2, 1, "", "ShapeletTreeRegressor"]], "wildboar.tree._tree.BaseFeatureTreeClassifier": [[42, 3, 1, "", "apply"], [42, 3, 1, "", "decision_path"], [42, 3, 1, "", "fit"], [42, 3, 1, "", "get_metadata_routing"], [42, 3, 1, "", "get_params"], [42, 3, 1, "", "predict"], [42, 3, 1, "", "predict_proba"], [42, 3, 1, "", "score"], [42, 3, 1, "", "set_params"]], "wildboar.tree._tree.BaseFeatureTreeRegressor": [[42, 3, 1, "", "apply"], [42, 3, 1, "", "decision_path"], [42, 3, 1, "", "fit"], [42, 3, 1, "", "get_metadata_routing"], [42, 3, 1, "", "get_params"], [42, 3, 1, "", "predict"], [42, 3, 1, "", "score"], [42, 3, 1, "", "set_params"]], "wildboar.tree._tree.ExtraShapeletTreeClassifier": [[42, 3, 1, "", "apply"], [42, 3, 1, "", "decision_path"], [42, 3, 1, "", "fit"], [42, 3, 1, "", "get_metadata_routing"], [42, 3, 1, "", "get_params"], [42, 3, 1, "", "predict"], [42, 3, 1, "", "predict_proba"], [42, 3, 1, "", "score"], [42, 3, 1, "", "set_params"]], "wildboar.tree._tree.ExtraShapeletTreeRegressor": [[42, 3, 1, "", "apply"], [42, 3, 1, "", "decision_path"], [42, 3, 1, "", "fit"], [42, 3, 1, "", "get_metadata_routing"], [42, 3, 1, "", "get_params"], [42, 3, 1, "", "predict"], [42, 3, 1, "", "score"], [42, 3, 1, "", "set_params"]], "wildboar.tree._tree.IntervalTreeClassifier": [[42, 3, 1, "", "apply"], [42, 3, 1, "", "decision_path"], [42, 3, 1, "", "fit"], [42, 3, 1, "", "get_metadata_routing"], [42, 3, 1, "", "get_params"], [42, 3, 1, "", "predict"], [42, 3, 1, "", "predict_proba"], [42, 3, 1, "", "score"], [42, 3, 1, "", "set_params"]], "wildboar.tree._tree.IntervalTreeRegressor": [[42, 3, 1, "", "apply"], [42, 3, 1, "", "decision_path"], [42, 3, 1, "", "fit"], [42, 3, 1, "", "get_metadata_routing"], [42, 3, 1, "", "get_params"], [42, 3, 1, "", "predict"], [42, 3, 1, "", "score"], [42, 3, 1, "", "set_params"]], "wildboar.tree._tree.PivotTreeClassifier": [[42, 3, 1, "", "apply"], [42, 3, 1, "", "decision_path"], [42, 3, 1, "", "fit"], [42, 3, 1, "", "get_metadata_routing"], [42, 3, 1, "", "get_params"], [42, 3, 1, "", "predict"], [42, 3, 1, "", "predict_proba"], [42, 3, 1, "", "score"], [42, 3, 1, "", "set_params"]], "wildboar.tree._tree.RocketTreeClassifier": [[42, 3, 1, "", "apply"], [42, 3, 1, "", "decision_path"], [42, 3, 1, "", "fit"], [42, 3, 1, "", "get_metadata_routing"], [42, 3, 1, "", "get_params"], [42, 3, 1, "", "predict"], [42, 3, 1, "", "predict_proba"], [42, 3, 1, "", "score"], [42, 3, 1, "", "set_params"]], "wildboar.tree._tree.RocketTreeRegressor": [[42, 3, 1, "", "apply"], [42, 3, 1, "", "decision_path"], [42, 3, 1, "", "fit"], [42, 3, 1, "", "get_metadata_routing"], [42, 3, 1, "", "get_params"], [42, 3, 1, "", "predict"], [42, 3, 1, "", "score"], [42, 3, 1, "", "set_params"]], "wildboar.tree._tree.ShapeletTreeClassifier": [[42, 3, 1, "", "apply"], [42, 3, 1, "", "decision_path"], [42, 3, 1, "", "fit"], [42, 3, 1, "", "get_metadata_routing"], [42, 3, 1, "", "get_params"], [42, 3, 1, "", "predict"], [42, 3, 1, "", "predict_proba"], [42, 3, 1, "", "score"], [42, 3, 1, "", "set_params"]], "wildboar.tree._tree.ShapeletTreeRegressor": [[42, 3, 1, "", "apply"], [42, 3, 1, "", "decision_path"], [42, 3, 1, "", "fit"], [42, 3, 1, "", "get_metadata_routing"], [42, 3, 1, "", "get_params"], [42, 3, 1, "", "predict"], [42, 3, 1, "", "score"], [42, 3, 1, "", "set_params"]], "wildboar.utils": [[44, 0, 0, "-", "_parallel"], [45, 0, 0, "-", "_testing"], [48, 1, 1, "", "check_X_y"], [48, 1, 1, "", "check_array"], [46, 0, 0, "-", "decorators"], [47, 0, 0, "-", "estimator_checks"], [49, 0, 0, "-", "plot"], [50, 0, 0, "-", "validation"], [51, 0, 0, "-", "variable_len"]], "wildboar.utils._parallel": [[44, 1, 1, "", "run_in_parallel"]], "wildboar.utils._testing": [[45, 1, 1, "", "assert_exhaustive_parameter_checks"], [45, 1, 1, "", "assert_parameter_checks"]], "wildboar.utils.decorators": [[46, 1, 1, "", "array_or_scalar"], [46, 1, 1, "", "singleton"], [46, 1, 1, "", "unstable"]], "wildboar.utils.estimator_checks": [[47, 1, 1, "", "check_estimator"]], "wildboar.utils.plot": [[49, 2, 1, "", "MidpointNormalize"], [49, 1, 1, "", "plot_frequency_domain"], [49, 1, 1, "", "plot_time_domain"]], "wildboar.utils.plot.MidpointNormalize": [[49, 3, 1, "", "autoscale"], [49, 3, 1, "", "autoscale_None"], [49, 3, 1, "", "process_value"], [49, 3, 1, "", "scaled"]], "wildboar.utils.validation": [[50, 1, 1, "", "check_X_y"], [50, 1, 1, "", "check_array"], [50, 1, 1, "", "check_option"], [50, 1, 1, "", "check_type"]], "wildboar.utils.variable_len": [[51, 1, 1, "", "get_variable_length"], [51, 1, 1, "", "is_end_of_series"], [51, 1, 1, "", "is_variable_length"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"wildboar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 70, 74], "function": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 15, 16, 20, 21, 22, 27, 28, 30, 31, 37, 39, 44, 45, 46, 47, 48, 49, 50, 51, 70], "annot": [0, 1, 2, 3, 54, 70], "base": [0, 4, 65, 66, 70], "class": [0, 4, 6, 7, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 49, 70], "dataset": [0, 5, 6, 7, 8, 9, 56, 70, 73], "outlier": [0, 8, 68, 69, 70], "preprocess": [0, 9, 70], "distanc": [0, 10, 11, 12, 61, 62, 70], "dtw": [0, 11, 70], "ensembl": [0, 13, 14, 64, 70], "explain": [0, 15, 16, 17, 18, 19, 20, 21, 70], "counterfactu": [0, 16, 17, 18, 19, 20, 70], "linear_model": [0, 23, 24, 25, 26, 70], "metric": [0, 27, 28, 60, 61, 62, 70], "model_select": [0, 29, 30, 31, 70], "transform": [0, 32, 33, 34, 35, 36, 37, 38, 39, 65, 70, 73], "tree": [0, 40, 41, 42, 43, 66, 70], "util": [0, 44, 45, 46, 47, 48, 49, 50, 51, 70], "_motif": 1, "modul": [1, 2, 4, 5, 6, 8, 9, 11, 13, 15, 16, 17, 18, 19, 23, 24, 25, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51], "content": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "_segment": 2, "packag": [3, 7, 12, 14, 20, 21, 22, 26, 28, 31, 39, 43, 48], "_filter": 5, "_repositori": 6, "submodul": [7, 12, 22, 48], "_multi_metr": 10, "_ensembl": 13, "_import": 15, "_helper": 16, "_nn": 17, "_proto": 18, "_sf": 19, "subpackag": [21, 22], "_rocket": [23, 36], "_shapelet": [24, 38], "_transform": 25, "_counterfactu": 27, "_cv": 29, "_outlier": 30, "_base": [32, 40], "_interv": 33, "_matrix_profil": 34, "_pivot": 35, "_sax": 37, "_ptree": 41, "_tree": 42, "_parallel": 44, "_test": 45, "decor": 46, "estimator_check": 47, "plot": 49, "valid": 50, "variable_len": 51, "version": [52, 71], "user": 53, "guid": 53, "time": [55, 62, 73], "seri": [55, 73], "variabl": 55, "length": 55, "load": [56, 73], "singl": 56, "multipl": 56, "filter": 56, "pre": 57, "process": 57, "repositori": 58, "definit": 58, "instal": [58, 74], "local": 58, "cach": 58, "json": 58, "glossari": 59, "subsequ": [60, 61, 62], "elast": [60, 62], "non": 60, "pairwis": 61, "pair": 61, "multivari": 61, "support": 61, "search": 61, "benchmark": [61, 69], "dynam": 62, "warp": 62, "longest": 62, "common": 62, "edit": 62, "real": 62, "penalti": 62, "sequenc": 62, "move": 62, "split": 62, "merg": 62, "supervis": 63, "learn": [63, 67, 73], "estim": [64, 65, 66], "shapelet": 64, "forest": 64, "proxim": 64, "unsupervis": 67, "detect": [68, 69], "minor": 69, "label": 69, "major": 69, "emmott": 69, "what": 71, "": 71, "new": 71, "depend": 71, "1": 71, "2": 71, "0": 71, "chang": 71, "model": [71, 73], "changelog": 71, "other": 71, "improv": 71, "quickstart": 72, "get": 73, "start": 73, "machin": 73, "an": 73, "exampl": 73, "predict": 73, "tabular": 73, "data": 73, "explor": 73, "perform": 73, "persist": 73, "latest": 74, "releas": 74, "build": 74, "compil": 74, "from": 74, "sourc": 74}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"wildboar": [[0, "wildboar"], [22, "module-wildboar"], [70, "id1"]], "Functions": [[0, "id1"], [0, "id2"], [0, "id4"], [0, "id6"], [0, "id7"], [0, "id8"], [0, "id9"], [0, "id10"], [0, "id13"], [0, "id15"], [0, "id17"], [0, "id19"], [0, "id21"], [0, "id23"], [1, "functions"], [2, "functions"], [3, "functions"], [4, "functions"], [5, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [11, "functions"], [12, "functions"], [15, "functions"], [16, "functions"], [20, "functions"], [21, "functions"], [22, "functions"], [27, "functions"], [28, "functions"], [30, "functions"], [31, "functions"], [37, "functions"], [39, "functions"], [44, "functions"], [45, "functions"], [46, "functions"], [47, "functions"], [48, "functions"], [49, "functions"], [50, "functions"], [51, "functions"], [70, "id2"], [70, "id3"], [70, "id5"], [70, "id7"], [70, "id8"], [70, "id9"], [70, "id10"], [70, "id11"], [70, "id14"], [70, "id16"], [70, "id18"], [70, "id20"], [70, "id22"], [70, "id24"]], "wildboar.annotate": [[0, "wildboar-annotate"], [3, "module-wildboar.annotate"], [70, "wildboar-annotate"]], "wildboar.base": [[0, "wildboar-base"], [4, "module-wildboar.base"], [70, "wildboar-base"]], "Classes": [[0, "id3"], [0, "id5"], [0, "id11"], [0, "id12"], [0, "id14"], [0, "id16"], [0, "id18"], [0, "id20"], [0, "id22"], [4, "classes"], [6, "classes"], [7, "classes"], [13, "classes"], [14, "classes"], [15, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [29, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [49, "classes"], [70, "id4"], [70, "id6"], [70, "id12"], [70, "id13"], [70, "id15"], [70, "id17"], [70, "id19"], [70, "id21"], [70, "id23"]], "wildboar.datasets": [[0, "wildboar-datasets"], [7, "module-wildboar.datasets"], [70, "wildboar-datasets"]], "wildboar.datasets.outlier": [[0, "wildboar-datasets-outlier"], [8, "module-wildboar.datasets.outlier"], [70, "wildboar-datasets-outlier"]], "wildboar.datasets.preprocess": [[0, "wildboar-datasets-preprocess"], [9, "module-wildboar.datasets.preprocess"], [70, "wildboar-datasets-preprocess"]], "wildboar.distance": [[0, "wildboar-distance"], [12, "module-wildboar.distance"], [70, "wildboar-distance"]], "wildboar.distance.dtw": [[0, "wildboar-distance-dtw"], [11, "module-wildboar.distance.dtw"], [70, "wildboar-distance-dtw"]], "wildboar.ensemble": [[0, "wildboar-ensemble"], [14, "module-wildboar.ensemble"], [70, "wildboar-ensemble"]], "wildboar.explain": [[0, "wildboar-explain"], [21, "module-wildboar.explain"], [70, "wildboar-explain"]], "wildboar.explain.counterfactual": [[0, "wildboar-explain-counterfactual"], [20, "module-wildboar.explain.counterfactual"], [70, "wildboar-explain-counterfactual"]], "wildboar.linear_model": [[0, "wildboar-linear-model"], [26, "module-wildboar.linear_model"], [70, "wildboar-linear-model"]], "wildboar.metrics": [[0, "wildboar-metrics"], [28, "module-wildboar.metrics"], [70, "wildboar-metrics"]], "wildboar.model_selection": [[0, "wildboar-model-selection"], [31, "module-wildboar.model_selection"], [70, "wildboar-model-selection"]], "wildboar.transform": [[0, "wildboar-transform"], [39, "module-wildboar.transform"], [70, "wildboar-transform"]], "wildboar.tree": [[0, "wildboar-tree"], [43, "module-wildboar.tree"], [70, "wildboar-tree"]], "wildboar.utils": [[0, "wildboar-utils"], [48, "module-wildboar.utils"], [70, "wildboar-utils"]], "wildboar.annotate._motifs": [[1, "module-wildboar.annotate._motifs"]], "Module Contents": [[1, "module-contents"], [2, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [8, "module-contents"], [9, "module-contents"], [11, "module-contents"], [13, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [27, "module-contents"], [29, "module-contents"], [30, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"]], "wildboar.annotate._segment": [[2, "module-wildboar.annotate._segment"]], "Package Contents": [[3, "package-contents"], [7, "package-contents"], [12, "package-contents"], [14, "package-contents"], [20, "package-contents"], [21, "package-contents"], [22, "package-contents"], [26, "package-contents"], [28, "package-contents"], [31, "package-contents"], [39, "package-contents"], [43, "package-contents"], [48, "package-contents"]], "wildboar.datasets._filter": [[5, "module-wildboar.datasets._filter"]], "wildboar.datasets._repository": [[6, "module-wildboar.datasets._repository"]], "Submodules": [[7, "submodules"], [12, "submodules"], [22, "submodules"], [48, "submodules"]], "wildboar.distance._multi_metric": [[10, "module-wildboar.distance._multi_metric"]], "wildboar.ensemble._ensemble": [[13, "module-wildboar.ensemble._ensemble"]], "wildboar.explain._importance": [[15, "module-wildboar.explain._importance"]], "wildboar.explain.counterfactual._helper": [[16, "module-wildboar.explain.counterfactual._helper"]], "wildboar.explain.counterfactual._nn": [[17, "module-wildboar.explain.counterfactual._nn"]], "wildboar.explain.counterfactual._proto": [[18, "module-wildboar.explain.counterfactual._proto"]], "wildboar.explain.counterfactual._sf": [[19, "module-wildboar.explain.counterfactual._sf"]], "Subpackages": [[21, "subpackages"], [22, "subpackages"]], "wildboar.linear_model._rocket": [[23, "module-wildboar.linear_model._rocket"]], "wildboar.linear_model._shapelet": [[24, "module-wildboar.linear_model._shapelet"]], "wildboar.linear_model._transform": [[25, "module-wildboar.linear_model._transform"]], "wildboar.metrics._counterfactual": [[27, "module-wildboar.metrics._counterfactual"]], "wildboar.model_selection._cv": [[29, "module-wildboar.model_selection._cv"]], "wildboar.model_selection._outlier": [[30, "module-wildboar.model_selection._outlier"]], "wildboar.transform._base": [[32, "module-wildboar.transform._base"]], "wildboar.transform._interval": [[33, "module-wildboar.transform._interval"]], "wildboar.transform._matrix_profile": [[34, "module-wildboar.transform._matrix_profile"]], "wildboar.transform._pivot": [[35, "module-wildboar.transform._pivot"]], "wildboar.transform._rocket": [[36, "module-wildboar.transform._rocket"]], "wildboar.transform._sax": [[37, "module-wildboar.transform._sax"]], "wildboar.transform._shapelet": [[38, "module-wildboar.transform._shapelet"]], "wildboar.tree._base": [[40, "module-wildboar.tree._base"]], "wildboar.tree._ptree": [[41, "module-wildboar.tree._ptree"]], "wildboar.tree._tree": [[42, "module-wildboar.tree._tree"]], "wildboar.utils._parallel": [[44, "module-wildboar.utils._parallel"]], "wildboar.utils._testing": [[45, "module-wildboar.utils._testing"]], "wildboar.utils.decorators": [[46, "module-wildboar.utils.decorators"]], "wildboar.utils.estimator_checks": [[47, "module-wildboar.utils.estimator_checks"]], "wildboar.utils.plot": [[49, "module-wildboar.utils.plot"]], "wildboar.utils.validation": [[50, "module-wildboar.utils.validation"]], "wildboar.utils.variable_len": [[51, "module-wildboar.utils.variable_len"]], "wildboar.version": [[52, "module-wildboar.version"]], "User guide": [[53, "user-guide"]], "Annotate": [[54, "annotate"]], "Time series": [[55, "time-series"]], "Variable length time series": [[55, "variable-length-time-series"]], "Datasets": [[56, "datasets"]], "Loading datasets": [[56, "loading-datasets"]], "Loading a single dataset": [[56, "loading-a-single-dataset"]], "Loading multiple datasets": [[56, "loading-multiple-datasets"]], "Filters": [[56, "filters"]], "Pre-processing": [[57, "pre-processing"]], "Repositories": [[58, "repositories"]], "Repository definitions": [[58, "repository-definitions"]], "Installing repositories": [[58, "installing-repositories"]], "Local cache": [[58, "local-cache"]], "JSON repositories": [[58, "json-repositories"]], "Glossary": [[59, "glossary"]], "Metrics": [[60, "metrics"], [61, "metrics"]], "Subsequence metrics": [[60, "subsequence-metrics"], [61, "subsequence-metrics"]], "Elastic and non-elastic metrics": [[60, "elastic-and-non-elastic-metrics"]], "Distance": [[61, "distance"]], "Pairwise distance": [[61, "pairwise-distance"]], "Paired distance": [[61, "paired-distance"]], "Multivariate support": [[61, "multivariate-support"]], "Subsequence search": [[61, "subsequence-search"]], "Pairwise subsequence distance": [[61, "pairwise-subsequence-distance"]], "Benchmark": [[61, "benchmark"]], "Elastic metrics": [[62, "elastic-metrics"]], "Dynamic time warping": [[62, "dynamic-time-warping"]], "Longest common subsequence": [[62, "longest-common-subsequence"]], "Edit-distance with real penalty": [[62, "edit-distance-with-real-penalty"]], "Edit-distance for real sequence": [[62, "edit-distance-for-real-sequence"]], "Time-warp edit distance": [[62, "time-warp-edit-distance"]], "Move-split-merge": [[62, "move-split-merge"]], "Supervised learning": [[63, "supervised-learning"]], "Ensemble estimators": [[64, "ensemble-estimators"]], "Shapelet forests": [[64, "shapelet-forests"]], "Proximity forests": [[64, "proximity-forests"]], "Transform-based estimators": [[65, "transform-based-estimators"]], "Tree-based estimators": [[66, "tree-based-estimators"]], "Unsupervised learning": [[67, "unsupervised-learning"]], "Outlier detection": [[68, "outlier-detection"]], "Outlier detection benchmarks": [[69, "outlier-detection-benchmarks"]], "Minority labeler": [[69, "minority-labeler"]], "Majority labeler": [[69, "majority-labeler"]], "Emmott labeler": [[69, "emmott-labeler"]], "Wildboar": [[70, "wildboar"]], "What\u2019s new": [[71, "what-s-new"]], "Dependencies": [[71, "dependencies"]], "Version 1.2.0": [[71, "version-1-2-0"]], "New and changed models": [[71, "new-and-changed-models"]], "Changelog": [[71, "changelog"]], "Other improvements": [[71, "other-improvements"]], "Quickstart": [[72, "quickstart"]], "Getting started": [[73, "getting-started"]], "Machine learning": [[73, "machine-learning"]], "Loading an example dataset": [[73, "loading-an-example-dataset"]], "Learning and predicting": [[73, "learning-and-predicting"]], "Transforming time series to tabular data": [[73, "transforming-time-series-to-tabular-data"]], "Exploring model performance": [[73, "exploring-model-performance"]], "Model persistence": [[73, "model-persistence"]], "Install wildboar": [[74, "install-wildboar"]], "Install the latest release": [[74, "install-the-latest-release"]], "Build and compile from source": [[74, "build-and-compile-from-source"]]}, "indexentries": {"module": [[1, "module-wildboar.annotate._motifs"], [2, "module-wildboar.annotate._segment"], [3, "module-wildboar.annotate"], [4, "module-wildboar.base"], [5, "module-wildboar.datasets._filter"], [6, "module-wildboar.datasets._repository"], [7, "module-wildboar.datasets"], [8, "module-wildboar.datasets.outlier"], [9, "module-wildboar.datasets.preprocess"], [10, "module-wildboar.distance._multi_metric"], [11, "module-wildboar.distance.dtw"], [12, "module-wildboar.distance"], [13, "module-wildboar.ensemble._ensemble"], [14, "module-wildboar.ensemble"], [15, "module-wildboar.explain._importance"], [16, "module-wildboar.explain.counterfactual._helper"], [17, "module-wildboar.explain.counterfactual._nn"], [18, "module-wildboar.explain.counterfactual._proto"], [19, "module-wildboar.explain.counterfactual._sf"], [20, "module-wildboar.explain.counterfactual"], [21, "module-wildboar.explain"], [22, "module-wildboar"], [23, "module-wildboar.linear_model._rocket"], [24, "module-wildboar.linear_model._shapelet"], [25, "module-wildboar.linear_model._transform"], [26, "module-wildboar.linear_model"], [27, "module-wildboar.metrics._counterfactual"], [28, "module-wildboar.metrics"], [29, "module-wildboar.model_selection._cv"], [30, "module-wildboar.model_selection._outlier"], [31, "module-wildboar.model_selection"], [32, "module-wildboar.transform._base"], [33, "module-wildboar.transform._interval"], [34, "module-wildboar.transform._matrix_profile"], [35, "module-wildboar.transform._pivot"], [36, "module-wildboar.transform._rocket"], [37, "module-wildboar.transform._sax"], [38, "module-wildboar.transform._shapelet"], [39, "module-wildboar.transform"], [40, "module-wildboar.tree._base"], [41, "module-wildboar.tree._ptree"], [42, "module-wildboar.tree._tree"], [43, "module-wildboar.tree"], [44, "module-wildboar.utils._parallel"], [45, "module-wildboar.utils._testing"], [46, "module-wildboar.utils.decorators"], [47, "module-wildboar.utils.estimator_checks"], [48, "module-wildboar.utils"], [49, "module-wildboar.utils.plot"], [50, "module-wildboar.utils.validation"], [51, "module-wildboar.utils.variable_len"], [52, "module-wildboar.version"]], "motifs() (in module wildboar.annotate._motifs)": [[1, "wildboar.annotate._motifs.motifs"]], "wildboar.annotate._motifs": [[1, "module-wildboar.annotate._motifs"]], "segment() (in module wildboar.annotate._segment)": [[2, "wildboar.annotate._segment.segment"]], "wildboar.annotate._segment": [[2, "module-wildboar.annotate._segment"]], "motifs() (in module wildboar.annotate)": [[3, "wildboar.annotate.motifs"]], "segment() (in module wildboar.annotate)": [[3, "wildboar.annotate.segment"]], "wildboar.annotate": [[3, "module-wildboar.annotate"]], "baseestimator (class in wildboar.base)": [[4, "wildboar.base.BaseEstimator"]], "counterfactualmixin (class in wildboar.base)": [[4, "wildboar.base.CounterfactualMixin"]], "explainermixin (class in wildboar.base)": [[4, "wildboar.base.ExplainerMixin"]], "fit_explain() (wildboar.base.explainermixin method)": [[4, "wildboar.base.ExplainerMixin.fit_explain"]], "get_metadata_routing() (wildboar.base.baseestimator method)": [[4, "wildboar.base.BaseEstimator.get_metadata_routing"]], "get_params() (wildboar.base.baseestimator method)": [[4, "wildboar.base.BaseEstimator.get_params"]], "is_counterfactual() (in module wildboar.base)": [[4, "wildboar.base.is_counterfactual"]], "is_explainer() (in module wildboar.base)": [[4, "wildboar.base.is_explainer"]], "plot() (wildboar.base.explainermixin method)": [[4, "wildboar.base.ExplainerMixin.plot"]], "score() (wildboar.base.counterfactualmixin method)": [[4, "wildboar.base.CounterfactualMixin.score"]], "set_params() (wildboar.base.baseestimator method)": [[4, "wildboar.base.BaseEstimator.set_params"]], "wildboar.base": [[4, "module-wildboar.base"]], "make_dict_filter() (in module wildboar.datasets._filter)": [[5, "wildboar.datasets._filter.make_dict_filter"]], "make_filter() (in module wildboar.datasets._filter)": [[5, "wildboar.datasets._filter.make_filter"]], "make_list_filter() (in module wildboar.datasets._filter)": [[5, "wildboar.datasets._filter.make_list_filter"]], "make_str_filter() (in module wildboar.datasets._filter)": [[5, "wildboar.datasets._filter.make_str_filter"]], "wildboar.datasets._filter": [[5, "module-wildboar.datasets._filter"]], "bundle (class in wildboar.datasets._repository)": [[6, "wildboar.datasets._repository.Bundle"]], "jsonrepository (class in wildboar.datasets._repository)": [[6, "wildboar.datasets._repository.JSONRepository"]], "npbundle (class in wildboar.datasets._repository)": [[6, "wildboar.datasets._repository.NpBundle"]], "repository (class in wildboar.datasets._repository)": [[6, "wildboar.datasets._repository.Repository"]], "download_url (wildboar.datasets._repository.jsonrepository property)": [[6, "wildboar.datasets._repository.JSONRepository.download_url"]], "download_url (wildboar.datasets._repository.repository property)": [[6, "wildboar.datasets._repository.Repository.download_url"]], "get_bundle() (wildboar.datasets._repository.jsonrepository method)": [[6, "wildboar.datasets._repository.JSONRepository.get_bundle"]], "get_bundle() (wildboar.datasets._repository.repository method)": [[6, "wildboar.datasets._repository.Repository.get_bundle"]], "get_bundles() (wildboar.datasets._repository.jsonrepository method)": [[6, "wildboar.datasets._repository.JSONRepository.get_bundles"]], "get_bundles() (wildboar.datasets._repository.repository method)": [[6, "wildboar.datasets._repository.Repository.get_bundles"]], "get_collection() (wildboar.datasets._repository.bundle method)": [[6, "wildboar.datasets._repository.Bundle.get_collection"]], "get_collection() (wildboar.datasets._repository.npbundle method)": [[6, "wildboar.datasets._repository.NpBundle.get_collection"]], "get_filename() (wildboar.datasets._repository.bundle method)": [[6, "wildboar.datasets._repository.Bundle.get_filename"]], "get_filename() (wildboar.datasets._repository.npbundle method)": [[6, "wildboar.datasets._repository.NpBundle.get_filename"]], "list() (wildboar.datasets._repository.bundle method)": [[6, "wildboar.datasets._repository.Bundle.list"]], "list() (wildboar.datasets._repository.npbundle method)": [[6, "wildboar.datasets._repository.NpBundle.list"]], "load() (wildboar.datasets._repository.bundle method)": [[6, "wildboar.datasets._repository.Bundle.load"]], "load() (wildboar.datasets._repository.npbundle method)": [[6, "wildboar.datasets._repository.NpBundle.load"]], "name (wildboar.datasets._repository.jsonrepository property)": [[6, "wildboar.datasets._repository.JSONRepository.name"]], "name (wildboar.datasets._repository.repository property)": [[6, "wildboar.datasets._repository.Repository.name"]], "refresh() (wildboar.datasets._repository.jsonrepository method)": [[6, "wildboar.datasets._repository.JSONRepository.refresh"]], "refresh() (wildboar.datasets._repository.repository method)": [[6, "wildboar.datasets._repository.Repository.refresh"]], "version (wildboar.datasets._repository.jsonrepository property)": [[6, "wildboar.datasets._repository.JSONRepository.version"]], "version (wildboar.datasets._repository.repository property)": [[6, "wildboar.datasets._repository.Repository.version"]], "wildboar.datasets._repository": [[6, "module-wildboar.datasets._repository"]], "wildboar_requires (wildboar.datasets._repository.jsonrepository property)": [[6, "wildboar.datasets._repository.JSONRepository.wildboar_requires"]], "wildboar_requires (wildboar.datasets._repository.repository property)": [[6, "wildboar.datasets._repository.Repository.wildboar_requires"]], "bundle (class in wildboar.datasets)": [[7, "wildboar.datasets.Bundle"]], "jsonrepository (class in wildboar.datasets)": [[7, "wildboar.datasets.JSONRepository"]], "npbundle (class in wildboar.datasets)": [[7, "wildboar.datasets.NpBundle"]], "repository (class in wildboar.datasets)": [[7, "wildboar.datasets.Repository"]], "clear_cache() (in module wildboar.datasets)": [[7, "wildboar.datasets.clear_cache"]], "download_url (wildboar.datasets.jsonrepository property)": [[7, "wildboar.datasets.JSONRepository.download_url"]], "download_url (wildboar.datasets.repository property)": [[7, "wildboar.datasets.Repository.download_url"]], "get_bundle() (wildboar.datasets.jsonrepository method)": [[7, "wildboar.datasets.JSONRepository.get_bundle"]], "get_bundle() (wildboar.datasets.repository method)": [[7, "wildboar.datasets.Repository.get_bundle"]], "get_bundles() (in module wildboar.datasets)": [[7, "wildboar.datasets.get_bundles"]], "get_bundles() (wildboar.datasets.jsonrepository method)": [[7, "wildboar.datasets.JSONRepository.get_bundles"]], "get_bundles() (wildboar.datasets.repository method)": [[7, "wildboar.datasets.Repository.get_bundles"]], "get_collection() (wildboar.datasets.bundle method)": [[7, "wildboar.datasets.Bundle.get_collection"]], "get_collection() (wildboar.datasets.npbundle method)": [[7, "wildboar.datasets.NpBundle.get_collection"]], "get_filename() (wildboar.datasets.bundle method)": [[7, "wildboar.datasets.Bundle.get_filename"]], "get_filename() (wildboar.datasets.npbundle method)": [[7, "wildboar.datasets.NpBundle.get_filename"]], "get_repository() (in module wildboar.datasets)": [[7, "wildboar.datasets.get_repository"]], "install_repository() (in module wildboar.datasets)": [[7, "wildboar.datasets.install_repository"]], "list() (wildboar.datasets.bundle method)": [[7, "wildboar.datasets.Bundle.list"]], "list() (wildboar.datasets.npbundle method)": [[7, "wildboar.datasets.NpBundle.list"]], "list_bundles() (in module wildboar.datasets)": [[7, "wildboar.datasets.list_bundles"]], "list_collections() (in module wildboar.datasets)": [[7, "wildboar.datasets.list_collections"]], "list_datasets() (in module wildboar.datasets)": [[7, "wildboar.datasets.list_datasets"]], "list_repositories() (in module wildboar.datasets)": [[7, "wildboar.datasets.list_repositories"]], "load() (wildboar.datasets.bundle method)": [[7, "wildboar.datasets.Bundle.load"]], "load() (wildboar.datasets.npbundle method)": [[7, "wildboar.datasets.NpBundle.load"]], "load_dataset() (in module wildboar.datasets)": [[7, "wildboar.datasets.load_dataset"]], "load_datasets() (in module wildboar.datasets)": [[7, "wildboar.datasets.load_datasets"]], "load_gun_point() (in module wildboar.datasets)": [[7, "wildboar.datasets.load_gun_point"]], "load_synthetic_control() (in module wildboar.datasets)": [[7, "wildboar.datasets.load_synthetic_control"]], "load_two_lead_ecg() (in module wildboar.datasets)": [[7, "wildboar.datasets.load_two_lead_ecg"]], "name (wildboar.datasets.jsonrepository property)": [[7, "wildboar.datasets.JSONRepository.name"]], "name (wildboar.datasets.repository property)": [[7, "wildboar.datasets.Repository.name"]], "refresh() (wildboar.datasets.jsonrepository method)": [[7, "wildboar.datasets.JSONRepository.refresh"]], "refresh() (wildboar.datasets.repository method)": [[7, "wildboar.datasets.Repository.refresh"]], "refresh_repositories() (in module wildboar.datasets)": [[7, "wildboar.datasets.refresh_repositories"]], "set_cache_dir() (in module wildboar.datasets)": [[7, "wildboar.datasets.set_cache_dir"]], "version (wildboar.datasets.jsonrepository property)": [[7, "wildboar.datasets.JSONRepository.version"]], "version (wildboar.datasets.repository property)": [[7, "wildboar.datasets.Repository.version"]], "wildboar.datasets": [[7, "module-wildboar.datasets"]], "wildboar_requires (wildboar.datasets.jsonrepository property)": [[7, "wildboar.datasets.JSONRepository.wildboar_requires"]], "wildboar_requires (wildboar.datasets.repository property)": [[7, "wildboar.datasets.Repository.wildboar_requires"]], "density_outliers() (in module wildboar.datasets.outlier)": [[8, "wildboar.datasets.outlier.density_outliers"]], "emmott_outliers() (in module wildboar.datasets.outlier)": [[8, "wildboar.datasets.outlier.emmott_outliers"]], "kmeans_outliers() (in module wildboar.datasets.outlier)": [[8, "wildboar.datasets.outlier.kmeans_outliers"]], "majority_outliers() (in module wildboar.datasets.outlier)": [[8, "wildboar.datasets.outlier.majority_outliers"]], "minority_outliers() (in module wildboar.datasets.outlier)": [[8, "wildboar.datasets.outlier.minority_outliers"]], "wildboar.datasets.outlier": [[8, "module-wildboar.datasets.outlier"]], "maxabs_scale() (in module wildboar.datasets.preprocess)": [[9, "wildboar.datasets.preprocess.maxabs_scale"]], "minmax_scale() (in module wildboar.datasets.preprocess)": [[9, "wildboar.datasets.preprocess.minmax_scale"]], "named_preprocess() (in module wildboar.datasets.preprocess)": [[9, "wildboar.datasets.preprocess.named_preprocess"]], "standardize() (in module wildboar.datasets.preprocess)": [[9, "wildboar.datasets.preprocess.standardize"]], "truncate() (in module wildboar.datasets.preprocess)": [[9, "wildboar.datasets.preprocess.truncate"]], "wildboar.datasets.preprocess": [[9, "module-wildboar.datasets.preprocess"]], "wildboar.distance._multi_metric": [[10, "module-wildboar.distance._multi_metric"]], "ddtw_distance() (in module wildboar.distance.dtw)": [[11, "wildboar.distance.dtw.ddtw_distance"]], "dtw_alignment() (in module wildboar.distance.dtw)": [[11, "wildboar.distance.dtw.dtw_alignment"]], "dtw_average() (in module wildboar.distance.dtw)": [[11, "wildboar.distance.dtw.dtw_average"]], "dtw_distance() (in module wildboar.distance.dtw)": [[11, "wildboar.distance.dtw.dtw_distance"]], "dtw_envelop() (in module wildboar.distance.dtw)": [[11, "wildboar.distance.dtw.dtw_envelop"]], "dtw_lb_keogh() (in module wildboar.distance.dtw)": [[11, "wildboar.distance.dtw.dtw_lb_keogh"]], "dtw_mapping() (in module wildboar.distance.dtw)": [[11, "wildboar.distance.dtw.dtw_mapping"]], "jeong_weight() (in module wildboar.distance.dtw)": [[11, "wildboar.distance.dtw.jeong_weight"]], "wddtw_distance() (in module wildboar.distance.dtw)": [[11, "wildboar.distance.dtw.wddtw_distance"]], "wdtw_alignment() (in module wildboar.distance.dtw)": [[11, "wildboar.distance.dtw.wdtw_alignment"]], "wdtw_distance() (in module wildboar.distance.dtw)": [[11, "wildboar.distance.dtw.wdtw_distance"]], "wildboar.distance.dtw": [[11, "module-wildboar.distance.dtw"]], "matrix_profile() (in module wildboar.distance)": [[12, "wildboar.distance.matrix_profile"]], "paired_distance() (in module wildboar.distance)": [[12, "wildboar.distance.paired_distance"]], "paired_subsequence_distance() (in module wildboar.distance)": [[12, "wildboar.distance.paired_subsequence_distance"]], "paired_subsequence_match() (in module wildboar.distance)": [[12, "wildboar.distance.paired_subsequence_match"]], "pairwise_distance() (in module wildboar.distance)": [[12, "wildboar.distance.pairwise_distance"]], "pairwise_subsequence_distance() (in module wildboar.distance)": [[12, "wildboar.distance.pairwise_subsequence_distance"]], "subsequence_match() (in module wildboar.distance)": [[12, "wildboar.distance.subsequence_match"]], "wildboar.distance": [[12, "module-wildboar.distance"]], "baggingclassifier (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.BaggingClassifier"]], "baggingregressor (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.BaggingRegressor"]], "basebagging (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.BaseBagging"]], "baseforestclassifier (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.BaseForestClassifier"]], "baseforestregressor (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.BaseForestRegressor"]], "baseshapeletforestclassifier (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier"]], "baseshapeletforestregressor (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor"]], "extrashapelettreesclassifier (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier"]], "extrashapelettreesregressor (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor"]], "forestmixin (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.ForestMixin"]], "intervalforestclassifier (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.IntervalForestClassifier"]], "intervalforestregressor (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.IntervalForestRegressor"]], "isolationshapeletforest (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.IsolationShapeletForest"]], "pivotforestclassifier (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.PivotForestClassifier"]], "proximityforestclassifier (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.ProximityForestClassifier"]], "rocketforestclassifier (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.RocketForestClassifier"]], "rocketforestregressor (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.RocketForestRegressor"]], "shapeletforestclassifier (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.ShapeletForestClassifier"]], "shapeletforestembedding (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.ShapeletForestEmbedding"]], "shapeletforestregressor (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.ShapeletForestRegressor"]], "base_estimator_ (wildboar.ensemble._ensemble.baggingclassifier property)": [[13, "wildboar.ensemble._ensemble.BaggingClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.baggingregressor property)": [[13, "wildboar.ensemble._ensemble.BaggingRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.basebagging property)": [[13, "wildboar.ensemble._ensemble.BaseBagging.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.baseforestclassifier property)": [[13, "wildboar.ensemble._ensemble.BaseForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.baseforestregressor property)": [[13, "wildboar.ensemble._ensemble.BaseForestRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.baseshapeletforestclassifier property)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.baseshapeletforestregressor property)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.extrashapelettreesclassifier property)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.extrashapelettreesregressor property)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.intervalforestclassifier property)": [[13, "wildboar.ensemble._ensemble.IntervalForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.intervalforestregressor property)": [[13, "wildboar.ensemble._ensemble.IntervalForestRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.isolationshapeletforest property)": [[13, "wildboar.ensemble._ensemble.IsolationShapeletForest.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.pivotforestclassifier property)": [[13, "wildboar.ensemble._ensemble.PivotForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.proximityforestclassifier property)": [[13, "wildboar.ensemble._ensemble.ProximityForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.rocketforestclassifier property)": [[13, "wildboar.ensemble._ensemble.RocketForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.rocketforestregressor property)": [[13, "wildboar.ensemble._ensemble.RocketForestRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.shapeletforestclassifier property)": [[13, "wildboar.ensemble._ensemble.ShapeletForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.shapeletforestembedding property)": [[13, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.shapeletforestregressor property)": [[13, "wildboar.ensemble._ensemble.ShapeletForestRegressor.base_estimator_"]], "decision_function() (wildboar.ensemble._ensemble.baggingclassifier method)": [[13, "wildboar.ensemble._ensemble.BaggingClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[13, "wildboar.ensemble._ensemble.IntervalForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[13, "wildboar.ensemble._ensemble.PivotForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ProximityForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[13, "wildboar.ensemble._ensemble.RocketForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestClassifier.decision_function"]], "estimators_samples_ (wildboar.ensemble._ensemble.baggingclassifier property)": [[13, "wildboar.ensemble._ensemble.BaggingClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.baggingregressor property)": [[13, "wildboar.ensemble._ensemble.BaggingRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.basebagging property)": [[13, "wildboar.ensemble._ensemble.BaseBagging.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.baseforestclassifier property)": [[13, "wildboar.ensemble._ensemble.BaseForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.baseforestregressor property)": [[13, "wildboar.ensemble._ensemble.BaseForestRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.baseshapeletforestclassifier property)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.baseshapeletforestregressor property)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.extrashapelettreesclassifier property)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.extrashapelettreesregressor property)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.intervalforestclassifier property)": [[13, "wildboar.ensemble._ensemble.IntervalForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.intervalforestregressor property)": [[13, "wildboar.ensemble._ensemble.IntervalForestRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.isolationshapeletforest property)": [[13, "wildboar.ensemble._ensemble.IsolationShapeletForest.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.pivotforestclassifier property)": [[13, "wildboar.ensemble._ensemble.PivotForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.proximityforestclassifier property)": [[13, "wildboar.ensemble._ensemble.ProximityForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.rocketforestclassifier property)": [[13, "wildboar.ensemble._ensemble.RocketForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.rocketforestregressor property)": [[13, "wildboar.ensemble._ensemble.RocketForestRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.shapeletforestclassifier property)": [[13, "wildboar.ensemble._ensemble.ShapeletForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.shapeletforestembedding property)": [[13, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.shapeletforestregressor property)": [[13, "wildboar.ensemble._ensemble.ShapeletForestRegressor.estimators_samples_"]], "fit() (wildboar.ensemble._ensemble.baggingclassifier method)": [[13, "wildboar.ensemble._ensemble.BaggingClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.baggingregressor method)": [[13, "wildboar.ensemble._ensemble.BaggingRegressor.fit"]], "fit() (wildboar.ensemble._ensemble.basebagging method)": [[13, "wildboar.ensemble._ensemble.BaseBagging.fit"]], "fit() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseForestClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.baseforestregressor method)": [[13, "wildboar.ensemble._ensemble.BaseForestRegressor.fit"]], "fit() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.fit"]], "fit() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.fit"]], "fit() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[13, "wildboar.ensemble._ensemble.IntervalForestClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[13, "wildboar.ensemble._ensemble.IntervalForestRegressor.fit"]], "fit() (wildboar.ensemble._ensemble.isolationshapeletforest method)": [[13, "wildboar.ensemble._ensemble.IsolationShapeletForest.fit"]], "fit() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[13, "wildboar.ensemble._ensemble.PivotForestClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ProximityForestClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[13, "wildboar.ensemble._ensemble.RocketForestClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[13, "wildboar.ensemble._ensemble.RocketForestRegressor.fit"]], "fit() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.fit"]], "fit() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestRegressor.fit"]], "fit_predict() (wildboar.ensemble._ensemble.isolationshapeletforest method)": [[13, "wildboar.ensemble._ensemble.IsolationShapeletForest.fit_predict"]], "get_metadata_routing() (wildboar.ensemble._ensemble.baggingclassifier method)": [[13, "wildboar.ensemble._ensemble.BaggingClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.baggingregressor method)": [[13, "wildboar.ensemble._ensemble.BaggingRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.basebagging method)": [[13, "wildboar.ensemble._ensemble.BaseBagging.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.baseforestregressor method)": [[13, "wildboar.ensemble._ensemble.BaseForestRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[13, "wildboar.ensemble._ensemble.IntervalForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[13, "wildboar.ensemble._ensemble.IntervalForestRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.isolationshapeletforest method)": [[13, "wildboar.ensemble._ensemble.IsolationShapeletForest.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[13, "wildboar.ensemble._ensemble.PivotForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ProximityForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[13, "wildboar.ensemble._ensemble.RocketForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[13, "wildboar.ensemble._ensemble.RocketForestRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestRegressor.get_metadata_routing"]], "get_params() (wildboar.ensemble._ensemble.baggingclassifier method)": [[13, "wildboar.ensemble._ensemble.BaggingClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.baggingregressor method)": [[13, "wildboar.ensemble._ensemble.BaggingRegressor.get_params"]], "get_params() (wildboar.ensemble._ensemble.basebagging method)": [[13, "wildboar.ensemble._ensemble.BaseBagging.get_params"]], "get_params() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseForestClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.baseforestregressor method)": [[13, "wildboar.ensemble._ensemble.BaseForestRegressor.get_params"]], "get_params() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.get_params"]], "get_params() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.get_params"]], "get_params() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[13, "wildboar.ensemble._ensemble.IntervalForestClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[13, "wildboar.ensemble._ensemble.IntervalForestRegressor.get_params"]], "get_params() (wildboar.ensemble._ensemble.isolationshapeletforest method)": [[13, "wildboar.ensemble._ensemble.IsolationShapeletForest.get_params"]], "get_params() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[13, "wildboar.ensemble._ensemble.PivotForestClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ProximityForestClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[13, "wildboar.ensemble._ensemble.RocketForestClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[13, "wildboar.ensemble._ensemble.RocketForestRegressor.get_params"]], "get_params() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.get_params"]], "get_params() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestRegressor.get_params"]], "predict() (wildboar.ensemble._ensemble.baggingclassifier method)": [[13, "wildboar.ensemble._ensemble.BaggingClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.baggingregressor method)": [[13, "wildboar.ensemble._ensemble.BaggingRegressor.predict"]], "predict() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseForestClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.baseforestregressor method)": [[13, "wildboar.ensemble._ensemble.BaseForestRegressor.predict"]], "predict() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.predict"]], "predict() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.predict"]], "predict() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[13, "wildboar.ensemble._ensemble.IntervalForestClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[13, "wildboar.ensemble._ensemble.IntervalForestRegressor.predict"]], "predict() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[13, "wildboar.ensemble._ensemble.PivotForestClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ProximityForestClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[13, "wildboar.ensemble._ensemble.RocketForestClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[13, "wildboar.ensemble._ensemble.RocketForestRegressor.predict"]], "predict() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.predict"]], "predict() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestRegressor.predict"]], "predict_log_proba() (wildboar.ensemble._ensemble.baggingclassifier method)": [[13, "wildboar.ensemble._ensemble.BaggingClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[13, "wildboar.ensemble._ensemble.IntervalForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[13, "wildboar.ensemble._ensemble.PivotForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ProximityForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[13, "wildboar.ensemble._ensemble.RocketForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestClassifier.predict_log_proba"]], "predict_proba() (wildboar.ensemble._ensemble.baggingclassifier method)": [[13, "wildboar.ensemble._ensemble.BaggingClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[13, "wildboar.ensemble._ensemble.IntervalForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[13, "wildboar.ensemble._ensemble.PivotForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ProximityForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[13, "wildboar.ensemble._ensemble.RocketForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestClassifier.predict_proba"]], "score() (wildboar.ensemble._ensemble.baggingclassifier method)": [[13, "wildboar.ensemble._ensemble.BaggingClassifier.score"]], "score() (wildboar.ensemble._ensemble.baggingregressor method)": [[13, "wildboar.ensemble._ensemble.BaggingRegressor.score"]], "score() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseForestClassifier.score"]], "score() (wildboar.ensemble._ensemble.baseforestregressor method)": [[13, "wildboar.ensemble._ensemble.BaseForestRegressor.score"]], "score() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.score"]], "score() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.score"]], "score() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.score"]], "score() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.score"]], "score() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[13, "wildboar.ensemble._ensemble.IntervalForestClassifier.score"]], "score() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[13, "wildboar.ensemble._ensemble.IntervalForestRegressor.score"]], "score() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[13, "wildboar.ensemble._ensemble.PivotForestClassifier.score"]], "score() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ProximityForestClassifier.score"]], "score() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[13, "wildboar.ensemble._ensemble.RocketForestClassifier.score"]], "score() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[13, "wildboar.ensemble._ensemble.RocketForestRegressor.score"]], "score() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestClassifier.score"]], "score() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.score"]], "score() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestRegressor.score"]], "set_params() (wildboar.ensemble._ensemble.baggingclassifier method)": [[13, "wildboar.ensemble._ensemble.BaggingClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.baggingregressor method)": [[13, "wildboar.ensemble._ensemble.BaggingRegressor.set_params"]], "set_params() (wildboar.ensemble._ensemble.basebagging method)": [[13, "wildboar.ensemble._ensemble.BaseBagging.set_params"]], "set_params() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseForestClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.baseforestregressor method)": [[13, "wildboar.ensemble._ensemble.BaseForestRegressor.set_params"]], "set_params() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.set_params"]], "set_params() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.set_params"]], "set_params() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[13, "wildboar.ensemble._ensemble.IntervalForestClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[13, "wildboar.ensemble._ensemble.IntervalForestRegressor.set_params"]], "set_params() (wildboar.ensemble._ensemble.isolationshapeletforest method)": [[13, "wildboar.ensemble._ensemble.IsolationShapeletForest.set_params"]], "set_params() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[13, "wildboar.ensemble._ensemble.PivotForestClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ProximityForestClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[13, "wildboar.ensemble._ensemble.RocketForestClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[13, "wildboar.ensemble._ensemble.RocketForestRegressor.set_params"]], "set_params() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.set_params"]], "set_params() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestRegressor.set_params"]], "wildboar.ensemble._ensemble": [[13, "module-wildboar.ensemble._ensemble"]], "baggingclassifier (class in wildboar.ensemble)": [[14, "wildboar.ensemble.BaggingClassifier"]], "baggingregressor (class in wildboar.ensemble)": [[14, "wildboar.ensemble.BaggingRegressor"]], "basebagging (class in wildboar.ensemble)": [[14, "wildboar.ensemble.BaseBagging"]], "extrashapelettreesclassifier (class in wildboar.ensemble)": [[14, "wildboar.ensemble.ExtraShapeletTreesClassifier"]], "extrashapelettreesregressor (class in wildboar.ensemble)": [[14, "wildboar.ensemble.ExtraShapeletTreesRegressor"]], "intervalforestclassifier (class in wildboar.ensemble)": [[14, "wildboar.ensemble.IntervalForestClassifier"]], "intervalforestregressor (class in wildboar.ensemble)": [[14, "wildboar.ensemble.IntervalForestRegressor"]], "isolationshapeletforest (class in wildboar.ensemble)": [[14, "wildboar.ensemble.IsolationShapeletForest"]], "pivotforestclassifier (class in wildboar.ensemble)": [[14, "wildboar.ensemble.PivotForestClassifier"]], "proximityforestclassifier (class in wildboar.ensemble)": [[14, "wildboar.ensemble.ProximityForestClassifier"]], "rocketforestclassifier (class in wildboar.ensemble)": [[14, "wildboar.ensemble.RocketForestClassifier"]], "rocketforestregressor (class in wildboar.ensemble)": [[14, "wildboar.ensemble.RocketForestRegressor"]], "shapeletforestclassifier (class in wildboar.ensemble)": [[14, "wildboar.ensemble.ShapeletForestClassifier"]], "shapeletforestembedding (class in wildboar.ensemble)": [[14, "wildboar.ensemble.ShapeletForestEmbedding"]], "shapeletforestregressor (class in wildboar.ensemble)": [[14, "wildboar.ensemble.ShapeletForestRegressor"]], "base_estimator_ (wildboar.ensemble.baggingclassifier property)": [[14, "wildboar.ensemble.BaggingClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble.baggingregressor property)": [[14, "wildboar.ensemble.BaggingRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble.basebagging property)": [[14, "wildboar.ensemble.BaseBagging.base_estimator_"]], "base_estimator_ (wildboar.ensemble.extrashapelettreesclassifier property)": [[14, "wildboar.ensemble.ExtraShapeletTreesClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble.extrashapelettreesregressor property)": [[14, "wildboar.ensemble.ExtraShapeletTreesRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble.intervalforestclassifier property)": [[14, "wildboar.ensemble.IntervalForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble.intervalforestregressor property)": [[14, "wildboar.ensemble.IntervalForestRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble.isolationshapeletforest property)": [[14, "wildboar.ensemble.IsolationShapeletForest.base_estimator_"]], "base_estimator_ (wildboar.ensemble.pivotforestclassifier property)": [[14, "wildboar.ensemble.PivotForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble.proximityforestclassifier property)": [[14, "wildboar.ensemble.ProximityForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble.rocketforestclassifier property)": [[14, "wildboar.ensemble.RocketForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble.rocketforestregressor property)": [[14, "wildboar.ensemble.RocketForestRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble.shapeletforestclassifier property)": [[14, "wildboar.ensemble.ShapeletForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble.shapeletforestembedding property)": [[14, "wildboar.ensemble.ShapeletForestEmbedding.base_estimator_"]], "base_estimator_ (wildboar.ensemble.shapeletforestregressor property)": [[14, "wildboar.ensemble.ShapeletForestRegressor.base_estimator_"]], "decision_function() (wildboar.ensemble.baggingclassifier method)": [[14, "wildboar.ensemble.BaggingClassifier.decision_function"]], "decision_function() (wildboar.ensemble.extrashapelettreesclassifier method)": [[14, "wildboar.ensemble.ExtraShapeletTreesClassifier.decision_function"]], "decision_function() (wildboar.ensemble.intervalforestclassifier method)": [[14, "wildboar.ensemble.IntervalForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble.pivotforestclassifier method)": [[14, "wildboar.ensemble.PivotForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble.proximityforestclassifier method)": [[14, "wildboar.ensemble.ProximityForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble.rocketforestclassifier method)": [[14, "wildboar.ensemble.RocketForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble.shapeletforestclassifier method)": [[14, "wildboar.ensemble.ShapeletForestClassifier.decision_function"]], "estimators_samples_ (wildboar.ensemble.baggingclassifier property)": [[14, "wildboar.ensemble.BaggingClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.baggingregressor property)": [[14, "wildboar.ensemble.BaggingRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.basebagging property)": [[14, "wildboar.ensemble.BaseBagging.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.extrashapelettreesclassifier property)": [[14, "wildboar.ensemble.ExtraShapeletTreesClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.extrashapelettreesregressor property)": [[14, "wildboar.ensemble.ExtraShapeletTreesRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.intervalforestclassifier property)": [[14, "wildboar.ensemble.IntervalForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.intervalforestregressor property)": [[14, "wildboar.ensemble.IntervalForestRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.isolationshapeletforest property)": [[14, "wildboar.ensemble.IsolationShapeletForest.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.pivotforestclassifier property)": [[14, "wildboar.ensemble.PivotForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.proximityforestclassifier property)": [[14, "wildboar.ensemble.ProximityForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.rocketforestclassifier property)": [[14, "wildboar.ensemble.RocketForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.rocketforestregressor property)": [[14, "wildboar.ensemble.RocketForestRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.shapeletforestclassifier property)": [[14, "wildboar.ensemble.ShapeletForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.shapeletforestembedding property)": [[14, "wildboar.ensemble.ShapeletForestEmbedding.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.shapeletforestregressor property)": [[14, "wildboar.ensemble.ShapeletForestRegressor.estimators_samples_"]], "fit() (wildboar.ensemble.baggingclassifier method)": [[14, "wildboar.ensemble.BaggingClassifier.fit"]], "fit() (wildboar.ensemble.baggingregressor method)": [[14, "wildboar.ensemble.BaggingRegressor.fit"]], "fit() (wildboar.ensemble.basebagging method)": [[14, "wildboar.ensemble.BaseBagging.fit"]], "fit() (wildboar.ensemble.extrashapelettreesclassifier method)": [[14, "wildboar.ensemble.ExtraShapeletTreesClassifier.fit"]], "fit() (wildboar.ensemble.extrashapelettreesregressor method)": [[14, "wildboar.ensemble.ExtraShapeletTreesRegressor.fit"]], "fit() (wildboar.ensemble.intervalforestclassifier method)": [[14, "wildboar.ensemble.IntervalForestClassifier.fit"]], "fit() (wildboar.ensemble.intervalforestregressor method)": [[14, "wildboar.ensemble.IntervalForestRegressor.fit"]], "fit() (wildboar.ensemble.isolationshapeletforest method)": [[14, "wildboar.ensemble.IsolationShapeletForest.fit"]], "fit() (wildboar.ensemble.pivotforestclassifier method)": [[14, "wildboar.ensemble.PivotForestClassifier.fit"]], "fit() (wildboar.ensemble.proximityforestclassifier method)": [[14, "wildboar.ensemble.ProximityForestClassifier.fit"]], "fit() (wildboar.ensemble.rocketforestclassifier method)": [[14, "wildboar.ensemble.RocketForestClassifier.fit"]], "fit() (wildboar.ensemble.rocketforestregressor method)": [[14, "wildboar.ensemble.RocketForestRegressor.fit"]], "fit() (wildboar.ensemble.shapeletforestclassifier method)": [[14, "wildboar.ensemble.ShapeletForestClassifier.fit"]], "fit() (wildboar.ensemble.shapeletforestembedding method)": [[14, "wildboar.ensemble.ShapeletForestEmbedding.fit"]], "fit() (wildboar.ensemble.shapeletforestregressor method)": [[14, "wildboar.ensemble.ShapeletForestRegressor.fit"]], "fit_predict() (wildboar.ensemble.isolationshapeletforest method)": [[14, "wildboar.ensemble.IsolationShapeletForest.fit_predict"]], "get_metadata_routing() (wildboar.ensemble.baggingclassifier method)": [[14, "wildboar.ensemble.BaggingClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.baggingregressor method)": [[14, "wildboar.ensemble.BaggingRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.basebagging method)": [[14, "wildboar.ensemble.BaseBagging.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.extrashapelettreesclassifier method)": [[14, "wildboar.ensemble.ExtraShapeletTreesClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.extrashapelettreesregressor method)": [[14, "wildboar.ensemble.ExtraShapeletTreesRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.intervalforestclassifier method)": [[14, "wildboar.ensemble.IntervalForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.intervalforestregressor method)": [[14, "wildboar.ensemble.IntervalForestRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.isolationshapeletforest method)": [[14, "wildboar.ensemble.IsolationShapeletForest.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.pivotforestclassifier method)": [[14, "wildboar.ensemble.PivotForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.proximityforestclassifier method)": [[14, "wildboar.ensemble.ProximityForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.rocketforestclassifier method)": [[14, "wildboar.ensemble.RocketForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.rocketforestregressor method)": [[14, "wildboar.ensemble.RocketForestRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.shapeletforestclassifier method)": [[14, "wildboar.ensemble.ShapeletForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.shapeletforestembedding method)": [[14, "wildboar.ensemble.ShapeletForestEmbedding.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.shapeletforestregressor method)": [[14, "wildboar.ensemble.ShapeletForestRegressor.get_metadata_routing"]], "get_params() (wildboar.ensemble.baggingclassifier method)": [[14, "wildboar.ensemble.BaggingClassifier.get_params"]], "get_params() (wildboar.ensemble.baggingregressor method)": [[14, "wildboar.ensemble.BaggingRegressor.get_params"]], "get_params() (wildboar.ensemble.basebagging method)": [[14, "wildboar.ensemble.BaseBagging.get_params"]], "get_params() (wildboar.ensemble.extrashapelettreesclassifier method)": [[14, "wildboar.ensemble.ExtraShapeletTreesClassifier.get_params"]], "get_params() (wildboar.ensemble.extrashapelettreesregressor method)": [[14, "wildboar.ensemble.ExtraShapeletTreesRegressor.get_params"]], "get_params() (wildboar.ensemble.intervalforestclassifier method)": [[14, "wildboar.ensemble.IntervalForestClassifier.get_params"]], "get_params() (wildboar.ensemble.intervalforestregressor method)": [[14, "wildboar.ensemble.IntervalForestRegressor.get_params"]], "get_params() (wildboar.ensemble.isolationshapeletforest method)": [[14, "wildboar.ensemble.IsolationShapeletForest.get_params"]], "get_params() (wildboar.ensemble.pivotforestclassifier method)": [[14, "wildboar.ensemble.PivotForestClassifier.get_params"]], "get_params() (wildboar.ensemble.proximityforestclassifier method)": [[14, "wildboar.ensemble.ProximityForestClassifier.get_params"]], "get_params() (wildboar.ensemble.rocketforestclassifier method)": [[14, "wildboar.ensemble.RocketForestClassifier.get_params"]], "get_params() (wildboar.ensemble.rocketforestregressor method)": [[14, "wildboar.ensemble.RocketForestRegressor.get_params"]], "get_params() (wildboar.ensemble.shapeletforestclassifier method)": [[14, "wildboar.ensemble.ShapeletForestClassifier.get_params"]], "get_params() (wildboar.ensemble.shapeletforestembedding method)": [[14, "wildboar.ensemble.ShapeletForestEmbedding.get_params"]], "get_params() (wildboar.ensemble.shapeletforestregressor method)": [[14, "wildboar.ensemble.ShapeletForestRegressor.get_params"]], "predict() (wildboar.ensemble.baggingclassifier method)": [[14, "wildboar.ensemble.BaggingClassifier.predict"]], "predict() (wildboar.ensemble.baggingregressor method)": [[14, "wildboar.ensemble.BaggingRegressor.predict"]], "predict() (wildboar.ensemble.extrashapelettreesclassifier method)": [[14, "wildboar.ensemble.ExtraShapeletTreesClassifier.predict"]], "predict() (wildboar.ensemble.extrashapelettreesregressor method)": [[14, "wildboar.ensemble.ExtraShapeletTreesRegressor.predict"]], "predict() (wildboar.ensemble.intervalforestclassifier method)": [[14, "wildboar.ensemble.IntervalForestClassifier.predict"]], "predict() (wildboar.ensemble.intervalforestregressor method)": [[14, "wildboar.ensemble.IntervalForestRegressor.predict"]], "predict() (wildboar.ensemble.pivotforestclassifier method)": [[14, "wildboar.ensemble.PivotForestClassifier.predict"]], "predict() (wildboar.ensemble.proximityforestclassifier method)": [[14, "wildboar.ensemble.ProximityForestClassifier.predict"]], "predict() (wildboar.ensemble.rocketforestclassifier method)": [[14, "wildboar.ensemble.RocketForestClassifier.predict"]], "predict() (wildboar.ensemble.rocketforestregressor method)": [[14, "wildboar.ensemble.RocketForestRegressor.predict"]], "predict() (wildboar.ensemble.shapeletforestclassifier method)": [[14, "wildboar.ensemble.ShapeletForestClassifier.predict"]], "predict() (wildboar.ensemble.shapeletforestembedding method)": [[14, "wildboar.ensemble.ShapeletForestEmbedding.predict"]], "predict() (wildboar.ensemble.shapeletforestregressor method)": [[14, "wildboar.ensemble.ShapeletForestRegressor.predict"]], "predict_log_proba() (wildboar.ensemble.baggingclassifier method)": [[14, "wildboar.ensemble.BaggingClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble.extrashapelettreesclassifier method)": [[14, "wildboar.ensemble.ExtraShapeletTreesClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble.intervalforestclassifier method)": [[14, "wildboar.ensemble.IntervalForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble.pivotforestclassifier method)": [[14, "wildboar.ensemble.PivotForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble.proximityforestclassifier method)": [[14, "wildboar.ensemble.ProximityForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble.rocketforestclassifier method)": [[14, "wildboar.ensemble.RocketForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble.shapeletforestclassifier method)": [[14, "wildboar.ensemble.ShapeletForestClassifier.predict_log_proba"]], "predict_proba() (wildboar.ensemble.baggingclassifier method)": [[14, "wildboar.ensemble.BaggingClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble.extrashapelettreesclassifier method)": [[14, "wildboar.ensemble.ExtraShapeletTreesClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble.intervalforestclassifier method)": [[14, "wildboar.ensemble.IntervalForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble.pivotforestclassifier method)": [[14, "wildboar.ensemble.PivotForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble.proximityforestclassifier method)": [[14, "wildboar.ensemble.ProximityForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble.rocketforestclassifier method)": [[14, "wildboar.ensemble.RocketForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble.shapeletforestclassifier method)": [[14, "wildboar.ensemble.ShapeletForestClassifier.predict_proba"]], "score() (wildboar.ensemble.baggingclassifier method)": [[14, "wildboar.ensemble.BaggingClassifier.score"]], "score() (wildboar.ensemble.baggingregressor method)": [[14, "wildboar.ensemble.BaggingRegressor.score"]], "score() (wildboar.ensemble.extrashapelettreesclassifier method)": [[14, "wildboar.ensemble.ExtraShapeletTreesClassifier.score"]], "score() (wildboar.ensemble.extrashapelettreesregressor method)": [[14, "wildboar.ensemble.ExtraShapeletTreesRegressor.score"]], "score() (wildboar.ensemble.intervalforestclassifier method)": [[14, "wildboar.ensemble.IntervalForestClassifier.score"]], "score() (wildboar.ensemble.intervalforestregressor method)": [[14, "wildboar.ensemble.IntervalForestRegressor.score"]], "score() (wildboar.ensemble.pivotforestclassifier method)": [[14, "wildboar.ensemble.PivotForestClassifier.score"]], "score() (wildboar.ensemble.proximityforestclassifier method)": [[14, "wildboar.ensemble.ProximityForestClassifier.score"]], "score() (wildboar.ensemble.rocketforestclassifier method)": [[14, "wildboar.ensemble.RocketForestClassifier.score"]], "score() (wildboar.ensemble.rocketforestregressor method)": [[14, "wildboar.ensemble.RocketForestRegressor.score"]], "score() (wildboar.ensemble.shapeletforestclassifier method)": [[14, "wildboar.ensemble.ShapeletForestClassifier.score"]], "score() (wildboar.ensemble.shapeletforestembedding method)": [[14, "wildboar.ensemble.ShapeletForestEmbedding.score"]], "score() (wildboar.ensemble.shapeletforestregressor method)": [[14, "wildboar.ensemble.ShapeletForestRegressor.score"]], "set_params() (wildboar.ensemble.baggingclassifier method)": [[14, "wildboar.ensemble.BaggingClassifier.set_params"]], "set_params() (wildboar.ensemble.baggingregressor method)": [[14, "wildboar.ensemble.BaggingRegressor.set_params"]], "set_params() (wildboar.ensemble.basebagging method)": [[14, "wildboar.ensemble.BaseBagging.set_params"]], "set_params() (wildboar.ensemble.extrashapelettreesclassifier method)": [[14, "wildboar.ensemble.ExtraShapeletTreesClassifier.set_params"]], "set_params() (wildboar.ensemble.extrashapelettreesregressor method)": [[14, "wildboar.ensemble.ExtraShapeletTreesRegressor.set_params"]], "set_params() (wildboar.ensemble.intervalforestclassifier method)": [[14, "wildboar.ensemble.IntervalForestClassifier.set_params"]], "set_params() (wildboar.ensemble.intervalforestregressor method)": [[14, "wildboar.ensemble.IntervalForestRegressor.set_params"]], "set_params() (wildboar.ensemble.isolationshapeletforest method)": [[14, "wildboar.ensemble.IsolationShapeletForest.set_params"]], "set_params() (wildboar.ensemble.pivotforestclassifier method)": [[14, "wildboar.ensemble.PivotForestClassifier.set_params"]], "set_params() (wildboar.ensemble.proximityforestclassifier method)": [[14, "wildboar.ensemble.ProximityForestClassifier.set_params"]], "set_params() (wildboar.ensemble.rocketforestclassifier method)": [[14, "wildboar.ensemble.RocketForestClassifier.set_params"]], "set_params() (wildboar.ensemble.rocketforestregressor method)": [[14, "wildboar.ensemble.RocketForestRegressor.set_params"]], "set_params() (wildboar.ensemble.shapeletforestclassifier method)": [[14, "wildboar.ensemble.ShapeletForestClassifier.set_params"]], "set_params() (wildboar.ensemble.shapeletforestembedding method)": [[14, "wildboar.ensemble.ShapeletForestEmbedding.set_params"]], "set_params() (wildboar.ensemble.shapeletforestregressor method)": [[14, "wildboar.ensemble.ShapeletForestRegressor.set_params"]], "wildboar.ensemble": [[14, "module-wildboar.ensemble"]], "amplitudeimportance (class in wildboar.explain._importance)": [[15, "wildboar.explain._importance.AmplitudeImportance"]], "intervalimportance (class in wildboar.explain._importance)": [[15, "wildboar.explain._importance.IntervalImportance"]], "permuteimportance (class in wildboar.explain._importance)": [[15, "wildboar.explain._importance.PermuteImportance"]], "shapeletimportance (class in wildboar.explain._importance)": [[15, "wildboar.explain._importance.ShapeletImportance"]], "fit_explain() (wildboar.explain._importance.amplitudeimportance method)": [[15, "wildboar.explain._importance.AmplitudeImportance.fit_explain"]], "fit_explain() (wildboar.explain._importance.intervalimportance method)": [[15, "wildboar.explain._importance.IntervalImportance.fit_explain"]], "fit_explain() (wildboar.explain._importance.shapeletimportance method)": [[15, "wildboar.explain._importance.ShapeletImportance.fit_explain"]], "get_metadata_routing() (wildboar.explain._importance.amplitudeimportance method)": [[15, "wildboar.explain._importance.AmplitudeImportance.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain._importance.intervalimportance method)": [[15, "wildboar.explain._importance.IntervalImportance.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain._importance.permuteimportance method)": [[15, "wildboar.explain._importance.PermuteImportance.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain._importance.shapeletimportance method)": [[15, "wildboar.explain._importance.ShapeletImportance.get_metadata_routing"]], "get_params() (wildboar.explain._importance.amplitudeimportance method)": [[15, "wildboar.explain._importance.AmplitudeImportance.get_params"]], "get_params() (wildboar.explain._importance.intervalimportance method)": [[15, "wildboar.explain._importance.IntervalImportance.get_params"]], "get_params() (wildboar.explain._importance.permuteimportance method)": [[15, "wildboar.explain._importance.PermuteImportance.get_params"]], "get_params() (wildboar.explain._importance.shapeletimportance method)": [[15, "wildboar.explain._importance.ShapeletImportance.get_params"]], "plot() (wildboar.explain._importance.amplitudeimportance method)": [[15, "wildboar.explain._importance.AmplitudeImportance.plot"]], "plot() (wildboar.explain._importance.intervalimportance method)": [[15, "wildboar.explain._importance.IntervalImportance.plot"]], "plot() (wildboar.explain._importance.shapeletimportance method)": [[15, "wildboar.explain._importance.ShapeletImportance.plot"]], "plot_importances() (in module wildboar.explain._importance)": [[15, "wildboar.explain._importance.plot_importances"]], "set_params() (wildboar.explain._importance.amplitudeimportance method)": [[15, "wildboar.explain._importance.AmplitudeImportance.set_params"]], "set_params() (wildboar.explain._importance.intervalimportance method)": [[15, "wildboar.explain._importance.IntervalImportance.set_params"]], "set_params() (wildboar.explain._importance.permuteimportance method)": [[15, "wildboar.explain._importance.PermuteImportance.set_params"]], "set_params() (wildboar.explain._importance.shapeletimportance method)": [[15, "wildboar.explain._importance.ShapeletImportance.set_params"]], "wildboar.explain._importance": [[15, "module-wildboar.explain._importance"]], "counterfactuals() (in module wildboar.explain.counterfactual._helper)": [[16, "wildboar.explain.counterfactual._helper.counterfactuals"]], "wildboar.explain.counterfactual._helper": [[16, "module-wildboar.explain.counterfactual._helper"]], "kneighborscounterfactual (class in wildboar.explain.counterfactual._nn)": [[17, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual"]], "fit_explain() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[17, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.fit_explain"]], "get_metadata_routing() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[17, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.get_metadata_routing"]], "get_params() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[17, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.get_params"]], "plot() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[17, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.plot"]], "score() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[17, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.score"]], "set_params() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[17, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.set_params"]], "wildboar.explain.counterfactual._nn": [[17, "module-wildboar.explain.counterfactual._nn"]], "dynamictimewarptransform (class in wildboar.explain.counterfactual._proto)": [[18, "wildboar.explain.counterfactual._proto.DynamicTimeWarpTransform"]], "euclideantransform (class in wildboar.explain.counterfactual._proto)": [[18, "wildboar.explain.counterfactual._proto.EuclideanTransform"]], "knearestprototypesampler (class in wildboar.explain.counterfactual._proto)": [[18, "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler"]], "knearestshapeletprototypesampler (class in wildboar.explain.counterfactual._proto)": [[18, "wildboar.explain.counterfactual._proto.KNearestShapeletPrototypeSampler"]], "metrictransform (class in wildboar.explain.counterfactual._proto)": [[18, "wildboar.explain.counterfactual._proto.MetricTransform"]], "predictevaluator (class in wildboar.explain.counterfactual._proto)": [[18, "wildboar.explain.counterfactual._proto.PredictEvaluator"]], "probabilityevaluator (class in wildboar.explain.counterfactual._proto)": [[18, "wildboar.explain.counterfactual._proto.ProbabilityEvaluator"]], "prototypecounterfactual (class in wildboar.explain.counterfactual._proto)": [[18, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual"]], "prototypesampler (class in wildboar.explain.counterfactual._proto)": [[18, "wildboar.explain.counterfactual._proto.PrototypeSampler"]], "shapeletprototypesampler (class in wildboar.explain.counterfactual._proto)": [[18, "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler"]], "targetevaluator (class in wildboar.explain.counterfactual._proto)": [[18, "wildboar.explain.counterfactual._proto.TargetEvaluator"]], "uniformprototypesampler (class in wildboar.explain.counterfactual._proto)": [[18, "wildboar.explain.counterfactual._proto.UniformPrototypeSampler"]], "weighteddynamictimewarptransform (class in wildboar.explain.counterfactual._proto)": [[18, "wildboar.explain.counterfactual._proto.WeightedDynamicTimeWarpTransform"]], "fit_explain() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[18, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.fit_explain"]], "get_metadata_routing() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[18, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.get_metadata_routing"]], "get_params() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[18, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.get_params"]], "is_counterfactual() (wildboar.explain.counterfactual._proto.predictevaluator method)": [[18, "wildboar.explain.counterfactual._proto.PredictEvaluator.is_counterfactual"]], "is_counterfactual() (wildboar.explain.counterfactual._proto.probabilityevaluator method)": [[18, "wildboar.explain.counterfactual._proto.ProbabilityEvaluator.is_counterfactual"]], "is_counterfactual() (wildboar.explain.counterfactual._proto.targetevaluator method)": [[18, "wildboar.explain.counterfactual._proto.TargetEvaluator.is_counterfactual"]], "move() (wildboar.explain.counterfactual._proto.dynamictimewarptransform method)": [[18, "wildboar.explain.counterfactual._proto.DynamicTimeWarpTransform.move"]], "move() (wildboar.explain.counterfactual._proto.euclideantransform method)": [[18, "wildboar.explain.counterfactual._proto.EuclideanTransform.move"]], "move() (wildboar.explain.counterfactual._proto.knearestprototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler.move"]], "move() (wildboar.explain.counterfactual._proto.knearestshapeletprototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.KNearestShapeletPrototypeSampler.move"]], "move() (wildboar.explain.counterfactual._proto.metrictransform method)": [[18, "wildboar.explain.counterfactual._proto.MetricTransform.move"]], "move() (wildboar.explain.counterfactual._proto.prototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.PrototypeSampler.move"]], "move() (wildboar.explain.counterfactual._proto.shapeletprototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler.move"]], "move() (wildboar.explain.counterfactual._proto.uniformprototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.UniformPrototypeSampler.move"]], "move() (wildboar.explain.counterfactual._proto.weighteddynamictimewarptransform method)": [[18, "wildboar.explain.counterfactual._proto.WeightedDynamicTimeWarpTransform.move"]], "nearest_index() (wildboar.explain.counterfactual._proto.knearestprototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler.nearest_index"]], "plot() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[18, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.plot"]], "sample() (wildboar.explain.counterfactual._proto.knearestprototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler.sample"]], "sample() (wildboar.explain.counterfactual._proto.knearestshapeletprototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.KNearestShapeletPrototypeSampler.sample"]], "sample() (wildboar.explain.counterfactual._proto.prototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.PrototypeSampler.sample"]], "sample() (wildboar.explain.counterfactual._proto.shapeletprototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler.sample"]], "sample() (wildboar.explain.counterfactual._proto.uniformprototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.UniformPrototypeSampler.sample"]], "sample_move() (wildboar.explain.counterfactual._proto.knearestprototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler.sample_move"]], "sample_move() (wildboar.explain.counterfactual._proto.knearestshapeletprototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.KNearestShapeletPrototypeSampler.sample_move"]], "sample_move() (wildboar.explain.counterfactual._proto.prototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.PrototypeSampler.sample_move"]], "sample_move() (wildboar.explain.counterfactual._proto.shapeletprototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler.sample_move"]], "sample_move() (wildboar.explain.counterfactual._proto.uniformprototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.UniformPrototypeSampler.sample_move"]], "sample_shapelet() (wildboar.explain.counterfactual._proto.shapeletprototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler.sample_shapelet"]], "score() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[18, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.score"]], "set_params() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[18, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.set_params"]], "wildboar.explain.counterfactual._proto": [[18, "module-wildboar.explain.counterfactual._proto"]], "shapeletforestcounterfactual (class in wildboar.explain.counterfactual._sf)": [[19, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual"]], "fit_explain() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[19, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.fit_explain"]], "get_metadata_routing() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[19, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.get_metadata_routing"]], "get_params() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[19, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.get_params"]], "plot() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[19, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.plot"]], "score() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[19, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.score"]], "set_params() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[19, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.set_params"]], "wildboar.explain.counterfactual._sf": [[19, "module-wildboar.explain.counterfactual._sf"]], "kneighborscounterfactual (class in wildboar.explain.counterfactual)": [[20, "wildboar.explain.counterfactual.KNeighborsCounterfactual"]], "prototypecounterfactual (class in wildboar.explain.counterfactual)": [[20, "wildboar.explain.counterfactual.PrototypeCounterfactual"]], "shapeletforestcounterfactual (class in wildboar.explain.counterfactual)": [[20, "wildboar.explain.counterfactual.ShapeletForestCounterfactual"]], "counterfactuals() (in module wildboar.explain.counterfactual)": [[20, "wildboar.explain.counterfactual.counterfactuals"]], "fit_explain() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[20, "wildboar.explain.counterfactual.KNeighborsCounterfactual.fit_explain"]], "fit_explain() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[20, "wildboar.explain.counterfactual.PrototypeCounterfactual.fit_explain"]], "fit_explain() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[20, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.fit_explain"]], "get_metadata_routing() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[20, "wildboar.explain.counterfactual.KNeighborsCounterfactual.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[20, "wildboar.explain.counterfactual.PrototypeCounterfactual.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[20, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.get_metadata_routing"]], "get_params() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[20, "wildboar.explain.counterfactual.KNeighborsCounterfactual.get_params"]], "get_params() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[20, "wildboar.explain.counterfactual.PrototypeCounterfactual.get_params"]], "get_params() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[20, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.get_params"]], "plot() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[20, "wildboar.explain.counterfactual.KNeighborsCounterfactual.plot"]], "plot() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[20, "wildboar.explain.counterfactual.PrototypeCounterfactual.plot"]], "plot() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[20, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.plot"]], "proximity() (in module wildboar.explain.counterfactual)": [[20, "wildboar.explain.counterfactual.proximity"]], "score() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[20, "wildboar.explain.counterfactual.KNeighborsCounterfactual.score"]], "score() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[20, "wildboar.explain.counterfactual.PrototypeCounterfactual.score"]], "score() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[20, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.score"]], "set_params() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[20, "wildboar.explain.counterfactual.KNeighborsCounterfactual.set_params"]], "set_params() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[20, "wildboar.explain.counterfactual.PrototypeCounterfactual.set_params"]], "set_params() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[20, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.set_params"]], "wildboar.explain.counterfactual": [[20, "module-wildboar.explain.counterfactual"]], "amplitudeimportance (class in wildboar.explain)": [[21, "wildboar.explain.AmplitudeImportance"]], "intervalimportance (class in wildboar.explain)": [[21, "wildboar.explain.IntervalImportance"]], "shapeletimportance (class in wildboar.explain)": [[21, "wildboar.explain.ShapeletImportance"]], "fit_explain() (wildboar.explain.amplitudeimportance method)": [[21, "wildboar.explain.AmplitudeImportance.fit_explain"]], "fit_explain() (wildboar.explain.intervalimportance method)": [[21, "wildboar.explain.IntervalImportance.fit_explain"]], "fit_explain() (wildboar.explain.shapeletimportance method)": [[21, "wildboar.explain.ShapeletImportance.fit_explain"]], "get_metadata_routing() (wildboar.explain.amplitudeimportance method)": [[21, "wildboar.explain.AmplitudeImportance.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain.intervalimportance method)": [[21, "wildboar.explain.IntervalImportance.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain.shapeletimportance method)": [[21, "wildboar.explain.ShapeletImportance.get_metadata_routing"]], "get_params() (wildboar.explain.amplitudeimportance method)": [[21, "wildboar.explain.AmplitudeImportance.get_params"]], "get_params() (wildboar.explain.intervalimportance method)": [[21, "wildboar.explain.IntervalImportance.get_params"]], "get_params() (wildboar.explain.shapeletimportance method)": [[21, "wildboar.explain.ShapeletImportance.get_params"]], "plot() (wildboar.explain.amplitudeimportance method)": [[21, "wildboar.explain.AmplitudeImportance.plot"]], "plot() (wildboar.explain.intervalimportance method)": [[21, "wildboar.explain.IntervalImportance.plot"]], "plot() (wildboar.explain.shapeletimportance method)": [[21, "wildboar.explain.ShapeletImportance.plot"]], "plot_importances() (in module wildboar.explain)": [[21, "wildboar.explain.plot_importances"]], "set_params() (wildboar.explain.amplitudeimportance method)": [[21, "wildboar.explain.AmplitudeImportance.set_params"]], "set_params() (wildboar.explain.intervalimportance method)": [[21, "wildboar.explain.IntervalImportance.set_params"]], "set_params() (wildboar.explain.shapeletimportance method)": [[21, "wildboar.explain.ShapeletImportance.set_params"]], "wildboar.explain": [[21, "module-wildboar.explain"]], "iseos() (in module wildboar)": [[22, "wildboar.iseos"]], "wildboar": [[22, "module-wildboar"]], "rocketclassifier (class in wildboar.linear_model._rocket)": [[23, "wildboar.linear_model._rocket.RocketClassifier"]], "rocketregressor (class in wildboar.linear_model._rocket)": [[23, "wildboar.linear_model._rocket.RocketRegressor"]], "get_metadata_routing() (wildboar.linear_model._rocket.rocketclassifier method)": [[23, "wildboar.linear_model._rocket.RocketClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model._rocket.rocketregressor method)": [[23, "wildboar.linear_model._rocket.RocketRegressor.get_metadata_routing"]], "get_params() (wildboar.linear_model._rocket.rocketclassifier method)": [[23, "wildboar.linear_model._rocket.RocketClassifier.get_params"]], "get_params() (wildboar.linear_model._rocket.rocketregressor method)": [[23, "wildboar.linear_model._rocket.RocketRegressor.get_params"]], "score() (wildboar.linear_model._rocket.rocketclassifier method)": [[23, "wildboar.linear_model._rocket.RocketClassifier.score"]], "score() (wildboar.linear_model._rocket.rocketregressor method)": [[23, "wildboar.linear_model._rocket.RocketRegressor.score"]], "set_params() (wildboar.linear_model._rocket.rocketclassifier method)": [[23, "wildboar.linear_model._rocket.RocketClassifier.set_params"]], "set_params() (wildboar.linear_model._rocket.rocketregressor method)": [[23, "wildboar.linear_model._rocket.RocketRegressor.set_params"]], "wildboar.linear_model._rocket": [[23, "module-wildboar.linear_model._rocket"]], "randomshapeletclassifier (class in wildboar.linear_model._shapelet)": [[24, "wildboar.linear_model._shapelet.RandomShapeletClassifier"]], "randomshapeletregressor (class in wildboar.linear_model._shapelet)": [[24, "wildboar.linear_model._shapelet.RandomShapeletRegressor"]], "get_metadata_routing() (wildboar.linear_model._shapelet.randomshapeletclassifier method)": [[24, "wildboar.linear_model._shapelet.RandomShapeletClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model._shapelet.randomshapeletregressor method)": [[24, "wildboar.linear_model._shapelet.RandomShapeletRegressor.get_metadata_routing"]], "get_params() (wildboar.linear_model._shapelet.randomshapeletclassifier method)": [[24, "wildboar.linear_model._shapelet.RandomShapeletClassifier.get_params"]], "get_params() (wildboar.linear_model._shapelet.randomshapeletregressor method)": [[24, "wildboar.linear_model._shapelet.RandomShapeletRegressor.get_params"]], "score() (wildboar.linear_model._shapelet.randomshapeletclassifier method)": [[24, "wildboar.linear_model._shapelet.RandomShapeletClassifier.score"]], "score() (wildboar.linear_model._shapelet.randomshapeletregressor method)": [[24, "wildboar.linear_model._shapelet.RandomShapeletRegressor.score"]], "set_params() (wildboar.linear_model._shapelet.randomshapeletclassifier method)": [[24, "wildboar.linear_model._shapelet.RandomShapeletClassifier.set_params"]], "set_params() (wildboar.linear_model._shapelet.randomshapeletregressor method)": [[24, "wildboar.linear_model._shapelet.RandomShapeletRegressor.set_params"]], "wildboar.linear_model._shapelet": [[24, "module-wildboar.linear_model._shapelet"]], "basetransformclassifier (class in wildboar.linear_model._transform)": [[25, "wildboar.linear_model._transform.BaseTransformClassifier"]], "basetransformestimator (class in wildboar.linear_model._transform)": [[25, "wildboar.linear_model._transform.BaseTransformEstimator"]], "basetransformregressor (class in wildboar.linear_model._transform)": [[25, "wildboar.linear_model._transform.BaseTransformRegressor"]], "transformridgecv (class in wildboar.linear_model._transform)": [[25, "wildboar.linear_model._transform.TransformRidgeCV"]], "transformridgeclassifiercv (class in wildboar.linear_model._transform)": [[25, "wildboar.linear_model._transform.TransformRidgeClassifierCV"]], "get_metadata_routing() (wildboar.linear_model._transform.basetransformclassifier method)": [[25, "wildboar.linear_model._transform.BaseTransformClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model._transform.basetransformestimator method)": [[25, "wildboar.linear_model._transform.BaseTransformEstimator.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model._transform.basetransformregressor method)": [[25, "wildboar.linear_model._transform.BaseTransformRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model._transform.transformridgecv method)": [[25, "wildboar.linear_model._transform.TransformRidgeCV.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model._transform.transformridgeclassifiercv method)": [[25, "wildboar.linear_model._transform.TransformRidgeClassifierCV.get_metadata_routing"]], "get_params() (wildboar.linear_model._transform.basetransformclassifier method)": [[25, "wildboar.linear_model._transform.BaseTransformClassifier.get_params"]], "get_params() (wildboar.linear_model._transform.basetransformestimator method)": [[25, "wildboar.linear_model._transform.BaseTransformEstimator.get_params"]], "get_params() (wildboar.linear_model._transform.basetransformregressor method)": [[25, "wildboar.linear_model._transform.BaseTransformRegressor.get_params"]], "get_params() (wildboar.linear_model._transform.transformridgecv method)": [[25, "wildboar.linear_model._transform.TransformRidgeCV.get_params"]], "get_params() (wildboar.linear_model._transform.transformridgeclassifiercv method)": [[25, "wildboar.linear_model._transform.TransformRidgeClassifierCV.get_params"]], "score() (wildboar.linear_model._transform.basetransformclassifier method)": [[25, "wildboar.linear_model._transform.BaseTransformClassifier.score"]], "score() (wildboar.linear_model._transform.basetransformregressor method)": [[25, "wildboar.linear_model._transform.BaseTransformRegressor.score"]], "score() (wildboar.linear_model._transform.transformridgecv method)": [[25, "wildboar.linear_model._transform.TransformRidgeCV.score"]], "score() (wildboar.linear_model._transform.transformridgeclassifiercv method)": [[25, "wildboar.linear_model._transform.TransformRidgeClassifierCV.score"]], "set_params() (wildboar.linear_model._transform.basetransformclassifier method)": [[25, "wildboar.linear_model._transform.BaseTransformClassifier.set_params"]], "set_params() (wildboar.linear_model._transform.basetransformestimator method)": [[25, "wildboar.linear_model._transform.BaseTransformEstimator.set_params"]], "set_params() (wildboar.linear_model._transform.basetransformregressor method)": [[25, "wildboar.linear_model._transform.BaseTransformRegressor.set_params"]], "set_params() (wildboar.linear_model._transform.transformridgecv method)": [[25, "wildboar.linear_model._transform.TransformRidgeCV.set_params"]], "set_params() (wildboar.linear_model._transform.transformridgeclassifiercv method)": [[25, "wildboar.linear_model._transform.TransformRidgeClassifierCV.set_params"]], "wildboar.linear_model._transform": [[25, "module-wildboar.linear_model._transform"]], "randomshapeletclassifier (class in wildboar.linear_model)": [[26, "wildboar.linear_model.RandomShapeletClassifier"]], "randomshapeletregressor (class in wildboar.linear_model)": [[26, "wildboar.linear_model.RandomShapeletRegressor"]], "rocketclassifier (class in wildboar.linear_model)": [[26, "wildboar.linear_model.RocketClassifier"]], "rocketregressor (class in wildboar.linear_model)": [[26, "wildboar.linear_model.RocketRegressor"]], "get_metadata_routing() (wildboar.linear_model.randomshapeletclassifier method)": [[26, "wildboar.linear_model.RandomShapeletClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model.randomshapeletregressor method)": [[26, "wildboar.linear_model.RandomShapeletRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model.rocketclassifier method)": [[26, "wildboar.linear_model.RocketClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model.rocketregressor method)": [[26, "wildboar.linear_model.RocketRegressor.get_metadata_routing"]], "get_params() (wildboar.linear_model.randomshapeletclassifier method)": [[26, "wildboar.linear_model.RandomShapeletClassifier.get_params"]], "get_params() (wildboar.linear_model.randomshapeletregressor method)": [[26, "wildboar.linear_model.RandomShapeletRegressor.get_params"]], "get_params() (wildboar.linear_model.rocketclassifier method)": [[26, "wildboar.linear_model.RocketClassifier.get_params"]], "get_params() (wildboar.linear_model.rocketregressor method)": [[26, "wildboar.linear_model.RocketRegressor.get_params"]], "score() (wildboar.linear_model.randomshapeletclassifier method)": [[26, "wildboar.linear_model.RandomShapeletClassifier.score"]], "score() (wildboar.linear_model.randomshapeletregressor method)": [[26, "wildboar.linear_model.RandomShapeletRegressor.score"]], "score() (wildboar.linear_model.rocketclassifier method)": [[26, "wildboar.linear_model.RocketClassifier.score"]], "score() (wildboar.linear_model.rocketregressor method)": [[26, "wildboar.linear_model.RocketRegressor.score"]], "set_params() (wildboar.linear_model.randomshapeletclassifier method)": [[26, "wildboar.linear_model.RandomShapeletClassifier.set_params"]], "set_params() (wildboar.linear_model.randomshapeletregressor method)": [[26, "wildboar.linear_model.RandomShapeletRegressor.set_params"]], "set_params() (wildboar.linear_model.rocketclassifier method)": [[26, "wildboar.linear_model.RocketClassifier.set_params"]], "set_params() (wildboar.linear_model.rocketregressor method)": [[26, "wildboar.linear_model.RocketRegressor.set_params"]], "wildboar.linear_model": [[26, "module-wildboar.linear_model"]], "compactness_score() (in module wildboar.metrics._counterfactual)": [[27, "wildboar.metrics._counterfactual.compactness_score"]], "plausability_score() (in module wildboar.metrics._counterfactual)": [[27, "wildboar.metrics._counterfactual.plausability_score"]], "proximity_score() (in module wildboar.metrics._counterfactual)": [[27, "wildboar.metrics._counterfactual.proximity_score"]], "relative_proximity_score() (in module wildboar.metrics._counterfactual)": [[27, "wildboar.metrics._counterfactual.relative_proximity_score"]], "validity_score() (in module wildboar.metrics._counterfactual)": [[27, "wildboar.metrics._counterfactual.validity_score"]], "wildboar.metrics._counterfactual": [[27, "module-wildboar.metrics._counterfactual"]], "compactness_score() (in module wildboar.metrics)": [[28, "wildboar.metrics.compactness_score"]], "plausability_score() (in module wildboar.metrics)": [[28, "wildboar.metrics.plausability_score"]], "proximity_score() (in module wildboar.metrics)": [[28, "wildboar.metrics.proximity_score"]], "relative_proximity_score() (in module wildboar.metrics)": [[28, "wildboar.metrics.relative_proximity_score"]], "validity_score() (in module wildboar.metrics)": [[28, "wildboar.metrics.validity_score"]], "wildboar.metrics": [[28, "module-wildboar.metrics"]], "repeatedoutliersplit (class in wildboar.model_selection._cv)": [[29, "wildboar.model_selection._cv.RepeatedOutlierSplit"]], "get_n_splits() (wildboar.model_selection._cv.repeatedoutliersplit method)": [[29, "wildboar.model_selection._cv.RepeatedOutlierSplit.get_n_splits"]], "split() (wildboar.model_selection._cv.repeatedoutliersplit method)": [[29, "wildboar.model_selection._cv.RepeatedOutlierSplit.split"]], "wildboar.model_selection._cv": [[29, "module-wildboar.model_selection._cv"]], "outlier_train_test_split() (in module wildboar.model_selection._outlier)": [[30, "wildboar.model_selection._outlier.outlier_train_test_split"]], "wildboar.model_selection._outlier": [[30, "module-wildboar.model_selection._outlier"]], "repeatedoutliersplit (class in wildboar.model_selection)": [[31, "wildboar.model_selection.RepeatedOutlierSplit"]], "get_n_splits() (wildboar.model_selection.repeatedoutliersplit method)": [[31, "wildboar.model_selection.RepeatedOutlierSplit.get_n_splits"]], "outlier_train_test_split() (in module wildboar.model_selection)": [[31, "wildboar.model_selection.outlier_train_test_split"]], "split() (wildboar.model_selection.repeatedoutliersplit method)": [[31, "wildboar.model_selection.RepeatedOutlierSplit.split"]], "wildboar.model_selection": [[31, "module-wildboar.model_selection"]], "basefeatureengineertransform (class in wildboar.transform._base)": [[32, "wildboar.transform._base.BaseFeatureEngineerTransform"]], "fit() (wildboar.transform._base.basefeatureengineertransform method)": [[32, "wildboar.transform._base.BaseFeatureEngineerTransform.fit"]], "fit_transform() (wildboar.transform._base.basefeatureengineertransform method)": [[32, "wildboar.transform._base.BaseFeatureEngineerTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._base.basefeatureengineertransform method)": [[32, "wildboar.transform._base.BaseFeatureEngineerTransform.get_metadata_routing"]], "get_params() (wildboar.transform._base.basefeatureengineertransform method)": [[32, "wildboar.transform._base.BaseFeatureEngineerTransform.get_params"]], "set_output() (wildboar.transform._base.basefeatureengineertransform method)": [[32, "wildboar.transform._base.BaseFeatureEngineerTransform.set_output"]], "set_params() (wildboar.transform._base.basefeatureengineertransform method)": [[32, "wildboar.transform._base.BaseFeatureEngineerTransform.set_params"]], "transform() (wildboar.transform._base.basefeatureengineertransform method)": [[32, "wildboar.transform._base.BaseFeatureEngineerTransform.transform"]], "wildboar.transform._base": [[32, "module-wildboar.transform._base"]], "featuretransform (class in wildboar.transform._interval)": [[33, "wildboar.transform._interval.FeatureTransform"]], "intervalmixin (class in wildboar.transform._interval)": [[33, "wildboar.transform._interval.IntervalMixin"]], "intervaltransform (class in wildboar.transform._interval)": [[33, "wildboar.transform._interval.IntervalTransform"]], "fit() (wildboar.transform._interval.featuretransform method)": [[33, "wildboar.transform._interval.FeatureTransform.fit"]], "fit() (wildboar.transform._interval.intervaltransform method)": [[33, "wildboar.transform._interval.IntervalTransform.fit"]], "fit_transform() (wildboar.transform._interval.featuretransform method)": [[33, "wildboar.transform._interval.FeatureTransform.fit_transform"]], "fit_transform() (wildboar.transform._interval.intervaltransform method)": [[33, "wildboar.transform._interval.IntervalTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._interval.featuretransform method)": [[33, "wildboar.transform._interval.FeatureTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform._interval.intervaltransform method)": [[33, "wildboar.transform._interval.IntervalTransform.get_metadata_routing"]], "get_params() (wildboar.transform._interval.featuretransform method)": [[33, "wildboar.transform._interval.FeatureTransform.get_params"]], "get_params() (wildboar.transform._interval.intervaltransform method)": [[33, "wildboar.transform._interval.IntervalTransform.get_params"]], "set_output() (wildboar.transform._interval.featuretransform method)": [[33, "wildboar.transform._interval.FeatureTransform.set_output"]], "set_output() (wildboar.transform._interval.intervaltransform method)": [[33, "wildboar.transform._interval.IntervalTransform.set_output"]], "set_params() (wildboar.transform._interval.featuretransform method)": [[33, "wildboar.transform._interval.FeatureTransform.set_params"]], "set_params() (wildboar.transform._interval.intervaltransform method)": [[33, "wildboar.transform._interval.IntervalTransform.set_params"]], "transform() (wildboar.transform._interval.featuretransform method)": [[33, "wildboar.transform._interval.FeatureTransform.transform"]], "transform() (wildboar.transform._interval.intervaltransform method)": [[33, "wildboar.transform._interval.IntervalTransform.transform"]], "wildboar.transform._interval": [[33, "module-wildboar.transform._interval"]], "matrixprofiletransform (class in wildboar.transform._matrix_profile)": [[34, "wildboar.transform._matrix_profile.MatrixProfileTransform"]], "fit() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[34, "wildboar.transform._matrix_profile.MatrixProfileTransform.fit"]], "fit_transform() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[34, "wildboar.transform._matrix_profile.MatrixProfileTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[34, "wildboar.transform._matrix_profile.MatrixProfileTransform.get_metadata_routing"]], "get_params() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[34, "wildboar.transform._matrix_profile.MatrixProfileTransform.get_params"]], "set_output() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[34, "wildboar.transform._matrix_profile.MatrixProfileTransform.set_output"]], "set_params() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[34, "wildboar.transform._matrix_profile.MatrixProfileTransform.set_params"]], "transform() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[34, "wildboar.transform._matrix_profile.MatrixProfileTransform.transform"]], "wildboar.transform._matrix_profile": [[34, "module-wildboar.transform._matrix_profile"]], "pivotmixin (class in wildboar.transform._pivot)": [[35, "wildboar.transform._pivot.PivotMixin"]], "pivottransform (class in wildboar.transform._pivot)": [[35, "wildboar.transform._pivot.PivotTransform"]], "proximitytransform (class in wildboar.transform._pivot)": [[35, "wildboar.transform._pivot.ProximityTransform"]], "fit() (wildboar.transform._pivot.pivottransform method)": [[35, "wildboar.transform._pivot.PivotTransform.fit"]], "fit_transform() (wildboar.transform._pivot.pivottransform method)": [[35, "wildboar.transform._pivot.PivotTransform.fit_transform"]], "fit_transform() (wildboar.transform._pivot.proximitytransform method)": [[35, "wildboar.transform._pivot.ProximityTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._pivot.pivottransform method)": [[35, "wildboar.transform._pivot.PivotTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform._pivot.proximitytransform method)": [[35, "wildboar.transform._pivot.ProximityTransform.get_metadata_routing"]], "get_params() (wildboar.transform._pivot.pivottransform method)": [[35, "wildboar.transform._pivot.PivotTransform.get_params"]], "get_params() (wildboar.transform._pivot.proximitytransform method)": [[35, "wildboar.transform._pivot.ProximityTransform.get_params"]], "set_output() (wildboar.transform._pivot.pivottransform method)": [[35, "wildboar.transform._pivot.PivotTransform.set_output"]], "set_output() (wildboar.transform._pivot.proximitytransform method)": [[35, "wildboar.transform._pivot.ProximityTransform.set_output"]], "set_params() (wildboar.transform._pivot.pivottransform method)": [[35, "wildboar.transform._pivot.PivotTransform.set_params"]], "set_params() (wildboar.transform._pivot.proximitytransform method)": [[35, "wildboar.transform._pivot.ProximityTransform.set_params"]], "transform() (wildboar.transform._pivot.pivottransform method)": [[35, "wildboar.transform._pivot.PivotTransform.transform"]], "wildboar.transform._pivot": [[35, "module-wildboar.transform._pivot"]], "rocketmixin (class in wildboar.transform._rocket)": [[36, "wildboar.transform._rocket.RocketMixin"]], "rockettransform (class in wildboar.transform._rocket)": [[36, "wildboar.transform._rocket.RocketTransform"]], "fit() (wildboar.transform._rocket.rockettransform method)": [[36, "wildboar.transform._rocket.RocketTransform.fit"]], "fit_transform() (wildboar.transform._rocket.rockettransform method)": [[36, "wildboar.transform._rocket.RocketTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._rocket.rockettransform method)": [[36, "wildboar.transform._rocket.RocketTransform.get_metadata_routing"]], "get_params() (wildboar.transform._rocket.rockettransform method)": [[36, "wildboar.transform._rocket.RocketTransform.get_params"]], "set_output() (wildboar.transform._rocket.rockettransform method)": [[36, "wildboar.transform._rocket.RocketTransform.set_output"]], "set_params() (wildboar.transform._rocket.rockettransform method)": [[36, "wildboar.transform._rocket.RocketTransform.set_params"]], "transform() (wildboar.transform._rocket.rockettransform method)": [[36, "wildboar.transform._rocket.RocketTransform.transform"]], "wildboar.transform._rocket": [[36, "module-wildboar.transform._rocket"]], "binning (class in wildboar.transform._sax)": [[37, "wildboar.transform._sax.Binning"]], "normalbinning (class in wildboar.transform._sax)": [[37, "wildboar.transform._sax.NormalBinning"]], "paa (class in wildboar.transform._sax)": [[37, "wildboar.transform._sax.PAA"]], "sax (class in wildboar.transform._sax)": [[37, "wildboar.transform._sax.SAX"]], "uniformbinning (class in wildboar.transform._sax)": [[37, "wildboar.transform._sax.UniformBinning"]], "fit_transform() (wildboar.transform._sax.paa method)": [[37, "wildboar.transform._sax.PAA.fit_transform"]], "fit_transform() (wildboar.transform._sax.sax method)": [[37, "wildboar.transform._sax.SAX.fit_transform"]], "get_metadata_routing() (wildboar.transform._sax.paa method)": [[37, "wildboar.transform._sax.PAA.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform._sax.sax method)": [[37, "wildboar.transform._sax.SAX.get_metadata_routing"]], "get_params() (wildboar.transform._sax.paa method)": [[37, "wildboar.transform._sax.PAA.get_params"]], "get_params() (wildboar.transform._sax.sax method)": [[37, "wildboar.transform._sax.SAX.get_params"]], "get_thresholds() (wildboar.transform._sax.binning method)": [[37, "wildboar.transform._sax.Binning.get_thresholds"]], "get_thresholds() (wildboar.transform._sax.normalbinning method)": [[37, "wildboar.transform._sax.NormalBinning.get_thresholds"]], "get_thresholds() (wildboar.transform._sax.uniformbinning method)": [[37, "wildboar.transform._sax.UniformBinning.get_thresholds"]], "piecewice_aggregate_approximation() (in module wildboar.transform._sax)": [[37, "wildboar.transform._sax.piecewice_aggregate_approximation"]], "scale() (wildboar.transform._sax.binning method)": [[37, "wildboar.transform._sax.Binning.scale"]], "scale() (wildboar.transform._sax.normalbinning method)": [[37, "wildboar.transform._sax.NormalBinning.scale"]], "scale() (wildboar.transform._sax.uniformbinning method)": [[37, "wildboar.transform._sax.UniformBinning.scale"]], "set_output() (wildboar.transform._sax.paa method)": [[37, "wildboar.transform._sax.PAA.set_output"]], "set_output() (wildboar.transform._sax.sax method)": [[37, "wildboar.transform._sax.SAX.set_output"]], "set_params() (wildboar.transform._sax.paa method)": [[37, "wildboar.transform._sax.PAA.set_params"]], "set_params() (wildboar.transform._sax.sax method)": [[37, "wildboar.transform._sax.SAX.set_params"]], "symbolic_aggregate_approximation() (in module wildboar.transform._sax)": [[37, "wildboar.transform._sax.symbolic_aggregate_approximation"]], "wildboar.transform._sax": [[37, "module-wildboar.transform._sax"]], "randomshapelettransform (class in wildboar.transform._shapelet)": [[38, "wildboar.transform._shapelet.RandomShapeletTransform"]], "shapeletmixin (class in wildboar.transform._shapelet)": [[38, "wildboar.transform._shapelet.ShapeletMixin"]], "fit() (wildboar.transform._shapelet.randomshapelettransform method)": [[38, "wildboar.transform._shapelet.RandomShapeletTransform.fit"]], "fit_transform() (wildboar.transform._shapelet.randomshapelettransform method)": [[38, "wildboar.transform._shapelet.RandomShapeletTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._shapelet.randomshapelettransform method)": [[38, "wildboar.transform._shapelet.RandomShapeletTransform.get_metadata_routing"]], "get_params() (wildboar.transform._shapelet.randomshapelettransform method)": [[38, "wildboar.transform._shapelet.RandomShapeletTransform.get_params"]], "set_output() (wildboar.transform._shapelet.randomshapelettransform method)": [[38, "wildboar.transform._shapelet.RandomShapeletTransform.set_output"]], "set_params() (wildboar.transform._shapelet.randomshapelettransform method)": [[38, "wildboar.transform._shapelet.RandomShapeletTransform.set_params"]], "transform() (wildboar.transform._shapelet.randomshapelettransform method)": [[38, "wildboar.transform._shapelet.RandomShapeletTransform.transform"]], "wildboar.transform._shapelet": [[38, "module-wildboar.transform._shapelet"]], "featuretransform (class in wildboar.transform)": [[39, "wildboar.transform.FeatureTransform"]], "intervaltransform (class in wildboar.transform)": [[39, "wildboar.transform.IntervalTransform"]], "matrixprofiletransform (class in wildboar.transform)": [[39, "wildboar.transform.MatrixProfileTransform"]], "paa (class in wildboar.transform)": [[39, "wildboar.transform.PAA"]], "pivottransform (class in wildboar.transform)": [[39, "wildboar.transform.PivotTransform"]], "proximitytransform (class in wildboar.transform)": [[39, "wildboar.transform.ProximityTransform"]], "randomshapelettransform (class in wildboar.transform)": [[39, "wildboar.transform.RandomShapeletTransform"]], "rockettransform (class in wildboar.transform)": [[39, "wildboar.transform.RocketTransform"]], "sax (class in wildboar.transform)": [[39, "wildboar.transform.SAX"]], "fit() (wildboar.transform.featuretransform method)": [[39, "wildboar.transform.FeatureTransform.fit"]], "fit() (wildboar.transform.intervaltransform method)": [[39, "wildboar.transform.IntervalTransform.fit"]], "fit() (wildboar.transform.matrixprofiletransform method)": [[39, "wildboar.transform.MatrixProfileTransform.fit"]], "fit() (wildboar.transform.pivottransform method)": [[39, "wildboar.transform.PivotTransform.fit"]], "fit() (wildboar.transform.randomshapelettransform method)": [[39, "wildboar.transform.RandomShapeletTransform.fit"]], "fit() (wildboar.transform.rockettransform method)": [[39, "wildboar.transform.RocketTransform.fit"]], "fit_transform() (wildboar.transform.featuretransform method)": [[39, "wildboar.transform.FeatureTransform.fit_transform"]], "fit_transform() (wildboar.transform.intervaltransform method)": [[39, "wildboar.transform.IntervalTransform.fit_transform"]], "fit_transform() (wildboar.transform.matrixprofiletransform method)": [[39, "wildboar.transform.MatrixProfileTransform.fit_transform"]], "fit_transform() (wildboar.transform.paa method)": [[39, "wildboar.transform.PAA.fit_transform"]], "fit_transform() (wildboar.transform.pivottransform method)": [[39, "wildboar.transform.PivotTransform.fit_transform"]], "fit_transform() (wildboar.transform.proximitytransform method)": [[39, "wildboar.transform.ProximityTransform.fit_transform"]], "fit_transform() (wildboar.transform.randomshapelettransform method)": [[39, "wildboar.transform.RandomShapeletTransform.fit_transform"]], "fit_transform() (wildboar.transform.rockettransform method)": [[39, "wildboar.transform.RocketTransform.fit_transform"]], "fit_transform() (wildboar.transform.sax method)": [[39, "wildboar.transform.SAX.fit_transform"]], "get_metadata_routing() (wildboar.transform.featuretransform method)": [[39, "wildboar.transform.FeatureTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.intervaltransform method)": [[39, "wildboar.transform.IntervalTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.matrixprofiletransform method)": [[39, "wildboar.transform.MatrixProfileTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.paa method)": [[39, "wildboar.transform.PAA.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.pivottransform method)": [[39, "wildboar.transform.PivotTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.proximitytransform method)": [[39, "wildboar.transform.ProximityTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.randomshapelettransform method)": [[39, "wildboar.transform.RandomShapeletTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.rockettransform method)": [[39, "wildboar.transform.RocketTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.sax method)": [[39, "wildboar.transform.SAX.get_metadata_routing"]], "get_params() (wildboar.transform.featuretransform method)": [[39, "wildboar.transform.FeatureTransform.get_params"]], "get_params() (wildboar.transform.intervaltransform method)": [[39, "wildboar.transform.IntervalTransform.get_params"]], "get_params() (wildboar.transform.matrixprofiletransform method)": [[39, "wildboar.transform.MatrixProfileTransform.get_params"]], "get_params() (wildboar.transform.paa method)": [[39, "wildboar.transform.PAA.get_params"]], "get_params() (wildboar.transform.pivottransform method)": [[39, "wildboar.transform.PivotTransform.get_params"]], "get_params() (wildboar.transform.proximitytransform method)": [[39, "wildboar.transform.ProximityTransform.get_params"]], "get_params() (wildboar.transform.randomshapelettransform method)": [[39, "wildboar.transform.RandomShapeletTransform.get_params"]], "get_params() (wildboar.transform.rockettransform method)": [[39, "wildboar.transform.RocketTransform.get_params"]], "get_params() (wildboar.transform.sax method)": [[39, "wildboar.transform.SAX.get_params"]], "piecewice_aggregate_approximation() (in module wildboar.transform)": [[39, "wildboar.transform.piecewice_aggregate_approximation"]], "set_output() (wildboar.transform.featuretransform method)": [[39, "wildboar.transform.FeatureTransform.set_output"]], "set_output() (wildboar.transform.intervaltransform method)": [[39, "wildboar.transform.IntervalTransform.set_output"]], "set_output() (wildboar.transform.matrixprofiletransform method)": [[39, "wildboar.transform.MatrixProfileTransform.set_output"]], "set_output() (wildboar.transform.paa method)": [[39, "wildboar.transform.PAA.set_output"]], "set_output() (wildboar.transform.pivottransform method)": [[39, "wildboar.transform.PivotTransform.set_output"]], "set_output() (wildboar.transform.proximitytransform method)": [[39, "wildboar.transform.ProximityTransform.set_output"]], "set_output() (wildboar.transform.randomshapelettransform method)": [[39, "wildboar.transform.RandomShapeletTransform.set_output"]], "set_output() (wildboar.transform.rockettransform method)": [[39, "wildboar.transform.RocketTransform.set_output"]], "set_output() (wildboar.transform.sax method)": [[39, "wildboar.transform.SAX.set_output"]], "set_params() (wildboar.transform.featuretransform method)": [[39, "wildboar.transform.FeatureTransform.set_params"]], "set_params() (wildboar.transform.intervaltransform method)": [[39, "wildboar.transform.IntervalTransform.set_params"]], "set_params() (wildboar.transform.matrixprofiletransform method)": [[39, "wildboar.transform.MatrixProfileTransform.set_params"]], "set_params() (wildboar.transform.paa method)": [[39, "wildboar.transform.PAA.set_params"]], "set_params() (wildboar.transform.pivottransform method)": [[39, "wildboar.transform.PivotTransform.set_params"]], "set_params() (wildboar.transform.proximitytransform method)": [[39, "wildboar.transform.ProximityTransform.set_params"]], "set_params() (wildboar.transform.randomshapelettransform method)": [[39, "wildboar.transform.RandomShapeletTransform.set_params"]], "set_params() (wildboar.transform.rockettransform method)": [[39, "wildboar.transform.RocketTransform.set_params"]], "set_params() (wildboar.transform.sax method)": [[39, "wildboar.transform.SAX.set_params"]], "symbolic_aggregate_approximation() (in module wildboar.transform)": [[39, "wildboar.transform.symbolic_aggregate_approximation"]], "transform() (wildboar.transform.featuretransform method)": [[39, "wildboar.transform.FeatureTransform.transform"]], "transform() (wildboar.transform.intervaltransform method)": [[39, "wildboar.transform.IntervalTransform.transform"]], "transform() (wildboar.transform.matrixprofiletransform method)": [[39, "wildboar.transform.MatrixProfileTransform.transform"]], "transform() (wildboar.transform.pivottransform method)": [[39, "wildboar.transform.PivotTransform.transform"]], "transform() (wildboar.transform.randomshapelettransform method)": [[39, "wildboar.transform.RandomShapeletTransform.transform"]], "transform() (wildboar.transform.rockettransform method)": [[39, "wildboar.transform.RocketTransform.transform"]], "wildboar.transform": [[39, "module-wildboar.transform"]], "basetree (class in wildboar.tree._base)": [[40, "wildboar.tree._base.BaseTree"]], "basetreeclassifier (class in wildboar.tree._base)": [[40, "wildboar.tree._base.BaseTreeClassifier"]], "basetreeregressor (class in wildboar.tree._base)": [[40, "wildboar.tree._base.BaseTreeRegressor"]], "apply() (wildboar.tree._base.basetree method)": [[40, "wildboar.tree._base.BaseTree.apply"]], "apply() (wildboar.tree._base.basetreeclassifier method)": [[40, "wildboar.tree._base.BaseTreeClassifier.apply"]], "apply() (wildboar.tree._base.basetreeregressor method)": [[40, "wildboar.tree._base.BaseTreeRegressor.apply"]], "decision_path() (wildboar.tree._base.basetree method)": [[40, "wildboar.tree._base.BaseTree.decision_path"]], "decision_path() (wildboar.tree._base.basetreeclassifier method)": [[40, "wildboar.tree._base.BaseTreeClassifier.decision_path"]], "decision_path() (wildboar.tree._base.basetreeregressor method)": [[40, "wildboar.tree._base.BaseTreeRegressor.decision_path"]], "fit() (wildboar.tree._base.basetreeclassifier method)": [[40, "wildboar.tree._base.BaseTreeClassifier.fit"]], "fit() (wildboar.tree._base.basetreeregressor method)": [[40, "wildboar.tree._base.BaseTreeRegressor.fit"]], "get_metadata_routing() (wildboar.tree._base.basetree method)": [[40, "wildboar.tree._base.BaseTree.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._base.basetreeclassifier method)": [[40, "wildboar.tree._base.BaseTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._base.basetreeregressor method)": [[40, "wildboar.tree._base.BaseTreeRegressor.get_metadata_routing"]], "get_params() (wildboar.tree._base.basetree method)": [[40, "wildboar.tree._base.BaseTree.get_params"]], "get_params() (wildboar.tree._base.basetreeclassifier method)": [[40, "wildboar.tree._base.BaseTreeClassifier.get_params"]], "get_params() (wildboar.tree._base.basetreeregressor method)": [[40, "wildboar.tree._base.BaseTreeRegressor.get_params"]], "predict() (wildboar.tree._base.basetreeclassifier method)": [[40, "wildboar.tree._base.BaseTreeClassifier.predict"]], "predict() (wildboar.tree._base.basetreeregressor method)": [[40, "wildboar.tree._base.BaseTreeRegressor.predict"]], "predict_proba() (wildboar.tree._base.basetreeclassifier method)": [[40, "wildboar.tree._base.BaseTreeClassifier.predict_proba"]], "score() (wildboar.tree._base.basetreeclassifier method)": [[40, "wildboar.tree._base.BaseTreeClassifier.score"]], "score() (wildboar.tree._base.basetreeregressor method)": [[40, "wildboar.tree._base.BaseTreeRegressor.score"]], "set_params() (wildboar.tree._base.basetree method)": [[40, "wildboar.tree._base.BaseTree.set_params"]], "set_params() (wildboar.tree._base.basetreeclassifier method)": [[40, "wildboar.tree._base.BaseTreeClassifier.set_params"]], "set_params() (wildboar.tree._base.basetreeregressor method)": [[40, "wildboar.tree._base.BaseTreeRegressor.set_params"]], "wildboar.tree._base": [[40, "module-wildboar.tree._base"]], "proximitytreeclassifier (class in wildboar.tree._ptree)": [[41, "wildboar.tree._ptree.ProximityTreeClassifier"]], "apply() (wildboar.tree._ptree.proximitytreeclassifier method)": [[41, "wildboar.tree._ptree.ProximityTreeClassifier.apply"]], "decision_path() (wildboar.tree._ptree.proximitytreeclassifier method)": [[41, "wildboar.tree._ptree.ProximityTreeClassifier.decision_path"]], "fit() (wildboar.tree._ptree.proximitytreeclassifier method)": [[41, "wildboar.tree._ptree.ProximityTreeClassifier.fit"]], "get_metadata_routing() (wildboar.tree._ptree.proximitytreeclassifier method)": [[41, "wildboar.tree._ptree.ProximityTreeClassifier.get_metadata_routing"]], "get_params() (wildboar.tree._ptree.proximitytreeclassifier method)": [[41, "wildboar.tree._ptree.ProximityTreeClassifier.get_params"]], "predict() (wildboar.tree._ptree.proximitytreeclassifier method)": [[41, "wildboar.tree._ptree.ProximityTreeClassifier.predict"]], "predict_proba() (wildboar.tree._ptree.proximitytreeclassifier method)": [[41, "wildboar.tree._ptree.ProximityTreeClassifier.predict_proba"]], "score() (wildboar.tree._ptree.proximitytreeclassifier method)": [[41, "wildboar.tree._ptree.ProximityTreeClassifier.score"]], "set_params() (wildboar.tree._ptree.proximitytreeclassifier method)": [[41, "wildboar.tree._ptree.ProximityTreeClassifier.set_params"]], "wildboar.tree._ptree": [[41, "module-wildboar.tree._ptree"]], "basefeaturetreeclassifier (class in wildboar.tree._tree)": [[42, "wildboar.tree._tree.BaseFeatureTreeClassifier"]], "basefeaturetreeregressor (class in wildboar.tree._tree)": [[42, "wildboar.tree._tree.BaseFeatureTreeRegressor"]], "extrashapelettreeclassifier (class in wildboar.tree._tree)": [[42, "wildboar.tree._tree.ExtraShapeletTreeClassifier"]], "extrashapelettreeregressor (class in wildboar.tree._tree)": [[42, "wildboar.tree._tree.ExtraShapeletTreeRegressor"]], "intervaltreeclassifier (class in wildboar.tree._tree)": [[42, "wildboar.tree._tree.IntervalTreeClassifier"]], "intervaltreeregressor (class in wildboar.tree._tree)": [[42, "wildboar.tree._tree.IntervalTreeRegressor"]], "pivottreeclassifier (class in wildboar.tree._tree)": [[42, "wildboar.tree._tree.PivotTreeClassifier"]], "rockettreeclassifier (class in wildboar.tree._tree)": [[42, "wildboar.tree._tree.RocketTreeClassifier"]], "rockettreeregressor (class in wildboar.tree._tree)": [[42, "wildboar.tree._tree.RocketTreeRegressor"]], "shapelettreeclassifier (class in wildboar.tree._tree)": [[42, "wildboar.tree._tree.ShapeletTreeClassifier"]], "shapelettreeregressor (class in wildboar.tree._tree)": [[42, "wildboar.tree._tree.ShapeletTreeRegressor"]], "apply() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[42, "wildboar.tree._tree.BaseFeatureTreeClassifier.apply"]], "apply() (wildboar.tree._tree.basefeaturetreeregressor method)": [[42, "wildboar.tree._tree.BaseFeatureTreeRegressor.apply"]], "apply() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[42, "wildboar.tree._tree.ExtraShapeletTreeClassifier.apply"]], "apply() (wildboar.tree._tree.extrashapelettreeregressor method)": [[42, "wildboar.tree._tree.ExtraShapeletTreeRegressor.apply"]], "apply() (wildboar.tree._tree.intervaltreeclassifier method)": [[42, "wildboar.tree._tree.IntervalTreeClassifier.apply"]], "apply() (wildboar.tree._tree.intervaltreeregressor method)": [[42, "wildboar.tree._tree.IntervalTreeRegressor.apply"]], "apply() (wildboar.tree._tree.pivottreeclassifier method)": [[42, "wildboar.tree._tree.PivotTreeClassifier.apply"]], "apply() (wildboar.tree._tree.rockettreeclassifier method)": [[42, "wildboar.tree._tree.RocketTreeClassifier.apply"]], "apply() (wildboar.tree._tree.rockettreeregressor method)": [[42, "wildboar.tree._tree.RocketTreeRegressor.apply"]], "apply() (wildboar.tree._tree.shapelettreeclassifier method)": [[42, "wildboar.tree._tree.ShapeletTreeClassifier.apply"]], "apply() (wildboar.tree._tree.shapelettreeregressor method)": [[42, "wildboar.tree._tree.ShapeletTreeRegressor.apply"]], "decision_path() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[42, "wildboar.tree._tree.BaseFeatureTreeClassifier.decision_path"]], "decision_path() (wildboar.tree._tree.basefeaturetreeregressor method)": [[42, "wildboar.tree._tree.BaseFeatureTreeRegressor.decision_path"]], "decision_path() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[42, "wildboar.tree._tree.ExtraShapeletTreeClassifier.decision_path"]], "decision_path() (wildboar.tree._tree.extrashapelettreeregressor method)": [[42, "wildboar.tree._tree.ExtraShapeletTreeRegressor.decision_path"]], "decision_path() (wildboar.tree._tree.intervaltreeclassifier method)": [[42, "wildboar.tree._tree.IntervalTreeClassifier.decision_path"]], "decision_path() (wildboar.tree._tree.intervaltreeregressor method)": [[42, "wildboar.tree._tree.IntervalTreeRegressor.decision_path"]], "decision_path() (wildboar.tree._tree.pivottreeclassifier method)": [[42, "wildboar.tree._tree.PivotTreeClassifier.decision_path"]], "decision_path() (wildboar.tree._tree.rockettreeclassifier method)": [[42, "wildboar.tree._tree.RocketTreeClassifier.decision_path"]], "decision_path() (wildboar.tree._tree.rockettreeregressor method)": [[42, "wildboar.tree._tree.RocketTreeRegressor.decision_path"]], "decision_path() (wildboar.tree._tree.shapelettreeclassifier method)": [[42, "wildboar.tree._tree.ShapeletTreeClassifier.decision_path"]], "decision_path() (wildboar.tree._tree.shapelettreeregressor method)": [[42, "wildboar.tree._tree.ShapeletTreeRegressor.decision_path"]], "fit() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[42, "wildboar.tree._tree.BaseFeatureTreeClassifier.fit"]], "fit() (wildboar.tree._tree.basefeaturetreeregressor method)": [[42, "wildboar.tree._tree.BaseFeatureTreeRegressor.fit"]], "fit() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[42, "wildboar.tree._tree.ExtraShapeletTreeClassifier.fit"]], "fit() (wildboar.tree._tree.extrashapelettreeregressor method)": [[42, "wildboar.tree._tree.ExtraShapeletTreeRegressor.fit"]], "fit() (wildboar.tree._tree.intervaltreeclassifier method)": [[42, "wildboar.tree._tree.IntervalTreeClassifier.fit"]], "fit() (wildboar.tree._tree.intervaltreeregressor method)": [[42, "wildboar.tree._tree.IntervalTreeRegressor.fit"]], "fit() (wildboar.tree._tree.pivottreeclassifier method)": [[42, "wildboar.tree._tree.PivotTreeClassifier.fit"]], "fit() (wildboar.tree._tree.rockettreeclassifier method)": [[42, "wildboar.tree._tree.RocketTreeClassifier.fit"]], "fit() (wildboar.tree._tree.rockettreeregressor method)": [[42, "wildboar.tree._tree.RocketTreeRegressor.fit"]], "fit() (wildboar.tree._tree.shapelettreeclassifier method)": [[42, "wildboar.tree._tree.ShapeletTreeClassifier.fit"]], "fit() (wildboar.tree._tree.shapelettreeregressor method)": [[42, "wildboar.tree._tree.ShapeletTreeRegressor.fit"]], "get_metadata_routing() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[42, "wildboar.tree._tree.BaseFeatureTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.basefeaturetreeregressor method)": [[42, "wildboar.tree._tree.BaseFeatureTreeRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[42, "wildboar.tree._tree.ExtraShapeletTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.extrashapelettreeregressor method)": [[42, "wildboar.tree._tree.ExtraShapeletTreeRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.intervaltreeclassifier method)": [[42, "wildboar.tree._tree.IntervalTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.intervaltreeregressor method)": [[42, "wildboar.tree._tree.IntervalTreeRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.pivottreeclassifier method)": [[42, "wildboar.tree._tree.PivotTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.rockettreeclassifier method)": [[42, "wildboar.tree._tree.RocketTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.rockettreeregressor method)": [[42, "wildboar.tree._tree.RocketTreeRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.shapelettreeclassifier method)": [[42, "wildboar.tree._tree.ShapeletTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.shapelettreeregressor method)": [[42, "wildboar.tree._tree.ShapeletTreeRegressor.get_metadata_routing"]], "get_params() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[42, "wildboar.tree._tree.BaseFeatureTreeClassifier.get_params"]], "get_params() (wildboar.tree._tree.basefeaturetreeregressor method)": [[42, "wildboar.tree._tree.BaseFeatureTreeRegressor.get_params"]], "get_params() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[42, "wildboar.tree._tree.ExtraShapeletTreeClassifier.get_params"]], "get_params() (wildboar.tree._tree.extrashapelettreeregressor method)": [[42, "wildboar.tree._tree.ExtraShapeletTreeRegressor.get_params"]], "get_params() (wildboar.tree._tree.intervaltreeclassifier method)": [[42, "wildboar.tree._tree.IntervalTreeClassifier.get_params"]], "get_params() (wildboar.tree._tree.intervaltreeregressor method)": [[42, "wildboar.tree._tree.IntervalTreeRegressor.get_params"]], "get_params() (wildboar.tree._tree.pivottreeclassifier method)": [[42, "wildboar.tree._tree.PivotTreeClassifier.get_params"]], "get_params() (wildboar.tree._tree.rockettreeclassifier method)": [[42, "wildboar.tree._tree.RocketTreeClassifier.get_params"]], "get_params() (wildboar.tree._tree.rockettreeregressor method)": [[42, "wildboar.tree._tree.RocketTreeRegressor.get_params"]], "get_params() (wildboar.tree._tree.shapelettreeclassifier method)": [[42, "wildboar.tree._tree.ShapeletTreeClassifier.get_params"]], "get_params() (wildboar.tree._tree.shapelettreeregressor method)": [[42, "wildboar.tree._tree.ShapeletTreeRegressor.get_params"]], "predict() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[42, "wildboar.tree._tree.BaseFeatureTreeClassifier.predict"]], "predict() (wildboar.tree._tree.basefeaturetreeregressor method)": [[42, "wildboar.tree._tree.BaseFeatureTreeRegressor.predict"]], "predict() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[42, "wildboar.tree._tree.ExtraShapeletTreeClassifier.predict"]], "predict() (wildboar.tree._tree.extrashapelettreeregressor method)": [[42, "wildboar.tree._tree.ExtraShapeletTreeRegressor.predict"]], "predict() (wildboar.tree._tree.intervaltreeclassifier method)": [[42, "wildboar.tree._tree.IntervalTreeClassifier.predict"]], "predict() (wildboar.tree._tree.intervaltreeregressor method)": [[42, "wildboar.tree._tree.IntervalTreeRegressor.predict"]], "predict() (wildboar.tree._tree.pivottreeclassifier method)": [[42, "wildboar.tree._tree.PivotTreeClassifier.predict"]], "predict() (wildboar.tree._tree.rockettreeclassifier method)": [[42, "wildboar.tree._tree.RocketTreeClassifier.predict"]], "predict() (wildboar.tree._tree.rockettreeregressor method)": [[42, "wildboar.tree._tree.RocketTreeRegressor.predict"]], "predict() (wildboar.tree._tree.shapelettreeclassifier method)": [[42, "wildboar.tree._tree.ShapeletTreeClassifier.predict"]], "predict() (wildboar.tree._tree.shapelettreeregressor method)": [[42, "wildboar.tree._tree.ShapeletTreeRegressor.predict"]], "predict_proba() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[42, "wildboar.tree._tree.BaseFeatureTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[42, "wildboar.tree._tree.ExtraShapeletTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree._tree.intervaltreeclassifier method)": [[42, "wildboar.tree._tree.IntervalTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree._tree.pivottreeclassifier method)": [[42, "wildboar.tree._tree.PivotTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree._tree.rockettreeclassifier method)": [[42, "wildboar.tree._tree.RocketTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree._tree.shapelettreeclassifier method)": [[42, "wildboar.tree._tree.ShapeletTreeClassifier.predict_proba"]], "score() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[42, "wildboar.tree._tree.BaseFeatureTreeClassifier.score"]], "score() (wildboar.tree._tree.basefeaturetreeregressor method)": [[42, "wildboar.tree._tree.BaseFeatureTreeRegressor.score"]], "score() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[42, "wildboar.tree._tree.ExtraShapeletTreeClassifier.score"]], "score() (wildboar.tree._tree.extrashapelettreeregressor method)": [[42, "wildboar.tree._tree.ExtraShapeletTreeRegressor.score"]], "score() (wildboar.tree._tree.intervaltreeclassifier method)": [[42, "wildboar.tree._tree.IntervalTreeClassifier.score"]], "score() (wildboar.tree._tree.intervaltreeregressor method)": [[42, "wildboar.tree._tree.IntervalTreeRegressor.score"]], "score() (wildboar.tree._tree.pivottreeclassifier method)": [[42, "wildboar.tree._tree.PivotTreeClassifier.score"]], "score() (wildboar.tree._tree.rockettreeclassifier method)": [[42, "wildboar.tree._tree.RocketTreeClassifier.score"]], "score() (wildboar.tree._tree.rockettreeregressor method)": [[42, "wildboar.tree._tree.RocketTreeRegressor.score"]], "score() (wildboar.tree._tree.shapelettreeclassifier method)": [[42, "wildboar.tree._tree.ShapeletTreeClassifier.score"]], "score() (wildboar.tree._tree.shapelettreeregressor method)": [[42, "wildboar.tree._tree.ShapeletTreeRegressor.score"]], "set_params() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[42, "wildboar.tree._tree.BaseFeatureTreeClassifier.set_params"]], "set_params() (wildboar.tree._tree.basefeaturetreeregressor method)": [[42, "wildboar.tree._tree.BaseFeatureTreeRegressor.set_params"]], "set_params() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[42, "wildboar.tree._tree.ExtraShapeletTreeClassifier.set_params"]], "set_params() (wildboar.tree._tree.extrashapelettreeregressor method)": [[42, "wildboar.tree._tree.ExtraShapeletTreeRegressor.set_params"]], "set_params() (wildboar.tree._tree.intervaltreeclassifier method)": [[42, "wildboar.tree._tree.IntervalTreeClassifier.set_params"]], "set_params() (wildboar.tree._tree.intervaltreeregressor method)": [[42, "wildboar.tree._tree.IntervalTreeRegressor.set_params"]], "set_params() (wildboar.tree._tree.pivottreeclassifier method)": [[42, "wildboar.tree._tree.PivotTreeClassifier.set_params"]], "set_params() (wildboar.tree._tree.rockettreeclassifier method)": [[42, "wildboar.tree._tree.RocketTreeClassifier.set_params"]], "set_params() (wildboar.tree._tree.rockettreeregressor method)": [[42, "wildboar.tree._tree.RocketTreeRegressor.set_params"]], "set_params() (wildboar.tree._tree.shapelettreeclassifier method)": [[42, "wildboar.tree._tree.ShapeletTreeClassifier.set_params"]], "set_params() (wildboar.tree._tree.shapelettreeregressor method)": [[42, "wildboar.tree._tree.ShapeletTreeRegressor.set_params"]], "wildboar.tree._tree": [[42, "module-wildboar.tree._tree"]], "extrashapelettreeclassifier (class in wildboar.tree)": [[43, "wildboar.tree.ExtraShapeletTreeClassifier"]], "extrashapelettreeregressor (class in wildboar.tree)": [[43, "wildboar.tree.ExtraShapeletTreeRegressor"]], "intervaltreeclassifier (class in wildboar.tree)": [[43, "wildboar.tree.IntervalTreeClassifier"]], "intervaltreeregressor (class in wildboar.tree)": [[43, "wildboar.tree.IntervalTreeRegressor"]], "pivottreeclassifier (class in wildboar.tree)": [[43, "wildboar.tree.PivotTreeClassifier"]], "proximitytreeclassifier (class in wildboar.tree)": [[43, "wildboar.tree.ProximityTreeClassifier"]], "rockettreeclassifier (class in wildboar.tree)": [[43, "wildboar.tree.RocketTreeClassifier"]], "rockettreeregressor (class in wildboar.tree)": [[43, "wildboar.tree.RocketTreeRegressor"]], "shapelettreeclassifier (class in wildboar.tree)": [[43, "wildboar.tree.ShapeletTreeClassifier"]], "shapelettreeregressor (class in wildboar.tree)": [[43, "wildboar.tree.ShapeletTreeRegressor"]], "apply() (wildboar.tree.extrashapelettreeclassifier method)": [[43, "wildboar.tree.ExtraShapeletTreeClassifier.apply"]], "apply() (wildboar.tree.extrashapelettreeregressor method)": [[43, "wildboar.tree.ExtraShapeletTreeRegressor.apply"]], "apply() (wildboar.tree.intervaltreeclassifier method)": [[43, "wildboar.tree.IntervalTreeClassifier.apply"]], "apply() (wildboar.tree.intervaltreeregressor method)": [[43, "wildboar.tree.IntervalTreeRegressor.apply"]], "apply() (wildboar.tree.pivottreeclassifier method)": [[43, "wildboar.tree.PivotTreeClassifier.apply"]], "apply() (wildboar.tree.proximitytreeclassifier method)": [[43, "wildboar.tree.ProximityTreeClassifier.apply"]], "apply() (wildboar.tree.rockettreeclassifier method)": [[43, "wildboar.tree.RocketTreeClassifier.apply"]], "apply() (wildboar.tree.rockettreeregressor method)": [[43, "wildboar.tree.RocketTreeRegressor.apply"]], "apply() (wildboar.tree.shapelettreeclassifier method)": [[43, "wildboar.tree.ShapeletTreeClassifier.apply"]], "apply() (wildboar.tree.shapelettreeregressor method)": [[43, "wildboar.tree.ShapeletTreeRegressor.apply"]], "decision_path() (wildboar.tree.extrashapelettreeclassifier method)": [[43, "wildboar.tree.ExtraShapeletTreeClassifier.decision_path"]], "decision_path() (wildboar.tree.extrashapelettreeregressor method)": [[43, "wildboar.tree.ExtraShapeletTreeRegressor.decision_path"]], "decision_path() (wildboar.tree.intervaltreeclassifier method)": [[43, "wildboar.tree.IntervalTreeClassifier.decision_path"]], "decision_path() (wildboar.tree.intervaltreeregressor method)": [[43, "wildboar.tree.IntervalTreeRegressor.decision_path"]], "decision_path() (wildboar.tree.pivottreeclassifier method)": [[43, "wildboar.tree.PivotTreeClassifier.decision_path"]], "decision_path() (wildboar.tree.proximitytreeclassifier method)": [[43, "wildboar.tree.ProximityTreeClassifier.decision_path"]], "decision_path() (wildboar.tree.rockettreeclassifier method)": [[43, "wildboar.tree.RocketTreeClassifier.decision_path"]], "decision_path() (wildboar.tree.rockettreeregressor method)": [[43, "wildboar.tree.RocketTreeRegressor.decision_path"]], "decision_path() (wildboar.tree.shapelettreeclassifier method)": [[43, "wildboar.tree.ShapeletTreeClassifier.decision_path"]], "decision_path() (wildboar.tree.shapelettreeregressor method)": [[43, "wildboar.tree.ShapeletTreeRegressor.decision_path"]], "fit() (wildboar.tree.extrashapelettreeclassifier method)": [[43, "wildboar.tree.ExtraShapeletTreeClassifier.fit"]], "fit() (wildboar.tree.extrashapelettreeregressor method)": [[43, "wildboar.tree.ExtraShapeletTreeRegressor.fit"]], "fit() (wildboar.tree.intervaltreeclassifier method)": [[43, "wildboar.tree.IntervalTreeClassifier.fit"]], "fit() (wildboar.tree.intervaltreeregressor method)": [[43, "wildboar.tree.IntervalTreeRegressor.fit"]], "fit() (wildboar.tree.pivottreeclassifier method)": [[43, "wildboar.tree.PivotTreeClassifier.fit"]], "fit() (wildboar.tree.proximitytreeclassifier method)": [[43, "wildboar.tree.ProximityTreeClassifier.fit"]], "fit() (wildboar.tree.rockettreeclassifier method)": [[43, "wildboar.tree.RocketTreeClassifier.fit"]], "fit() (wildboar.tree.rockettreeregressor method)": [[43, "wildboar.tree.RocketTreeRegressor.fit"]], "fit() (wildboar.tree.shapelettreeclassifier method)": [[43, "wildboar.tree.ShapeletTreeClassifier.fit"]], "fit() (wildboar.tree.shapelettreeregressor method)": [[43, "wildboar.tree.ShapeletTreeRegressor.fit"]], "get_metadata_routing() (wildboar.tree.extrashapelettreeclassifier method)": [[43, "wildboar.tree.ExtraShapeletTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.extrashapelettreeregressor method)": [[43, "wildboar.tree.ExtraShapeletTreeRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.intervaltreeclassifier method)": [[43, "wildboar.tree.IntervalTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.intervaltreeregressor method)": [[43, "wildboar.tree.IntervalTreeRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.pivottreeclassifier method)": [[43, "wildboar.tree.PivotTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.proximitytreeclassifier method)": [[43, "wildboar.tree.ProximityTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.rockettreeclassifier method)": [[43, "wildboar.tree.RocketTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.rockettreeregressor method)": [[43, "wildboar.tree.RocketTreeRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.shapelettreeclassifier method)": [[43, "wildboar.tree.ShapeletTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.shapelettreeregressor method)": [[43, "wildboar.tree.ShapeletTreeRegressor.get_metadata_routing"]], "get_params() (wildboar.tree.extrashapelettreeclassifier method)": [[43, "wildboar.tree.ExtraShapeletTreeClassifier.get_params"]], "get_params() (wildboar.tree.extrashapelettreeregressor method)": [[43, "wildboar.tree.ExtraShapeletTreeRegressor.get_params"]], "get_params() (wildboar.tree.intervaltreeclassifier method)": [[43, "wildboar.tree.IntervalTreeClassifier.get_params"]], "get_params() (wildboar.tree.intervaltreeregressor method)": [[43, "wildboar.tree.IntervalTreeRegressor.get_params"]], "get_params() (wildboar.tree.pivottreeclassifier method)": [[43, "wildboar.tree.PivotTreeClassifier.get_params"]], "get_params() (wildboar.tree.proximitytreeclassifier method)": [[43, "wildboar.tree.ProximityTreeClassifier.get_params"]], "get_params() (wildboar.tree.rockettreeclassifier method)": [[43, "wildboar.tree.RocketTreeClassifier.get_params"]], "get_params() (wildboar.tree.rockettreeregressor method)": [[43, "wildboar.tree.RocketTreeRegressor.get_params"]], "get_params() (wildboar.tree.shapelettreeclassifier method)": [[43, "wildboar.tree.ShapeletTreeClassifier.get_params"]], "get_params() (wildboar.tree.shapelettreeregressor method)": [[43, "wildboar.tree.ShapeletTreeRegressor.get_params"]], "predict() (wildboar.tree.extrashapelettreeclassifier method)": [[43, "wildboar.tree.ExtraShapeletTreeClassifier.predict"]], "predict() (wildboar.tree.extrashapelettreeregressor method)": [[43, "wildboar.tree.ExtraShapeletTreeRegressor.predict"]], "predict() (wildboar.tree.intervaltreeclassifier method)": [[43, "wildboar.tree.IntervalTreeClassifier.predict"]], "predict() (wildboar.tree.intervaltreeregressor method)": [[43, "wildboar.tree.IntervalTreeRegressor.predict"]], "predict() (wildboar.tree.pivottreeclassifier method)": [[43, "wildboar.tree.PivotTreeClassifier.predict"]], "predict() (wildboar.tree.proximitytreeclassifier method)": [[43, "wildboar.tree.ProximityTreeClassifier.predict"]], "predict() (wildboar.tree.rockettreeclassifier method)": [[43, "wildboar.tree.RocketTreeClassifier.predict"]], "predict() (wildboar.tree.rockettreeregressor method)": [[43, "wildboar.tree.RocketTreeRegressor.predict"]], "predict() (wildboar.tree.shapelettreeclassifier method)": [[43, "wildboar.tree.ShapeletTreeClassifier.predict"]], "predict() (wildboar.tree.shapelettreeregressor method)": [[43, "wildboar.tree.ShapeletTreeRegressor.predict"]], "predict_proba() (wildboar.tree.extrashapelettreeclassifier method)": [[43, "wildboar.tree.ExtraShapeletTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree.intervaltreeclassifier method)": [[43, "wildboar.tree.IntervalTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree.pivottreeclassifier method)": [[43, "wildboar.tree.PivotTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree.proximitytreeclassifier method)": [[43, "wildboar.tree.ProximityTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree.rockettreeclassifier method)": [[43, "wildboar.tree.RocketTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree.shapelettreeclassifier method)": [[43, "wildboar.tree.ShapeletTreeClassifier.predict_proba"]], "score() (wildboar.tree.extrashapelettreeclassifier method)": [[43, "wildboar.tree.ExtraShapeletTreeClassifier.score"]], "score() (wildboar.tree.extrashapelettreeregressor method)": [[43, "wildboar.tree.ExtraShapeletTreeRegressor.score"]], "score() (wildboar.tree.intervaltreeclassifier method)": [[43, "wildboar.tree.IntervalTreeClassifier.score"]], "score() (wildboar.tree.intervaltreeregressor method)": [[43, "wildboar.tree.IntervalTreeRegressor.score"]], "score() (wildboar.tree.pivottreeclassifier method)": [[43, "wildboar.tree.PivotTreeClassifier.score"]], "score() (wildboar.tree.proximitytreeclassifier method)": [[43, "wildboar.tree.ProximityTreeClassifier.score"]], "score() (wildboar.tree.rockettreeclassifier method)": [[43, "wildboar.tree.RocketTreeClassifier.score"]], "score() (wildboar.tree.rockettreeregressor method)": [[43, "wildboar.tree.RocketTreeRegressor.score"]], "score() (wildboar.tree.shapelettreeclassifier method)": [[43, "wildboar.tree.ShapeletTreeClassifier.score"]], "score() (wildboar.tree.shapelettreeregressor method)": [[43, "wildboar.tree.ShapeletTreeRegressor.score"]], "set_params() (wildboar.tree.extrashapelettreeclassifier method)": [[43, "wildboar.tree.ExtraShapeletTreeClassifier.set_params"]], "set_params() (wildboar.tree.extrashapelettreeregressor method)": [[43, "wildboar.tree.ExtraShapeletTreeRegressor.set_params"]], "set_params() (wildboar.tree.intervaltreeclassifier method)": [[43, "wildboar.tree.IntervalTreeClassifier.set_params"]], "set_params() (wildboar.tree.intervaltreeregressor method)": [[43, "wildboar.tree.IntervalTreeRegressor.set_params"]], "set_params() (wildboar.tree.pivottreeclassifier method)": [[43, "wildboar.tree.PivotTreeClassifier.set_params"]], "set_params() (wildboar.tree.proximitytreeclassifier method)": [[43, "wildboar.tree.ProximityTreeClassifier.set_params"]], "set_params() (wildboar.tree.rockettreeclassifier method)": [[43, "wildboar.tree.RocketTreeClassifier.set_params"]], "set_params() (wildboar.tree.rockettreeregressor method)": [[43, "wildboar.tree.RocketTreeRegressor.set_params"]], "set_params() (wildboar.tree.shapelettreeclassifier method)": [[43, "wildboar.tree.ShapeletTreeClassifier.set_params"]], "set_params() (wildboar.tree.shapelettreeregressor method)": [[43, "wildboar.tree.ShapeletTreeRegressor.set_params"]], "wildboar.tree": [[43, "module-wildboar.tree"]], "run_in_parallel() (in module wildboar.utils._parallel)": [[44, "wildboar.utils._parallel.run_in_parallel"]], "wildboar.utils._parallel": [[44, "module-wildboar.utils._parallel"]], "assert_exhaustive_parameter_checks() (in module wildboar.utils._testing)": [[45, "wildboar.utils._testing.assert_exhaustive_parameter_checks"]], "assert_parameter_checks() (in module wildboar.utils._testing)": [[45, "wildboar.utils._testing.assert_parameter_checks"]], "wildboar.utils._testing": [[45, "module-wildboar.utils._testing"]], "array_or_scalar() (in module wildboar.utils.decorators)": [[46, "wildboar.utils.decorators.array_or_scalar"]], "singleton() (in module wildboar.utils.decorators)": [[46, "wildboar.utils.decorators.singleton"]], "unstable() (in module wildboar.utils.decorators)": [[46, "wildboar.utils.decorators.unstable"]], "wildboar.utils.decorators": [[46, "module-wildboar.utils.decorators"]], "check_estimator() (in module wildboar.utils.estimator_checks)": [[47, "wildboar.utils.estimator_checks.check_estimator"]], "wildboar.utils.estimator_checks": [[47, "module-wildboar.utils.estimator_checks"]], "check_x_y() (in module wildboar.utils)": [[48, "wildboar.utils.check_X_y"]], "check_array() (in module wildboar.utils)": [[48, "wildboar.utils.check_array"]], "wildboar.utils": [[48, "module-wildboar.utils"]], "midpointnormalize (class in wildboar.utils.plot)": [[49, "wildboar.utils.plot.MidpointNormalize"]], "autoscale() (wildboar.utils.plot.midpointnormalize method)": [[49, "wildboar.utils.plot.MidpointNormalize.autoscale"]], "autoscale_none() (wildboar.utils.plot.midpointnormalize method)": [[49, "wildboar.utils.plot.MidpointNormalize.autoscale_None"]], "plot_frequency_domain() (in module wildboar.utils.plot)": [[49, "wildboar.utils.plot.plot_frequency_domain"]], "plot_time_domain() (in module wildboar.utils.plot)": [[49, "wildboar.utils.plot.plot_time_domain"]], "process_value() (wildboar.utils.plot.midpointnormalize static method)": [[49, "wildboar.utils.plot.MidpointNormalize.process_value"]], "scaled() (wildboar.utils.plot.midpointnormalize method)": [[49, "wildboar.utils.plot.MidpointNormalize.scaled"]], "wildboar.utils.plot": [[49, "module-wildboar.utils.plot"]], "check_x_y() (in module wildboar.utils.validation)": [[50, "wildboar.utils.validation.check_X_y"]], "check_array() (in module wildboar.utils.validation)": [[50, "wildboar.utils.validation.check_array"]], "check_option() (in module wildboar.utils.validation)": [[50, "wildboar.utils.validation.check_option"]], "check_type() (in module wildboar.utils.validation)": [[50, "wildboar.utils.validation.check_type"]], "wildboar.utils.validation": [[50, "module-wildboar.utils.validation"]], "get_variable_length() (in module wildboar.utils.variable_len)": [[51, "wildboar.utils.variable_len.get_variable_length"]], "is_end_of_series() (in module wildboar.utils.variable_len)": [[51, "wildboar.utils.variable_len.is_end_of_series"]], "is_variable_length() (in module wildboar.utils.variable_len)": [[51, "wildboar.utils.variable_len.is_variable_length"]], "wildboar.utils.variable_len": [[51, "module-wildboar.utils.variable_len"]], "wildboar.version": [[52, "module-wildboar.version"]]}})