Search.setIndex({"docnames": ["api/index", "api/wildboar/annotate/_motifs/index", "api/wildboar/annotate/_segment/index", "api/wildboar/annotate/index", "api/wildboar/base/index", "api/wildboar/datasets/_filter/index", "api/wildboar/datasets/_repository/index", "api/wildboar/datasets/index", "api/wildboar/datasets/outlier/index", "api/wildboar/datasets/preprocess/index", "api/wildboar/distance/_multi_metric/index", "api/wildboar/distance/dtw/index", "api/wildboar/distance/index", "api/wildboar/ensemble/_ensemble/index", "api/wildboar/ensemble/index", "api/wildboar/explain/_importance/index", "api/wildboar/explain/counterfactual/_helper/index", "api/wildboar/explain/counterfactual/_nn/index", "api/wildboar/explain/counterfactual/_proto/index", "api/wildboar/explain/counterfactual/_sf/index", "api/wildboar/explain/counterfactual/index", "api/wildboar/explain/index", "api/wildboar/index", "api/wildboar/linear_model/_hydra/index", "api/wildboar/linear_model/_rocket/index", "api/wildboar/linear_model/_shapelet/index", "api/wildboar/linear_model/_transform/index", "api/wildboar/linear_model/index", "api/wildboar/metrics/_counterfactual/index", "api/wildboar/metrics/index", "api/wildboar/model_selection/_cv/index", "api/wildboar/model_selection/_outlier/index", "api/wildboar/model_selection/index", "api/wildboar/transform/_base/index", "api/wildboar/transform/_conv/index", "api/wildboar/transform/_diff/index", "api/wildboar/transform/_hydra/index", "api/wildboar/transform/_interval/index", "api/wildboar/transform/_matrix_profile/index", "api/wildboar/transform/_pivot/index", "api/wildboar/transform/_rocket/index", "api/wildboar/transform/_sax/index", "api/wildboar/transform/_shapelet/index", "api/wildboar/transform/index", "api/wildboar/tree/_base/index", "api/wildboar/tree/_ptree/index", "api/wildboar/tree/_tree/index", "api/wildboar/tree/index", "api/wildboar/utils/_parallel/index", "api/wildboar/utils/_testing/index", "api/wildboar/utils/decorators/index", "api/wildboar/utils/estimator_checks/index", "api/wildboar/utils/index", "api/wildboar/utils/plot/index", "api/wildboar/utils/validation/index", "api/wildboar/utils/variable_len/index", "api/wildboar/version/index", "guide", "guide/annotate", "guide/basics", "guide/datasets", "guide/datasets/preprocess", "guide/datasets/repositories", "guide/glossary", "guide/metrics", "guide/metrics/distance", "guide/metrics/elastic", "guide/supervised", "guide/supervised/ensemble", "guide/supervised/transform", "guide/supervised/trees", "guide/unsupervised", "guide/unsupervised/outlier", "guide/unsupervised/outlier/generation", "index", "more/whatsnew", "quickstart", "quickstart/getting-started", "quickstart/install"], "filenames": ["api/index.rst", "api/wildboar/annotate/_motifs/index.rst", "api/wildboar/annotate/_segment/index.rst", "api/wildboar/annotate/index.rst", "api/wildboar/base/index.rst", "api/wildboar/datasets/_filter/index.rst", "api/wildboar/datasets/_repository/index.rst", "api/wildboar/datasets/index.rst", "api/wildboar/datasets/outlier/index.rst", "api/wildboar/datasets/preprocess/index.rst", "api/wildboar/distance/_multi_metric/index.rst", "api/wildboar/distance/dtw/index.rst", "api/wildboar/distance/index.rst", "api/wildboar/ensemble/_ensemble/index.rst", "api/wildboar/ensemble/index.rst", "api/wildboar/explain/_importance/index.rst", "api/wildboar/explain/counterfactual/_helper/index.rst", "api/wildboar/explain/counterfactual/_nn/index.rst", "api/wildboar/explain/counterfactual/_proto/index.rst", "api/wildboar/explain/counterfactual/_sf/index.rst", "api/wildboar/explain/counterfactual/index.rst", "api/wildboar/explain/index.rst", "api/wildboar/index.rst", "api/wildboar/linear_model/_hydra/index.rst", "api/wildboar/linear_model/_rocket/index.rst", "api/wildboar/linear_model/_shapelet/index.rst", "api/wildboar/linear_model/_transform/index.rst", "api/wildboar/linear_model/index.rst", "api/wildboar/metrics/_counterfactual/index.rst", "api/wildboar/metrics/index.rst", "api/wildboar/model_selection/_cv/index.rst", "api/wildboar/model_selection/_outlier/index.rst", "api/wildboar/model_selection/index.rst", "api/wildboar/transform/_base/index.rst", "api/wildboar/transform/_conv/index.rst", "api/wildboar/transform/_diff/index.rst", "api/wildboar/transform/_hydra/index.rst", "api/wildboar/transform/_interval/index.rst", "api/wildboar/transform/_matrix_profile/index.rst", "api/wildboar/transform/_pivot/index.rst", "api/wildboar/transform/_rocket/index.rst", "api/wildboar/transform/_sax/index.rst", "api/wildboar/transform/_shapelet/index.rst", "api/wildboar/transform/index.rst", "api/wildboar/tree/_base/index.rst", "api/wildboar/tree/_ptree/index.rst", "api/wildboar/tree/_tree/index.rst", "api/wildboar/tree/index.rst", "api/wildboar/utils/_parallel/index.rst", "api/wildboar/utils/_testing/index.rst", "api/wildboar/utils/decorators/index.rst", "api/wildboar/utils/estimator_checks/index.rst", "api/wildboar/utils/index.rst", "api/wildboar/utils/plot/index.rst", "api/wildboar/utils/validation/index.rst", "api/wildboar/utils/variable_len/index.rst", "api/wildboar/version/index.rst", "guide.rst", "guide/annotate.rst", "guide/basics.rst", "guide/datasets.rst", "guide/datasets/preprocess.rst", "guide/datasets/repositories.rst", "guide/glossary.rst", "guide/metrics.rst", "guide/metrics/distance.rst", "guide/metrics/elastic.rst", "guide/supervised.rst", "guide/supervised/ensemble.rst", "guide/supervised/transform.rst", "guide/supervised/trees.rst", "guide/unsupervised.rst", "guide/unsupervised/outlier.rst", "guide/unsupervised/outlier/generation.rst", "index.rst", "more/whatsnew.rst", "quickstart.rst", "quickstart/getting-started.rst", "quickstart/install.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.annotate._motifs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.annotate._segment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.annotate</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets._filter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets._repository</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets.outlier</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets.preprocess</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance._multi_metric</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance.dtw</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.ensemble._ensemble</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.ensemble</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain._importance</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain.counterfactual._helper</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain.counterfactual._nn</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain.counterfactual._proto</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain.counterfactual._sf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain.counterfactual</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.linear_model._hydra</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.linear_model._rocket</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.linear_model._shapelet</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.linear_model._transform</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.linear_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.metrics._counterfactual</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.model_selection._cv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.model_selection._outlier</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.model_selection</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._conv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._diff</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._hydra</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._interval</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._matrix_profile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._pivot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._rocket</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._sax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._shapelet</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.tree._base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.tree._ptree</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.tree._tree</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.tree</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils._parallel</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils._testing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils.decorators</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils.estimator_checks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils.plot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils.validation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils.variable_len</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.version</span></code>", "User guide", "Annotate", "Time series", "Datasets", "Pre-processing", "Repositories", "Glossary", "Metrics", "Distance", "Elastic metrics", "Supervised learning", "Ensemble estimators", "Transform-based estimators", "Tree-based estimators", "Unsupervised learning", "Outlier detection", "Outlier detection benchmarks", "Wildboar", "What\u2019s new", "Quickstart", "Getting started", "Install wildboar"], "terms": {"librari": [0, 22, 74], "tempor": [0, 19, 20, 22, 59, 74, 77], "machin": [0, 22, 64, 74], "learn": [0, 8, 11, 22, 26, 35, 36, 43, 44, 46, 51, 52, 54, 63, 73, 74, 75], "includ": [0, 1, 3, 8, 12, 20, 22, 52, 54, 65, 70, 74, 77], "numer": [0, 20, 22, 52, 54, 74, 77], "algorithm": [0, 8, 11, 19, 20, 22, 59, 61, 64, 74], "seamlessli": [0, 22, 74, 77], "integr": [0, 22, 62, 65, 74], "them": [0, 8, 22, 53, 59, 61, 62, 74], "scikit": [0, 8, 22, 26, 35, 36, 43, 44, 46, 51, 52, 54, 63, 73, 74, 75, 77], "iseo": [0, 22, 59, 61, 74], "boolean": [0, 11, 22, 55, 74], "indic": [0, 7, 11, 12, 13, 14, 16, 20, 22, 28, 29, 44, 45, 46, 47, 55, 63, 74], "valu": [0, 4, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 59, 60, 61, 62, 63, 65, 68, 74, 75, 77], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 67, 68, 73, 74, 75, 77, 78], "end": [0, 15, 21, 22, 44, 45, 46, 47, 52, 54, 59, 61, 63, 74], "sequenc": [0, 9, 22, 52, 53, 54, 59, 61, 64, 74], "time": [0, 1, 2, 3, 4, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 27, 28, 29, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 67, 68, 69, 73, 74], "seri": [0, 1, 2, 3, 4, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 27, 28, 29, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 54, 55, 60, 61, 62, 63, 64, 65, 67, 68, 69, 73, 74], "see": [0, 3, 7, 8, 12, 16, 20, 28, 29, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 65, 74, 75], "section": [0, 3, 7, 15, 21, 74], "user": [0, 3, 4, 7, 8, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 65, 73, 74, 77, 78], "guid": [0, 3, 4, 7, 8, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 74], "more": [0, 3, 7, 8, 12, 13, 14, 15, 20, 21, 28, 29, 39, 42, 43, 45, 46, 47, 52, 54, 62, 64, 65, 73, 74, 77], "detail": [0, 3, 7, 8, 12, 35, 43, 65, 74, 75], "exampl": [0, 3, 7, 8, 11, 12, 13, 14, 16, 18, 20, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 55, 59, 60, 61, 62, 65, 74], "motif": [0, 1, 3, 12, 74], "find": [0, 1, 2, 3, 12, 60, 74, 78], "segment": [0, 2, 3, 74], "chang": [0, 2, 3, 7, 11, 13, 14, 16, 19, 20, 28, 29, 46, 47, 59, 60, 62, 65, 74], "regim": [0, 2, 3, 74], "all": [0, 1, 3, 4, 6, 7, 8, 12, 13, 14, 15, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 40, 42, 43, 44, 46, 47, 49, 51, 52, 53, 54, 60, 61, 62, 64, 65, 74, 75, 77, 78], "estim": [0, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 54, 57, 60, 63, 65, 67, 73, 74, 75, 77], "baseestim": [0, 4, 35, 43, 49, 74], "counterfactualmixin": [0, 4, 74], "mixin": [0, 4, 13, 26, 35, 37, 39, 40, 42, 43, 44, 46, 74], "explainermixin": [0, 4, 74], "is_counterfactu": [0, 4, 18, 74], "check": [0, 4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 54, 61, 63, 74], "is_explain": [0, 4, 74], "an": [0, 4, 8, 12, 13, 14, 18, 23, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 54, 59, 60, 62, 63, 65, 67, 68, 73, 74, 75, 78], "load": [0, 6, 7, 62, 74], "from": [0, 1, 3, 6, 7, 8, 11, 13, 14, 16, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 31, 32, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 53, 55, 60, 61, 62, 64, 65, 73, 74, 75, 77], "import": [0, 7, 11, 13, 14, 15, 21, 31, 32, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 53, 55, 59, 60, 61, 62, 65, 73, 74, 77], "load_dataset": [0, 7, 37, 43, 45, 47, 60, 61, 62, 65, 74, 77], "x": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 59, 60, 61, 62, 64, 65, 73, 74, 77], "y": [0, 4, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 60, 61, 62, 64, 65, 73, 74, 77], "gunpoint": [0, 7, 37, 43, 45, 47, 60, 61, 62, 74], "shape": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 59, 60, 61, 63, 64, 65, 74, 77], "200": [0, 7, 60, 74], "60": [0, 7, 60, 65, 74], "bundl": [0, 6, 7, 60, 62, 73, 74], "handl": [0, 6, 7, 60, 74], "jsonrepositori": [0, 6, 7, 62, 74], "A": [0, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 53, 59, 60, 61, 62, 63, 64, 65, 73, 74, 77], "repositori": [0, 6, 7, 60, 74, 77], "collect": [0, 6, 7, 16, 20, 37, 43, 62, 67, 73, 74, 77, 78], "npbundl": [0, 6, 7, 74], "numpi": [0, 6, 7, 13, 14, 15, 21, 23, 27, 33, 36, 37, 40, 43, 46, 47, 59, 61, 62, 63, 65, 74, 75, 77, 78], "binari": [0, 6, 7, 8, 13, 14, 73, 74, 78], "file": [0, 6, 7, 62, 74, 78], "clear_cach": [0, 7, 74], "clear": [0, 7, 74], "cach": [0, 6, 7, 60, 74], "delet": [0, 7, 74], "get_bundl": [0, 6, 7, 74], "get": [0, 4, 6, 7, 9, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 61, 74], "get_repositori": [0, 7, 74], "name": [0, 4, 6, 7, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 54, 60, 61, 62, 64, 65, 74, 77], "install_repositori": [0, 7, 62, 74], "instal": [0, 7, 60, 73, 74], "list_bundl": [0, 7, 62, 74], "list": [0, 1, 3, 5, 6, 7, 12, 13, 14, 15, 16, 20, 21, 24, 25, 26, 27, 28, 29, 37, 39, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 60, 62, 65, 73, 74, 75], "specifi": [0, 6, 7, 13, 14, 15, 21, 28, 29, 39, 42, 43, 46, 47, 53, 60, 61, 62, 64, 65, 73, 74, 77, 78], "list_collect": [0, 7, 74], "list_dataset": [0, 7, 62, 74], "list_repositori": [0, 7, 62, 74], "kei": [0, 6, 7, 12, 13, 14, 16, 20, 28, 29, 37, 39, 42, 43, 45, 46, 47, 54, 62, 74], "gener": [0, 7, 8, 11, 13, 14, 15, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 36, 37, 40, 42, 43, 44, 45, 46, 47, 51, 60, 73, 74, 77], "load_gun_point": [0, 7, 36, 37, 40, 43, 44, 45, 46, 47, 53, 60, 74], "load_synthetic_control": [0, 7, 13, 14, 74, 77], "synthetic_control": [0, 7, 74, 77], "load_two_lead_ecg": [0, 7, 11, 13, 14, 31, 32, 38, 43, 65, 74, 77], "twoleadecg": [0, 7, 60, 62, 65, 74, 77], "refresh_repositori": [0, 7, 62, 74], "refresh": [0, 6, 7, 62, 74], "set_cache_dir": [0, 7, 62, 74], "global": [0, 7, 17, 19, 20, 28, 29, 37, 43, 62, 74], "directori": [0, 7, 62, 74, 78], "synthet": [0, 8, 73, 74], "us": [0, 7, 8, 11, 12, 13, 14, 15, 16, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 60, 61, 62, 63, 64, 65, 69, 73, 74, 75, 77, 78], "density_outli": [0, 8, 74], "densitii": [0, 8, 74], "emmott_outli": [0, 8, 73, 74], "difficulti": [0, 8, 73, 74], "kmeans_outli": [0, 8, 74], "k": [0, 8, 13, 14, 15, 17, 20, 21, 45, 47, 68, 73, 74], "mean": [0, 7, 8, 9, 11, 12, 13, 14, 19, 20, 23, 24, 25, 26, 27, 28, 29, 33, 36, 37, 40, 42, 43, 44, 45, 46, 47, 61, 64, 65, 74, 75, 77], "majority_outli": [0, 8, 74], "label": [0, 4, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 38, 43, 44, 45, 46, 47, 52, 53, 54, 60, 62, 67, 72, 74, 77], "major": [0, 8, 11, 62, 72, 74], "inlier": [0, 8, 13, 14, 30, 32, 73, 74], "minority_outli": [0, 8, 73, 74], "fraction": [0, 1, 2, 3, 8, 11, 12, 13, 14, 15, 19, 20, 21, 28, 29, 30, 32, 38, 43, 44, 45, 46, 47, 73, 74], "minor": [0, 8, 62, 72, 74, 75], "maxabs_scal": [0, 9, 61, 74], "scale": [0, 8, 9, 13, 14, 23, 27, 36, 40, 41, 43, 53, 61, 64, 73, 74], "each": [0, 2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 55, 59, 61, 62, 63, 64, 65, 74, 77], "its": [0, 9, 12, 37, 38, 43, 52, 53, 54, 60, 74, 78], "maximum": [0, 1, 3, 9, 11, 13, 14, 15, 21, 30, 32, 37, 40, 42, 43, 45, 46, 47, 53, 61, 63, 65, 74], "absolut": [0, 9, 28, 29, 61, 74], "minmax_scal": [0, 9, 41, 43, 60, 61, 74], "along": [0, 9, 15, 21, 23, 27, 61, 74], "dimens": [0, 9, 11, 23, 27, 28, 29, 38, 43, 52, 54, 59, 60, 61, 63, 65, 74, 75, 77], "named_preprocess": [0, 9, 74], "preprocessor": [0, 9, 61, 74], "standard": [0, 9, 13, 14, 18, 23, 27, 36, 37, 43, 61, 74, 77], "truncat": [0, 9, 61, 74], "shortest": [0, 9, 61, 74], "fast": [0, 12, 23, 27, 36, 40, 42, 43, 64, 74], "comput": [0, 1, 2, 3, 11, 12, 13, 14, 15, 16, 18, 20, 21, 28, 29, 38, 39, 43, 44, 45, 46, 47, 64, 65, 74, 75], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 73, 74, 75, 77, 78], "modul": [0, 12, 20, 60, 61, 73, 74, 75, 77], "pair": [0, 1, 3, 7, 12, 13, 14, 28, 29, 39, 42, 43, 45, 46, 47, 54, 74], "pairwis": [0, 12, 74], "between": [0, 1, 3, 9, 11, 12, 16, 19, 20, 28, 29, 34, 42, 43, 61, 64, 65, 73, 74, 77], "subsequ": [0, 1, 3, 12, 13, 14, 38, 40, 43, 74, 75], "matrix_profil": [0, 1, 2, 3, 12, 74], "matrix": [0, 1, 2, 3, 11, 12, 13, 14, 16, 18, 20, 24, 25, 26, 27, 38, 43, 44, 45, 46, 47, 65, 74, 77], "profil": [0, 1, 2, 3, 12, 38, 43, 74], "mean_paired_dist": [0, 74], "paired_dist": [0, 12, 65, 74, 75], "th": [0, 12, 13, 14, 28, 29, 74], "paired_subsequence_dist": [0, 12, 65, 74], "minimum": [0, 1, 3, 6, 7, 9, 11, 12, 13, 14, 15, 21, 37, 40, 42, 43, 45, 46, 47, 52, 54, 62, 64, 65, 74], "paired_subsequence_match": [0, 12, 74], "match": [0, 1, 3, 12, 18, 62, 64, 65, 74, 75], "subsequnc": [0, 12, 74], "pairwise_dist": [0, 12, 64, 65, 74, 75], "pairwise_subsequence_dist": [0, 12, 64, 65, 74], "subsequence_match": [0, 1, 3, 12, 65, 74], "align": [0, 11, 15, 18, 21, 28, 29, 74], "implement": [0, 11, 13, 14, 15, 19, 20, 21, 24, 27, 28, 29, 36, 37, 40, 43, 61, 62, 64, 65, 68, 73, 74, 75, 77], "sever": [0, 11, 44, 45, 46, 47, 64, 74, 77], "ddtw_distanc": [0, 11, 74], "deriv": [0, 11, 13, 28, 29, 64, 74], "dynam": [0, 11, 13, 14, 45, 46, 47, 64, 65, 74], "warp": [0, 11, 45, 47, 64, 65, 74], "dtw_align": [0, 11, 74], "dtw_averag": [0, 11, 74], "barycent": [0, 11, 74], "averag": [0, 11, 13, 14, 28, 29, 74], "dba": [0, 11, 74], "dtw_distanc": [0, 11, 74], "dtw_envelop": [0, 11, 74], "envelop": [0, 11, 74], "lb_keogh": [0, 11, 74], "dtw_lb_keogh": [0, 11, 74], "lower": [0, 8, 11, 12, 13, 14, 28, 29, 39, 40, 42, 43, 45, 46, 47, 53, 65, 74], "bound": [0, 11, 13, 14, 30, 32, 39, 42, 43, 45, 46, 47, 65, 74], "dtw_map": [0, 11, 74], "optim": [0, 11, 65, 74, 78], "path": [0, 11, 19, 20, 44, 45, 46, 47, 62, 74, 78], "two": [0, 11, 13, 14, 23, 27, 36, 37, 39, 42, 43, 45, 46, 47, 53, 62, 64, 65, 70, 74, 75, 77], "given": [0, 2, 3, 8, 11, 12, 13, 14, 15, 21, 23, 24, 25, 26, 27, 34, 41, 43, 44, 45, 46, 47, 63, 67, 74], "jeong_weight": [0, 11, 74], "weight": [0, 11, 13, 14, 23, 24, 25, 26, 27, 28, 29, 36, 39, 43, 44, 45, 46, 47, 64, 74], "describ": [0, 8, 11, 19, 20, 36, 43, 60, 62, 65, 74, 75], "jeong": [0, 11, 74], "et": [0, 1, 2, 3, 8, 11, 12, 13, 14, 36, 43, 45, 47, 73, 74, 75], "al": [0, 1, 2, 3, 8, 11, 12, 13, 14, 36, 43, 45, 47, 73, 74, 75], "2011": [0, 11, 74], "r4bf7d056babf": [0, 11, 74], "1": [0, 1, 2, 3, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 73, 74, 77, 78], "_": [0, 11, 74], "wddtw_distanc": [0, 11, 74], "wdtw_align": [0, 11, 74], "wdtw_distanc": [0, 11, 74], "method": [0, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 57, 68, 74, 75, 77], "classif": [0, 8, 11, 13, 14, 23, 24, 25, 26, 27, 28, 29, 31, 32, 36, 40, 42, 43, 44, 45, 46, 47, 70, 73, 74, 77], "regress": [0, 8, 13, 14, 26, 27, 44, 45, 46, 47, 69, 73, 74, 77], "detect": [0, 8, 14, 65, 74], "baggingclassifi": [0, 13, 14, 74, 75], "bag": [0, 13, 14, 74], "classifi": [0, 8, 13, 14, 17, 19, 20, 21, 24, 25, 26, 27, 36, 43, 45, 46, 47, 51, 68, 74, 75, 77], "baggingregressor": [0, 13, 14, 74, 75], "regressor": [0, 13, 14, 21, 24, 25, 26, 27, 44, 46, 47, 51, 68, 74], "basebag": [0, 13, 14, 74], "extrashapelettreesclassifi": [0, 13, 14, 74], "extrem": [0, 13, 14, 74], "random": [0, 8, 11, 13, 14, 15, 16, 18, 19, 20, 21, 23, 25, 27, 30, 31, 32, 33, 36, 37, 39, 40, 42, 43, 45, 46, 47, 68, 69, 74, 77], "shapelet": [0, 1, 3, 12, 13, 14, 15, 18, 19, 20, 21, 25, 27, 40, 42, 43, 46, 47, 70, 74, 77], "extrashapelettreesregressor": [0, 13, 14, 74, 75], "intervalforestclassifi": [0, 13, 14, 74], "interv": [0, 8, 13, 14, 15, 21, 28, 29, 37, 41, 43, 46, 47, 73, 74, 77], "intervalforestregressor": [0, 13, 14, 74], "isolationshapeletforest": [0, 13, 14, 74], "isol": [0, 13, 14, 74, 78], "forest": [0, 8, 13, 14, 19, 20, 45, 47, 74, 77], "pivotforestclassifi": [0, 13, 14, 74], "proximityforestclassifi": [0, 13, 14, 68, 74], "proxim": [0, 13, 14, 16, 20, 28, 29, 45, 47, 74], "rocketforestclassifi": [0, 13, 14, 74, 75], "rocket": [0, 13, 14, 24, 27, 40, 43, 74, 77], "rocketforestregressor": [0, 13, 14, 74, 75], "shapeletforestclassifi": [0, 13, 14, 68, 74, 75, 77], "shapeletforestembed": [0, 13, 14, 74], "shapeletforestregressor": [0, 13, 14, 68, 74, 75], "explan": [0, 4, 15, 16, 17, 18, 19, 20, 21, 28, 29, 74], "amplitudeimport": [0, 15, 21, 74], "equi": [0, 15, 21, 74], "probabl": [0, 4, 8, 13, 14, 15, 18, 21, 39, 40, 43, 44, 45, 46, 47, 74], "amplitud": [0, 15, 21, 53, 74], "intervalimport": [0, 15, 21, 74, 77], "shapeletimport": [0, 15, 21, 74], "plot_import": [0, 15, 21, 74], "plot": [0, 4, 15, 17, 18, 19, 20, 21, 61, 74, 77], "boxplot": [0, 15, 21, 74], "kneighborscounterfactu": [0, 17, 20, 74], "fit": [0, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 60, 69, 74, 77], "nearest": [0, 12, 17, 18, 20, 74], "neighbor": [0, 12, 17, 18, 20, 74], "prototypecounterfactu": [0, 18, 20, 74], "model": [0, 8, 13, 14, 18, 20, 23, 24, 25, 26, 27, 32, 44, 46, 47, 69, 73, 74], "agnost": [0, 2, 3, 18, 20, 74], "approach": [0, 18, 20, 23, 27, 36, 43, 60, 73, 74, 77, 78], "construct": [0, 8, 18, 20, 28, 29, 41, 43, 46, 47, 52, 54, 68, 73, 74], "shapeletforestcounterfactu": [0, 19, 20, 74], "singl": [0, 13, 14, 16, 20, 23, 27, 28, 29, 33, 36, 40, 43, 44, 45, 46, 47, 50, 59, 62, 63, 65, 74, 75], "sampl": [0, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 52, 53, 54, 59, 60, 61, 62, 63, 65, 70, 73, 74, 75, 77], "linear": [0, 27, 74], "both": [0, 8, 11, 12, 27, 34, 43, 52, 54, 59, 61, 62, 64, 65, 70, 73, 74], "hydraclassifi": [0, 23, 27, 36, 43, 74, 75], "dictionari": [0, 6, 7, 13, 14, 18, 19, 20, 23, 27, 36, 39, 42, 43, 45, 46, 47, 54, 62, 74, 75], "convolut": [0, 13, 14, 23, 27, 34, 36, 40, 43, 46, 47, 69, 74, 75], "kernel": [0, 8, 13, 14, 23, 24, 25, 26, 27, 34, 36, 40, 43, 44, 46, 47, 73, 74], "randomshapeletclassifi": [0, 25, 27, 74], "randomshapeletregressor": [0, 25, 27, 74], "rocketclassifi": [0, 24, 27, 69, 74, 75], "rocketregressor": [0, 24, 27, 69, 74, 75], "evalu": [0, 13, 14, 18, 19, 20, 28, 29, 46, 47, 51, 60, 74, 77], "compactness_scor": [0, 28, 29, 74], "compact": [0, 28, 29, 74], "score": [0, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 44, 45, 46, 47, 73, 74, 77], "plausability_scor": [0, 28, 29, 74], "plausibl": [0, 28, 29, 74], "proximity_scor": [0, 28, 29, 74], "redudancy_scor": [0, 28, 29, 74], "redud": [0, 28, 29, 74], "relative_proximity_scor": [0, 28, 29, 74], "rel": [0, 28, 29, 65, 74], "validity_scor": [0, 28, 29, 74], "valid": [0, 7, 16, 20, 23, 27, 28, 29, 30, 32, 44, 45, 46, 47, 52, 59, 60, 62, 74, 75], "select": [0, 8, 12, 16, 20, 32, 37, 42, 43, 60, 61, 73, 74, 77, 78], "repeatedoutliersplit": [0, 30, 32, 74], "repeat": [0, 15, 21, 30, 32, 74], "cross": [0, 23, 27, 30, 32, 74], "outlier_train_test_split": [0, 13, 14, 31, 32, 74], "train": [0, 6, 7, 13, 14, 28, 29, 30, 31, 32, 40, 43, 44, 45, 46, 47, 60, 61, 62, 74, 77], "test": [0, 7, 13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 44, 45, 46, 47, 49, 51, 55, 60, 61, 62, 65, 68, 74, 77], "split": [0, 7, 13, 14, 23, 27, 30, 31, 32, 44, 45, 46, 47, 62, 64, 74, 77], "raw": [0, 43, 74], "tabular": [0, 43, 74], "represent": [0, 13, 14, 43, 46, 47, 69, 73, 74, 77], "difftransform": [0, 35, 36, 43, 74], "featuretransform": [0, 37, 43, 74], "number": [0, 1, 2, 3, 6, 7, 8, 11, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 54, 60, 63, 65, 74, 77], "featur": [0, 13, 14, 24, 25, 26, 27, 33, 37, 40, 43, 44, 46, 47, 50, 60, 61, 74, 75, 78], "hydratransform": [0, 36, 43, 74, 75], "intervaltransform": [0, 8, 37, 43, 73, 74, 75], "emb": [0, 37, 43, 74], "per": [0, 8, 15, 19, 20, 21, 23, 27, 36, 37, 39, 43, 74], "matrixprofiletransform": [0, 38, 43, 74], "paa": [0, 41, 43, 74], "peicewis": [0, 41, 43, 74], "aggreg": [0, 19, 20, 41, 43, 74], "approxim": [0, 8, 41, 43, 74], "pivottransform": [0, 39, 43, 74, 75], "pivot": [0, 8, 13, 14, 39, 43, 45, 46, 47, 68, 74], "proximitytransform": [0, 39, 43, 74], "condit": [0, 39, 43, 74], "randomshapelettransform": [0, 42, 43, 74, 75], "tranform": [0, 42, 43, 74], "rockettransform": [0, 40, 43, 74, 75, 77], "sax": [0, 15, 21, 28, 29, 41, 43, 74], "symbol": [0, 41, 43, 74], "convolv": [0, 23, 27, 34, 43, 74], "appli": [0, 7, 8, 34, 43, 44, 45, 46, 47, 60, 74], "1d": [0, 34, 43, 52, 54, 63, 65, 74], "over": [0, 13, 14, 15, 21, 28, 29, 34, 39, 42, 43, 45, 46, 47, 64, 74, 75, 77], "piecewice_aggregate_approxim": [0, 41, 43, 74], "symbolic_aggregate_approxim": [0, 41, 43, 74], "extrashapelettreeclassifi": [0, 46, 47, 70, 74], "extra": [0, 4, 6, 7, 8, 15, 17, 18, 19, 20, 21, 46, 47, 62, 65, 73, 74], "extrashapelettreeregressor": [0, 46, 47, 70, 74, 75], "intervaltreeclassifi": [0, 46, 47, 74], "intervaltreeregressor": [0, 46, 47, 74], "pivottreeclassifi": [0, 46, 47, 74], "proximitytreeclassifi": [0, 45, 47, 74, 75], "branch": [0, 45, 47, 68, 74], "rockettreeclassifi": [0, 46, 47, 74, 75], "rockettreeregressor": [0, 46, 47, 74, 75], "shapelettreeclassifi": [0, 44, 45, 46, 47, 70, 74, 75], "shapelettreeregressor": [0, 13, 14, 46, 47, 70, 74, 75], "check_arrai": [0, 52, 54, 74], "input": [0, 4, 8, 12, 13, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26, 27, 31, 32, 34, 35, 38, 39, 41, 43, 44, 45, 46, 47, 52, 53, 54, 55, 63, 65, 74, 77], "check_x_i": [0, 52, 54, 74], "mp": [1, 3, 12], "none": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 62, 65], "window": [1, 2, 3, 11, 12, 15, 21, 28, 29, 38, 41, 43, 62, 64, 78], "auto": [1, 3, 13, 14, 18, 20, 39, 43, 45, 47], "exclud": [1, 2, 3, 12, 38, 43], "0": [1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 30, 31, 32, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 59, 60, 61, 62, 64, 65, 73, 77, 78], "2": [1, 2, 3, 8, 11, 12, 13, 14, 15, 16, 20, 21, 24, 25, 26, 27, 30, 31, 32, 34, 37, 38, 40, 43, 44, 45, 46, 47, 52, 54, 55, 59, 60, 62, 63, 64, 65, 77], "max_dist": [1, 3], "best": [1, 3, 12, 13, 14, 16, 18, 20, 24, 25, 26, 27, 42, 43, 44, 46, 47, 65], "max_neighbour": [1, 3], "10": [1, 3, 12, 13, 14, 15, 21, 23, 24, 25, 26, 27, 37, 39, 40, 42, 43, 45, 46, 47, 53, 65, 78], "min_neighbour": [1, 3], "max_motif": [1, 3], "return_dist": [1, 3, 12], "fals": [1, 2, 3, 7, 11, 12, 13, 14, 15, 18, 19, 20, 21, 25, 27, 28, 29, 41, 43, 51, 52, 53, 54, 59, 60, 62, 77], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 77], "paramet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 61, 62, 64, 65, 73, 75, 77], "arrai": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 55, 59, 61, 62, 63, 65, 77], "like": [1, 2, 3, 4, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 63], "n_sampl": [1, 2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 59, 60, 61, 63, 65, 75, 77], "n_timestep": [1, 2, 3, 4, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 59, 60, 61, 63, 65, 77], "ndarrai": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 54, 55, 61, 77], "profile_s": [1, 2, 3, 12], "option": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 60, 62, 65, 73, 77, 78], "int": [1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 52, 53, 54, 60, 65, 73], "float": [1, 2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 59, 60, 64], "size": [1, 2, 3, 9, 11, 12, 13, 14, 15, 19, 20, 21, 23, 27, 28, 29, 30, 31, 32, 36, 37, 38, 40, 41, 42, 43, 60, 77], "math": [1, 3, 12, 65], "ceil": [1, 3, 12, 46, 47], "exact": [1, 2, 3, 11, 12, 13, 14, 15, 21, 23, 27, 33, 36, 38, 40, 43], "exclus": [1, 2, 3, 12, 38, 43], "zone": [1, 3, 12, 38, 43], "str": [1, 3, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 20, 21, 23, 27, 28, 29, 37, 39, 41, 42, 43, 45, 46, 47, 50, 52, 53, 54, 60], "distanc": [1, 2, 3, 8, 13, 14, 15, 19, 20, 21, 22, 28, 29, 39, 42, 43, 45, 46, 47, 64, 68, 70, 75], "neighbour": [1, 3], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 60, 61, 62, 63, 65, 73, 75, 77], "bool": [1, 2, 3, 4, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55], "main": [1, 3, 60, 77], "motif_indici": [1, 3], "indici": [1, 3, 12, 30, 32], "motif_dist": [1, 3], "refer": [1, 2, 3, 8, 11, 12, 13, 14, 17, 18, 19, 20, 23, 27, 28, 29, 36, 37, 40, 42, 43, 45, 47, 65, 74], "yeh": [1, 3, 12], "c": [1, 3, 12, 13, 14, 52, 54, 64, 77, 78], "m": [1, 3, 11, 12, 28, 29, 64, 65, 78], "2016": [1, 3, 12], "similar": [1, 3, 12, 16, 20, 38, 43, 61, 64, 65, 77], "join": [1, 2, 3, 12, 38, 43], "unifi": [1, 3, 12], "view": [1, 3, 12], "discord": [1, 3, 12], "In": [1, 2, 3, 8, 11, 12, 13, 14, 19, 20, 23, 24, 25, 26, 27, 37, 43, 44, 45, 46, 47, 59, 60, 61, 62, 64, 65, 67, 73, 75, 77], "ieee": [1, 3, 12, 19, 20, 64], "16th": [1, 3, 12], "intern": [1, 2, 3, 11, 12, 13, 14, 19, 20, 46, 47, 64, 65], "confer": [1, 2, 3, 11, 12, 19, 20, 64, 65], "data": [1, 2, 3, 6, 7, 8, 11, 12, 13, 14, 16, 19, 20, 23, 24, 25, 26, 27, 31, 32, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 52, 54, 60, 61, 62, 64, 65, 73], "mine": [1, 2, 3, 12, 13, 14, 19, 20, 23, 27, 36, 37, 40, 43, 45, 47, 65], "icdm": [1, 3, 12, 19, 20], "mpi": [2, 3, 12], "n_segment": [2, 3], "boundri": [2, 3], "return_arc_curv": [2, 3], "If": [2, 3, 4, 7, 8, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 60, 62, 65, 73, 78], "index": [2, 3, 11, 12, 13, 14, 15, 18, 21, 44, 45, 46, 47, 59, 63, 65], "must": [2, 3, 8, 11, 15, 21, 28, 29, 37, 40, 62, 64, 73, 78], "unless": [2, 3, 13, 14, 39, 42, 43, 44, 45, 46, 47, 52, 54, 62, 64], "identifi": [2, 3, 13, 14, 42, 43, 46, 47, 52, 54, 59, 62, 65, 77], "ignor": [2, 3, 11, 12, 13, 14, 15, 21, 28, 29, 30, 32, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 59], "self": [2, 3, 4, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 60], "region": [2, 3, 77], "around": [2, 3], "express": [2, 3, 8, 12, 13, 14, 28, 29, 38, 43, 46, 47, 60, 62], "arc": [2, 3], "curv": [2, 3], "start": [2, 3, 12, 15, 21], "arc_curv": [2, 3], "gharghabi": [2, 3], "shaghayegh": [2, 3], "2017": [2, 3], "viii": [2, 3], "domain": [2, 3, 53], "onlin": [2, 3], "semant": [2, 3], "superhuman": [2, 3], "perform": [2, 3, 13, 14, 28, 29, 37, 40, 43, 51, 52, 54, 60, 61, 65, 69], "level": [2, 3], "proceed": [2, 3, 8, 64, 65, 73], "get_metadata_rout": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "metadata": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "rout": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "thi": [4, 6, 7, 8, 11, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 54, 60, 61, 65, 69, 74, 75, 77, 78], "object": [4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 60, 64, 65, 77], "pleas": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "how": [4, 11, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 77], "mechan": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "work": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 65, 75, 77, 78], "metadatarequest": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "encapsul": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "inform": [4, 11, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 77], "get_param": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "deep": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "true": [4, 7, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 54, 55, 59, 60, 63, 64, 65], "default": [4, 7, 8, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 60, 61, 62, 64, 65, 73, 75, 77], "contain": [4, 7, 8, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 54, 55, 59, 62, 65], "subobject": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "ar": [4, 6, 7, 8, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 59, 60, 61, 62, 64, 65, 67, 68, 70, 73, 75, 77, 78], "param": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "dict": [4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 60, 62], "map": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 67], "set_param": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "set": [4, 7, 8, 11, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 60, 62, 65, 75, 77, 78], "simpl": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 73, 78], "well": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "nest": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "pipelin": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 77], "latter": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "have": [4, 9, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 54, 59, 60, 61, 63, 64, 75, 77, 78], "form": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 77], "compon": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62], "__": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "so": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 60, 77], "": [4, 8, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 64, 65, 73, 77], "possibl": [4, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 67, 78], "updat": [4, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "instanc": [4, 8, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 54, 62], "counterfactu": [4, 21, 22, 28, 29, 77], "explain": [4, 22, 28, 29, 77], "term": [4, 13, 14, 17, 18, 19, 20, 40, 43, 63, 64], "close": [4, 17, 18, 19, 20, 52, 54], "desir": [4, 8, 16, 17, 18, 19, 20, 28, 29, 36, 43, 65, 73], "counterfact": [4, 17, 18, 19, 20], "closensess": [4, 17, 18, 19, 20], "fit_explain": [4, 15, 17, 18, 19, 20, 21], "kwarg": [4, 7, 15, 17, 18, 19, 20, 21], "argument": [4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 39, 42, 43, 45, 46, 47, 50, 62, 64, 65, 75, 77, 78], "ax": [4, 15, 17, 18, 19, 20, 21, 53, 61], "make_dict_filt": 5, "filter": [5, 7, 13, 14, 40, 43, 77], "make": [5, 52, 54, 64], "new": [5, 7, 13, 14, 16, 18, 19, 20, 30, 32, 51, 61, 77, 78], "subject": 5, "op": 5, "verb": 5, "callabl": [5, 7, 9, 12, 15, 16, 19, 20, 21, 23, 27, 28, 29, 50], "make_filt": 5, "creat": [5, 7, 8, 13, 14, 18, 44, 45, 46, 47, 59, 62, 78], "make_list_filt": 5, "base": [5, 6, 7, 8, 11, 13, 14, 15, 16, 20, 22, 23, 26, 27, 28, 29, 33, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 62, 64, 75, 78], "string": [5, 7, 13, 14, 23, 27, 39, 42, 43, 45, 46, 47, 60, 61, 62], "make_str_filt": 5, "version": [6, 7, 13, 14, 16, 19, 20, 24, 25, 26, 27, 35, 37, 38, 39, 41, 43, 44, 45, 46, 47, 62, 73, 77, 78], "tag": [6, 7, 51, 62], "descript": [6, 7, 8, 50, 62, 73], "uniqu": [6, 7, 28, 29, 62], "human": [6, 7], "readabl": [6, 7], "get_collect": [6, 7], "get_filenam": [6, 7], "ext": [6, 7], "extens": [6, 7, 62], "filenam": [6, 7], "archiv": [6, 7], "zipfil": [6, 7], "sort": [6, 7, 13, 14], "zip": [6, 7, 60, 62], "n_training_sampl": [6, 7], "url": [6, 7, 62], "properti": [6, 7, 13, 14, 37, 40], "download_url": [6, 7], "templat": [6, 7], "download": [6, 7, 60, 62, 78], "wildboar_requir": [6, 7, 62], "requir": [6, 7, 8, 11, 13, 14, 23, 24, 25, 26, 27, 44, 45, 46, 47, 52, 54, 60, 62, 65, 73, 75, 78], "min": [6, 7, 9, 11, 46, 47, 53, 59, 65], "timeout": [6, 7, 62], "abstract": [6, 7, 18, 41], "util": [7, 8, 9, 13, 14, 22, 46, 47, 63, 65], "outlier": [7, 13, 14, 22, 28, 29, 30, 31, 32, 62], "preprocess": [7, 15, 21, 22, 41, 43, 60, 61, 77], "cache_dir": [7, 62], "keep_last_vers": 7, "keep": [7, 13, 14, 24, 25, 26, 27, 44, 46, 47], "latest": [7, 62], "json": 7, "request": [7, 8, 60, 62, 65, 73, 78], "ucr": [7, 60, 62, 65, 77], "tini": [7, 60, 62], "format": [7, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 62], "bake": [7, 77], "off": [7, 77], "create_cache_dir": 7, "progress": 7, "forc": [7, 52, 54, 60], "where": [7, 8, 11, 12, 13, 14, 24, 25, 26, 27, 28, 29, 31, 32, 34, 37, 39, 42, 43, 44, 45, 46, 47, 53, 59, 62, 64, 65, 75, 77, 78], "wildboar_cach": 7, "miss": [7, 59, 63], "show": [7, 11, 53], "bar": 7, "while": [7, 13, 14, 44, 45, 46, 47, 60, 62, 77, 78], "re": [7, 13, 14, 60], "we": [7, 13, 14, 28, 29, 37, 39, 42, 43, 45, 46, 47, 51, 52, 53, 54, 59, 60, 61, 62, 64, 65, 67, 73, 75, 77, 78], "can": [7, 8, 13, 14, 24, 25, 26, 27, 36, 43, 44, 45, 46, 47, 50, 53, 59, 60, 61, 62, 63, 64, 65, 67, 73, 77, 78], "also": [7, 28, 29, 44, 45, 46, 47, 51, 60, 63, 64, 65, 70, 73, 75, 77, 78], "ani": [7, 8, 44, 45, 46, 47, 62, 63, 64], "newli": 7, "ad": [7, 13, 14, 46, 47], "still": [7, 78], "pend": 7, "dtype": [7, 52, 53, 54, 59, 60], "contigu": [7, 52, 54, 77], "merge_train_test": [7, 60, 62, 77], "return_extra": 7, "read": [7, 12, 13, 14, 20, 28, 29, 39, 42, 43, 45, 46, 47, 65, 77], "type": [7, 52, 53, 54, 70, 77], "_preprocess": 7, "take": [7, 37, 43, 44, 45, 46, 47, 62, 64], "np": [7, 8, 11, 13, 14, 15, 21, 28, 29, 37, 39, 42, 43, 45, 46, 47, 52, 53, 54, 55, 59, 61, 65], "ensur": [7, 16, 20, 30, 32, 52, 54, 62], "memori": [7, 13, 14, 52, 54, 65, 75, 77], "merg": [7, 45, 47, 62, 64], "exist": [7, 30, 32, 60, 75, 77], "partit": [7, 77], "alreadi": [7, 60, 78], "4": [7, 8, 11, 13, 14, 15, 21, 36, 37, 40, 41, 43, 55, 59, 64, 65, 73, 75], "x_train": [7, 13, 14, 31, 32, 60, 62, 77], "x_test": [7, 13, 14, 31, 32, 60, 62, 77], "y_train": [7, 13, 14, 31, 32, 60, 62, 77], "y_test": [7, 13, 14, 31, 32, 60, 62, 77], "syntheticcontrol": [7, 60, 62], "600": [7, 60], "origin": [7, 13, 14, 15, 16, 20, 21, 23, 27, 28, 29, 33, 40, 43, 52, 54, 75, 77], "preserv": [7, 52, 53, 54, 77], "specif": [7, 13, 14, 39, 42, 43, 45, 46, 47, 51, 52, 54, 60, 61, 62, 75, 78], "doe": [7, 8, 30, 32, 36, 43, 65, 77], "shown": [7, 15, 21], "onli": [7, 11, 12, 13, 14, 15, 16, 19, 20, 21, 44, 45, 46, 47, 52, 54, 60, 61, 62, 64, 65, 75, 77, 78], "yield": [7, 30, 32, 51, 61], "those": 7, "which": [7, 8, 11, 13, 14, 18, 20, 23, 24, 25, 26, 27, 28, 29, 37, 43, 44, 45, 46, 47, 60, 62, 63, 64, 65, 73, 75, 77, 78], "f": [7, 8, 13, 14, 23, 27, 36, 37, 43, 45, 47, 50, 52, 54, 61, 64, 73, 77], "attribut": [7, 13, 14, 15, 17, 18, 19, 20, 21, 33, 36, 40, 42, 43, 44, 45, 46, 47, 49, 60, 62, 68, 77], "comparison": [7, 60], "spec": 7, "conjunct": 7, "part": [7, 60, 61, 62, 63, 65], "depend": [7, 8, 12, 37, 43, 59, 65, 77, 78], "tupl": [7, 11, 13, 14, 39, 42, 43, 45, 46, 47, 51, 54, 75], "last": [7, 61, 62, 65, 77], "element": [7, 13, 14, 34, 39, 42, 43, 45, 46, 47, 50, 55], "print": [7, 19, 20, 60, 77], "beef": [7, 60, 62], "470": [7, 60], "coffe": [7, 60, 62], "56": [7, 60], "286": [7, 60], "150": [7, 37, 43, 60], "1162": [7, 60], "82": [7, 60], "than": [7, 8, 12, 13, 14, 46, 47, 53, 60, 63, 64, 65, 77], "call": [7, 13, 14, 24, 25, 26, 27, 44, 46, 47, 51, 62], "without": [7, 50, 59, 62, 64], "reset": [7, 62], "root": [7, 15, 21], "n_outlier": [8, 30, 32, 73], "05": [8, 11, 13, 14, 18, 20, 30, 31, 32, 37, 43, 64, 73], "dbscan": 8, "ep": 8, "min_sampl": 8, "5": [8, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 24, 27, 28, 29, 37, 40, 43, 46, 47, 53, 64, 65, 73], "metric": [8, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 39, 42, 43, 44, 45, 46, 47, 75], "euclidean": [8, 12, 13, 14, 15, 18, 19, 20, 21, 25, 27, 28, 29, 42, 43, 46, 47, 64, 65], "max_ep": 8, "inf": [8, 52, 54], "random_st": [8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 30, 31, 32, 33, 36, 37, 39, 40, 42, 43, 45, 46, 47], "densiti": 8, "cluster": [8, 73], "fail": 8, "assign": [8, 73, 77], "By": [8, 13, 14, 15, 21, 23, 27, 36, 39, 41, 43, 45, 47, 52, 53, 54, 59, 62, 65, 73, 75, 77], "class": [8, 31, 62, 73, 77], "consid": [8, 12, 13, 14, 28, 29, 31, 32, 45, 47, 77], "optic": 8, "when": [8, 12, 13, 14, 15, 19, 20, 21, 24, 25, 26, 27, 38, 41, 43, 44, 46, 47, 51, 52, 53, 54, 60, 62, 64, 65, 75, 77], "cluter": 8, "randomst": [8, 11, 13, 14, 15, 16, 19, 20, 21, 23, 27, 30, 31, 32, 33, 36, 37, 39, 40, 42, 43, 45, 46, 47], "seed": [8, 13, 14, 15, 21, 23, 27, 33, 36, 37, 40, 42, 43, 45, 46, 47, 77], "x_outlier": [8, 73], "n_inlier": [8, 30, 32], "y_outlier": [8, 73], "labl": 8, "confusion_estim": 8, "difficulty_estim": 8, "transform": [8, 9, 13, 14, 15, 16, 18, 19, 20, 21, 22, 28, 29, 46, 47, 51, 73, 75], "simplest": [8, 60, 73], "variat": [8, 73], "tight": [8, 73], "emmott": [8, 72], "2013": [8, 64, 73], "reliabl": [8, 77], "multiclass": [8, 73], "For": [8, 12, 13, 14, 24, 25, 26, 27, 33, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 60, 61, 62, 63, 65, 68, 69, 70, 75, 77, 78], "maxim": 8, "confus": [8, 73], "measur": [8, 13, 14, 28, 29, 39, 42, 43, 45, 46, 47, 64, 75], "digit": 8, "rang": [8, 13, 14, 39, 42, 43, 44, 45, 46, 47, 61, 65, 73], "accord": [8, 12, 13, 14, 40, 41, 43, 46, 47, 53, 62, 73], "final": [8, 13, 14, 51], "either": [8, 11, 31, 32, 42, 43, 44, 45, 46, 47, 60, 62, 65, 73, 77], "dispers": [8, 73], "guarante": [8, 77], "error": [8, 13, 14, 52, 54], "rais": [8, 52, 54], "ha": [8, 13, 14, 28, 29, 37, 41, 43, 45, 46, 47, 50, 52, 53, 54, 57, 59, 62, 64, 65, 75], "few": [8, 28, 29, 78], "n_class": [8, 13, 14, 44, 45, 46, 47], "support": [8, 12, 13, 14, 19, 20, 28, 29, 37, 40, 46, 47, 59, 60, 61, 62, 64, 73, 75, 77], "predict_proba": [8, 13, 14, 44, 45, 46, 47], "logist": [8, 73], "rbf": [8, 73], "befor": [8, 23, 27, 75, 78], "otherwis": [8, 13, 14, 28, 29, 52, 54], "suppli": [8, 15, 16, 20, 21], "hardest": [8, 73], "point": [8, 11, 44, 46, 47, 60, 62, 64, 73, 77], "quantiz": [8, 73], "should": [8, 13, 28, 29, 31, 32, 61, 62, 64, 77], "len": [8, 12, 15, 21], "denot": [8, 31, 32, 61, 64, 65], "simpler": 8, "multipl": [8, 13, 14, 15, 21, 39, 42, 43, 46, 47, 59, 62, 65, 73, 75, 77], "e": [8, 11, 13, 14, 19, 20, 28, 29, 46, 47, 52, 54, 59, 60, 61, 62, 64, 65, 73, 77, 78], "g": [8, 11, 18, 20, 23, 27, 36, 42, 43, 60, 61, 64, 65, 73, 77, 78], "would": [8, 13, 14, 24, 25, 26, 27, 39, 42, 43, 44, 45, 46, 47, 61], "mix": 8, "easi": [8, 53, 60], "difficult": [8, 73], "16": [8, 73], "3": [8, 11, 13, 14, 37, 40, 43, 52, 54, 55, 59, 61, 63, 64, 65, 73, 75], "percentil": [8, 13, 14, 73], "procedur": 8, "effect": [8, 13, 14, 41, 43, 45, 47, 52, 54, 75], "closest": [8, 18, 28, 29], "facil": 8, "locat": [8, 62, 65, 78], "thei": [8, 13, 14, 39, 43, 44, 45, 46, 47, 62, 65], "distribut": [8, 13, 14, 23, 27, 36, 40, 41, 43, 44, 45, 46, 47, 60, 78], "among": [8, 18], "avail": [8, 62, 70], "suffici": 8, "fewer": [8, 28, 29], "mai": [8, 13, 14, 24, 25, 26, 27, 44, 46, 47, 75], "note": [8, 11, 12, 13, 14, 19, 20, 24, 25, 26, 27, 28, 29, 30, 32, 36, 37, 43, 44, 46, 47, 53, 61, 65], "packag": [8, 60, 73, 78], "networkx": [8, 73], "da": [8, 64, 73], "dietterich": [8, 73], "t": [8, 13, 14, 23, 24, 25, 26, 27, 28, 29, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 52, 54, 64, 65, 73, 75, 78], "fern": [8, 73], "wong": [8, 73], "w": [8, 11, 13, 14, 23, 24, 25, 26, 27, 44, 45, 46, 47, 60, 62, 73], "systemat": [8, 73], "anomali": [8, 31, 32, 73], "benchmark": [8, 60, 69, 72], "real": [8, 13, 14, 59, 64, 73], "acm": [8, 64, 65, 73], "sigkdd": [8, 65, 73], "workshop": [8, 73], "pp": [8, 65, 73], "21": [8, 73], "n_cluster": 8, "farther": 8, "other": [8, 30, 32, 60, 62, 65, 73, 77], "satisfi": [8, 64], "constraint": [8, 49], "allow": [8, 37, 43, 44, 45, 46, 47, 51, 52, 54, 62, 73, 77], "n_dim": [9, 12, 28, 29, 31, 32, 38, 43, 44, 45, 46, 47, 59, 60, 61, 63, 65, 75, 77], "max": [9, 11, 46, 47, 53, 64, 65], "result": [9, 13, 14, 16, 18, 20, 31, 32, 34, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 61, 64, 73], "zero": [9, 13, 14, 23, 27, 36, 40, 43, 44, 45, 46, 47, 61, 64, 77], "unit": [9, 23, 27, 36, 43, 61, 64, 77], "deviat": [9, 11, 23, 27, 36, 37, 43, 73], "n_shortest": 9, "r": [11, 13, 14, 18, 20, 23, 24, 25, 26, 27, 37, 39, 42, 43, 44, 45, 46, 47, 64, 78], "x_timestep": [11, 65], "first": [11, 12, 13, 14, 36, 39, 42, 43, 45, 46, 47, 52, 54, 62, 63, 65, 73, 78], "y_timestep": [11, 65], "second": [11, 12, 13, 14, 39, 42, 43, 45, 46, 47, 62, 65], "out": [11, 13, 14, 77], "vector": [11, 52, 54], "penal": 11, "store": [11, 13, 14, 60], "instead": [11, 13, 14, 24, 25, 26, 27, 30, 32, 44, 46, 47, 65, 77], "sample_weight": [11, 13, 14, 23, 24, 25, 26, 27, 28, 29, 44, 45, 46, 47], "init": 11, "mm": 11, "max_stabl": 11, "learning_r": 11, "decai": 11, "9": [11, 23, 27, 36, 37, 43, 62], "tol": 11, "1e": [11, 28, 29], "max_epoch": 11, "50": [11, 60, 65], "return_cost": 11, "verbos": [11, 13, 14, 18, 19, 20, 78], "penalti": [11, 64], "control": [11, 13, 14, 15, 19, 20, 21, 23, 27, 33, 36, 39, 40, 43, 78], "exp": [11, 13, 14, 46, 47], "influenc": [11, 13, 14, 24, 25, 26, 27, 44, 46, 47], "much": [11, 28, 29, 75], "contribut": 11, "m_timestep": [11, 12], "initi": [11, 18, 62], "ssg": 11, "minim": 11, "equival": 11, "stochast": 11, "subgradi": 11, "epoch": 11, "lowest": 11, "cost": [11, 19, 20, 64, 65], "unchang": [11, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43], "rate": 11, "minmum": 11, "runtim": 11, "pseudo": [11, 16, 19, 20], "dataset": [11, 13, 14, 15, 21, 22, 23, 27, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 59, 61, 62, 65, 73], "27442791e": 11, "01": [11, 37, 43], "19807473e": 11, "02": [11, 37, 43], "77490053e": 11, "60441308e": 11, "31930140e": 11, "17437783e": 11, "43925941e": 11, "60983434e": 11, "72118437e": 11, "7": [11, 13, 14, 37, 40, 43, 65], "73352049e": 11, "56701557e": 11, "53269314e": 11, "33366128e": 11, "09010828e": 11, "97539989e": 11, "71443248e": 11, "42492836e": 11, "71408958e": 11, "82518334e": 11, "35671953e": 11, "26442901e": 11, "38342948e": 11, "11248815e": 11, "99355168e": 11, "00": [11, 37, 43], "08588712e": 11, "35954194e": 11, "78345146e": 11, "41023092e": 11, "99915956e": 11, "82717462e": 11, "71687181e": 11, "55819192e": 11, "28805337e": 11, "06653283e": 11, "25159669e": 11, "02389872e": 11, "39410523e": 11, "34687887e": 11, "03": 11, "98654485e": 11, "85832342e": 11, "6": [11, 37, 43, 59, 64, 65, 77], "56436416e": 11, "25302660e": 11, "77697444e": 11, "8": [11, 23, 27, 36, 37, 43, 53, 75], "24606299e": 11, "76357782e": 11, "27083874e": 11, "44590342e": 11, "64184026e": 11, "03608265e": 11, "13964118e": 11, "33595675e": 11, "09954847e": 11, "61924171e": 11, "47433305e": 11, "29583168e": 11, "00425122e": 11, "80524683e": 11, "70210329e": 11, "40259039e": 11, "59657389e": 11, "52170730e": 11, "54666287e": 11, "93690730e": 11, "23968406e": 11, "upper": [11, 13, 14, 30, 32, 39, 40, 42, 43, 45, 46, 47, 65], "keogh": [11, 65], "2002": 11, "28th": 11, "veri": [11, 61, 64], "larg": [11, 53, 60, 64, 68], "same": [11, 13, 14, 15, 21, 28, 29, 44, 45, 46, 47, 53, 61, 62, 64, 65, 75, 77], "min_dist": 11, "cumul": 11, "step": [11, 60, 61, 77], "return_index": [11, 12, 65], "precomput": [11, 13, 14, 24, 25, 26, 27, 44, 46, 47], "x_indic": 11, "y_indic": 11, "provid": [11, 18, 37, 40, 62, 64, 77, 78], "n": [11, 65, 73, 77], "omitaomu": 11, "o": [11, 13, 14, 18, 45, 47, 65], "2021": [11, 28, 29], "pattern": [11, 64, 73], "recognit": 11, "44": 11, "2231": 11, "2240": 11, "diagon": 11, "raec1aca773": 11, "dtw": [12, 18, 22, 42, 43, 45, 46, 47, 64, 65], "dim": [12, 61, 65, 75], "n_job": [12, 13, 14, 23, 24, 25, 26, 27, 33, 36, 37, 38, 39, 40, 42, 43, 48], "everi": [12, 44, 45, 46, 47, 52, 54, 65], "trivial": 12, "subsequenec": 12, "xn_timestep": 12, "yn_timestep": 12, "broadcast": [12, 16, 20, 65], "job": [12, 13, 14, 23, 27, 33, 36, 38, 40, 42, 43, 48], "warn": [12, 13, 52, 54, 75], "metric_param": [12, 13, 14, 15, 20, 21, 25, 27, 28, 29, 39, 42, 43, 45, 46, 47, 64, 65, 75], "full": [12, 28, 29, 37, 43, 60, 65, 75, 77], "_metric": [12, 20, 28, 29], "about": [12, 13, 14, 20, 28, 29, 37, 39, 40, 42, 43, 45, 46, 47, 52, 54, 65, 77], "parallel": [12, 13, 14, 23, 27, 33, 36, 40, 42, 43, 48], "ndim": [12, 52, 54, 77], "scalar": [12, 50, 53, 65], "search": [12, 44, 45, 46, 47, 64], "_subsequence_metr": 12, "mani": [12, 13, 14, 52, 54, 61, 65], "equal": [12, 13, 14, 39, 43, 44, 45, 46, 47, 59, 60, 64, 73], "good": [12, 19, 20, 28, 29, 73], "run": [12, 13, 14, 19, 20, 23, 27, 33, 36, 40, 42, 43, 51, 60, 61, 78], "dist": [12, 46, 47, 65], "minumum": [12, 53], "posit": [12, 13, 14, 15, 19, 20, 21, 23, 27, 33, 36, 40, 43, 64], "threshold": [12, 13, 14, 15, 18, 19, 20, 21, 41, 46, 47, 68, 70, 75], "max_match": 12, "less": [12, 13, 14, 46, 47, 60, 61, 77], "behaviour": 12, "order": [12, 13, 14, 23, 27, 28, 29, 35, 36, 43, 44, 45, 46, 47, 52, 53, 54, 59, 65, 77], "occurr": 12, "top": [12, 15, 21], "length": [12, 13, 14, 46, 47, 50, 52, 54, 55, 61, 63, 64], "below": [12, 62], "n_match": 12, "x_sampl": [12, 65], "y_sampl": [12, 65], "n_subsequ": [12, 65], "closer": [12, 18, 28, 29], "treshold": 12, "vicin": 12, "within": [12, 65], "timestep": [12, 28, 29, 40, 43, 52, 54, 59, 60, 61, 63, 65, 77], "anoth": [12, 62, 73], "higher": 12, "n_estim": [13, 14], "max_sampl": [13, 14], "bootstrap": [13, 14], "oob_scor": [13, 14], "class_weight": [13, 14, 23, 24, 25, 26, 27, 45, 46, 47], "warm_start": [13, 14], "base_estim": [13, 14, 75], "deprec": [13, 14, 16, 20, 37, 43, 45, 46, 47, 75], "meta": [13, 14], "subset": [13, 14, 23, 24, 25, 26, 27, 44, 45, 46, 47], "draw": [13, 14], "drawn": [13, 14], "replac": [13, 14, 28, 29, 62, 78], "balanc": [13, 14, 23, 27, 45, 46, 47], "associ": [13, 14, 23, 27, 45, 46, 47], "invers": [13, 14, 45, 46, 47], "proport": [13, 14, 45, 46, 47], "frequenc": [13, 14, 45, 46, 47, 53], "reus": [13, 14, 61, 77], "solut": [13, 14], "previou": [13, 14, 61], "add": [13, 14, 19, 20, 51, 53, 75], "just": [13, 14, 59, 78], "whole": [13, 14], "core": [13, 14, 23, 27, 33, 36, 37, 39, 40, 43], "integ": [13, 14, 23, 27, 33, 36, 40, 43, 53, 73], "resampl": [13, 14, 15, 21, 23, 27, 33, 40, 43], "output": [13, 14, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 54, 65, 77], "predict": [13, 14, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 44, 45, 46, 47, 69], "sinc": [13, 14, 16, 20, 23, 24, 25, 26, 27, 37, 43, 44, 45, 46, 47, 61, 65, 73, 77], "been": [13, 14, 37, 43, 53, 64, 75], "remov": [13, 14, 16, 20, 46, 47, 50, 75], "base_estimator_": [13, 14], "grow": [13, 14], "estimators_samples_": [13, 14], "member": [13, 14], "reduc": [13, 14, 37, 43, 60], "footprint": [13, 14], "thu": [13, 14], "fetch": [13, 14, 78], "slower": [13, 14, 65], "expect": [13, 14, 24, 25, 26, 27, 38, 43, 44, 46, 47, 61, 73, 77], "decision_funct": [13, 14, 28, 29], "decis": [13, 14, 19, 20, 44, 45, 46, 47, 68], "function": [13, 14, 19, 36, 37, 60, 61, 62, 64, 65, 77], "spars": [13, 14, 44, 45, 46, 47, 52, 54], "n_featur": [13, 14, 23, 24, 25, 26, 27, 35, 38, 39, 41, 43, 44, 45, 46, 47], "matric": [13, 14], "accept": [13, 14, 23, 27, 36, 43, 52, 54, 60, 61, 62, 65, 77], "column": [13, 14, 52, 54, 62, 63], "correspond": [13, 14, 23, 27, 28, 29, 44, 45, 46, 47], "appear": [13, 14], "classes_": [13, 14, 18, 20, 44, 45, 46, 47], "special": [13, 14, 77], "case": [13, 14, 64], "build": [13, 14, 45, 47, 77], "target": [13, 14, 18, 20, 35, 38, 39, 41, 43, 44, 45, 46, 47, 54, 78], "highest": [13, 14], "do": [13, 14, 44, 45, 46, 47, 64, 65, 75, 78], "resort": [13, 14], "vote": [13, 14], "predict_log_proba": [13, 14], "log": [13, 14, 37, 43, 75], "p": [13, 14, 17, 18, 19, 20, 28, 29, 64, 65], "repres": [13, 14, 59, 63, 64, 69], "accuraci": [13, 14, 23, 24, 25, 26, 27, 28, 29, 44, 45, 46, 47], "multi": [13, 14, 23, 24, 25, 26, 27, 37, 43, 44, 45, 46, 47, 52, 54, 73], "harsh": [13, 14, 23, 24, 25, 26, 27, 44, 45, 46, 47], "you": [13, 14, 23, 24, 25, 26, 27, 44, 45, 46, 47, 75, 77, 78], "correctli": [13, 14, 23, 24, 25, 26, 27, 44, 45, 46, 47, 75], "n_output": [13, 14, 23, 24, 25, 26, 27, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "100": [13, 14, 15, 18, 20, 21, 39, 43, 45, 47, 53, 60], "coeffici": [13, 14, 24, 25, 26, 27, 44, 46, 47], "determin": [13, 14, 16, 19, 20, 23, 24, 25, 26, 27, 30, 32, 37, 43, 44, 46, 47, 62, 73], "defin": [13, 14, 24, 25, 26, 27, 35, 39, 41, 42, 43, 44, 45, 46, 47, 62], "frac": [13, 14, 24, 25, 26, 27, 44, 46, 47], "u": [13, 14, 24, 25, 26, 27, 44, 46, 47], "v": [13, 14, 24, 25, 26, 27, 44, 46, 47, 62, 64], "residu": [13, 14, 24, 25, 26, 27, 44, 46, 47], "sum": [13, 14, 24, 25, 26, 27, 44, 46, 47], "squar": [13, 14, 15, 21, 24, 25, 26, 27, 44, 46, 47], "y_true": [13, 14, 24, 25, 26, 27, 44, 46, 47], "y_pred": [13, 14, 24, 25, 26, 27, 44, 46, 47], "total": [13, 14, 24, 25, 26, 27, 44, 46, 47], "neg": [13, 14, 24, 25, 26, 27, 44, 45, 46, 47], "becaus": [13, 14, 24, 25, 26, 27, 44, 46, 47], "arbitrarili": [13, 14, 24, 25, 26, 27, 44, 46, 47], "wors": [13, 14, 24, 25, 26, 27, 44, 46, 47], "constant": [13, 14, 24, 25, 26, 27, 44, 46, 47], "alwai": [13, 14, 24, 25, 26, 27, 30, 32, 44, 46, 47, 64], "disregard": [13, 14, 24, 25, 26, 27, 44, 46, 47], "some": [13, 14, 24, 25, 26, 27, 44, 46, 47, 51, 52, 54, 59, 60, 63, 78], "n_samples_fit": [13, 14, 24, 25, 26, 27, 44, 46, 47], "multioutput": [13, 14, 24, 25, 26, 27, 44, 46, 47], "uniform_averag": [13, 14, 24, 25, 26, 27, 44, 46, 47], "23": [13, 14, 24, 25, 26, 27, 44, 46, 47], "consist": [13, 14, 19, 20, 24, 25, 26, 27, 44, 46, 47, 65], "r2_score": [13, 14, 24, 25, 26, 27, 44, 46, 47], "except": [13, 14, 24, 25, 26, 27, 44, 46, 47, 62, 73], "multioutputregressor": [13, 14, 24, 25, 26, 27, 44, 46, 47], "baseforestclassifi": 13, "estimator_param": 13, "max_depth": [13, 14, 44, 45, 46, 47], "min_samples_split": [13, 14, 44, 45, 46, 47], "min_samples_leaf": [13, 14, 44, 45, 46, 47, 75], "min_impurity_decreas": [13, 14, 44, 45, 46, 47], "criterion": [13, 14, 45, 46, 47, 75], "entropi": [13, 14, 45, 46, 47], "tree": [13, 14, 22, 68, 75], "baseforestregressor": 13, "squared_error": [13, 14, 46, 47], "baseshapeletforestclassifi": 13, "n_shapelet": [13, 14, 15, 21, 25, 27, 42, 43, 46, 47, 75], "min_shapelet_s": [13, 14, 15, 18, 20, 21, 25, 27, 42, 43, 46, 47], "max_shapelet_s": [13, 14, 15, 18, 20, 21, 25, 27, 42, 43, 46, 47], "directli": [13, 62], "baseshapeletforestregressor": 13, "log2": [13, 14, 15, 21, 28, 29, 37, 41, 43, 46, 47, 75], "depth": [13, 14, 45, 46, 47, 78], "expand": [13, 14, 46, 47], "until": [13, 14, 46, 47], "leav": [13, 14, 44, 45, 46, 47], "pure": [13, 14, 46, 47], "node": [13, 14, 40, 43, 44, 45, 46, 47], "leaf": [13, 14, 44, 45, 46, 47], "introduc": [13, 14, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 57, 75], "impur": [13, 14, 45, 46, 47], "decreas": [13, 14, 45, 46, 47], "larger": [13, 14, 28, 29, 46, 47, 53, 63, 77], "grid": [13, 14, 39, 42, 43, 45, 46, 47], "mandatori": [13, 14, 39, 42, 43, 45, 46, 47], "one": [13, 14, 15, 21, 36, 39, 42, 43, 45, 46, 47, 50, 60, 65, 68, 77], "specifii": [13, 14, 39, 42, 43, 45, 46, 47], "give": [13, 14, 15, 21, 39, 42, 43, 45, 46, 47, 69], "follow": [13, 14, 35, 37, 39, 40, 42, 43, 45, 46, 47, 60, 61, 62, 64, 65, 77, 78], "min_r": [13, 14, 39, 42, 43, 45, 46, 47], "max_r": [13, 14, 39, 42, 43, 45, 46, 47], "num_r": [13, 14, 39, 42, 43, 45, 46, 47], "gini": [13, 14, 45, 46, 47], "scaled_euclidean": [13, 14, 46, 47, 64, 65], "y_hat": [13, 14], "mse": [13, 14, 46, 47, 75], "wa": [13, 14, 16, 20, 46, 47, 75], "v1": [13, 14, 46, 47, 60, 62], "forestmixin": 13, "n_interv": [13, 14, 15, 21, 28, 29, 37, 41, 43, 46, 47, 75], "sqrt": [13, 14, 15, 21, 28, 29, 37, 41, 43, 46, 47], "fix": [13, 14, 37, 43, 46, 47, 75], "summar": [13, 14, 37, 43, 46, 47], "mean_var_std": [13, 14], "sample_s": [13, 14, 37, 43, 46, 47], "min_siz": [13, 14, 37, 40, 43, 46, 47, 75], "max_siz": [13, 14, 37, 40, 43, 46, 47, 75], "contamin": [13, 14, 31, 32], "strategi": [13, 14, 23, 27, 30, 32, 36, 40, 41, 43], "offset": [13, 14], "offset_": [13, 14], "model_select": [13, 14, 22, 77], "sklearn": [13, 14, 36, 43, 52, 54, 73, 77], "balanced_accuracy_scor": [13, 14], "test_siz": [13, 14, 30, 31, 32, 77], "anomalies_train_s": [13, 14, 31, 32], "8674": [13, 14], "fit_predict": [13, 14], "Not": [13, 14], "present": [13, 14, 62], "api": [13, 14, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 59, 74, 75, 77], "convent": [13, 14, 51, 52, 54, 60, 68, 77], "n_pivot": [13, 14, 39, 43, 45, 46, 47], "pivot_sampl": [13, 14, 45, 47], "metric_sampl": [13, 14, 39, 43, 45, 47], "metric_factori": [13, 14, 45, 47, 75], "uniform": [13, 14, 39, 40, 41, 43, 45, 47, 61, 65], "parameter": [13, 14, 45, 47], "suggest": [13, 14, 45, 47], "luca": [13, 14, 45, 47], "2019": [13, 14, 37, 43, 45, 47, 78], "2020": [13, 14, 17, 18, 19, 20, 28, 29, 40, 43, 45, 47], "custom": [13, 14, 37, 43, 45, 47], "combin": [13, 14, 18, 37, 43, 45, 47], "sub": [13, 14, 45, 47], "benjamin": [13, 14, 45, 47], "ahm": [13, 14, 45, 47], "shifaz": [13, 14, 45, 47], "charlott": [13, 14, 45, 47], "pelleti": [13, 14, 45, 47], "lachlan": [13, 14, 45, 47], "neill": [13, 14, 45, 47], "nayyar": [13, 14, 45, 47], "zaidi": [13, 14, 45, 47], "bart": [13, 14, 45, 47], "goethal": [13, 14, 45, 47], "fran\u00e7oi": [13, 14, 40, 43, 45, 47], "petitjean": [13, 14, 40, 43, 45, 47], "geoffrei": [13, 14, 40, 43, 45, 47], "webb": [13, 14, 23, 27, 36, 40, 43, 45, 47], "scalabl": [13, 14, 45, 47], "knowledg": [13, 14, 17, 19, 20, 23, 27, 28, 29, 36, 37, 40, 43, 45, 47, 64, 65], "discoveri": [13, 14, 23, 27, 36, 37, 40, 43, 45, 47, 65], "n_kernel": [13, 14, 23, 24, 27, 36, 40, 43, 46, 47], "normal": [13, 14, 15, 21, 23, 24, 25, 26, 27, 31, 32, 36, 40, 41, 43, 46, 47, 53, 61, 64, 75], "sampling_param": [13, 14, 23, 24, 27, 36, 40, 43, 46, 47], "kernel_s": [13, 14, 23, 24, 27, 34, 36, 40, 43, 46, 47, 75], "bias_prob": [13, 14, 24, 27, 40, 43, 46, 47], "normalize_prob": [13, 14, 24, 27, 40, 43, 46, 47], "padding_prob": [13, 14, 24, 27, 40, 43, 46, 47], "11": [13, 14, 40, 43], "13": [13, 14, 40, 43], "bia": [13, 14, 34, 40, 43], "pad": [13, 14, 34, 40, 43], "processor": [13, 14, 42, 43, 78], "alpha": [13, 14, 23, 24, 25, 26, 27, 46, 47, 53], "current": [13, 14, 18, 46, 47, 60, 61, 62, 75, 78], "ab": [13, 14, 46, 47], "toward": [13, 14, 18, 46, 47, 51], "increas": [13, 14, 46, 47], "independeth": [13, 14, 46, 47], "sparse_output": [13, 14], "unsupervis": [13, 14, 35, 38, 39, 41, 43], "high": [13, 14], "dimension": [13, 14], "fall": [13, 14, 64, 77], "lead": [13, 14, 75], "code": [13, 14, 61, 65, 75], "ones": [13, 14], "csr": [13, 14], "bin": [15, 21, 41, 43, 53, 73, 78], "n_bin": [15, 21, 28, 29, 41, 43], "n_repeat": [15, 21], "discret": [15, 21, 23, 27, 53, 73], "permut": [15, 21], "show_bin": [15, 21], "show_grid": [15, 21], "scorer": [15, 21, 23, 27], "were": [15, 21, 63], "annot": [15, 21, 22], "axi": [15, 21, 44, 45, 46, 47, 50, 52, 54, 61, 65], "mappabl": [15, 21], "scalarmapp": [15, 21], "colorbar": [15, 21], "specici": [15, 21], "least": [15, 21, 52, 54], "importances_": [15, 21], "components_": [15, 21], "permuteimport": 15, "kernel_scal": [15, 21], "25": [15, 21, 45, 47, 64, 73], "train_x": [16, 20], "train_i": [16, 20], "valid_scor": [16, 20], "method_arg": [16, 20], "basecounterfactu": [16, 20], "infer": [16, 20], "most": [16, 20, 59, 63, 73, 78], "appropri": [16, 20, 63], "_counterfactu": [16, 20], "renam": [16, 20, 37, 43, 75], "success": [16, 20], "stabl": [16, 20, 31, 32, 59], "x_counterfactu": [16, 20, 28, 29], "karlsson": [17, 19, 20, 28, 29], "reban": [17, 19, 20, 28, 29], "j": [17, 19, 20, 28, 29, 65], "papapetr": [17, 19, 20, 28, 29], "gioni": [17, 19, 20, 28, 29], "local": [17, 19, 20, 28, 29], "tweak": [17, 19, 20, 28, 29], "system": [17, 19, 20, 28, 29, 60, 62, 78], "62": [17, 19, 20, 28, 29], "1671": [17, 19, 20, 28, 29], "1700": [17, 19, 20, 28, 29], "explainer_": [17, 20], "dynamictimewarptransform": 18, "gamma": 18, "move": [18, 45, 47, 64], "euclideantransform": 18, "space": [18, 34, 43, 53, 65], "knearestprototypesampl": 18, "prototype_indici": 18, "metric_transform": 18, "prototyp": 18, "new_counterfactu": 18, "nearest_index": 18, "sample_mov": 18, "sampla": 18, "knearestshapeletprototypesampl": 18, "shapeletprototypesampl": 18, "metrictransform": 18, "predictevalu": 18, "probabilityevalu": 18, "max_it": [18, 20], "step_siz": [18, 20], "n_prototyp": [18, 20], "samsten": [18, 20], "isak": [18, 20], "estimator_": [18, 20], "partitions_": [18, 20], "prototypesampl": [18, 20], "target_": [18, 20], "targetevalu": [18, 20], "prototype_indic": 18, "helper": 18, "wai": [18, 61], "abc": 18, "inherit": 18, "_o": 18, "sample_shapelet": 18, "uniformprototypesampl": 18, "uniformli": [18, 41, 43, 46, 47], "weighteddynamictimewarptransform": 18, "epsilon": [19, 20, 64, 75], "batch_siz": [19, 20], "max_path": [19, 20], "cosin": [19, 20, 64, 65], "manhattan": [19, 20, 64, 65], "multivari": [19, 20, 59, 61, 63, 77], "degre": [19, 20], "batch": [19, 20, 48], "candid": [19, 20, 28, 29], "subsampl": [19, 20], "stdout": [19, 20], "dure": [19, 20], "execut": [19, 20, 48], "differ": [19, 20, 23, 27, 28, 29, 30, 32, 36, 43, 62, 63, 64, 65, 77], "revers": [19, 20], "2018": [19, 20], "via": [19, 20], "irrevers": [19, 20], "paths_": [19, 20], "x_true": 20, "normalized_euclidean": [20, 28, 29, 64, 65], "ensembl": [22, 73, 75, 77], "linear_model": [22, 69, 75, 77], "variable_len": [22, 52, 54, 63], "n_group": [23, 27, 36, 43], "64": [23, 27, 36, 43, 60, 78], "fit_intercept": [23, 24, 25, 26, 27], "cv": [23, 24, 25, 26, 27], "group": [23, 27, 30, 32, 36, 43], "sampler": [23, 27, 36, 43], "half": [23, 27, 65], "n_alpha": [23, 27], "try": [23, 27, 50, 78], "whether": [23, 27, 52, 53, 54], "calcul": [23, 27, 41], "intercept": [23, 27], "signatur": [23, 27], "iter": [23, 27, 30, 32, 60], "class_label": [23, 27], "dempster": [23, 27, 36, 40, 43, 75], "schmidt": [23, 27, 36, 42, 43], "d": [23, 27, 28, 29, 36, 37, 43, 60, 62, 64, 65], "2023": [23, 27, 36, 43, 75], "hydra": [23, 27, 36, 43], "compet": [23, 27, 36, 43], "accur": [23, 27, 36, 40, 43, 67], "10000": [24, 27], "gcv_mode": [24, 25, 26, 27], "1000": [25, 27, 40, 42, 43], "basetransformclassifi": 26, "basetransformestim": 26, "basetransformregressor": 26, "transformridgecv": 26, "transformridgeclassifiercv": 26, "x_factual": [28, 29], "atol": [28, 29], "08": [28, 29], "n_timetep": [28, 29], "overlap": [28, 29, 37, 43], "toler": [28, 29, 64], "counterfacut": [28, 29], "factual": [28, 29], "x_plausibl": [28, 29], "y_plausibl": [28, 29], "y_counterfactu": [28, 29], "typic": [28, 29, 65, 77], "m_sampl": [28, 29], "localoutlierfactor": [28, 29], "individu": [28, 29, 61], "plausabl": [28, 29], "incic": [28, 29], "better": [28, 29], "delanei": [28, 29], "green": [28, 29], "kean": [28, 29], "arxiv": [28, 29, 42, 43], "2009": [28, 29], "13211v2": [28, 29], "redund": [28, 29], "impact": [28, 29], "non": [28, 29, 37, 43, 52, 54, 65], "x_nativ": [28, 29], "y_nativ": [28, 29], "captur": [28, 29, 77], "nativ": [28, 29, 36, 43], "n_nativ": [28, 29], "n_counterfactu": [28, 29], "avareg": [28, 29], "smyth": [28, 29], "b": [28, 29, 65], "interpret": [28, 29, 37, 43], "divers": [28, 29], "2101": [28, 29], "09056v1": [28, 29], "y_predict": [28, 29], "correct": [28, 29, 49, 67], "n_split": [30, 32], "shuffl": [30, 32, 77], "total_n_outli": [30, 32], "psudo": [30, 31, 32], "contrari": [30, 32], "fold": [30, 32], "insert": [30, 32], "repeatedli": [30, 32, 60, 77], "get_n_split": [30, 32], "compat": [30, 32, 33, 36, 37, 39, 40, 42, 43], "train_idx": [30, 32], "test_idx": [30, 32], "normal_class": [31, 32], "state": [31, 32, 39, 43, 61, 69], "anomal": [31, 32], "train_test_split": [31, 32, 77], "baseattributetransform": [33, 36, 37, 39, 40, 42, 43], "engin": [33, 64], "embedding_": [33, 36, 40, 42, 43], "embed": [33, 36, 37, 39, 40, 42, 43, 69], "underli": [33, 36, 40, 42, 43], "n_dimens": [33, 36, 37, 39, 40, 42, 43, 52, 54], "fit_transform": [33, 35, 36, 37, 38, 39, 40, 41, 42, 43], "set_output": [33, 35, 36, 37, 38, 39, 40, 41, 42, 43], "panda": [33, 35, 36, 37, 38, 39, 40, 41, 42, 43], "configur": [33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 65, 69, 77, 78], "datafram": [33, 35, 36, 37, 38, 39, 40, 41, 42, 43], "dilat": [34, 43], "stride": [34, 43], "implicit": [34, 43], "side": [34, 43], "output_s": [34, 43], "floor": [34, 43], "get_feature_names_out": [35, 43], "automat": [35, 43, 78], "wrap": [35, 43, 50], "develop": [35, 43, 75, 78], "onetoonefeaturemixin": [35, 43], "classnameprefixfeaturesoutmixin": [35, 43], "help": [35, 43], "fit_param": [35, 38, 39, 41, 43], "addit": [35, 38, 39, 41, 43, 60, 63, 65, 77], "x_new": [35, 38, 39, 41, 43], "n_features_new": [35, 38, 39, 41, 43], "descret": [36, 43], "make_pipelin": [36, 43, 77], "make_union": [36, 43], "dempster_hydra": [36, 43], "32": [36, 43, 60], "catch22": [37, 43], "_summar": [37, 43], "x_t": [37, 43], "19633603e": [37, 43], "51047206e": [37, 43], "90000000e": [37, 43], "80000000e": [37, 43], "48441896e": [37, 43], "73293560e": [37, 43], "21476510e": [37, 43], "70000000e": [37, 43], "00000000e": [37, 43], "70502518e": [37, 43], "60000000e": [37, 43], "42857143e": [37, 43], "26666667e": [37, 43], "89974643e": [37, 43], "31570726e": [37, 43], "50000000e": [37, 43], "90873852e": [37, 43], "47311800e": [37, 43], "intervalmixin": 37, "It": [37, 77], "_get_gener": [37, 40], "mean_var_slop": [37, 43, 46, 47], "possibli": [37, 43], "randomli": [37, 42, 43, 70], "slope": [37, 43], "paralel": [37, 43], "releas": [37, 43], "lock": [37, 43], "gil": [37, 43], "As": [37, 43, 60, 62, 64, 65, 77], "varianc": [37, 43, 61, 64, 77], "suit": [37, 43, 51, 65], "futur": [37, 43, 60, 75], "downstream": [37, 43], "project": [37, 43, 78], "own": [37, 43], "cython": [37, 43, 65], "lubba": [37, 43], "carl": [37, 43], "h": [37, 43], "sarab": [37, 43], "sethi": [37, 43], "philip": [37, 43], "knaut": [37, 43], "simon": [37, 43], "schultz": [37, 43], "ben": [37, 43], "fulcher": [37, 43], "nick": [37, 43], "jone": [37, 43], "canon": [37, 43], "characterist": [37, 43], "33": [37, 43], "1821": [37, 43], "1852": [37, 43], "15": [37, 43], "timepoint": [37, 43], "std": [37, 43, 64], "12": [37, 43, 65, 78], "matrixprofil": [38, 43], "pivotmixin": 39, "rocketmixin": 40, "angu": [40, 43], "exception": [40, 43], "34": [40, 43, 65, 77], "1454": [40, 43], "1495": [40, 43], "51333333": [40, 43], "11526939": [40, 43], "47333333": [40, 43], "04712544": [40, 43], "24": [40, 43], "82912261": [40, 43], "52666667": [40, 43], "26611524": [40, 43], "54": [40, 43, 65], "98047216": [40, 43], "81260641": [40, 43], "54666667": [40, 43], "71210092": [40, 43], "35333333": [40, 43], "28841158": [40, 43], "25333333": [40, 43], "82203705": [40, 43], "72938203": [40, 43], "45333333": [40, 43], "53756324": [40, 43], "24666667": [40, 43], "8380654": [40, 43], "68666667": [40, 43], "80533684": [40, 43], "26": [40, 43, 61], "41709413": [40, 43], "65634235": [40, 43], "66": [40, 43], "94724793": [40, 43], "32666667": [40, 43], "85575661": [40, 43], "67630249": [40, 43], "piecewic": 41, "get_threshold": 41, "suitabl": 41, "normalbin": 41, "assum": [41, 43, 53, 59, 61, 62, 63], "uniformbin": 41, "wistuba": [42, 43], "martin": [42, 43], "josif": [42, 43], "grabocka": [42, 43], "lar": [42, 43], "thiem": [42, 43], "ultra": [42, 43], "preprint": [42, 43], "1503": [42, 43], "05018": [42, 43], "2015": [42, 43], "load_gunpoint": [42, 43], "erp": [42, 43, 64, 65, 75], "min_g": [42, 43], "max_g": [42, 43], "shapeletmixin": [42, 75], "estiom": 42, "basetre": 44, "check_input": [44, 45, 46, 47], "bypass": [44, 45, 46, 47], "sure": [44, 45, 46, 47, 52, 54], "your": [44, 45, 46, 47, 75, 78], "up": [44, 45, 46, 47, 78], "node_count": [44, 45, 46, 47], "tree_": [44, 45, 46, 47], "equvival": [44, 45, 46, 47], "decision_path": [44, 45, 46, 47], "n_node": [44, 45, 46, 47], "nonzero": [44, 45, 46, 47, 59], "travers": [44, 45, 46, 47], "basetreeclassifi": 44, "child": [44, 45, 46, 47], "net": [44, 45, 46, 47], "carri": [44, 45, 46, 47], "don": [44, 45, 46, 47, 78], "know": [44, 45, 46, 47], "what": [44, 45, 46, 47, 73], "basetreeregressor": 44, "msm": [45, 47, 64, 65, 75], "min_c": [45, 47], "max_c": [45, 47], "num_c": [45, 47], "20": [45, 47, 65], "basefeaturetreeclassifi": 46, "basefeaturetreeregressor": 46, "scaled_dtw": [46, 47, 64, 65], "structur": [46, 47], "n_classes_": [46, 47], "run_in_parallel": 48, "parallel_arg": 48, "assert_exhaustive_parameter_check": 49, "assert": 49, "ok": 49, "assert_parameter_check": 49, "skip": [49, 51], "extend": 49, "array_or_scalar": 50, "optional_f": 50, "squeez": 50, "item": 50, "singleton": 50, "recursivlei": 50, "unwrap": 50, "Such": 50, "wrapper": 50, "unstabl": 50, "stabil": 50, "beta": 50, "unsat": 50, "check_estim": 51, "generate_onli": 51, "skip_scikit": 51, "adher": 51, "deleg": [51, 52, 54], "monkei": 51, "patch": 51, "relat": [51, 64], "silent": 51, "tailor": 51, "copi": [52, 54, 65], "ensure_2d": [52, 54], "ensure_ts_arrai": [52, 54], "allow_3d": [52, 54], "allow_nd": [52, 54], "force_all_finit": [52, 54], "multi_output": [52, 54], "ensure_min_sampl": [52, 54], "ensure_min_timestep": [52, 54], "ensure_min_dim": [52, 54], "allow_eo": [52, 54], "y_numer": [52, 54], "y_contigu": [52, 54], "2d": [52, 54, 63, 65, 77], "3d": [52, 54, 63, 65, 77], "finit": [52, 54], "varial": [52, 54], "report": [52, 54, 65], "ravel_1d": [52, 54], "input_nam": [52, 54], "convert": [52, 53, 54, 60, 73], "never": [52, 54, 64], "empti": [52, 54], "attempt": [52, 54], "failur": [52, 54], "convers": [52, 54], "fortran": [52, 54], "style": [52, 54], "noth": [52, 54], "layout": [52, 54], "kept": [52, 54], "trigger": [52, 54], "might": [52, 54], "ravel": [52, 54], "neither": [52, 54], "eo": [52, 54, 55, 59, 61, 63], "nan": [52, 54, 59, 63, 75], "pd": [52, 54], "na": [52, 54], "cannot": [52, 54], "infinit": [52, 54], "row": [52, 54, 63], "disabl": [52, 54, 77], "reject": [52, 54], "enforc": [52, 54], "pass": [52, 54, 65, 73, 75], "messag": [52, 54], "midpointnorm": 53, "vmin": 53, "vmax": 53, "midpoint": 53, "normalis": 53, "autoscal": 53, "autoscale_non": 53, "static": 53, "process_valu": 53, "homogen": 53, "effici": [53, 75], "mask": 53, "is_scalar": 53, "byte": 53, "smaller": 53, "float32": 53, "float64": 53, "place": 53, "oper": [53, 60, 61, 62, 77, 78], "greatli": 53, "improv": [53, 60], "speed": 53, "plot_frequency_domain": 53, "jitter": 53, "sample_spac": 53, "cmap": 53, "dark2": 53, "freqenc": 53, "matplotlib": [53, 61], "line": [53, 78], "colormap": 53, "plot_time_domain": 53, "linewidth": 53, "zorder": 53, "show_legend": 53, "opac": 53, "width": 53, "color": 53, "legend": 53, "check_opt": 54, "option_valu": 54, "valueerror": 54, "check_typ": 54, "target_typ": 54, "variabl": [55, 63, 78], "get_variable_length": 55, "lenght": 55, "is_end_of_seri": [55, 63], "wise": [55, 61, 77], "is_variable_length": 55, "intend": 57, "wildboar": [57, 59, 60, 61, 62, 63, 64, 65, 70, 73, 75, 77], "offer": [57, 60], "univari": [59, 63, 65, 77], "wherea": [59, 68], "context": 59, "multivaret": 59, "howev": [59, 60, 62, 65], "unequ": [59, 61, 64], "ieee754": 59, "treat": 59, "isnan": [59, 63], "wb": 59, "t1": 59, "t2": 59, "t3": 59, "vstack": 59, "pip": [60, 73, 78], "conda": 60, "advanc": 60, "previous": [60, 67, 75, 77], "entri": 60, "hope": 60, "One": [60, 61, 77], "drawback": 60, "asset": 60, "demand": [60, 62], "small": [60, 73], "experi": 60, "brows": 60, "688": 60, "43": 60, "kb": 60, "668": 60, "python": [60, 62, 65, 75, 77, 78], "To": [60, 61, 62, 63, 73, 78], "bit": [60, 78], "conform": 60, "common": [60, 61, 63, 64, 78], "workflow": [60, 65], "comparis": 60, "explanatori": 60, "n_label": 60, "greater": 60, "exactli": [60, 63], "respect": [60, 62, 68], "chain": 60, "large_multivari": 60, "large_multiclass": 60, "0x7f262ce95d00": 60, "predefin": 61, "contrast": 61, "our": 61, "simplifi": [61, 77], "applic": 61, "enumer": [61, 78], "abov": [61, 64, 77], "snippet": [61, 77], "could": 61, "rewritten": 61, "crude": 61, "deal": 61, "longer": 61, "accomplish": [61, 65], "tradit": [61, 64, 73], "argmax": 61, "pyplot": 61, "plt": 61, "fig": 61, "subplot": 61, "nrow": 61, "scatter": 61, "arang": 61, "marker": 61, "set_ylabel": 61, "spokenarabicdigit": 61, "ucrmt": 61, "figur": 61, "loss": 61, "togeth": 62, "compos": 62, "written": 62, "letter": 62, "regular": 62, "alphanumer": 62, "charact": 62, "za": 62, "z0": 62, "revis": 62, "z": [62, 64], "exemplifi": 62, "declar": 62, "hard": 62, "interfac": [62, 77], "endpoint": 62, "http": [62, 78], "www": 62, "org": [62, 78], "repo": 62, "addition": 62, "offlin": 62, "disk": [62, 77], "localappdata": 62, "gnu": [62, 78], "linux": [62, 78], "xdg_cache_hom": 62, "unset": 62, "maco": [62, 78], "librarycach": 62, "fallback": 62, "long": 62, "session": 62, "here": [62, 78], "func": [62, 65], "bundle_url": 62, "example1": 62, "altern": [62, 78], "remot": 62, "sha": 62, "sha1": 62, "hash": 62, "npy": 62, "npz": 62, "save": 62, "savez": 62, "dataset_nam": 62, "_train": 62, "_test": 62, "That": 62, "separ": [62, 73], "embrac": 63, "asarrai": 63, "produc": [63, 67], "rank": 63, "arr": 63, "shorter": [63, 64], "These": 64, "loos": 64, "obei": 64, "inequ": 64, "itself": 64, "distinct": 64, "gt": 64, "ne": 64, "symmetr": 64, "sai": 64, "triangl": [64, 65], "hold": [64, 77], "lt": 64, "shortcut": 64, "through": [64, 78], "three": [64, 65], "categori": [64, 77], "lp": 64, "norm": 64, "shift": 64, "distinguish": 64, "min_": 64, "notat": 64, "_elastic_": 64, "slide": 64, "need": [64, 65, 75, 78], "moreov": 64, "comment": 64, "undefin": 64, "mass": [64, 65], "minkowski": [64, 65], "chebyshev": [64, 65], "angular": [64, 65, 75], "wdtw": [64, 65], "phase": 64, "ddtw": [64, 65], "wddtw": [64, 65], "longest": 64, "lcss": [64, 65, 75], "edit": [64, 78], "gap": 64, "edr": [64, 65, 75], "twe": [64, 65, 75], "edit_penalti": 64, "stiff": [64, 65], "lambda": 64, "nu": 64, "001": 64, "hirschberg": 64, "1977": 64, "problem": [64, 73, 77], "journal": 64, "jacm": 64, "chen": 64, "l": 64, "ng": 64, "2004": 64, "On": 64, "marriag": 64, "30": [64, 65, 77], "thirtieth": 64, "\u00f6zsu": 64, "oria": 64, "2005": 64, "robust": [64, 77], "trajectori": 64, "manag": 64, "stefan": 64, "athitso": 64, "transact": 64, "1425": 64, "1438": 64, "marteau": 64, "2008": 64, "adjust": 64, "analysi": 64, "intellig": 64, "31": [64, 77], "306": 64, "318": 64, "involv": [65, 77], "_euclidean": 65, "51158857": 65, "11514381": 65, "35905618": 65, "mirror": 65, "imag": 65, "halv": 65, "advis": 65, "tri": 65, "smart": 65, "85497117": 65, "96086309": 65, "18777928": 65, "00606825": 65, "23060212": 65, "27419835": 65, "64445581": 65, "38965963": 65, "79102936": 65, "59756098": 65, "47560976": 65, "64634146": 65, "08536585": 65, "03658537": 65, "13414634": 65, "09756098": 65, "25609756": 65, "12195122": 65, "76": 65, "20881199": 65, "73": 65, "62554784": 65, "88": 65, "5536877": 65, "27": 65, "49142159": 65, "56024904": 65, "24551102": 65, "45513015": 65, "81": 65, "60658533": 65, "06099416": 65, "multitud": 65, "reshap": 65, "48683192": 65, "60301954": 65, "34083722": 65, "35954558": 65, "sometim": 65, "_pairs_": 65, "purpos": [65, 77], "elast": 65, "50816474": 65, "3299048": 65, "55193242": 65, "interdimension": 65, "50507001": 65, "90920635": 65, "27646127": 65, "60041068": 65, "60786006": 65, "75645164": 65, "26677146": 65, "24823344": 65, "similarli": 65, "interest": 65, "slice": 65, "want": [65, 78], "avoid": [65, 78], "unwant": 65, "limits_": 65, "queri": 65, "le": 65, "counterpart": 65, "_threshold_": 65, "jag": 65, "66371456": 65, "11914265": 65, "13076667": 65, "99043671": 65, "73408875": 65, "84227457": 65, "2028058": 65, "85972633": 65, "85367621": 65, "86957415": 65, "64041732": 65, "33156061": 65, "56698045": 65, "99489626": 65, "6790517": 65, "16754772": 65, "10973127": 65, "50583639": 65, "def": 65, "pairwise_sd_ful": 65, "stack": 65, "14": 65, "21688671": 65, "83210644": 65, "50884094": 65, "18507116": 65, "11177626": 65, "15611733": 65, "21780536": 65, "13350353": 65, "09710811": 65, "75114125": 65, "13489775": 65, "09806374": 65, "idx": 65, "28": 65, "third": 65, "continu": [65, 77], "investig": 65, "particular": [65, 77], "task": [65, 68, 69, 73, 77], "cpu": 65, "inspect": 65, "theoret": 65, "complex": 65, "magnitud": 65, "97686": 65, "87686": 65, "98368": 65, "98282": 65, "11131": 65, "98268": 65, "95506": 65, "14157": 65, "96041": 65, "94631": 65, "83231": 65, "92207": 65, "55527": 65, "73285": 65, "55538": 65, "41892": 65, "40887": 65, "42778": 65, "00061": 65, "00104": 65, "00064": 65, "wlcss": 65, "00054": 65, "00091": 65, "00056": 65, "00030": 65, "00052": 65, "00032": 65, "00028": 65, "00048": 65, "00029": 65, "00021": 65, "00035": 65, "00022": 65, "00019": 65, "82372": 65, "49048": 65, "79202": 65, "66394": 65, "75967": 65, "67113": 65, "56287": 65, "61275": 65, "56196": 65, "text": 65, "49453": 65, "59627": 65, "49988": 65, "42765": 65, "58025": 65, "43553": 65, "42761": 65, "58982": 65, "43474": 65, "21051": 65, "33659": 65, "21757": 65, "06851": 65, "10321": 65, "07092": 65, "00216": 65, "00413": 65, "00226": 65, "00146": 65, "00278": 65, "00153": 65, "00102": 65, "00195": 65, "00107": 65, "00194": 65, "00106": 65, "00099": 65, "00190": 65, "00189": 65, "00103": 65, "00097": 65, "00185": 65, "00101": 65, "00096": 65, "00182": 65, "00100": 65, "00095": 65, "00181": 65, "00071": 65, "00136": 65, "00074": 65, "rakthanmanon": 65, "campana": 65, "mueen": 65, "batista": 65, "westov": 65, "zhu": 65, "q": 65, "zakaria": 65, "2012": 65, "august": 65, "trillion": 65, "under": [65, 78], "18th": 65, "262": 65, "270": 65, "goal": [67, 77], "unseen": [67, 77], "varieti": 68, "excel": 68, "baselin": 68, "highli": 68, "ridg": 69, "often": [69, 77], "art": 69, "emmott_label": 73, "varitaion": 73, "primari": 73, "focu": [73, 77], "oppos": 73, "perhap": 73, "minority_label": 73, "majority_label": 73, "sophist": 73, "publish": 73, "randomforestclassifi": 73, "four": 73, "75": 73, "quantil": 73, "manual": [74, 78], "enhanc": 75, "someth": 75, "couldn": 75, "now": 75, "miscellan": 75, "didn": 75, "document": [75, 77, 78], "17": 75, "scipi": 75, "3darrai": 75, "issu": [75, 78], "bug": 75, "incorrect": 75, "_distanc": 75, "distancemeasur": 75, "subsequencedistancemeasur": 75, "subsequencemetr": 75, "affect": 75, "cimport": 75, "constructor": 75, "incorrectli": 75, "drop": 75, "undeprec": 75, "old": 75, "migrat": 75, "framework": [75, 77], "forecast": 77, "unfamiliar": 77, "chronolog": 77, "logic": 77, "solv": 77, "concern": 77, "supervis": 77, "nomin": 77, "belong": 77, "unlabel": 77, "essenti": [77, 78], "acquir": 77, "conveni": 77, "commun": 77, "access": [77, 78], "achiev": 77, "opt": 77, "prefer": 77, "irrespect": 77, "floodmodeling1": 77, "uea": 77, "extrins": 77, "tsereg": 77, "clf": 77, "experiment": 77, "300": 77, "clone": [77, 78], "Then": 77, "screen": 77, "despit": 77, "even": 77, "tabluar_x": 77, "design": 77, "interoper": 77, "logisticregress": 77, "bad": 77, "practic": 77, "proper": 77, "reason": 77, "respons": 77, "break": 77, "reevalu": 77, "relianc": 77, "visual": [77, 78], "importance_": 77, "pickl": 77, "repr": 77, "dump": 77, "earlier": 77, "clf_": 77, "older": 77, "newer": 77, "vice": 77, "versa": 77, "secur": 77, "unpickl": 77, "trust": 77, "There": 78, "offici": 78, "pypi": 78, "recommend": 78, "fastest": 78, "platform": 78, "built": 78, "write": 78, "due": 78, "mistak": 78, "incompat": 78, "19": 78, "conflict": 78, "strongli": 78, "virtual": 78, "environ": 78, "venv": 78, "python3": 78, "folder": 78, "activ": 78, "ceavet": 78, "outsid": 78, "scope": 78, "debian": 78, "apt": 78, "homebrew": 78, "brew": 78, "anaconda": 78, "miniconda": 78, "pull": 78, "process": 78, "git": 78, "github": 78, "com": 78, "isaksamsten": 78, "tool": 78, "studio": 78, "command": 78, "cmd": 78, "consol": 78, "distutils_use_sdk": 78, "program": 78, "x86": 78, "microsoft": 78, "buildtool": 78, "vc": 78, "auxiliari": 78, "vcvarsal": 78, "bat": 78, "x64": 78, "xcode": 78, "ubuntu": 78, "dev": 78, "txt": 78, "mode": 78, "eas": 78, "wildboar_build": 78, "architectur": 78}, "objects": {"": [[22, 0, 0, "-", "wildboar"]], "wildboar": [[3, 0, 0, "-", "annotate"], [4, 0, 0, "-", "base"], [7, 0, 0, "-", "datasets"], [12, 0, 0, "-", "distance"], [14, 0, 0, "-", "ensemble"], [21, 0, 0, "-", "explain"], [22, 1, 1, "", "iseos"], [27, 0, 0, "-", "linear_model"], [29, 0, 0, "-", "metrics"], [32, 0, 0, "-", "model_selection"], [43, 0, 0, "-", "transform"], [47, 0, 0, "-", "tree"], [52, 0, 0, "-", "utils"], [56, 0, 0, "-", "version"]], "wildboar.annotate": [[1, 0, 0, "-", "_motifs"], [2, 0, 0, "-", "_segment"], [3, 1, 1, "", "motifs"], [3, 1, 1, "", "segment"]], "wildboar.annotate._motifs": [[1, 1, 1, "", "motifs"]], "wildboar.annotate._segment": [[2, 1, 1, "", "segment"]], "wildboar.base": [[4, 2, 1, "", "BaseEstimator"], [4, 2, 1, "", "CounterfactualMixin"], [4, 2, 1, "", "ExplainerMixin"], [4, 1, 1, "", "is_counterfactual"], [4, 1, 1, "", "is_explainer"]], "wildboar.base.BaseEstimator": [[4, 3, 1, "", "get_metadata_routing"], [4, 3, 1, "", "get_params"], [4, 3, 1, "", "set_params"]], "wildboar.base.CounterfactualMixin": [[4, 3, 1, "", "score"]], "wildboar.base.ExplainerMixin": [[4, 3, 1, "", "fit_explain"], [4, 3, 1, "", "plot"]], "wildboar.datasets": [[7, 2, 1, "", "Bundle"], [7, 2, 1, "", "JSONRepository"], [7, 2, 1, "", "NpBundle"], [7, 2, 1, "", "Repository"], [5, 0, 0, "-", "_filter"], [6, 0, 0, "-", "_repository"], [7, 1, 1, "", "clear_cache"], [7, 1, 1, "", "get_bundles"], [7, 1, 1, "", "get_repository"], [7, 1, 1, "", "install_repository"], [7, 1, 1, "", "list_bundles"], [7, 1, 1, "", "list_collections"], [7, 1, 1, "", "list_datasets"], [7, 1, 1, "", "list_repositories"], [7, 1, 1, "", "load_dataset"], [7, 1, 1, "", "load_datasets"], [7, 1, 1, "", "load_gun_point"], [7, 1, 1, "", "load_synthetic_control"], [7, 1, 1, "", "load_two_lead_ecg"], [8, 0, 0, "-", "outlier"], [9, 0, 0, "-", "preprocess"], [7, 1, 1, "", "refresh_repositories"], [7, 1, 1, "", "set_cache_dir"]], "wildboar.datasets.Bundle": [[7, 3, 1, "", "get_collection"], [7, 3, 1, "", "get_filename"], [7, 3, 1, "", "list"], [7, 3, 1, "", "load"]], "wildboar.datasets.JSONRepository": [[7, 4, 1, "", "download_url"], [7, 3, 1, "", "get_bundle"], [7, 3, 1, "", "get_bundles"], [7, 4, 1, "", "name"], [7, 3, 1, "", "refresh"], [7, 4, 1, "", "version"], [7, 4, 1, "", "wildboar_requires"]], "wildboar.datasets.NpBundle": [[7, 3, 1, "", "get_collection"], [7, 3, 1, "", "get_filename"], [7, 3, 1, "", "list"], [7, 3, 1, "", "load"]], "wildboar.datasets.Repository": [[7, 4, 1, "", "download_url"], [7, 3, 1, "", "get_bundle"], [7, 3, 1, "", "get_bundles"], [7, 4, 1, "", "name"], [7, 3, 1, "", "refresh"], [7, 4, 1, "", "version"], [7, 4, 1, "", "wildboar_requires"]], "wildboar.datasets._filter": [[5, 1, 1, "", "make_dict_filter"], [5, 1, 1, "", "make_filter"], [5, 1, 1, "", "make_list_filter"], [5, 1, 1, "", "make_str_filter"]], "wildboar.datasets._repository": [[6, 2, 1, "", "Bundle"], [6, 2, 1, "", "JSONRepository"], [6, 2, 1, "", "NpBundle"], [6, 2, 1, "", "Repository"]], "wildboar.datasets._repository.Bundle": [[6, 3, 1, "", "get_collection"], [6, 3, 1, "", "get_filename"], [6, 3, 1, "", "list"], [6, 3, 1, "", "load"]], "wildboar.datasets._repository.JSONRepository": [[6, 4, 1, "", "download_url"], [6, 3, 1, "", "get_bundle"], [6, 3, 1, "", "get_bundles"], [6, 4, 1, "", "name"], [6, 3, 1, "", "refresh"], [6, 4, 1, "", "version"], [6, 4, 1, "", "wildboar_requires"]], "wildboar.datasets._repository.NpBundle": [[6, 3, 1, "", "get_collection"], [6, 3, 1, "", "get_filename"], [6, 3, 1, "", "list"], [6, 3, 1, "", "load"]], "wildboar.datasets._repository.Repository": [[6, 4, 1, "", "download_url"], [6, 3, 1, "", "get_bundle"], [6, 3, 1, "", "get_bundles"], [6, 4, 1, "", "name"], [6, 3, 1, "", "refresh"], [6, 4, 1, "", "version"], [6, 4, 1, "", "wildboar_requires"]], "wildboar.datasets.outlier": [[8, 1, 1, "", "density_outliers"], [8, 1, 1, "", "emmott_outliers"], [8, 1, 1, "", "kmeans_outliers"], [8, 1, 1, "", "majority_outliers"], [8, 1, 1, "", "minority_outliers"]], "wildboar.datasets.preprocess": [[9, 1, 1, "", "maxabs_scale"], [9, 1, 1, "", "minmax_scale"], [9, 1, 1, "", "named_preprocess"], [9, 1, 1, "", "standardize"], [9, 1, 1, "", "truncate"]], "wildboar.distance": [[10, 0, 0, "-", "_multi_metric"], [11, 0, 0, "-", "dtw"], [12, 1, 1, "", "matrix_profile"], [12, 1, 1, "", "paired_distance"], [12, 1, 1, "", "paired_subsequence_distance"], [12, 1, 1, "", "paired_subsequence_match"], [12, 1, 1, "", "pairwise_distance"], [12, 1, 1, "", "pairwise_subsequence_distance"], [12, 1, 1, "", "subsequence_match"]], "wildboar.distance.dtw": [[11, 1, 1, "", "ddtw_distance"], [11, 1, 1, "", "dtw_alignment"], [11, 1, 1, "", "dtw_average"], [11, 1, 1, "", "dtw_distance"], [11, 1, 1, "", "dtw_envelop"], [11, 1, 1, "", "dtw_lb_keogh"], [11, 1, 1, "", "dtw_mapping"], [11, 1, 1, "", "jeong_weight"], [11, 1, 1, "", "wddtw_distance"], [11, 1, 1, "", "wdtw_alignment"], [11, 1, 1, "", "wdtw_distance"]], "wildboar.ensemble": [[14, 2, 1, "", "BaggingClassifier"], [14, 2, 1, "", "BaggingRegressor"], [14, 2, 1, "", "BaseBagging"], [14, 2, 1, "", "ExtraShapeletTreesClassifier"], [14, 2, 1, "", "ExtraShapeletTreesRegressor"], [14, 2, 1, "", "IntervalForestClassifier"], [14, 2, 1, "", "IntervalForestRegressor"], [14, 2, 1, "", "IsolationShapeletForest"], [14, 2, 1, "", "PivotForestClassifier"], [14, 2, 1, "", "ProximityForestClassifier"], [14, 2, 1, "", "RocketForestClassifier"], [14, 2, 1, "", "RocketForestRegressor"], [14, 2, 1, "", "ShapeletForestClassifier"], [14, 2, 1, "", "ShapeletForestEmbedding"], [14, 2, 1, "", "ShapeletForestRegressor"], [13, 0, 0, "-", "_ensemble"]], "wildboar.ensemble.BaggingClassifier": [[14, 4, 1, "", "base_estimator_"], [14, 3, 1, "", "decision_function"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "predict_log_proba"], [14, 3, 1, "", "predict_proba"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble.BaggingRegressor": [[14, 4, 1, "", "base_estimator_"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble.BaseBagging": [[14, 4, 1, "", "base_estimator_"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble.ExtraShapeletTreesClassifier": [[14, 4, 1, "", "base_estimator_"], [14, 3, 1, "", "decision_function"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "predict_log_proba"], [14, 3, 1, "", "predict_proba"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble.ExtraShapeletTreesRegressor": [[14, 4, 1, "", "base_estimator_"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble.IntervalForestClassifier": [[14, 4, 1, "", "base_estimator_"], [14, 3, 1, "", "decision_function"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "predict_log_proba"], [14, 3, 1, "", "predict_proba"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble.IntervalForestRegressor": [[14, 4, 1, "", "base_estimator_"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble.IsolationShapeletForest": [[14, 4, 1, "", "base_estimator_"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "fit_predict"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble.PivotForestClassifier": [[14, 4, 1, "", "base_estimator_"], [14, 3, 1, "", "decision_function"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "predict_log_proba"], [14, 3, 1, "", "predict_proba"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble.ProximityForestClassifier": [[14, 4, 1, "", "base_estimator_"], [14, 3, 1, "", "decision_function"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "predict_log_proba"], [14, 3, 1, "", "predict_proba"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble.RocketForestClassifier": [[14, 4, 1, "", "base_estimator_"], [14, 3, 1, "", "decision_function"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "predict_log_proba"], [14, 3, 1, "", "predict_proba"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble.RocketForestRegressor": [[14, 4, 1, "", "base_estimator_"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble.ShapeletForestClassifier": [[14, 4, 1, "", "base_estimator_"], [14, 3, 1, "", "decision_function"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "predict_log_proba"], [14, 3, 1, "", "predict_proba"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble.ShapeletForestEmbedding": [[14, 4, 1, "", "base_estimator_"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble.ShapeletForestRegressor": [[14, 4, 1, "", "base_estimator_"], [14, 4, 1, "", "estimators_samples_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble": [[13, 2, 1, "", "BaggingClassifier"], [13, 2, 1, "", "BaggingRegressor"], [13, 2, 1, "", "BaseBagging"], [13, 2, 1, "", "BaseForestClassifier"], [13, 2, 1, "", "BaseForestRegressor"], [13, 2, 1, "", "BaseShapeletForestClassifier"], [13, 2, 1, "", "BaseShapeletForestRegressor"], [13, 2, 1, "", "ExtraShapeletTreesClassifier"], [13, 2, 1, "", "ExtraShapeletTreesRegressor"], [13, 2, 1, "", "ForestMixin"], [13, 2, 1, "", "IntervalForestClassifier"], [13, 2, 1, "", "IntervalForestRegressor"], [13, 2, 1, "", "IsolationShapeletForest"], [13, 2, 1, "", "PivotForestClassifier"], [13, 2, 1, "", "ProximityForestClassifier"], [13, 2, 1, "", "RocketForestClassifier"], [13, 2, 1, "", "RocketForestRegressor"], [13, 2, 1, "", "ShapeletForestClassifier"], [13, 2, 1, "", "ShapeletForestEmbedding"], [13, 2, 1, "", "ShapeletForestRegressor"]], "wildboar.ensemble._ensemble.BaggingClassifier": [[13, 4, 1, "", "base_estimator_"], [13, 3, 1, "", "decision_function"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "predict_log_proba"], [13, 3, 1, "", "predict_proba"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaggingRegressor": [[13, 4, 1, "", "base_estimator_"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaseBagging": [[13, 4, 1, "", "base_estimator_"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaseForestClassifier": [[13, 4, 1, "", "base_estimator_"], [13, 3, 1, "", "decision_function"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "predict_log_proba"], [13, 3, 1, "", "predict_proba"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaseForestRegressor": [[13, 4, 1, "", "base_estimator_"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaseShapeletForestClassifier": [[13, 4, 1, "", "base_estimator_"], [13, 3, 1, "", "decision_function"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "predict_log_proba"], [13, 3, 1, "", "predict_proba"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaseShapeletForestRegressor": [[13, 4, 1, "", "base_estimator_"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier": [[13, 4, 1, "", "base_estimator_"], [13, 3, 1, "", "decision_function"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "predict_log_proba"], [13, 3, 1, "", "predict_proba"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor": [[13, 4, 1, "", "base_estimator_"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.IntervalForestClassifier": [[13, 4, 1, "", "base_estimator_"], [13, 3, 1, "", "decision_function"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "predict_log_proba"], [13, 3, 1, "", "predict_proba"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.IntervalForestRegressor": [[13, 4, 1, "", "base_estimator_"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.IsolationShapeletForest": [[13, 4, 1, "", "base_estimator_"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "fit_predict"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.PivotForestClassifier": [[13, 4, 1, "", "base_estimator_"], [13, 3, 1, "", "decision_function"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "predict_log_proba"], [13, 3, 1, "", "predict_proba"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ProximityForestClassifier": [[13, 4, 1, "", "base_estimator_"], [13, 3, 1, "", "decision_function"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "predict_log_proba"], [13, 3, 1, "", "predict_proba"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.RocketForestClassifier": [[13, 4, 1, "", "base_estimator_"], [13, 3, 1, "", "decision_function"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "predict_log_proba"], [13, 3, 1, "", "predict_proba"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.RocketForestRegressor": [[13, 4, 1, "", "base_estimator_"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ShapeletForestClassifier": [[13, 4, 1, "", "base_estimator_"], [13, 3, 1, "", "decision_function"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "predict_log_proba"], [13, 3, 1, "", "predict_proba"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ShapeletForestEmbedding": [[13, 4, 1, "", "base_estimator_"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ShapeletForestRegressor": [[13, 4, 1, "", "base_estimator_"], [13, 4, 1, "", "estimators_samples_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.explain": [[21, 2, 1, "", "AmplitudeImportance"], [21, 2, 1, "", "IntervalImportance"], [21, 2, 1, "", "ShapeletImportance"], [15, 0, 0, "-", "_importance"], [20, 0, 0, "-", "counterfactual"], [21, 1, 1, "", "plot_importances"]], "wildboar.explain.AmplitudeImportance": [[21, 3, 1, "", "fit_explain"], [21, 3, 1, "", "get_metadata_routing"], [21, 3, 1, "", "get_params"], [21, 3, 1, "", "plot"], [21, 3, 1, "", "set_params"]], "wildboar.explain.IntervalImportance": [[21, 3, 1, "", "fit_explain"], [21, 3, 1, "", "get_metadata_routing"], [21, 3, 1, "", "get_params"], [21, 3, 1, "", "plot"], [21, 3, 1, "", "set_params"]], "wildboar.explain.ShapeletImportance": [[21, 3, 1, "", "fit_explain"], [21, 3, 1, "", "get_metadata_routing"], [21, 3, 1, "", "get_params"], [21, 3, 1, "", "plot"], [21, 3, 1, "", "set_params"]], "wildboar.explain._importance": [[15, 2, 1, "", "AmplitudeImportance"], [15, 2, 1, "", "IntervalImportance"], [15, 2, 1, "", "PermuteImportance"], [15, 2, 1, "", "ShapeletImportance"], [15, 1, 1, "", "plot_importances"]], "wildboar.explain._importance.AmplitudeImportance": [[15, 3, 1, "", "fit_explain"], [15, 3, 1, "", "get_metadata_routing"], [15, 3, 1, "", "get_params"], [15, 3, 1, "", "plot"], [15, 3, 1, "", "set_params"]], "wildboar.explain._importance.IntervalImportance": [[15, 3, 1, "", "fit_explain"], [15, 3, 1, "", "get_metadata_routing"], [15, 3, 1, "", "get_params"], [15, 3, 1, "", "plot"], [15, 3, 1, "", "set_params"]], "wildboar.explain._importance.PermuteImportance": [[15, 3, 1, "", "get_metadata_routing"], [15, 3, 1, "", "get_params"], [15, 3, 1, "", "set_params"]], "wildboar.explain._importance.ShapeletImportance": [[15, 3, 1, "", "fit_explain"], [15, 3, 1, "", "get_metadata_routing"], [15, 3, 1, "", "get_params"], [15, 3, 1, "", "plot"], [15, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual": [[20, 2, 1, "", "KNeighborsCounterfactual"], [20, 2, 1, "", "PrototypeCounterfactual"], [20, 2, 1, "", "ShapeletForestCounterfactual"], [16, 0, 0, "-", "_helper"], [17, 0, 0, "-", "_nn"], [18, 0, 0, "-", "_proto"], [19, 0, 0, "-", "_sf"], [20, 1, 1, "", "counterfactuals"], [20, 1, 1, "", "proximity"]], "wildboar.explain.counterfactual.KNeighborsCounterfactual": [[20, 3, 1, "", "fit_explain"], [20, 3, 1, "", "get_metadata_routing"], [20, 3, 1, "", "get_params"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "score"], [20, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual.PrototypeCounterfactual": [[20, 3, 1, "", "fit_explain"], [20, 3, 1, "", "get_metadata_routing"], [20, 3, 1, "", "get_params"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "score"], [20, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual.ShapeletForestCounterfactual": [[20, 3, 1, "", "fit_explain"], [20, 3, 1, "", "get_metadata_routing"], [20, 3, 1, "", "get_params"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "score"], [20, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual._helper": [[16, 1, 1, "", "counterfactuals"]], "wildboar.explain.counterfactual._nn": [[17, 2, 1, "", "KNeighborsCounterfactual"]], "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual": [[17, 3, 1, "", "fit_explain"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "plot"], [17, 3, 1, "", "score"], [17, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual._proto": [[18, 2, 1, "", "DynamicTimeWarpTransform"], [18, 2, 1, "", "EuclideanTransform"], [18, 2, 1, "", "KNearestPrototypeSampler"], [18, 2, 1, "", "KNearestShapeletPrototypeSampler"], [18, 2, 1, "", "MetricTransform"], [18, 2, 1, "", "PredictEvaluator"], [18, 2, 1, "", "ProbabilityEvaluator"], [18, 2, 1, "", "PrototypeCounterfactual"], [18, 2, 1, "", "PrototypeSampler"], [18, 2, 1, "", "ShapeletPrototypeSampler"], [18, 2, 1, "", "TargetEvaluator"], [18, 2, 1, "", "UniformPrototypeSampler"], [18, 2, 1, "", "WeightedDynamicTimeWarpTransform"]], "wildboar.explain.counterfactual._proto.DynamicTimeWarpTransform": [[18, 3, 1, "", "move"]], "wildboar.explain.counterfactual._proto.EuclideanTransform": [[18, 3, 1, "", "move"]], "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler": [[18, 3, 1, "", "move"], [18, 3, 1, "", "nearest_index"], [18, 3, 1, "", "sample"], [18, 3, 1, "", "sample_move"]], "wildboar.explain.counterfactual._proto.KNearestShapeletPrototypeSampler": [[18, 3, 1, "", "move"], [18, 3, 1, "", "sample"], [18, 3, 1, "", "sample_move"]], "wildboar.explain.counterfactual._proto.MetricTransform": [[18, 3, 1, "", "move"]], "wildboar.explain.counterfactual._proto.PredictEvaluator": [[18, 3, 1, "", "is_counterfactual"]], "wildboar.explain.counterfactual._proto.ProbabilityEvaluator": [[18, 3, 1, "", "is_counterfactual"]], "wildboar.explain.counterfactual._proto.PrototypeCounterfactual": [[18, 3, 1, "", "fit_explain"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "plot"], [18, 3, 1, "", "score"], [18, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual._proto.PrototypeSampler": [[18, 3, 1, "", "move"], [18, 3, 1, "", "sample"], [18, 3, 1, "", "sample_move"]], "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler": [[18, 3, 1, "", "move"], [18, 3, 1, "", "sample"], [18, 3, 1, "", "sample_move"], [18, 3, 1, "", "sample_shapelet"]], "wildboar.explain.counterfactual._proto.TargetEvaluator": [[18, 3, 1, "", "is_counterfactual"]], "wildboar.explain.counterfactual._proto.UniformPrototypeSampler": [[18, 3, 1, "", "move"], [18, 3, 1, "", "sample"], [18, 3, 1, "", "sample_move"]], "wildboar.explain.counterfactual._proto.WeightedDynamicTimeWarpTransform": [[18, 3, 1, "", "move"]], "wildboar.explain.counterfactual._sf": [[19, 2, 1, "", "ShapeletForestCounterfactual"]], "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual": [[19, 3, 1, "", "fit_explain"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "plot"], [19, 3, 1, "", "score"], [19, 3, 1, "", "set_params"]], "wildboar.linear_model": [[27, 2, 1, "", "HydraClassifier"], [27, 2, 1, "", "RandomShapeletClassifier"], [27, 2, 1, "", "RandomShapeletRegressor"], [27, 2, 1, "", "RocketClassifier"], [27, 2, 1, "", "RocketRegressor"], [23, 0, 0, "-", "_hydra"], [24, 0, 0, "-", "_rocket"], [25, 0, 0, "-", "_shapelet"], [26, 0, 0, "-", "_transform"]], "wildboar.linear_model.HydraClassifier": [[27, 3, 1, "", "get_metadata_routing"], [27, 3, 1, "", "get_params"], [27, 3, 1, "", "score"], [27, 3, 1, "", "set_params"]], "wildboar.linear_model.RandomShapeletClassifier": [[27, 3, 1, "", "get_metadata_routing"], [27, 3, 1, "", "get_params"], [27, 3, 1, "", "score"], [27, 3, 1, "", "set_params"]], "wildboar.linear_model.RandomShapeletRegressor": [[27, 3, 1, "", "get_metadata_routing"], [27, 3, 1, "", "get_params"], [27, 3, 1, "", "score"], [27, 3, 1, "", "set_params"]], "wildboar.linear_model.RocketClassifier": [[27, 3, 1, "", "get_metadata_routing"], [27, 3, 1, "", "get_params"], [27, 3, 1, "", "score"], [27, 3, 1, "", "set_params"]], "wildboar.linear_model.RocketRegressor": [[27, 3, 1, "", "get_metadata_routing"], [27, 3, 1, "", "get_params"], [27, 3, 1, "", "score"], [27, 3, 1, "", "set_params"]], "wildboar.linear_model._hydra": [[23, 2, 1, "", "HydraClassifier"]], "wildboar.linear_model._hydra.HydraClassifier": [[23, 3, 1, "", "get_metadata_routing"], [23, 3, 1, "", "get_params"], [23, 3, 1, "", "score"], [23, 3, 1, "", "set_params"]], "wildboar.linear_model._rocket": [[24, 2, 1, "", "RocketClassifier"], [24, 2, 1, "", "RocketRegressor"]], "wildboar.linear_model._rocket.RocketClassifier": [[24, 3, 1, "", "get_metadata_routing"], [24, 3, 1, "", "get_params"], [24, 3, 1, "", "score"], [24, 3, 1, "", "set_params"]], "wildboar.linear_model._rocket.RocketRegressor": [[24, 3, 1, "", "get_metadata_routing"], [24, 3, 1, "", "get_params"], [24, 3, 1, "", "score"], [24, 3, 1, "", "set_params"]], "wildboar.linear_model._shapelet": [[25, 2, 1, "", "RandomShapeletClassifier"], [25, 2, 1, "", "RandomShapeletRegressor"]], "wildboar.linear_model._shapelet.RandomShapeletClassifier": [[25, 3, 1, "", "get_metadata_routing"], [25, 3, 1, "", "get_params"], [25, 3, 1, "", "score"], [25, 3, 1, "", "set_params"]], "wildboar.linear_model._shapelet.RandomShapeletRegressor": [[25, 3, 1, "", "get_metadata_routing"], [25, 3, 1, "", "get_params"], [25, 3, 1, "", "score"], [25, 3, 1, "", "set_params"]], "wildboar.linear_model._transform": [[26, 2, 1, "", "BaseTransformClassifier"], [26, 2, 1, "", "BaseTransformEstimator"], [26, 2, 1, "", "BaseTransformRegressor"], [26, 2, 1, "", "TransformRidgeCV"], [26, 2, 1, "", "TransformRidgeClassifierCV"]], "wildboar.linear_model._transform.BaseTransformClassifier": [[26, 3, 1, "", "get_metadata_routing"], [26, 3, 1, "", "get_params"], [26, 3, 1, "", "score"], [26, 3, 1, "", "set_params"]], "wildboar.linear_model._transform.BaseTransformEstimator": [[26, 3, 1, "", "get_metadata_routing"], [26, 3, 1, "", "get_params"], [26, 3, 1, "", "set_params"]], "wildboar.linear_model._transform.BaseTransformRegressor": [[26, 3, 1, "", "get_metadata_routing"], [26, 3, 1, "", "get_params"], [26, 3, 1, "", "score"], [26, 3, 1, "", "set_params"]], "wildboar.linear_model._transform.TransformRidgeCV": [[26, 3, 1, "", "get_metadata_routing"], [26, 3, 1, "", "get_params"], [26, 3, 1, "", "score"], [26, 3, 1, "", "set_params"]], "wildboar.linear_model._transform.TransformRidgeClassifierCV": [[26, 3, 1, "", "get_metadata_routing"], [26, 3, 1, "", "get_params"], [26, 3, 1, "", "score"], [26, 3, 1, "", "set_params"]], "wildboar.metrics": [[28, 0, 0, "-", "_counterfactual"], [29, 1, 1, "", "compactness_score"], [29, 1, 1, "", "plausability_score"], [29, 1, 1, "", "proximity_score"], [29, 1, 1, "", "redudancy_score"], [29, 1, 1, "", "relative_proximity_score"], [29, 1, 1, "", "validity_score"]], "wildboar.metrics._counterfactual": [[28, 1, 1, "", "compactness_score"], [28, 1, 1, "", "plausability_score"], [28, 1, 1, "", "proximity_score"], [28, 1, 1, "", "redudancy_score"], [28, 1, 1, "", "relative_proximity_score"], [28, 1, 1, "", "validity_score"]], "wildboar.model_selection": [[32, 2, 1, "", "RepeatedOutlierSplit"], [30, 0, 0, "-", "_cv"], [31, 0, 0, "-", "_outlier"], [32, 1, 1, "", "outlier_train_test_split"]], "wildboar.model_selection.RepeatedOutlierSplit": [[32, 3, 1, "", "get_n_splits"], [32, 3, 1, "", "split"]], "wildboar.model_selection._cv": [[30, 2, 1, "", "RepeatedOutlierSplit"]], "wildboar.model_selection._cv.RepeatedOutlierSplit": [[30, 3, 1, "", "get_n_splits"], [30, 3, 1, "", "split"]], "wildboar.model_selection._outlier": [[31, 1, 1, "", "outlier_train_test_split"]], "wildboar.transform": [[43, 2, 1, "", "DiffTransform"], [43, 2, 1, "", "FeatureTransform"], [43, 2, 1, "", "HydraTransform"], [43, 2, 1, "", "IntervalTransform"], [43, 2, 1, "", "MatrixProfileTransform"], [43, 2, 1, "", "PAA"], [43, 2, 1, "", "PivotTransform"], [43, 2, 1, "", "ProximityTransform"], [43, 2, 1, "", "RandomShapeletTransform"], [43, 2, 1, "", "RocketTransform"], [43, 2, 1, "", "SAX"], [33, 0, 0, "-", "_base"], [34, 0, 0, "-", "_conv"], [35, 0, 0, "-", "_diff"], [36, 0, 0, "-", "_hydra"], [37, 0, 0, "-", "_interval"], [38, 0, 0, "-", "_matrix_profile"], [39, 0, 0, "-", "_pivot"], [40, 0, 0, "-", "_rocket"], [41, 0, 0, "-", "_sax"], [42, 0, 0, "-", "_shapelet"], [43, 1, 1, "", "convolve"], [43, 1, 1, "", "piecewice_aggregate_approximation"], [43, 1, 1, "", "symbolic_aggregate_approximation"]], "wildboar.transform.DiffTransform": [[43, 3, 1, "", "fit_transform"], [43, 3, 1, "", "get_metadata_routing"], [43, 3, 1, "", "get_params"], [43, 3, 1, "", "set_output"], [43, 3, 1, "", "set_params"]], "wildboar.transform.FeatureTransform": [[43, 3, 1, "", "fit"], [43, 3, 1, "", "fit_transform"], [43, 3, 1, "", "get_metadata_routing"], [43, 3, 1, "", "get_params"], [43, 3, 1, "", "set_output"], [43, 3, 1, "", "set_params"], [43, 3, 1, "", "transform"]], "wildboar.transform.HydraTransform": [[43, 3, 1, "", "fit"], [43, 3, 1, "", "fit_transform"], [43, 3, 1, "", "get_metadata_routing"], [43, 3, 1, "", "get_params"], [43, 3, 1, "", "set_output"], [43, 3, 1, "", "set_params"], [43, 3, 1, "", "transform"]], "wildboar.transform.IntervalTransform": [[43, 3, 1, "", "fit"], [43, 3, 1, "", "fit_transform"], [43, 3, 1, "", "get_metadata_routing"], [43, 3, 1, "", "get_params"], [43, 3, 1, "", "set_output"], [43, 3, 1, "", "set_params"], [43, 3, 1, "", "transform"]], "wildboar.transform.MatrixProfileTransform": [[43, 3, 1, "", "fit"], [43, 3, 1, "", "fit_transform"], [43, 3, 1, "", "get_metadata_routing"], [43, 3, 1, "", "get_params"], [43, 3, 1, "", "set_output"], [43, 3, 1, "", "set_params"], [43, 3, 1, "", "transform"]], "wildboar.transform.PAA": [[43, 3, 1, "", "fit_transform"], [43, 3, 1, "", "get_metadata_routing"], [43, 3, 1, "", "get_params"], [43, 3, 1, "", "set_output"], [43, 3, 1, "", "set_params"]], "wildboar.transform.PivotTransform": [[43, 3, 1, "", "fit"], [43, 3, 1, "", "fit_transform"], [43, 3, 1, "", "get_metadata_routing"], [43, 3, 1, "", "get_params"], [43, 3, 1, "", "set_output"], [43, 3, 1, "", "set_params"], [43, 3, 1, "", "transform"]], "wildboar.transform.ProximityTransform": [[43, 3, 1, "", "fit_transform"], [43, 3, 1, "", "get_metadata_routing"], [43, 3, 1, "", "get_params"], [43, 3, 1, "", "set_output"], [43, 3, 1, "", "set_params"]], "wildboar.transform.RandomShapeletTransform": [[43, 3, 1, "", "fit"], [43, 3, 1, "", "fit_transform"], [43, 3, 1, "", "get_metadata_routing"], [43, 3, 1, "", "get_params"], [43, 3, 1, "", "set_output"], [43, 3, 1, "", "set_params"], [43, 3, 1, "", "transform"]], "wildboar.transform.RocketTransform": [[43, 3, 1, "", "fit"], [43, 3, 1, "", "fit_transform"], [43, 3, 1, "", "get_metadata_routing"], [43, 3, 1, "", "get_params"], [43, 3, 1, "", "set_output"], [43, 3, 1, "", "set_params"], [43, 3, 1, "", "transform"]], "wildboar.transform.SAX": [[43, 3, 1, "", "fit_transform"], [43, 3, 1, "", "get_metadata_routing"], [43, 3, 1, "", "get_params"], [43, 3, 1, "", "set_output"], [43, 3, 1, "", "set_params"]], "wildboar.transform._base": [[33, 2, 1, "", "BaseAttributeTransform"]], "wildboar.transform._base.BaseAttributeTransform": [[33, 3, 1, "", "fit"], [33, 3, 1, "", "fit_transform"], [33, 3, 1, "", "get_metadata_routing"], [33, 3, 1, "", "get_params"], [33, 3, 1, "", "set_output"], [33, 3, 1, "", "set_params"], [33, 3, 1, "", "transform"]], "wildboar.transform._conv": [[34, 1, 1, "", "convolve"]], "wildboar.transform._diff": [[35, 2, 1, "", "DiffTransform"]], "wildboar.transform._diff.DiffTransform": [[35, 3, 1, "", "fit_transform"], [35, 3, 1, "", "get_metadata_routing"], [35, 3, 1, "", "get_params"], [35, 3, 1, "", "set_output"], [35, 3, 1, "", "set_params"]], "wildboar.transform._hydra": [[36, 2, 1, "", "HydraTransform"]], "wildboar.transform._hydra.HydraTransform": [[36, 3, 1, "", "fit"], [36, 3, 1, "", "fit_transform"], [36, 3, 1, "", "get_metadata_routing"], [36, 3, 1, "", "get_params"], [36, 3, 1, "", "set_output"], [36, 3, 1, "", "set_params"], [36, 3, 1, "", "transform"]], "wildboar.transform._interval": [[37, 2, 1, "", "FeatureTransform"], [37, 2, 1, "", "IntervalMixin"], [37, 2, 1, "", "IntervalTransform"]], "wildboar.transform._interval.FeatureTransform": [[37, 3, 1, "", "fit"], [37, 3, 1, "", "fit_transform"], [37, 3, 1, "", "get_metadata_routing"], [37, 3, 1, "", "get_params"], [37, 3, 1, "", "set_output"], [37, 3, 1, "", "set_params"], [37, 3, 1, "", "transform"]], "wildboar.transform._interval.IntervalTransform": [[37, 3, 1, "", "fit"], [37, 3, 1, "", "fit_transform"], [37, 3, 1, "", "get_metadata_routing"], [37, 3, 1, "", "get_params"], [37, 3, 1, "", "set_output"], [37, 3, 1, "", "set_params"], [37, 3, 1, "", "transform"]], "wildboar.transform._matrix_profile": [[38, 2, 1, "", "MatrixProfileTransform"]], "wildboar.transform._matrix_profile.MatrixProfileTransform": [[38, 3, 1, "", "fit"], [38, 3, 1, "", "fit_transform"], [38, 3, 1, "", "get_metadata_routing"], [38, 3, 1, "", "get_params"], [38, 3, 1, "", "set_output"], [38, 3, 1, "", "set_params"], [38, 3, 1, "", "transform"]], "wildboar.transform._pivot": [[39, 2, 1, "", "PivotMixin"], [39, 2, 1, "", "PivotTransform"], [39, 2, 1, "", "ProximityTransform"]], "wildboar.transform._pivot.PivotTransform": [[39, 3, 1, "", "fit"], [39, 3, 1, "", "fit_transform"], [39, 3, 1, "", "get_metadata_routing"], [39, 3, 1, "", "get_params"], [39, 3, 1, "", "set_output"], [39, 3, 1, "", "set_params"], [39, 3, 1, "", "transform"]], "wildboar.transform._pivot.ProximityTransform": [[39, 3, 1, "", "fit_transform"], [39, 3, 1, "", "get_metadata_routing"], [39, 3, 1, "", "get_params"], [39, 3, 1, "", "set_output"], [39, 3, 1, "", "set_params"]], "wildboar.transform._rocket": [[40, 2, 1, "", "RocketMixin"], [40, 2, 1, "", "RocketTransform"]], "wildboar.transform._rocket.RocketTransform": [[40, 3, 1, "", "fit"], [40, 3, 1, "", "fit_transform"], [40, 3, 1, "", "get_metadata_routing"], [40, 3, 1, "", "get_params"], [40, 3, 1, "", "set_output"], [40, 3, 1, "", "set_params"], [40, 3, 1, "", "transform"]], "wildboar.transform._sax": [[41, 2, 1, "", "Binning"], [41, 2, 1, "", "NormalBinning"], [41, 2, 1, "", "PAA"], [41, 2, 1, "", "SAX"], [41, 2, 1, "", "UniformBinning"], [41, 1, 1, "", "piecewice_aggregate_approximation"], [41, 1, 1, "", "symbolic_aggregate_approximation"]], "wildboar.transform._sax.Binning": [[41, 3, 1, "", "get_thresholds"], [41, 3, 1, "", "scale"]], "wildboar.transform._sax.NormalBinning": [[41, 3, 1, "", "get_thresholds"], [41, 3, 1, "", "scale"]], "wildboar.transform._sax.PAA": [[41, 3, 1, "", "fit_transform"], [41, 3, 1, "", "get_metadata_routing"], [41, 3, 1, "", "get_params"], [41, 3, 1, "", "set_output"], [41, 3, 1, "", "set_params"]], "wildboar.transform._sax.SAX": [[41, 3, 1, "", "fit_transform"], [41, 3, 1, "", "get_metadata_routing"], [41, 3, 1, "", "get_params"], [41, 3, 1, "", "set_output"], [41, 3, 1, "", "set_params"]], "wildboar.transform._sax.UniformBinning": [[41, 3, 1, "", "get_thresholds"], [41, 3, 1, "", "scale"]], "wildboar.transform._shapelet": [[42, 2, 1, "", "RandomShapeletTransform"], [42, 2, 1, "", "ShapeletMixin"]], "wildboar.transform._shapelet.RandomShapeletTransform": [[42, 3, 1, "", "fit"], [42, 3, 1, "", "fit_transform"], [42, 3, 1, "", "get_metadata_routing"], [42, 3, 1, "", "get_params"], [42, 3, 1, "", "set_output"], [42, 3, 1, "", "set_params"], [42, 3, 1, "", "transform"]], "wildboar.tree": [[47, 2, 1, "", "ExtraShapeletTreeClassifier"], [47, 2, 1, "", "ExtraShapeletTreeRegressor"], [47, 2, 1, "", "IntervalTreeClassifier"], [47, 2, 1, "", "IntervalTreeRegressor"], [47, 2, 1, "", "PivotTreeClassifier"], [47, 2, 1, "", "ProximityTreeClassifier"], [47, 2, 1, "", "RocketTreeClassifier"], [47, 2, 1, "", "RocketTreeRegressor"], [47, 2, 1, "", "ShapeletTreeClassifier"], [47, 2, 1, "", "ShapeletTreeRegressor"], [44, 0, 0, "-", "_base"], [45, 0, 0, "-", "_ptree"], [46, 0, 0, "-", "_tree"]], "wildboar.tree.ExtraShapeletTreeClassifier": [[47, 3, 1, "", "apply"], [47, 3, 1, "", "decision_path"], [47, 3, 1, "", "fit"], [47, 3, 1, "", "get_metadata_routing"], [47, 3, 1, "", "get_params"], [47, 3, 1, "", "predict"], [47, 3, 1, "", "predict_proba"], [47, 3, 1, "", "score"], [47, 3, 1, "", "set_params"]], "wildboar.tree.ExtraShapeletTreeRegressor": [[47, 3, 1, "", "apply"], [47, 3, 1, "", "decision_path"], [47, 3, 1, "", "fit"], [47, 3, 1, "", "get_metadata_routing"], [47, 3, 1, "", "get_params"], [47, 3, 1, "", "predict"], [47, 3, 1, "", "score"], [47, 3, 1, "", "set_params"]], "wildboar.tree.IntervalTreeClassifier": [[47, 3, 1, "", "apply"], [47, 3, 1, "", "decision_path"], [47, 3, 1, "", "fit"], [47, 3, 1, "", "get_metadata_routing"], [47, 3, 1, "", "get_params"], [47, 3, 1, "", "predict"], [47, 3, 1, "", "predict_proba"], [47, 3, 1, "", "score"], [47, 3, 1, "", "set_params"]], "wildboar.tree.IntervalTreeRegressor": [[47, 3, 1, "", "apply"], [47, 3, 1, "", "decision_path"], [47, 3, 1, "", "fit"], [47, 3, 1, "", "get_metadata_routing"], [47, 3, 1, "", "get_params"], [47, 3, 1, "", "predict"], [47, 3, 1, "", "score"], [47, 3, 1, "", "set_params"]], "wildboar.tree.PivotTreeClassifier": [[47, 3, 1, "", "apply"], [47, 3, 1, "", "decision_path"], [47, 3, 1, "", "fit"], [47, 3, 1, "", "get_metadata_routing"], [47, 3, 1, "", "get_params"], [47, 3, 1, "", "predict"], [47, 3, 1, "", "predict_proba"], [47, 3, 1, "", "score"], [47, 3, 1, "", "set_params"]], "wildboar.tree.ProximityTreeClassifier": [[47, 3, 1, "", "apply"], [47, 3, 1, "", "decision_path"], [47, 3, 1, "", "fit"], [47, 3, 1, "", "get_metadata_routing"], [47, 3, 1, "", "get_params"], [47, 3, 1, "", "predict"], [47, 3, 1, "", "predict_proba"], [47, 3, 1, "", "score"], [47, 3, 1, "", "set_params"]], "wildboar.tree.RocketTreeClassifier": [[47, 3, 1, "", "apply"], [47, 3, 1, "", "decision_path"], [47, 3, 1, "", "fit"], [47, 3, 1, "", "get_metadata_routing"], [47, 3, 1, "", "get_params"], [47, 3, 1, "", "predict"], [47, 3, 1, "", "predict_proba"], [47, 3, 1, "", "score"], [47, 3, 1, "", "set_params"]], "wildboar.tree.RocketTreeRegressor": [[47, 3, 1, "", "apply"], [47, 3, 1, "", "decision_path"], [47, 3, 1, "", "fit"], [47, 3, 1, "", "get_metadata_routing"], [47, 3, 1, "", "get_params"], [47, 3, 1, "", "predict"], [47, 3, 1, "", "score"], [47, 3, 1, "", "set_params"]], "wildboar.tree.ShapeletTreeClassifier": [[47, 3, 1, "", "apply"], [47, 3, 1, "", "decision_path"], [47, 3, 1, "", "fit"], [47, 3, 1, "", "get_metadata_routing"], [47, 3, 1, "", "get_params"], [47, 3, 1, "", "predict"], [47, 3, 1, "", "predict_proba"], [47, 3, 1, "", "score"], [47, 3, 1, "", "set_params"]], "wildboar.tree.ShapeletTreeRegressor": [[47, 3, 1, "", "apply"], [47, 3, 1, "", "decision_path"], [47, 3, 1, "", "fit"], [47, 3, 1, "", "get_metadata_routing"], [47, 3, 1, "", "get_params"], [47, 3, 1, "", "predict"], [47, 3, 1, "", "score"], [47, 3, 1, "", "set_params"]], "wildboar.tree._base": [[44, 2, 1, "", "BaseTree"], [44, 2, 1, "", "BaseTreeClassifier"], [44, 2, 1, "", "BaseTreeRegressor"]], "wildboar.tree._base.BaseTree": [[44, 3, 1, "", "apply"], [44, 3, 1, "", "decision_path"], [44, 3, 1, "", "get_metadata_routing"], [44, 3, 1, "", "get_params"], [44, 3, 1, "", "set_params"]], "wildboar.tree._base.BaseTreeClassifier": [[44, 3, 1, "", "apply"], [44, 3, 1, "", "decision_path"], [44, 3, 1, "", "fit"], [44, 3, 1, "", "get_metadata_routing"], [44, 3, 1, "", "get_params"], [44, 3, 1, "", "predict"], [44, 3, 1, "", "predict_proba"], [44, 3, 1, "", "score"], [44, 3, 1, "", "set_params"]], "wildboar.tree._base.BaseTreeRegressor": [[44, 3, 1, "", "apply"], [44, 3, 1, "", "decision_path"], [44, 3, 1, "", "fit"], [44, 3, 1, "", "get_metadata_routing"], [44, 3, 1, "", "get_params"], [44, 3, 1, "", "predict"], [44, 3, 1, "", "score"], [44, 3, 1, "", "set_params"]], "wildboar.tree._ptree": [[45, 2, 1, "", "ProximityTreeClassifier"]], "wildboar.tree._ptree.ProximityTreeClassifier": [[45, 3, 1, "", "apply"], [45, 3, 1, "", "decision_path"], [45, 3, 1, "", "fit"], [45, 3, 1, "", "get_metadata_routing"], [45, 3, 1, "", "get_params"], [45, 3, 1, "", "predict"], [45, 3, 1, "", "predict_proba"], [45, 3, 1, "", "score"], [45, 3, 1, "", "set_params"]], "wildboar.tree._tree": [[46, 2, 1, "", "BaseFeatureTreeClassifier"], [46, 2, 1, "", "BaseFeatureTreeRegressor"], [46, 2, 1, "", "ExtraShapeletTreeClassifier"], [46, 2, 1, "", "ExtraShapeletTreeRegressor"], [46, 2, 1, "", "IntervalTreeClassifier"], [46, 2, 1, "", "IntervalTreeRegressor"], [46, 2, 1, "", "PivotTreeClassifier"], [46, 2, 1, "", "RocketTreeClassifier"], [46, 2, 1, "", "RocketTreeRegressor"], [46, 2, 1, "", "ShapeletTreeClassifier"], [46, 2, 1, "", "ShapeletTreeRegressor"]], "wildboar.tree._tree.BaseFeatureTreeClassifier": [[46, 3, 1, "", "apply"], [46, 3, 1, "", "decision_path"], [46, 3, 1, "", "fit"], [46, 3, 1, "", "get_metadata_routing"], [46, 3, 1, "", "get_params"], [46, 3, 1, "", "predict"], [46, 3, 1, "", "predict_proba"], [46, 3, 1, "", "score"], [46, 3, 1, "", "set_params"]], "wildboar.tree._tree.BaseFeatureTreeRegressor": [[46, 3, 1, "", "apply"], [46, 3, 1, "", "decision_path"], [46, 3, 1, "", "fit"], [46, 3, 1, "", "get_metadata_routing"], [46, 3, 1, "", "get_params"], [46, 3, 1, "", "predict"], [46, 3, 1, "", "score"], [46, 3, 1, "", "set_params"]], "wildboar.tree._tree.ExtraShapeletTreeClassifier": [[46, 3, 1, "", "apply"], [46, 3, 1, "", "decision_path"], [46, 3, 1, "", "fit"], [46, 3, 1, "", "get_metadata_routing"], [46, 3, 1, "", "get_params"], [46, 3, 1, "", "predict"], [46, 3, 1, "", "predict_proba"], [46, 3, 1, "", "score"], [46, 3, 1, "", "set_params"]], "wildboar.tree._tree.ExtraShapeletTreeRegressor": [[46, 3, 1, "", "apply"], [46, 3, 1, "", "decision_path"], [46, 3, 1, "", "fit"], [46, 3, 1, "", "get_metadata_routing"], [46, 3, 1, "", "get_params"], [46, 3, 1, "", "predict"], [46, 3, 1, "", "score"], [46, 3, 1, "", "set_params"]], "wildboar.tree._tree.IntervalTreeClassifier": [[46, 3, 1, "", "apply"], [46, 3, 1, "", "decision_path"], [46, 3, 1, "", "fit"], [46, 3, 1, "", "get_metadata_routing"], [46, 3, 1, "", "get_params"], [46, 3, 1, "", "predict"], [46, 3, 1, "", "predict_proba"], [46, 3, 1, "", "score"], [46, 3, 1, "", "set_params"]], "wildboar.tree._tree.IntervalTreeRegressor": [[46, 3, 1, "", "apply"], [46, 3, 1, "", "decision_path"], [46, 3, 1, "", "fit"], [46, 3, 1, "", "get_metadata_routing"], [46, 3, 1, "", "get_params"], [46, 3, 1, "", "predict"], [46, 3, 1, "", "score"], [46, 3, 1, "", "set_params"]], "wildboar.tree._tree.PivotTreeClassifier": [[46, 3, 1, "", "apply"], [46, 3, 1, "", "decision_path"], [46, 3, 1, "", "fit"], [46, 3, 1, "", "get_metadata_routing"], [46, 3, 1, "", "get_params"], [46, 3, 1, "", "predict"], [46, 3, 1, "", "predict_proba"], [46, 3, 1, "", "score"], [46, 3, 1, "", "set_params"]], "wildboar.tree._tree.RocketTreeClassifier": [[46, 3, 1, "", "apply"], [46, 3, 1, "", "decision_path"], [46, 3, 1, "", "fit"], [46, 3, 1, "", "get_metadata_routing"], [46, 3, 1, "", "get_params"], [46, 3, 1, "", "predict"], [46, 3, 1, "", "predict_proba"], [46, 3, 1, "", "score"], [46, 3, 1, "", "set_params"]], "wildboar.tree._tree.RocketTreeRegressor": [[46, 3, 1, "", "apply"], [46, 3, 1, "", "decision_path"], [46, 3, 1, "", "fit"], [46, 3, 1, "", "get_metadata_routing"], [46, 3, 1, "", "get_params"], [46, 3, 1, "", "predict"], [46, 3, 1, "", "score"], [46, 3, 1, "", "set_params"]], "wildboar.tree._tree.ShapeletTreeClassifier": [[46, 3, 1, "", "apply"], [46, 3, 1, "", "decision_path"], [46, 3, 1, "", "fit"], [46, 3, 1, "", "get_metadata_routing"], [46, 3, 1, "", "get_params"], [46, 3, 1, "", "predict"], [46, 3, 1, "", "predict_proba"], [46, 3, 1, "", "score"], [46, 3, 1, "", "set_params"]], "wildboar.tree._tree.ShapeletTreeRegressor": [[46, 3, 1, "", "apply"], [46, 3, 1, "", "decision_path"], [46, 3, 1, "", "fit"], [46, 3, 1, "", "get_metadata_routing"], [46, 3, 1, "", "get_params"], [46, 3, 1, "", "predict"], [46, 3, 1, "", "score"], [46, 3, 1, "", "set_params"]], "wildboar.utils": [[48, 0, 0, "-", "_parallel"], [49, 0, 0, "-", "_testing"], [52, 1, 1, "", "check_X_y"], [52, 1, 1, "", "check_array"], [50, 0, 0, "-", "decorators"], [51, 0, 0, "-", "estimator_checks"], [53, 0, 0, "-", "plot"], [54, 0, 0, "-", "validation"], [55, 0, 0, "-", "variable_len"]], "wildboar.utils._parallel": [[48, 1, 1, "", "run_in_parallel"]], "wildboar.utils._testing": [[49, 1, 1, "", "assert_exhaustive_parameter_checks"], [49, 1, 1, "", "assert_parameter_checks"]], "wildboar.utils.decorators": [[50, 1, 1, "", "array_or_scalar"], [50, 1, 1, "", "singleton"], [50, 1, 1, "", "unstable"]], "wildboar.utils.estimator_checks": [[51, 1, 1, "", "check_estimator"]], "wildboar.utils.plot": [[53, 2, 1, "", "MidpointNormalize"], [53, 1, 1, "", "plot_frequency_domain"], [53, 1, 1, "", "plot_time_domain"]], "wildboar.utils.plot.MidpointNormalize": [[53, 3, 1, "", "autoscale"], [53, 3, 1, "", "autoscale_None"], [53, 3, 1, "", "process_value"], [53, 3, 1, "", "scaled"]], "wildboar.utils.validation": [[54, 1, 1, "", "check_X_y"], [54, 1, 1, "", "check_array"], [54, 1, 1, "", "check_option"], [54, 1, 1, "", "check_type"]], "wildboar.utils.variable_len": [[55, 1, 1, "", "get_variable_length"], [55, 1, 1, "", "is_end_of_series"], [55, 1, 1, "", "is_variable_length"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"wildboar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 74, 78], "function": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 15, 16, 20, 21, 22, 28, 29, 31, 32, 34, 41, 43, 48, 49, 50, 51, 52, 53, 54, 55, 74], "annot": [0, 1, 2, 3, 58, 74], "base": [0, 4, 69, 70, 74], "class": [0, 4, 6, 7, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 74], "dataset": [0, 5, 6, 7, 8, 9, 60, 74, 77], "outlier": [0, 8, 72, 73, 74], "preprocess": [0, 9, 74], "distanc": [0, 10, 11, 12, 65, 66, 74], "dtw": [0, 11, 74], "ensembl": [0, 13, 14, 68, 74], "explain": [0, 15, 16, 17, 18, 19, 20, 21, 74], "counterfactu": [0, 16, 17, 18, 19, 20, 74], "linear_model": [0, 23, 24, 25, 26, 27, 74], "metric": [0, 28, 29, 64, 65, 66, 74], "model_select": [0, 30, 31, 32, 74], "transform": [0, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 69, 74, 77], "tree": [0, 44, 45, 46, 47, 70, 74], "util": [0, 48, 49, 50, 51, 52, 53, 54, 55, 74], "_motif": 1, "modul": [1, 2, 4, 5, 6, 8, 9, 11, 13, 15, 16, 17, 18, 19, 23, 24, 25, 26, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55], "content": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55], "_segment": 2, "packag": [3, 7, 12, 14, 20, 21, 22, 27, 29, 32, 43, 47, 52], "_filter": 5, "_repositori": 6, "submodul": [7, 12, 22, 52], "_multi_metr": 10, "_ensembl": 13, "_import": 15, "_helper": 16, "_nn": 17, "_proto": 18, "_sf": 19, "subpackag": [21, 22], "attribut": 22, "_hydra": [23, 36], "_rocket": [24, 40], "_shapelet": [25, 42], "_transform": 26, "_counterfactu": 28, "_cv": 30, "_outlier": 31, "_base": [33, 44], "_conv": 34, "_diff": 35, "_interv": 37, "_matrix_profil": 38, "_pivot": 39, "_sax": 41, "_ptree": 45, "_tree": 46, "_parallel": 48, "_test": 49, "decor": 50, "estimator_check": 51, "plot": 53, "valid": 54, "variable_len": 55, "version": [56, 75], "user": 57, "guid": 57, "time": [59, 66, 77], "seri": [59, 77], "variabl": 59, "length": 59, "load": [60, 77], "singl": 60, "multipl": 60, "filter": 60, "pre": 61, "process": 61, "repositori": 62, "definit": 62, "instal": [62, 78], "local": 62, "cach": 62, "json": 62, "glossari": 63, "subsequ": [64, 65, 66], "elast": [64, 66], "non": 64, "pairwis": 65, "pair": 65, "multivari": 65, "support": 65, "search": 65, "benchmark": [65, 73], "dynam": 66, "warp": 66, "longest": 66, "common": 66, "edit": 66, "real": 66, "penalti": 66, "sequenc": 66, "move": 66, "split": 66, "merg": 66, "supervis": 67, "learn": [67, 71, 77], "estim": [68, 69, 70], "shapelet": 68, "forest": 68, "proxim": 68, "unsupervis": 71, "detect": [72, 73], "minor": 73, "label": 73, "major": 73, "emmott": 73, "what": 75, "": 75, "new": 75, "depend": 75, "1": 75, "2": 75, "0": 75, "chang": 75, "model": [75, 77], "changelog": 75, "other": 75, "improv": 75, "quickstart": 76, "get": 77, "start": 77, "machin": 77, "an": 77, "exampl": 77, "predict": 77, "tabular": 77, "data": 77, "explor": 77, "perform": 77, "persist": 77, "latest": 78, "releas": 78, "build": 78, "compil": 78, "from": 78, "sourc": 78}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"wildboar": [[0, "wildboar"], [22, "module-wildboar"], [74, "id1"]], "Functions": [[0, "id1"], [0, "id2"], [0, "id4"], [0, "id6"], [0, "id7"], [0, "id8"], [0, "id9"], [0, "id10"], [0, "id13"], [0, "id15"], [0, "id17"], [0, "id19"], [0, "id21"], [0, "id23"], [1, "functions"], [2, "functions"], [3, "functions"], [4, "functions"], [5, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [11, "functions"], [12, "functions"], [15, "functions"], [16, "functions"], [20, "functions"], [21, "functions"], [22, "functions"], [28, "functions"], [29, "functions"], [31, "functions"], [32, "functions"], [34, "functions"], [41, "functions"], [43, "functions"], [48, "functions"], [49, "functions"], [50, "functions"], [51, "functions"], [52, "functions"], [53, "functions"], [54, "functions"], [55, "functions"], [74, "id2"], [74, "id3"], [74, "id5"], [74, "id7"], [74, "id8"], [74, "id9"], [74, "id10"], [74, "id11"], [74, "id14"], [74, "id16"], [74, "id18"], [74, "id20"], [74, "id22"], [74, "id24"]], "wildboar.annotate": [[0, "wildboar-annotate"], [3, "module-wildboar.annotate"], [74, "wildboar-annotate"]], "wildboar.base": [[0, "wildboar-base"], [4, "module-wildboar.base"], [74, "wildboar-base"]], "Classes": [[0, "id3"], [0, "id5"], [0, "id11"], [0, "id12"], [0, "id14"], [0, "id16"], [0, "id18"], [0, "id20"], [0, "id22"], [4, "classes"], [6, "classes"], [7, "classes"], [13, "classes"], [14, "classes"], [15, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [30, "classes"], [32, "classes"], [33, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [44, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [53, "classes"], [74, "id4"], [74, "id6"], [74, "id12"], [74, "id13"], [74, "id15"], [74, "id17"], [74, "id19"], [74, "id21"], [74, "id23"]], "wildboar.datasets": [[0, "wildboar-datasets"], [7, "module-wildboar.datasets"], [74, "wildboar-datasets"]], "wildboar.datasets.outlier": [[0, "wildboar-datasets-outlier"], [8, "module-wildboar.datasets.outlier"], [74, "wildboar-datasets-outlier"]], "wildboar.datasets.preprocess": [[0, "wildboar-datasets-preprocess"], [9, "module-wildboar.datasets.preprocess"], [74, "wildboar-datasets-preprocess"]], "wildboar.distance": [[0, "wildboar-distance"], [12, "module-wildboar.distance"], [74, "wildboar-distance"]], "wildboar.distance.dtw": [[0, "wildboar-distance-dtw"], [11, "module-wildboar.distance.dtw"], [74, "wildboar-distance-dtw"]], "wildboar.ensemble": [[0, "wildboar-ensemble"], [14, "module-wildboar.ensemble"], [74, "wildboar-ensemble"]], "wildboar.explain": [[0, "wildboar-explain"], [21, "module-wildboar.explain"], [74, "wildboar-explain"]], "wildboar.explain.counterfactual": [[0, "wildboar-explain-counterfactual"], [20, "module-wildboar.explain.counterfactual"], [74, "wildboar-explain-counterfactual"]], "wildboar.linear_model": [[0, "wildboar-linear-model"], [27, "module-wildboar.linear_model"], [74, "wildboar-linear-model"]], "wildboar.metrics": [[0, "wildboar-metrics"], [29, "module-wildboar.metrics"], [74, "wildboar-metrics"]], "wildboar.model_selection": [[0, "wildboar-model-selection"], [32, "module-wildboar.model_selection"], [74, "wildboar-model-selection"]], "wildboar.transform": [[0, "wildboar-transform"], [43, "module-wildboar.transform"], [74, "wildboar-transform"]], "wildboar.tree": [[0, "wildboar-tree"], [47, "module-wildboar.tree"], [74, "wildboar-tree"]], "wildboar.utils": [[0, "wildboar-utils"], [52, "module-wildboar.utils"], [74, "wildboar-utils"]], "wildboar.annotate._motifs": [[1, "module-wildboar.annotate._motifs"]], "Module Contents": [[1, "module-contents"], [2, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [8, "module-contents"], [9, "module-contents"], [11, "module-contents"], [13, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [28, "module-contents"], [30, "module-contents"], [31, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"]], "wildboar.annotate._segment": [[2, "module-wildboar.annotate._segment"]], "Package Contents": [[3, "package-contents"], [7, "package-contents"], [12, "package-contents"], [14, "package-contents"], [20, "package-contents"], [21, "package-contents"], [22, "package-contents"], [27, "package-contents"], [29, "package-contents"], [32, "package-contents"], [43, "package-contents"], [47, "package-contents"], [52, "package-contents"]], "wildboar.datasets._filter": [[5, "module-wildboar.datasets._filter"]], "wildboar.datasets._repository": [[6, "module-wildboar.datasets._repository"]], "Submodules": [[7, "submodules"], [12, "submodules"], [22, "submodules"], [52, "submodules"]], "wildboar.distance._multi_metric": [[10, "module-wildboar.distance._multi_metric"]], "wildboar.ensemble._ensemble": [[13, "module-wildboar.ensemble._ensemble"]], "wildboar.explain._importance": [[15, "module-wildboar.explain._importance"]], "wildboar.explain.counterfactual._helper": [[16, "module-wildboar.explain.counterfactual._helper"]], "wildboar.explain.counterfactual._nn": [[17, "module-wildboar.explain.counterfactual._nn"]], "wildboar.explain.counterfactual._proto": [[18, "module-wildboar.explain.counterfactual._proto"]], "wildboar.explain.counterfactual._sf": [[19, "module-wildboar.explain.counterfactual._sf"]], "Subpackages": [[21, "subpackages"], [22, "subpackages"]], "Attributes": [[22, "attributes"]], "wildboar.linear_model._hydra": [[23, "module-wildboar.linear_model._hydra"]], "wildboar.linear_model._rocket": [[24, "module-wildboar.linear_model._rocket"]], "wildboar.linear_model._shapelet": [[25, "module-wildboar.linear_model._shapelet"]], "wildboar.linear_model._transform": [[26, "module-wildboar.linear_model._transform"]], "wildboar.metrics._counterfactual": [[28, "module-wildboar.metrics._counterfactual"]], "wildboar.model_selection._cv": [[30, "module-wildboar.model_selection._cv"]], "wildboar.model_selection._outlier": [[31, "module-wildboar.model_selection._outlier"]], "wildboar.transform._base": [[33, "module-wildboar.transform._base"]], "wildboar.transform._conv": [[34, "module-wildboar.transform._conv"]], "wildboar.transform._diff": [[35, "module-wildboar.transform._diff"]], "wildboar.transform._hydra": [[36, "module-wildboar.transform._hydra"]], "wildboar.transform._interval": [[37, "module-wildboar.transform._interval"]], "wildboar.transform._matrix_profile": [[38, "module-wildboar.transform._matrix_profile"]], "wildboar.transform._pivot": [[39, "module-wildboar.transform._pivot"]], "wildboar.transform._rocket": [[40, "module-wildboar.transform._rocket"]], "wildboar.transform._sax": [[41, "module-wildboar.transform._sax"]], "wildboar.transform._shapelet": [[42, "module-wildboar.transform._shapelet"]], "wildboar.tree._base": [[44, "module-wildboar.tree._base"]], "wildboar.tree._ptree": [[45, "module-wildboar.tree._ptree"]], "wildboar.tree._tree": [[46, "module-wildboar.tree._tree"]], "wildboar.utils._parallel": [[48, "module-wildboar.utils._parallel"]], "wildboar.utils._testing": [[49, "module-wildboar.utils._testing"]], "wildboar.utils.decorators": [[50, "module-wildboar.utils.decorators"]], "wildboar.utils.estimator_checks": [[51, "module-wildboar.utils.estimator_checks"]], "wildboar.utils.plot": [[53, "module-wildboar.utils.plot"]], "wildboar.utils.validation": [[54, "module-wildboar.utils.validation"]], "wildboar.utils.variable_len": [[55, "module-wildboar.utils.variable_len"]], "wildboar.version": [[56, "module-wildboar.version"]], "User guide": [[57, "user-guide"]], "Annotate": [[58, "annotate"]], "Time series": [[59, "time-series"]], "Variable length time series": [[59, "variable-length-time-series"]], "Datasets": [[60, "datasets"]], "Loading datasets": [[60, "loading-datasets"]], "Loading a single dataset": [[60, "loading-a-single-dataset"]], "Loading multiple datasets": [[60, "loading-multiple-datasets"]], "Filters": [[60, "filters"]], "Pre-processing": [[61, "pre-processing"]], "Repositories": [[62, "repositories"]], "Repository definitions": [[62, "repository-definitions"]], "Installing repositories": [[62, "installing-repositories"]], "Local cache": [[62, "local-cache"]], "JSON repositories": [[62, "json-repositories"]], "Glossary": [[63, "glossary"]], "Metrics": [[64, "metrics"], [65, "metrics"]], "Subsequence metrics": [[64, "subsequence-metrics"], [65, "subsequence-metrics"]], "Elastic and non-elastic metrics": [[64, "elastic-and-non-elastic-metrics"]], "Distance": [[65, "distance"]], "Pairwise distance": [[65, "pairwise-distance"]], "Paired distance": [[65, "paired-distance"]], "Multivariate support": [[65, "multivariate-support"]], "Subsequence search": [[65, "subsequence-search"]], "Pairwise subsequence distance": [[65, "pairwise-subsequence-distance"]], "Benchmark": [[65, "benchmark"]], "Elastic metrics": [[66, "elastic-metrics"]], "Dynamic time warping": [[66, "dynamic-time-warping"]], "Longest common subsequence": [[66, "longest-common-subsequence"]], "Edit-distance with real penalty": [[66, "edit-distance-with-real-penalty"]], "Edit-distance for real sequence": [[66, "edit-distance-for-real-sequence"]], "Time-warp edit distance": [[66, "time-warp-edit-distance"]], "Move-split-merge": [[66, "move-split-merge"]], "Supervised learning": [[67, "supervised-learning"]], "Ensemble estimators": [[68, "ensemble-estimators"]], "Shapelet forests": [[68, "shapelet-forests"]], "Proximity forests": [[68, "proximity-forests"]], "Transform-based estimators": [[69, "transform-based-estimators"]], "Tree-based estimators": [[70, "tree-based-estimators"]], "Unsupervised learning": [[71, "unsupervised-learning"]], "Outlier detection": [[72, "outlier-detection"]], "Outlier detection benchmarks": [[73, "outlier-detection-benchmarks"]], "Minority labeler": [[73, "minority-labeler"]], "Majority labeler": [[73, "majority-labeler"]], "Emmott labeler": [[73, "emmott-labeler"]], "Wildboar": [[74, "wildboar"]], "What\u2019s new": [[75, "what-s-new"]], "Dependencies": [[75, "dependencies"]], "Version 1.2.0": [[75, "version-1-2-0"]], "New and changed models": [[75, "new-and-changed-models"]], "Changelog": [[75, "changelog"]], "Other improvements": [[75, "other-improvements"]], "Quickstart": [[76, "quickstart"]], "Getting started": [[77, "getting-started"]], "Machine learning": [[77, "machine-learning"]], "Loading an example dataset": [[77, "loading-an-example-dataset"]], "Learning and predicting": [[77, "learning-and-predicting"]], "Transforming time series to tabular data": [[77, "transforming-time-series-to-tabular-data"]], "Exploring model performance": [[77, "exploring-model-performance"]], "Model persistence": [[77, "model-persistence"]], "Install wildboar": [[78, "install-wildboar"]], "Install the latest release": [[78, "install-the-latest-release"]], "Build and compile from source": [[78, "build-and-compile-from-source"]]}, "indexentries": {"module": [[1, "module-wildboar.annotate._motifs"], [2, "module-wildboar.annotate._segment"], [3, "module-wildboar.annotate"], [4, "module-wildboar.base"], [5, "module-wildboar.datasets._filter"], [6, "module-wildboar.datasets._repository"], [7, "module-wildboar.datasets"], [8, "module-wildboar.datasets.outlier"], [9, "module-wildboar.datasets.preprocess"], [10, "module-wildboar.distance._multi_metric"], [11, "module-wildboar.distance.dtw"], [12, "module-wildboar.distance"], [13, "module-wildboar.ensemble._ensemble"], [14, "module-wildboar.ensemble"], [15, "module-wildboar.explain._importance"], [16, "module-wildboar.explain.counterfactual._helper"], [17, "module-wildboar.explain.counterfactual._nn"], [18, "module-wildboar.explain.counterfactual._proto"], [19, "module-wildboar.explain.counterfactual._sf"], [20, "module-wildboar.explain.counterfactual"], [21, "module-wildboar.explain"], [22, "module-wildboar"], [23, "module-wildboar.linear_model._hydra"], [24, "module-wildboar.linear_model._rocket"], [25, "module-wildboar.linear_model._shapelet"], [26, "module-wildboar.linear_model._transform"], [27, "module-wildboar.linear_model"], [28, "module-wildboar.metrics._counterfactual"], [29, "module-wildboar.metrics"], [30, "module-wildboar.model_selection._cv"], [31, "module-wildboar.model_selection._outlier"], [32, "module-wildboar.model_selection"], [33, "module-wildboar.transform._base"], [34, "module-wildboar.transform._conv"], [35, "module-wildboar.transform._diff"], [36, "module-wildboar.transform._hydra"], [37, "module-wildboar.transform._interval"], [38, "module-wildboar.transform._matrix_profile"], [39, "module-wildboar.transform._pivot"], [40, "module-wildboar.transform._rocket"], [41, "module-wildboar.transform._sax"], [42, "module-wildboar.transform._shapelet"], [43, "module-wildboar.transform"], [44, "module-wildboar.tree._base"], [45, "module-wildboar.tree._ptree"], [46, "module-wildboar.tree._tree"], [47, "module-wildboar.tree"], [48, "module-wildboar.utils._parallel"], [49, "module-wildboar.utils._testing"], [50, "module-wildboar.utils.decorators"], [51, "module-wildboar.utils.estimator_checks"], [52, "module-wildboar.utils"], [53, "module-wildboar.utils.plot"], [54, "module-wildboar.utils.validation"], [55, "module-wildboar.utils.variable_len"], [56, "module-wildboar.version"]], "motifs() (in module wildboar.annotate._motifs)": [[1, "wildboar.annotate._motifs.motifs"]], "wildboar.annotate._motifs": [[1, "module-wildboar.annotate._motifs"]], "segment() (in module wildboar.annotate._segment)": [[2, "wildboar.annotate._segment.segment"]], "wildboar.annotate._segment": [[2, "module-wildboar.annotate._segment"]], "motifs() (in module wildboar.annotate)": [[3, "wildboar.annotate.motifs"]], "segment() (in module wildboar.annotate)": [[3, "wildboar.annotate.segment"]], "wildboar.annotate": [[3, "module-wildboar.annotate"]], "baseestimator (class in wildboar.base)": [[4, "wildboar.base.BaseEstimator"]], "counterfactualmixin (class in wildboar.base)": [[4, "wildboar.base.CounterfactualMixin"]], "explainermixin (class in wildboar.base)": [[4, "wildboar.base.ExplainerMixin"]], "fit_explain() (wildboar.base.explainermixin method)": [[4, "wildboar.base.ExplainerMixin.fit_explain"]], "get_metadata_routing() (wildboar.base.baseestimator method)": [[4, "wildboar.base.BaseEstimator.get_metadata_routing"]], "get_params() (wildboar.base.baseestimator method)": [[4, "wildboar.base.BaseEstimator.get_params"]], "is_counterfactual() (in module wildboar.base)": [[4, "wildboar.base.is_counterfactual"]], "is_explainer() (in module wildboar.base)": [[4, "wildboar.base.is_explainer"]], "plot() (wildboar.base.explainermixin method)": [[4, "wildboar.base.ExplainerMixin.plot"]], "score() (wildboar.base.counterfactualmixin method)": [[4, "wildboar.base.CounterfactualMixin.score"]], "set_params() (wildboar.base.baseestimator method)": [[4, "wildboar.base.BaseEstimator.set_params"]], "wildboar.base": [[4, "module-wildboar.base"]], "make_dict_filter() (in module wildboar.datasets._filter)": [[5, "wildboar.datasets._filter.make_dict_filter"]], "make_filter() (in module wildboar.datasets._filter)": [[5, "wildboar.datasets._filter.make_filter"]], "make_list_filter() (in module wildboar.datasets._filter)": [[5, "wildboar.datasets._filter.make_list_filter"]], "make_str_filter() (in module wildboar.datasets._filter)": [[5, "wildboar.datasets._filter.make_str_filter"]], "wildboar.datasets._filter": [[5, "module-wildboar.datasets._filter"]], "bundle (class in wildboar.datasets._repository)": [[6, "wildboar.datasets._repository.Bundle"]], "jsonrepository (class in wildboar.datasets._repository)": [[6, "wildboar.datasets._repository.JSONRepository"]], "npbundle (class in wildboar.datasets._repository)": [[6, "wildboar.datasets._repository.NpBundle"]], "repository (class in wildboar.datasets._repository)": [[6, "wildboar.datasets._repository.Repository"]], "download_url (wildboar.datasets._repository.jsonrepository property)": [[6, "wildboar.datasets._repository.JSONRepository.download_url"]], "download_url (wildboar.datasets._repository.repository property)": [[6, "wildboar.datasets._repository.Repository.download_url"]], "get_bundle() (wildboar.datasets._repository.jsonrepository method)": [[6, "wildboar.datasets._repository.JSONRepository.get_bundle"]], "get_bundle() (wildboar.datasets._repository.repository method)": [[6, "wildboar.datasets._repository.Repository.get_bundle"]], "get_bundles() (wildboar.datasets._repository.jsonrepository method)": [[6, "wildboar.datasets._repository.JSONRepository.get_bundles"]], "get_bundles() (wildboar.datasets._repository.repository method)": [[6, "wildboar.datasets._repository.Repository.get_bundles"]], "get_collection() (wildboar.datasets._repository.bundle method)": [[6, "wildboar.datasets._repository.Bundle.get_collection"]], "get_collection() (wildboar.datasets._repository.npbundle method)": [[6, "wildboar.datasets._repository.NpBundle.get_collection"]], "get_filename() (wildboar.datasets._repository.bundle method)": [[6, "wildboar.datasets._repository.Bundle.get_filename"]], "get_filename() (wildboar.datasets._repository.npbundle method)": [[6, "wildboar.datasets._repository.NpBundle.get_filename"]], "list() (wildboar.datasets._repository.bundle method)": [[6, "wildboar.datasets._repository.Bundle.list"]], "list() (wildboar.datasets._repository.npbundle method)": [[6, "wildboar.datasets._repository.NpBundle.list"]], "load() (wildboar.datasets._repository.bundle method)": [[6, "wildboar.datasets._repository.Bundle.load"]], "load() (wildboar.datasets._repository.npbundle method)": [[6, "wildboar.datasets._repository.NpBundle.load"]], "name (wildboar.datasets._repository.jsonrepository property)": [[6, "wildboar.datasets._repository.JSONRepository.name"]], "name (wildboar.datasets._repository.repository property)": [[6, "wildboar.datasets._repository.Repository.name"]], "refresh() (wildboar.datasets._repository.jsonrepository method)": [[6, "wildboar.datasets._repository.JSONRepository.refresh"]], "refresh() (wildboar.datasets._repository.repository method)": [[6, "wildboar.datasets._repository.Repository.refresh"]], "version (wildboar.datasets._repository.jsonrepository property)": [[6, "wildboar.datasets._repository.JSONRepository.version"]], "version (wildboar.datasets._repository.repository property)": [[6, "wildboar.datasets._repository.Repository.version"]], "wildboar.datasets._repository": [[6, "module-wildboar.datasets._repository"]], "wildboar_requires (wildboar.datasets._repository.jsonrepository property)": [[6, "wildboar.datasets._repository.JSONRepository.wildboar_requires"]], "wildboar_requires (wildboar.datasets._repository.repository property)": [[6, "wildboar.datasets._repository.Repository.wildboar_requires"]], "bundle (class in wildboar.datasets)": [[7, "wildboar.datasets.Bundle"]], "jsonrepository (class in wildboar.datasets)": [[7, "wildboar.datasets.JSONRepository"]], "npbundle (class in wildboar.datasets)": [[7, "wildboar.datasets.NpBundle"]], "repository (class in wildboar.datasets)": [[7, "wildboar.datasets.Repository"]], "clear_cache() (in module wildboar.datasets)": [[7, "wildboar.datasets.clear_cache"]], "download_url (wildboar.datasets.jsonrepository property)": [[7, "wildboar.datasets.JSONRepository.download_url"]], "download_url (wildboar.datasets.repository property)": [[7, "wildboar.datasets.Repository.download_url"]], "get_bundle() (wildboar.datasets.jsonrepository method)": [[7, "wildboar.datasets.JSONRepository.get_bundle"]], "get_bundle() (wildboar.datasets.repository method)": [[7, "wildboar.datasets.Repository.get_bundle"]], "get_bundles() (in module wildboar.datasets)": [[7, "wildboar.datasets.get_bundles"]], "get_bundles() (wildboar.datasets.jsonrepository method)": [[7, "wildboar.datasets.JSONRepository.get_bundles"]], "get_bundles() (wildboar.datasets.repository method)": [[7, "wildboar.datasets.Repository.get_bundles"]], "get_collection() (wildboar.datasets.bundle method)": [[7, "wildboar.datasets.Bundle.get_collection"]], "get_collection() (wildboar.datasets.npbundle method)": [[7, "wildboar.datasets.NpBundle.get_collection"]], "get_filename() (wildboar.datasets.bundle method)": [[7, "wildboar.datasets.Bundle.get_filename"]], "get_filename() (wildboar.datasets.npbundle method)": [[7, "wildboar.datasets.NpBundle.get_filename"]], "get_repository() (in module wildboar.datasets)": [[7, "wildboar.datasets.get_repository"]], "install_repository() (in module wildboar.datasets)": [[7, "wildboar.datasets.install_repository"]], "list() (wildboar.datasets.bundle method)": [[7, "wildboar.datasets.Bundle.list"]], "list() (wildboar.datasets.npbundle method)": [[7, "wildboar.datasets.NpBundle.list"]], "list_bundles() (in module wildboar.datasets)": [[7, "wildboar.datasets.list_bundles"]], "list_collections() (in module wildboar.datasets)": [[7, "wildboar.datasets.list_collections"]], "list_datasets() (in module wildboar.datasets)": [[7, "wildboar.datasets.list_datasets"]], "list_repositories() (in module wildboar.datasets)": [[7, "wildboar.datasets.list_repositories"]], "load() (wildboar.datasets.bundle method)": [[7, "wildboar.datasets.Bundle.load"]], "load() (wildboar.datasets.npbundle method)": [[7, "wildboar.datasets.NpBundle.load"]], "load_dataset() (in module wildboar.datasets)": [[7, "wildboar.datasets.load_dataset"]], "load_datasets() (in module wildboar.datasets)": [[7, "wildboar.datasets.load_datasets"]], "load_gun_point() (in module wildboar.datasets)": [[7, "wildboar.datasets.load_gun_point"]], "load_synthetic_control() (in module wildboar.datasets)": [[7, "wildboar.datasets.load_synthetic_control"]], "load_two_lead_ecg() (in module wildboar.datasets)": [[7, "wildboar.datasets.load_two_lead_ecg"]], "name (wildboar.datasets.jsonrepository property)": [[7, "wildboar.datasets.JSONRepository.name"]], "name (wildboar.datasets.repository property)": [[7, "wildboar.datasets.Repository.name"]], "refresh() (wildboar.datasets.jsonrepository method)": [[7, "wildboar.datasets.JSONRepository.refresh"]], "refresh() (wildboar.datasets.repository method)": [[7, "wildboar.datasets.Repository.refresh"]], "refresh_repositories() (in module wildboar.datasets)": [[7, "wildboar.datasets.refresh_repositories"]], "set_cache_dir() (in module wildboar.datasets)": [[7, "wildboar.datasets.set_cache_dir"]], "version (wildboar.datasets.jsonrepository property)": [[7, "wildboar.datasets.JSONRepository.version"]], "version (wildboar.datasets.repository property)": [[7, "wildboar.datasets.Repository.version"]], "wildboar.datasets": [[7, "module-wildboar.datasets"]], "wildboar_requires (wildboar.datasets.jsonrepository property)": [[7, "wildboar.datasets.JSONRepository.wildboar_requires"]], "wildboar_requires (wildboar.datasets.repository property)": [[7, "wildboar.datasets.Repository.wildboar_requires"]], "density_outliers() (in module wildboar.datasets.outlier)": [[8, "wildboar.datasets.outlier.density_outliers"]], "emmott_outliers() (in module wildboar.datasets.outlier)": [[8, "wildboar.datasets.outlier.emmott_outliers"]], "kmeans_outliers() (in module wildboar.datasets.outlier)": [[8, "wildboar.datasets.outlier.kmeans_outliers"]], "majority_outliers() (in module wildboar.datasets.outlier)": [[8, "wildboar.datasets.outlier.majority_outliers"]], "minority_outliers() (in module wildboar.datasets.outlier)": [[8, "wildboar.datasets.outlier.minority_outliers"]], "wildboar.datasets.outlier": [[8, "module-wildboar.datasets.outlier"]], "maxabs_scale() (in module wildboar.datasets.preprocess)": [[9, "wildboar.datasets.preprocess.maxabs_scale"]], "minmax_scale() (in module wildboar.datasets.preprocess)": [[9, "wildboar.datasets.preprocess.minmax_scale"]], "named_preprocess() (in module wildboar.datasets.preprocess)": [[9, "wildboar.datasets.preprocess.named_preprocess"]], "standardize() (in module wildboar.datasets.preprocess)": [[9, "wildboar.datasets.preprocess.standardize"]], "truncate() (in module wildboar.datasets.preprocess)": [[9, "wildboar.datasets.preprocess.truncate"]], "wildboar.datasets.preprocess": [[9, "module-wildboar.datasets.preprocess"]], "wildboar.distance._multi_metric": [[10, "module-wildboar.distance._multi_metric"]], "ddtw_distance() (in module wildboar.distance.dtw)": [[11, "wildboar.distance.dtw.ddtw_distance"]], "dtw_alignment() (in module wildboar.distance.dtw)": [[11, "wildboar.distance.dtw.dtw_alignment"]], "dtw_average() (in module wildboar.distance.dtw)": [[11, "wildboar.distance.dtw.dtw_average"]], "dtw_distance() (in module wildboar.distance.dtw)": [[11, "wildboar.distance.dtw.dtw_distance"]], "dtw_envelop() (in module wildboar.distance.dtw)": [[11, "wildboar.distance.dtw.dtw_envelop"]], "dtw_lb_keogh() (in module wildboar.distance.dtw)": [[11, "wildboar.distance.dtw.dtw_lb_keogh"]], "dtw_mapping() (in module wildboar.distance.dtw)": [[11, "wildboar.distance.dtw.dtw_mapping"]], "jeong_weight() (in module wildboar.distance.dtw)": [[11, "wildboar.distance.dtw.jeong_weight"]], "wddtw_distance() (in module wildboar.distance.dtw)": [[11, "wildboar.distance.dtw.wddtw_distance"]], "wdtw_alignment() (in module wildboar.distance.dtw)": [[11, "wildboar.distance.dtw.wdtw_alignment"]], "wdtw_distance() (in module wildboar.distance.dtw)": [[11, "wildboar.distance.dtw.wdtw_distance"]], "wildboar.distance.dtw": [[11, "module-wildboar.distance.dtw"]], "matrix_profile() (in module wildboar.distance)": [[12, "wildboar.distance.matrix_profile"]], "paired_distance() (in module wildboar.distance)": [[12, "wildboar.distance.paired_distance"]], "paired_subsequence_distance() (in module wildboar.distance)": [[12, "wildboar.distance.paired_subsequence_distance"]], "paired_subsequence_match() (in module wildboar.distance)": [[12, "wildboar.distance.paired_subsequence_match"]], "pairwise_distance() (in module wildboar.distance)": [[12, "wildboar.distance.pairwise_distance"]], "pairwise_subsequence_distance() (in module wildboar.distance)": [[12, "wildboar.distance.pairwise_subsequence_distance"]], "subsequence_match() (in module wildboar.distance)": [[12, "wildboar.distance.subsequence_match"]], "wildboar.distance": [[12, "module-wildboar.distance"]], "baggingclassifier (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.BaggingClassifier"]], "baggingregressor (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.BaggingRegressor"]], "basebagging (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.BaseBagging"]], "baseforestclassifier (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.BaseForestClassifier"]], "baseforestregressor (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.BaseForestRegressor"]], "baseshapeletforestclassifier (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier"]], "baseshapeletforestregressor (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor"]], "extrashapelettreesclassifier (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier"]], "extrashapelettreesregressor (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor"]], "forestmixin (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.ForestMixin"]], "intervalforestclassifier (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.IntervalForestClassifier"]], "intervalforestregressor (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.IntervalForestRegressor"]], "isolationshapeletforest (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.IsolationShapeletForest"]], "pivotforestclassifier (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.PivotForestClassifier"]], "proximityforestclassifier (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.ProximityForestClassifier"]], "rocketforestclassifier (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.RocketForestClassifier"]], "rocketforestregressor (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.RocketForestRegressor"]], "shapeletforestclassifier (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.ShapeletForestClassifier"]], "shapeletforestembedding (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.ShapeletForestEmbedding"]], "shapeletforestregressor (class in wildboar.ensemble._ensemble)": [[13, "wildboar.ensemble._ensemble.ShapeletForestRegressor"]], "base_estimator_ (wildboar.ensemble._ensemble.baggingclassifier property)": [[13, "wildboar.ensemble._ensemble.BaggingClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.baggingregressor property)": [[13, "wildboar.ensemble._ensemble.BaggingRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.basebagging property)": [[13, "wildboar.ensemble._ensemble.BaseBagging.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.baseforestclassifier property)": [[13, "wildboar.ensemble._ensemble.BaseForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.baseforestregressor property)": [[13, "wildboar.ensemble._ensemble.BaseForestRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.baseshapeletforestclassifier property)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.baseshapeletforestregressor property)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.extrashapelettreesclassifier property)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.extrashapelettreesregressor property)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.intervalforestclassifier property)": [[13, "wildboar.ensemble._ensemble.IntervalForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.intervalforestregressor property)": [[13, "wildboar.ensemble._ensemble.IntervalForestRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.isolationshapeletforest property)": [[13, "wildboar.ensemble._ensemble.IsolationShapeletForest.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.pivotforestclassifier property)": [[13, "wildboar.ensemble._ensemble.PivotForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.proximityforestclassifier property)": [[13, "wildboar.ensemble._ensemble.ProximityForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.rocketforestclassifier property)": [[13, "wildboar.ensemble._ensemble.RocketForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.rocketforestregressor property)": [[13, "wildboar.ensemble._ensemble.RocketForestRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.shapeletforestclassifier property)": [[13, "wildboar.ensemble._ensemble.ShapeletForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.shapeletforestembedding property)": [[13, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.shapeletforestregressor property)": [[13, "wildboar.ensemble._ensemble.ShapeletForestRegressor.base_estimator_"]], "decision_function() (wildboar.ensemble._ensemble.baggingclassifier method)": [[13, "wildboar.ensemble._ensemble.BaggingClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[13, "wildboar.ensemble._ensemble.IntervalForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[13, "wildboar.ensemble._ensemble.PivotForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ProximityForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[13, "wildboar.ensemble._ensemble.RocketForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestClassifier.decision_function"]], "estimators_samples_ (wildboar.ensemble._ensemble.baggingclassifier property)": [[13, "wildboar.ensemble._ensemble.BaggingClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.baggingregressor property)": [[13, "wildboar.ensemble._ensemble.BaggingRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.basebagging property)": [[13, "wildboar.ensemble._ensemble.BaseBagging.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.baseforestclassifier property)": [[13, "wildboar.ensemble._ensemble.BaseForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.baseforestregressor property)": [[13, "wildboar.ensemble._ensemble.BaseForestRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.baseshapeletforestclassifier property)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.baseshapeletforestregressor property)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.extrashapelettreesclassifier property)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.extrashapelettreesregressor property)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.intervalforestclassifier property)": [[13, "wildboar.ensemble._ensemble.IntervalForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.intervalforestregressor property)": [[13, "wildboar.ensemble._ensemble.IntervalForestRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.isolationshapeletforest property)": [[13, "wildboar.ensemble._ensemble.IsolationShapeletForest.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.pivotforestclassifier property)": [[13, "wildboar.ensemble._ensemble.PivotForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.proximityforestclassifier property)": [[13, "wildboar.ensemble._ensemble.ProximityForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.rocketforestclassifier property)": [[13, "wildboar.ensemble._ensemble.RocketForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.rocketforestregressor property)": [[13, "wildboar.ensemble._ensemble.RocketForestRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.shapeletforestclassifier property)": [[13, "wildboar.ensemble._ensemble.ShapeletForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.shapeletforestembedding property)": [[13, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.shapeletforestregressor property)": [[13, "wildboar.ensemble._ensemble.ShapeletForestRegressor.estimators_samples_"]], "fit() (wildboar.ensemble._ensemble.baggingclassifier method)": [[13, "wildboar.ensemble._ensemble.BaggingClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.baggingregressor method)": [[13, "wildboar.ensemble._ensemble.BaggingRegressor.fit"]], "fit() (wildboar.ensemble._ensemble.basebagging method)": [[13, "wildboar.ensemble._ensemble.BaseBagging.fit"]], "fit() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseForestClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.baseforestregressor method)": [[13, "wildboar.ensemble._ensemble.BaseForestRegressor.fit"]], "fit() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.fit"]], "fit() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.fit"]], "fit() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[13, "wildboar.ensemble._ensemble.IntervalForestClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[13, "wildboar.ensemble._ensemble.IntervalForestRegressor.fit"]], "fit() (wildboar.ensemble._ensemble.isolationshapeletforest method)": [[13, "wildboar.ensemble._ensemble.IsolationShapeletForest.fit"]], "fit() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[13, "wildboar.ensemble._ensemble.PivotForestClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ProximityForestClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[13, "wildboar.ensemble._ensemble.RocketForestClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[13, "wildboar.ensemble._ensemble.RocketForestRegressor.fit"]], "fit() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.fit"]], "fit() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestRegressor.fit"]], "fit_predict() (wildboar.ensemble._ensemble.isolationshapeletforest method)": [[13, "wildboar.ensemble._ensemble.IsolationShapeletForest.fit_predict"]], "get_metadata_routing() (wildboar.ensemble._ensemble.baggingclassifier method)": [[13, "wildboar.ensemble._ensemble.BaggingClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.baggingregressor method)": [[13, "wildboar.ensemble._ensemble.BaggingRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.basebagging method)": [[13, "wildboar.ensemble._ensemble.BaseBagging.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.baseforestregressor method)": [[13, "wildboar.ensemble._ensemble.BaseForestRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[13, "wildboar.ensemble._ensemble.IntervalForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[13, "wildboar.ensemble._ensemble.IntervalForestRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.isolationshapeletforest method)": [[13, "wildboar.ensemble._ensemble.IsolationShapeletForest.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[13, "wildboar.ensemble._ensemble.PivotForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ProximityForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[13, "wildboar.ensemble._ensemble.RocketForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[13, "wildboar.ensemble._ensemble.RocketForestRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestRegressor.get_metadata_routing"]], "get_params() (wildboar.ensemble._ensemble.baggingclassifier method)": [[13, "wildboar.ensemble._ensemble.BaggingClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.baggingregressor method)": [[13, "wildboar.ensemble._ensemble.BaggingRegressor.get_params"]], "get_params() (wildboar.ensemble._ensemble.basebagging method)": [[13, "wildboar.ensemble._ensemble.BaseBagging.get_params"]], "get_params() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseForestClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.baseforestregressor method)": [[13, "wildboar.ensemble._ensemble.BaseForestRegressor.get_params"]], "get_params() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.get_params"]], "get_params() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.get_params"]], "get_params() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[13, "wildboar.ensemble._ensemble.IntervalForestClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[13, "wildboar.ensemble._ensemble.IntervalForestRegressor.get_params"]], "get_params() (wildboar.ensemble._ensemble.isolationshapeletforest method)": [[13, "wildboar.ensemble._ensemble.IsolationShapeletForest.get_params"]], "get_params() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[13, "wildboar.ensemble._ensemble.PivotForestClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ProximityForestClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[13, "wildboar.ensemble._ensemble.RocketForestClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[13, "wildboar.ensemble._ensemble.RocketForestRegressor.get_params"]], "get_params() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.get_params"]], "get_params() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestRegressor.get_params"]], "predict() (wildboar.ensemble._ensemble.baggingclassifier method)": [[13, "wildboar.ensemble._ensemble.BaggingClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.baggingregressor method)": [[13, "wildboar.ensemble._ensemble.BaggingRegressor.predict"]], "predict() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseForestClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.baseforestregressor method)": [[13, "wildboar.ensemble._ensemble.BaseForestRegressor.predict"]], "predict() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.predict"]], "predict() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.predict"]], "predict() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[13, "wildboar.ensemble._ensemble.IntervalForestClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[13, "wildboar.ensemble._ensemble.IntervalForestRegressor.predict"]], "predict() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[13, "wildboar.ensemble._ensemble.PivotForestClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ProximityForestClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[13, "wildboar.ensemble._ensemble.RocketForestClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[13, "wildboar.ensemble._ensemble.RocketForestRegressor.predict"]], "predict() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.predict"]], "predict() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestRegressor.predict"]], "predict_log_proba() (wildboar.ensemble._ensemble.baggingclassifier method)": [[13, "wildboar.ensemble._ensemble.BaggingClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[13, "wildboar.ensemble._ensemble.IntervalForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[13, "wildboar.ensemble._ensemble.PivotForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ProximityForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[13, "wildboar.ensemble._ensemble.RocketForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestClassifier.predict_log_proba"]], "predict_proba() (wildboar.ensemble._ensemble.baggingclassifier method)": [[13, "wildboar.ensemble._ensemble.BaggingClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[13, "wildboar.ensemble._ensemble.IntervalForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[13, "wildboar.ensemble._ensemble.PivotForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ProximityForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[13, "wildboar.ensemble._ensemble.RocketForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestClassifier.predict_proba"]], "score() (wildboar.ensemble._ensemble.baggingclassifier method)": [[13, "wildboar.ensemble._ensemble.BaggingClassifier.score"]], "score() (wildboar.ensemble._ensemble.baggingregressor method)": [[13, "wildboar.ensemble._ensemble.BaggingRegressor.score"]], "score() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseForestClassifier.score"]], "score() (wildboar.ensemble._ensemble.baseforestregressor method)": [[13, "wildboar.ensemble._ensemble.BaseForestRegressor.score"]], "score() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.score"]], "score() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.score"]], "score() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.score"]], "score() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.score"]], "score() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[13, "wildboar.ensemble._ensemble.IntervalForestClassifier.score"]], "score() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[13, "wildboar.ensemble._ensemble.IntervalForestRegressor.score"]], "score() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[13, "wildboar.ensemble._ensemble.PivotForestClassifier.score"]], "score() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ProximityForestClassifier.score"]], "score() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[13, "wildboar.ensemble._ensemble.RocketForestClassifier.score"]], "score() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[13, "wildboar.ensemble._ensemble.RocketForestRegressor.score"]], "score() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestClassifier.score"]], "score() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.score"]], "score() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestRegressor.score"]], "set_params() (wildboar.ensemble._ensemble.baggingclassifier method)": [[13, "wildboar.ensemble._ensemble.BaggingClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.baggingregressor method)": [[13, "wildboar.ensemble._ensemble.BaggingRegressor.set_params"]], "set_params() (wildboar.ensemble._ensemble.basebagging method)": [[13, "wildboar.ensemble._ensemble.BaseBagging.set_params"]], "set_params() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseForestClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.baseforestregressor method)": [[13, "wildboar.ensemble._ensemble.BaseForestRegressor.set_params"]], "set_params() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[13, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.set_params"]], "set_params() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[13, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.set_params"]], "set_params() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[13, "wildboar.ensemble._ensemble.IntervalForestClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[13, "wildboar.ensemble._ensemble.IntervalForestRegressor.set_params"]], "set_params() (wildboar.ensemble._ensemble.isolationshapeletforest method)": [[13, "wildboar.ensemble._ensemble.IsolationShapeletForest.set_params"]], "set_params() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[13, "wildboar.ensemble._ensemble.PivotForestClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ProximityForestClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[13, "wildboar.ensemble._ensemble.RocketForestClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[13, "wildboar.ensemble._ensemble.RocketForestRegressor.set_params"]], "set_params() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.set_params"]], "set_params() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[13, "wildboar.ensemble._ensemble.ShapeletForestRegressor.set_params"]], "wildboar.ensemble._ensemble": [[13, "module-wildboar.ensemble._ensemble"]], "baggingclassifier (class in wildboar.ensemble)": [[14, "wildboar.ensemble.BaggingClassifier"]], "baggingregressor (class in wildboar.ensemble)": [[14, "wildboar.ensemble.BaggingRegressor"]], "basebagging (class in wildboar.ensemble)": [[14, "wildboar.ensemble.BaseBagging"]], "extrashapelettreesclassifier (class in wildboar.ensemble)": [[14, "wildboar.ensemble.ExtraShapeletTreesClassifier"]], "extrashapelettreesregressor (class in wildboar.ensemble)": [[14, "wildboar.ensemble.ExtraShapeletTreesRegressor"]], "intervalforestclassifier (class in wildboar.ensemble)": [[14, "wildboar.ensemble.IntervalForestClassifier"]], "intervalforestregressor (class in wildboar.ensemble)": [[14, "wildboar.ensemble.IntervalForestRegressor"]], "isolationshapeletforest (class in wildboar.ensemble)": [[14, "wildboar.ensemble.IsolationShapeletForest"]], "pivotforestclassifier (class in wildboar.ensemble)": [[14, "wildboar.ensemble.PivotForestClassifier"]], "proximityforestclassifier (class in wildboar.ensemble)": [[14, "wildboar.ensemble.ProximityForestClassifier"]], "rocketforestclassifier (class in wildboar.ensemble)": [[14, "wildboar.ensemble.RocketForestClassifier"]], "rocketforestregressor (class in wildboar.ensemble)": [[14, "wildboar.ensemble.RocketForestRegressor"]], "shapeletforestclassifier (class in wildboar.ensemble)": [[14, "wildboar.ensemble.ShapeletForestClassifier"]], "shapeletforestembedding (class in wildboar.ensemble)": [[14, "wildboar.ensemble.ShapeletForestEmbedding"]], "shapeletforestregressor (class in wildboar.ensemble)": [[14, "wildboar.ensemble.ShapeletForestRegressor"]], "base_estimator_ (wildboar.ensemble.baggingclassifier property)": [[14, "wildboar.ensemble.BaggingClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble.baggingregressor property)": [[14, "wildboar.ensemble.BaggingRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble.basebagging property)": [[14, "wildboar.ensemble.BaseBagging.base_estimator_"]], "base_estimator_ (wildboar.ensemble.extrashapelettreesclassifier property)": [[14, "wildboar.ensemble.ExtraShapeletTreesClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble.extrashapelettreesregressor property)": [[14, "wildboar.ensemble.ExtraShapeletTreesRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble.intervalforestclassifier property)": [[14, "wildboar.ensemble.IntervalForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble.intervalforestregressor property)": [[14, "wildboar.ensemble.IntervalForestRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble.isolationshapeletforest property)": [[14, "wildboar.ensemble.IsolationShapeletForest.base_estimator_"]], "base_estimator_ (wildboar.ensemble.pivotforestclassifier property)": [[14, "wildboar.ensemble.PivotForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble.proximityforestclassifier property)": [[14, "wildboar.ensemble.ProximityForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble.rocketforestclassifier property)": [[14, "wildboar.ensemble.RocketForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble.rocketforestregressor property)": [[14, "wildboar.ensemble.RocketForestRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble.shapeletforestclassifier property)": [[14, "wildboar.ensemble.ShapeletForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble.shapeletforestembedding property)": [[14, "wildboar.ensemble.ShapeletForestEmbedding.base_estimator_"]], "base_estimator_ (wildboar.ensemble.shapeletforestregressor property)": [[14, "wildboar.ensemble.ShapeletForestRegressor.base_estimator_"]], "decision_function() (wildboar.ensemble.baggingclassifier method)": [[14, "wildboar.ensemble.BaggingClassifier.decision_function"]], "decision_function() (wildboar.ensemble.extrashapelettreesclassifier method)": [[14, "wildboar.ensemble.ExtraShapeletTreesClassifier.decision_function"]], "decision_function() (wildboar.ensemble.intervalforestclassifier method)": [[14, "wildboar.ensemble.IntervalForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble.pivotforestclassifier method)": [[14, "wildboar.ensemble.PivotForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble.proximityforestclassifier method)": [[14, "wildboar.ensemble.ProximityForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble.rocketforestclassifier method)": [[14, "wildboar.ensemble.RocketForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble.shapeletforestclassifier method)": [[14, "wildboar.ensemble.ShapeletForestClassifier.decision_function"]], "estimators_samples_ (wildboar.ensemble.baggingclassifier property)": [[14, "wildboar.ensemble.BaggingClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.baggingregressor property)": [[14, "wildboar.ensemble.BaggingRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.basebagging property)": [[14, "wildboar.ensemble.BaseBagging.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.extrashapelettreesclassifier property)": [[14, "wildboar.ensemble.ExtraShapeletTreesClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.extrashapelettreesregressor property)": [[14, "wildboar.ensemble.ExtraShapeletTreesRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.intervalforestclassifier property)": [[14, "wildboar.ensemble.IntervalForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.intervalforestregressor property)": [[14, "wildboar.ensemble.IntervalForestRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.isolationshapeletforest property)": [[14, "wildboar.ensemble.IsolationShapeletForest.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.pivotforestclassifier property)": [[14, "wildboar.ensemble.PivotForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.proximityforestclassifier property)": [[14, "wildboar.ensemble.ProximityForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.rocketforestclassifier property)": [[14, "wildboar.ensemble.RocketForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.rocketforestregressor property)": [[14, "wildboar.ensemble.RocketForestRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.shapeletforestclassifier property)": [[14, "wildboar.ensemble.ShapeletForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.shapeletforestembedding property)": [[14, "wildboar.ensemble.ShapeletForestEmbedding.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.shapeletforestregressor property)": [[14, "wildboar.ensemble.ShapeletForestRegressor.estimators_samples_"]], "fit() (wildboar.ensemble.baggingclassifier method)": [[14, "wildboar.ensemble.BaggingClassifier.fit"]], "fit() (wildboar.ensemble.baggingregressor method)": [[14, "wildboar.ensemble.BaggingRegressor.fit"]], "fit() (wildboar.ensemble.basebagging method)": [[14, "wildboar.ensemble.BaseBagging.fit"]], "fit() (wildboar.ensemble.extrashapelettreesclassifier method)": [[14, "wildboar.ensemble.ExtraShapeletTreesClassifier.fit"]], "fit() (wildboar.ensemble.extrashapelettreesregressor method)": [[14, "wildboar.ensemble.ExtraShapeletTreesRegressor.fit"]], "fit() (wildboar.ensemble.intervalforestclassifier method)": [[14, "wildboar.ensemble.IntervalForestClassifier.fit"]], "fit() (wildboar.ensemble.intervalforestregressor method)": [[14, "wildboar.ensemble.IntervalForestRegressor.fit"]], "fit() (wildboar.ensemble.isolationshapeletforest method)": [[14, "wildboar.ensemble.IsolationShapeletForest.fit"]], "fit() (wildboar.ensemble.pivotforestclassifier method)": [[14, "wildboar.ensemble.PivotForestClassifier.fit"]], "fit() (wildboar.ensemble.proximityforestclassifier method)": [[14, "wildboar.ensemble.ProximityForestClassifier.fit"]], "fit() (wildboar.ensemble.rocketforestclassifier method)": [[14, "wildboar.ensemble.RocketForestClassifier.fit"]], "fit() (wildboar.ensemble.rocketforestregressor method)": [[14, "wildboar.ensemble.RocketForestRegressor.fit"]], "fit() (wildboar.ensemble.shapeletforestclassifier method)": [[14, "wildboar.ensemble.ShapeletForestClassifier.fit"]], "fit() (wildboar.ensemble.shapeletforestembedding method)": [[14, "wildboar.ensemble.ShapeletForestEmbedding.fit"]], "fit() (wildboar.ensemble.shapeletforestregressor method)": [[14, "wildboar.ensemble.ShapeletForestRegressor.fit"]], "fit_predict() (wildboar.ensemble.isolationshapeletforest method)": [[14, "wildboar.ensemble.IsolationShapeletForest.fit_predict"]], "get_metadata_routing() (wildboar.ensemble.baggingclassifier method)": [[14, "wildboar.ensemble.BaggingClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.baggingregressor method)": [[14, "wildboar.ensemble.BaggingRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.basebagging method)": [[14, "wildboar.ensemble.BaseBagging.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.extrashapelettreesclassifier method)": [[14, "wildboar.ensemble.ExtraShapeletTreesClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.extrashapelettreesregressor method)": [[14, "wildboar.ensemble.ExtraShapeletTreesRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.intervalforestclassifier method)": [[14, "wildboar.ensemble.IntervalForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.intervalforestregressor method)": [[14, "wildboar.ensemble.IntervalForestRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.isolationshapeletforest method)": [[14, "wildboar.ensemble.IsolationShapeletForest.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.pivotforestclassifier method)": [[14, "wildboar.ensemble.PivotForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.proximityforestclassifier method)": [[14, "wildboar.ensemble.ProximityForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.rocketforestclassifier method)": [[14, "wildboar.ensemble.RocketForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.rocketforestregressor method)": [[14, "wildboar.ensemble.RocketForestRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.shapeletforestclassifier method)": [[14, "wildboar.ensemble.ShapeletForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.shapeletforestembedding method)": [[14, "wildboar.ensemble.ShapeletForestEmbedding.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.shapeletforestregressor method)": [[14, "wildboar.ensemble.ShapeletForestRegressor.get_metadata_routing"]], "get_params() (wildboar.ensemble.baggingclassifier method)": [[14, "wildboar.ensemble.BaggingClassifier.get_params"]], "get_params() (wildboar.ensemble.baggingregressor method)": [[14, "wildboar.ensemble.BaggingRegressor.get_params"]], "get_params() (wildboar.ensemble.basebagging method)": [[14, "wildboar.ensemble.BaseBagging.get_params"]], "get_params() (wildboar.ensemble.extrashapelettreesclassifier method)": [[14, "wildboar.ensemble.ExtraShapeletTreesClassifier.get_params"]], "get_params() (wildboar.ensemble.extrashapelettreesregressor method)": [[14, "wildboar.ensemble.ExtraShapeletTreesRegressor.get_params"]], "get_params() (wildboar.ensemble.intervalforestclassifier method)": [[14, "wildboar.ensemble.IntervalForestClassifier.get_params"]], "get_params() (wildboar.ensemble.intervalforestregressor method)": [[14, "wildboar.ensemble.IntervalForestRegressor.get_params"]], "get_params() (wildboar.ensemble.isolationshapeletforest method)": [[14, "wildboar.ensemble.IsolationShapeletForest.get_params"]], "get_params() (wildboar.ensemble.pivotforestclassifier method)": [[14, "wildboar.ensemble.PivotForestClassifier.get_params"]], "get_params() (wildboar.ensemble.proximityforestclassifier method)": [[14, "wildboar.ensemble.ProximityForestClassifier.get_params"]], "get_params() (wildboar.ensemble.rocketforestclassifier method)": [[14, "wildboar.ensemble.RocketForestClassifier.get_params"]], "get_params() (wildboar.ensemble.rocketforestregressor method)": [[14, "wildboar.ensemble.RocketForestRegressor.get_params"]], "get_params() (wildboar.ensemble.shapeletforestclassifier method)": [[14, "wildboar.ensemble.ShapeletForestClassifier.get_params"]], "get_params() (wildboar.ensemble.shapeletforestembedding method)": [[14, "wildboar.ensemble.ShapeletForestEmbedding.get_params"]], "get_params() (wildboar.ensemble.shapeletforestregressor method)": [[14, "wildboar.ensemble.ShapeletForestRegressor.get_params"]], "predict() (wildboar.ensemble.baggingclassifier method)": [[14, "wildboar.ensemble.BaggingClassifier.predict"]], "predict() (wildboar.ensemble.baggingregressor method)": [[14, "wildboar.ensemble.BaggingRegressor.predict"]], "predict() (wildboar.ensemble.extrashapelettreesclassifier method)": [[14, "wildboar.ensemble.ExtraShapeletTreesClassifier.predict"]], "predict() (wildboar.ensemble.extrashapelettreesregressor method)": [[14, "wildboar.ensemble.ExtraShapeletTreesRegressor.predict"]], "predict() (wildboar.ensemble.intervalforestclassifier method)": [[14, "wildboar.ensemble.IntervalForestClassifier.predict"]], "predict() (wildboar.ensemble.intervalforestregressor method)": [[14, "wildboar.ensemble.IntervalForestRegressor.predict"]], "predict() (wildboar.ensemble.pivotforestclassifier method)": [[14, "wildboar.ensemble.PivotForestClassifier.predict"]], "predict() (wildboar.ensemble.proximityforestclassifier method)": [[14, "wildboar.ensemble.ProximityForestClassifier.predict"]], "predict() (wildboar.ensemble.rocketforestclassifier method)": [[14, "wildboar.ensemble.RocketForestClassifier.predict"]], "predict() (wildboar.ensemble.rocketforestregressor method)": [[14, "wildboar.ensemble.RocketForestRegressor.predict"]], "predict() (wildboar.ensemble.shapeletforestclassifier method)": [[14, "wildboar.ensemble.ShapeletForestClassifier.predict"]], "predict() (wildboar.ensemble.shapeletforestembedding method)": [[14, "wildboar.ensemble.ShapeletForestEmbedding.predict"]], "predict() (wildboar.ensemble.shapeletforestregressor method)": [[14, "wildboar.ensemble.ShapeletForestRegressor.predict"]], "predict_log_proba() (wildboar.ensemble.baggingclassifier method)": [[14, "wildboar.ensemble.BaggingClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble.extrashapelettreesclassifier method)": [[14, "wildboar.ensemble.ExtraShapeletTreesClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble.intervalforestclassifier method)": [[14, "wildboar.ensemble.IntervalForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble.pivotforestclassifier method)": [[14, "wildboar.ensemble.PivotForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble.proximityforestclassifier method)": [[14, "wildboar.ensemble.ProximityForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble.rocketforestclassifier method)": [[14, "wildboar.ensemble.RocketForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble.shapeletforestclassifier method)": [[14, "wildboar.ensemble.ShapeletForestClassifier.predict_log_proba"]], "predict_proba() (wildboar.ensemble.baggingclassifier method)": [[14, "wildboar.ensemble.BaggingClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble.extrashapelettreesclassifier method)": [[14, "wildboar.ensemble.ExtraShapeletTreesClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble.intervalforestclassifier method)": [[14, "wildboar.ensemble.IntervalForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble.pivotforestclassifier method)": [[14, "wildboar.ensemble.PivotForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble.proximityforestclassifier method)": [[14, "wildboar.ensemble.ProximityForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble.rocketforestclassifier method)": [[14, "wildboar.ensemble.RocketForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble.shapeletforestclassifier method)": [[14, "wildboar.ensemble.ShapeletForestClassifier.predict_proba"]], "score() (wildboar.ensemble.baggingclassifier method)": [[14, "wildboar.ensemble.BaggingClassifier.score"]], "score() (wildboar.ensemble.baggingregressor method)": [[14, "wildboar.ensemble.BaggingRegressor.score"]], "score() (wildboar.ensemble.extrashapelettreesclassifier method)": [[14, "wildboar.ensemble.ExtraShapeletTreesClassifier.score"]], "score() (wildboar.ensemble.extrashapelettreesregressor method)": [[14, "wildboar.ensemble.ExtraShapeletTreesRegressor.score"]], "score() (wildboar.ensemble.intervalforestclassifier method)": [[14, "wildboar.ensemble.IntervalForestClassifier.score"]], "score() (wildboar.ensemble.intervalforestregressor method)": [[14, "wildboar.ensemble.IntervalForestRegressor.score"]], "score() (wildboar.ensemble.pivotforestclassifier method)": [[14, "wildboar.ensemble.PivotForestClassifier.score"]], "score() (wildboar.ensemble.proximityforestclassifier method)": [[14, "wildboar.ensemble.ProximityForestClassifier.score"]], "score() (wildboar.ensemble.rocketforestclassifier method)": [[14, "wildboar.ensemble.RocketForestClassifier.score"]], "score() (wildboar.ensemble.rocketforestregressor method)": [[14, "wildboar.ensemble.RocketForestRegressor.score"]], "score() (wildboar.ensemble.shapeletforestclassifier method)": [[14, "wildboar.ensemble.ShapeletForestClassifier.score"]], "score() (wildboar.ensemble.shapeletforestembedding method)": [[14, "wildboar.ensemble.ShapeletForestEmbedding.score"]], "score() (wildboar.ensemble.shapeletforestregressor method)": [[14, "wildboar.ensemble.ShapeletForestRegressor.score"]], "set_params() (wildboar.ensemble.baggingclassifier method)": [[14, "wildboar.ensemble.BaggingClassifier.set_params"]], "set_params() (wildboar.ensemble.baggingregressor method)": [[14, "wildboar.ensemble.BaggingRegressor.set_params"]], "set_params() (wildboar.ensemble.basebagging method)": [[14, "wildboar.ensemble.BaseBagging.set_params"]], "set_params() (wildboar.ensemble.extrashapelettreesclassifier method)": [[14, "wildboar.ensemble.ExtraShapeletTreesClassifier.set_params"]], "set_params() (wildboar.ensemble.extrashapelettreesregressor method)": [[14, "wildboar.ensemble.ExtraShapeletTreesRegressor.set_params"]], "set_params() (wildboar.ensemble.intervalforestclassifier method)": [[14, "wildboar.ensemble.IntervalForestClassifier.set_params"]], "set_params() (wildboar.ensemble.intervalforestregressor method)": [[14, "wildboar.ensemble.IntervalForestRegressor.set_params"]], "set_params() (wildboar.ensemble.isolationshapeletforest method)": [[14, "wildboar.ensemble.IsolationShapeletForest.set_params"]], "set_params() (wildboar.ensemble.pivotforestclassifier method)": [[14, "wildboar.ensemble.PivotForestClassifier.set_params"]], "set_params() (wildboar.ensemble.proximityforestclassifier method)": [[14, "wildboar.ensemble.ProximityForestClassifier.set_params"]], "set_params() (wildboar.ensemble.rocketforestclassifier method)": [[14, "wildboar.ensemble.RocketForestClassifier.set_params"]], "set_params() (wildboar.ensemble.rocketforestregressor method)": [[14, "wildboar.ensemble.RocketForestRegressor.set_params"]], "set_params() (wildboar.ensemble.shapeletforestclassifier method)": [[14, "wildboar.ensemble.ShapeletForestClassifier.set_params"]], "set_params() (wildboar.ensemble.shapeletforestembedding method)": [[14, "wildboar.ensemble.ShapeletForestEmbedding.set_params"]], "set_params() (wildboar.ensemble.shapeletforestregressor method)": [[14, "wildboar.ensemble.ShapeletForestRegressor.set_params"]], "wildboar.ensemble": [[14, "module-wildboar.ensemble"]], "amplitudeimportance (class in wildboar.explain._importance)": [[15, "wildboar.explain._importance.AmplitudeImportance"]], "intervalimportance (class in wildboar.explain._importance)": [[15, "wildboar.explain._importance.IntervalImportance"]], "permuteimportance (class in wildboar.explain._importance)": [[15, "wildboar.explain._importance.PermuteImportance"]], "shapeletimportance (class in wildboar.explain._importance)": [[15, "wildboar.explain._importance.ShapeletImportance"]], "fit_explain() (wildboar.explain._importance.amplitudeimportance method)": [[15, "wildboar.explain._importance.AmplitudeImportance.fit_explain"]], "fit_explain() (wildboar.explain._importance.intervalimportance method)": [[15, "wildboar.explain._importance.IntervalImportance.fit_explain"]], "fit_explain() (wildboar.explain._importance.shapeletimportance method)": [[15, "wildboar.explain._importance.ShapeletImportance.fit_explain"]], "get_metadata_routing() (wildboar.explain._importance.amplitudeimportance method)": [[15, "wildboar.explain._importance.AmplitudeImportance.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain._importance.intervalimportance method)": [[15, "wildboar.explain._importance.IntervalImportance.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain._importance.permuteimportance method)": [[15, "wildboar.explain._importance.PermuteImportance.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain._importance.shapeletimportance method)": [[15, "wildboar.explain._importance.ShapeletImportance.get_metadata_routing"]], "get_params() (wildboar.explain._importance.amplitudeimportance method)": [[15, "wildboar.explain._importance.AmplitudeImportance.get_params"]], "get_params() (wildboar.explain._importance.intervalimportance method)": [[15, "wildboar.explain._importance.IntervalImportance.get_params"]], "get_params() (wildboar.explain._importance.permuteimportance method)": [[15, "wildboar.explain._importance.PermuteImportance.get_params"]], "get_params() (wildboar.explain._importance.shapeletimportance method)": [[15, "wildboar.explain._importance.ShapeletImportance.get_params"]], "plot() (wildboar.explain._importance.amplitudeimportance method)": [[15, "wildboar.explain._importance.AmplitudeImportance.plot"]], "plot() (wildboar.explain._importance.intervalimportance method)": [[15, "wildboar.explain._importance.IntervalImportance.plot"]], "plot() (wildboar.explain._importance.shapeletimportance method)": [[15, "wildboar.explain._importance.ShapeletImportance.plot"]], "plot_importances() (in module wildboar.explain._importance)": [[15, "wildboar.explain._importance.plot_importances"]], "set_params() (wildboar.explain._importance.amplitudeimportance method)": [[15, "wildboar.explain._importance.AmplitudeImportance.set_params"]], "set_params() (wildboar.explain._importance.intervalimportance method)": [[15, "wildboar.explain._importance.IntervalImportance.set_params"]], "set_params() (wildboar.explain._importance.permuteimportance method)": [[15, "wildboar.explain._importance.PermuteImportance.set_params"]], "set_params() (wildboar.explain._importance.shapeletimportance method)": [[15, "wildboar.explain._importance.ShapeletImportance.set_params"]], "wildboar.explain._importance": [[15, "module-wildboar.explain._importance"]], "counterfactuals() (in module wildboar.explain.counterfactual._helper)": [[16, "wildboar.explain.counterfactual._helper.counterfactuals"]], "wildboar.explain.counterfactual._helper": [[16, "module-wildboar.explain.counterfactual._helper"]], "kneighborscounterfactual (class in wildboar.explain.counterfactual._nn)": [[17, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual"]], "fit_explain() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[17, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.fit_explain"]], "get_metadata_routing() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[17, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.get_metadata_routing"]], "get_params() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[17, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.get_params"]], "plot() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[17, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.plot"]], "score() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[17, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.score"]], "set_params() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[17, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.set_params"]], "wildboar.explain.counterfactual._nn": [[17, "module-wildboar.explain.counterfactual._nn"]], "dynamictimewarptransform (class in wildboar.explain.counterfactual._proto)": [[18, "wildboar.explain.counterfactual._proto.DynamicTimeWarpTransform"]], "euclideantransform (class in wildboar.explain.counterfactual._proto)": [[18, "wildboar.explain.counterfactual._proto.EuclideanTransform"]], "knearestprototypesampler (class in wildboar.explain.counterfactual._proto)": [[18, "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler"]], "knearestshapeletprototypesampler (class in wildboar.explain.counterfactual._proto)": [[18, "wildboar.explain.counterfactual._proto.KNearestShapeletPrototypeSampler"]], "metrictransform (class in wildboar.explain.counterfactual._proto)": [[18, "wildboar.explain.counterfactual._proto.MetricTransform"]], "predictevaluator (class in wildboar.explain.counterfactual._proto)": [[18, "wildboar.explain.counterfactual._proto.PredictEvaluator"]], "probabilityevaluator (class in wildboar.explain.counterfactual._proto)": [[18, "wildboar.explain.counterfactual._proto.ProbabilityEvaluator"]], "prototypecounterfactual (class in wildboar.explain.counterfactual._proto)": [[18, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual"]], "prototypesampler (class in wildboar.explain.counterfactual._proto)": [[18, "wildboar.explain.counterfactual._proto.PrototypeSampler"]], "shapeletprototypesampler (class in wildboar.explain.counterfactual._proto)": [[18, "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler"]], "targetevaluator (class in wildboar.explain.counterfactual._proto)": [[18, "wildboar.explain.counterfactual._proto.TargetEvaluator"]], "uniformprototypesampler (class in wildboar.explain.counterfactual._proto)": [[18, "wildboar.explain.counterfactual._proto.UniformPrototypeSampler"]], "weighteddynamictimewarptransform (class in wildboar.explain.counterfactual._proto)": [[18, "wildboar.explain.counterfactual._proto.WeightedDynamicTimeWarpTransform"]], "fit_explain() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[18, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.fit_explain"]], "get_metadata_routing() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[18, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.get_metadata_routing"]], "get_params() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[18, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.get_params"]], "is_counterfactual() (wildboar.explain.counterfactual._proto.predictevaluator method)": [[18, "wildboar.explain.counterfactual._proto.PredictEvaluator.is_counterfactual"]], "is_counterfactual() (wildboar.explain.counterfactual._proto.probabilityevaluator method)": [[18, "wildboar.explain.counterfactual._proto.ProbabilityEvaluator.is_counterfactual"]], "is_counterfactual() (wildboar.explain.counterfactual._proto.targetevaluator method)": [[18, "wildboar.explain.counterfactual._proto.TargetEvaluator.is_counterfactual"]], "move() (wildboar.explain.counterfactual._proto.dynamictimewarptransform method)": [[18, "wildboar.explain.counterfactual._proto.DynamicTimeWarpTransform.move"]], "move() (wildboar.explain.counterfactual._proto.euclideantransform method)": [[18, "wildboar.explain.counterfactual._proto.EuclideanTransform.move"]], "move() (wildboar.explain.counterfactual._proto.knearestprototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler.move"]], "move() (wildboar.explain.counterfactual._proto.knearestshapeletprototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.KNearestShapeletPrototypeSampler.move"]], "move() (wildboar.explain.counterfactual._proto.metrictransform method)": [[18, "wildboar.explain.counterfactual._proto.MetricTransform.move"]], "move() (wildboar.explain.counterfactual._proto.prototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.PrototypeSampler.move"]], "move() (wildboar.explain.counterfactual._proto.shapeletprototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler.move"]], "move() (wildboar.explain.counterfactual._proto.uniformprototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.UniformPrototypeSampler.move"]], "move() (wildboar.explain.counterfactual._proto.weighteddynamictimewarptransform method)": [[18, "wildboar.explain.counterfactual._proto.WeightedDynamicTimeWarpTransform.move"]], "nearest_index() (wildboar.explain.counterfactual._proto.knearestprototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler.nearest_index"]], "plot() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[18, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.plot"]], "sample() (wildboar.explain.counterfactual._proto.knearestprototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler.sample"]], "sample() (wildboar.explain.counterfactual._proto.knearestshapeletprototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.KNearestShapeletPrototypeSampler.sample"]], "sample() (wildboar.explain.counterfactual._proto.prototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.PrototypeSampler.sample"]], "sample() (wildboar.explain.counterfactual._proto.shapeletprototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler.sample"]], "sample() (wildboar.explain.counterfactual._proto.uniformprototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.UniformPrototypeSampler.sample"]], "sample_move() (wildboar.explain.counterfactual._proto.knearestprototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler.sample_move"]], "sample_move() (wildboar.explain.counterfactual._proto.knearestshapeletprototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.KNearestShapeletPrototypeSampler.sample_move"]], "sample_move() (wildboar.explain.counterfactual._proto.prototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.PrototypeSampler.sample_move"]], "sample_move() (wildboar.explain.counterfactual._proto.shapeletprototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler.sample_move"]], "sample_move() (wildboar.explain.counterfactual._proto.uniformprototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.UniformPrototypeSampler.sample_move"]], "sample_shapelet() (wildboar.explain.counterfactual._proto.shapeletprototypesampler method)": [[18, "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler.sample_shapelet"]], "score() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[18, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.score"]], "set_params() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[18, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.set_params"]], "wildboar.explain.counterfactual._proto": [[18, "module-wildboar.explain.counterfactual._proto"]], "shapeletforestcounterfactual (class in wildboar.explain.counterfactual._sf)": [[19, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual"]], "fit_explain() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[19, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.fit_explain"]], "get_metadata_routing() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[19, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.get_metadata_routing"]], "get_params() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[19, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.get_params"]], "plot() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[19, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.plot"]], "score() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[19, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.score"]], "set_params() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[19, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.set_params"]], "wildboar.explain.counterfactual._sf": [[19, "module-wildboar.explain.counterfactual._sf"]], "kneighborscounterfactual (class in wildboar.explain.counterfactual)": [[20, "wildboar.explain.counterfactual.KNeighborsCounterfactual"]], "prototypecounterfactual (class in wildboar.explain.counterfactual)": [[20, "wildboar.explain.counterfactual.PrototypeCounterfactual"]], "shapeletforestcounterfactual (class in wildboar.explain.counterfactual)": [[20, "wildboar.explain.counterfactual.ShapeletForestCounterfactual"]], "counterfactuals() (in module wildboar.explain.counterfactual)": [[20, "wildboar.explain.counterfactual.counterfactuals"]], "fit_explain() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[20, "wildboar.explain.counterfactual.KNeighborsCounterfactual.fit_explain"]], "fit_explain() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[20, "wildboar.explain.counterfactual.PrototypeCounterfactual.fit_explain"]], "fit_explain() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[20, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.fit_explain"]], "get_metadata_routing() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[20, "wildboar.explain.counterfactual.KNeighborsCounterfactual.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[20, "wildboar.explain.counterfactual.PrototypeCounterfactual.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[20, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.get_metadata_routing"]], "get_params() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[20, "wildboar.explain.counterfactual.KNeighborsCounterfactual.get_params"]], "get_params() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[20, "wildboar.explain.counterfactual.PrototypeCounterfactual.get_params"]], "get_params() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[20, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.get_params"]], "plot() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[20, "wildboar.explain.counterfactual.KNeighborsCounterfactual.plot"]], "plot() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[20, "wildboar.explain.counterfactual.PrototypeCounterfactual.plot"]], "plot() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[20, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.plot"]], "proximity() (in module wildboar.explain.counterfactual)": [[20, "wildboar.explain.counterfactual.proximity"]], "score() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[20, "wildboar.explain.counterfactual.KNeighborsCounterfactual.score"]], "score() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[20, "wildboar.explain.counterfactual.PrototypeCounterfactual.score"]], "score() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[20, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.score"]], "set_params() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[20, "wildboar.explain.counterfactual.KNeighborsCounterfactual.set_params"]], "set_params() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[20, "wildboar.explain.counterfactual.PrototypeCounterfactual.set_params"]], "set_params() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[20, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.set_params"]], "wildboar.explain.counterfactual": [[20, "module-wildboar.explain.counterfactual"]], "amplitudeimportance (class in wildboar.explain)": [[21, "wildboar.explain.AmplitudeImportance"]], "intervalimportance (class in wildboar.explain)": [[21, "wildboar.explain.IntervalImportance"]], "shapeletimportance (class in wildboar.explain)": [[21, "wildboar.explain.ShapeletImportance"]], "fit_explain() (wildboar.explain.amplitudeimportance method)": [[21, "wildboar.explain.AmplitudeImportance.fit_explain"]], "fit_explain() (wildboar.explain.intervalimportance method)": [[21, "wildboar.explain.IntervalImportance.fit_explain"]], "fit_explain() (wildboar.explain.shapeletimportance method)": [[21, "wildboar.explain.ShapeletImportance.fit_explain"]], "get_metadata_routing() (wildboar.explain.amplitudeimportance method)": [[21, "wildboar.explain.AmplitudeImportance.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain.intervalimportance method)": [[21, "wildboar.explain.IntervalImportance.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain.shapeletimportance method)": [[21, "wildboar.explain.ShapeletImportance.get_metadata_routing"]], "get_params() (wildboar.explain.amplitudeimportance method)": [[21, "wildboar.explain.AmplitudeImportance.get_params"]], "get_params() (wildboar.explain.intervalimportance method)": [[21, "wildboar.explain.IntervalImportance.get_params"]], "get_params() (wildboar.explain.shapeletimportance method)": [[21, "wildboar.explain.ShapeletImportance.get_params"]], "plot() (wildboar.explain.amplitudeimportance method)": [[21, "wildboar.explain.AmplitudeImportance.plot"]], "plot() (wildboar.explain.intervalimportance method)": [[21, "wildboar.explain.IntervalImportance.plot"]], "plot() (wildboar.explain.shapeletimportance method)": [[21, "wildboar.explain.ShapeletImportance.plot"]], "plot_importances() (in module wildboar.explain)": [[21, "wildboar.explain.plot_importances"]], "set_params() (wildboar.explain.amplitudeimportance method)": [[21, "wildboar.explain.AmplitudeImportance.set_params"]], "set_params() (wildboar.explain.intervalimportance method)": [[21, "wildboar.explain.IntervalImportance.set_params"]], "set_params() (wildboar.explain.shapeletimportance method)": [[21, "wildboar.explain.ShapeletImportance.set_params"]], "wildboar.explain": [[21, "module-wildboar.explain"]], "iseos() (in module wildboar)": [[22, "wildboar.iseos"]], "wildboar": [[22, "module-wildboar"]], "hydraclassifier (class in wildboar.linear_model._hydra)": [[23, "wildboar.linear_model._hydra.HydraClassifier"]], "get_metadata_routing() (wildboar.linear_model._hydra.hydraclassifier method)": [[23, "wildboar.linear_model._hydra.HydraClassifier.get_metadata_routing"]], "get_params() (wildboar.linear_model._hydra.hydraclassifier method)": [[23, "wildboar.linear_model._hydra.HydraClassifier.get_params"]], "score() (wildboar.linear_model._hydra.hydraclassifier method)": [[23, "wildboar.linear_model._hydra.HydraClassifier.score"]], "set_params() (wildboar.linear_model._hydra.hydraclassifier method)": [[23, "wildboar.linear_model._hydra.HydraClassifier.set_params"]], "wildboar.linear_model._hydra": [[23, "module-wildboar.linear_model._hydra"]], "rocketclassifier (class in wildboar.linear_model._rocket)": [[24, "wildboar.linear_model._rocket.RocketClassifier"]], "rocketregressor (class in wildboar.linear_model._rocket)": [[24, "wildboar.linear_model._rocket.RocketRegressor"]], "get_metadata_routing() (wildboar.linear_model._rocket.rocketclassifier method)": [[24, "wildboar.linear_model._rocket.RocketClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model._rocket.rocketregressor method)": [[24, "wildboar.linear_model._rocket.RocketRegressor.get_metadata_routing"]], "get_params() (wildboar.linear_model._rocket.rocketclassifier method)": [[24, "wildboar.linear_model._rocket.RocketClassifier.get_params"]], "get_params() (wildboar.linear_model._rocket.rocketregressor method)": [[24, "wildboar.linear_model._rocket.RocketRegressor.get_params"]], "score() (wildboar.linear_model._rocket.rocketclassifier method)": [[24, "wildboar.linear_model._rocket.RocketClassifier.score"]], "score() (wildboar.linear_model._rocket.rocketregressor method)": [[24, "wildboar.linear_model._rocket.RocketRegressor.score"]], "set_params() (wildboar.linear_model._rocket.rocketclassifier method)": [[24, "wildboar.linear_model._rocket.RocketClassifier.set_params"]], "set_params() (wildboar.linear_model._rocket.rocketregressor method)": [[24, "wildboar.linear_model._rocket.RocketRegressor.set_params"]], "wildboar.linear_model._rocket": [[24, "module-wildboar.linear_model._rocket"]], "randomshapeletclassifier (class in wildboar.linear_model._shapelet)": [[25, "wildboar.linear_model._shapelet.RandomShapeletClassifier"]], "randomshapeletregressor (class in wildboar.linear_model._shapelet)": [[25, "wildboar.linear_model._shapelet.RandomShapeletRegressor"]], "get_metadata_routing() (wildboar.linear_model._shapelet.randomshapeletclassifier method)": [[25, "wildboar.linear_model._shapelet.RandomShapeletClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model._shapelet.randomshapeletregressor method)": [[25, "wildboar.linear_model._shapelet.RandomShapeletRegressor.get_metadata_routing"]], "get_params() (wildboar.linear_model._shapelet.randomshapeletclassifier method)": [[25, "wildboar.linear_model._shapelet.RandomShapeletClassifier.get_params"]], "get_params() (wildboar.linear_model._shapelet.randomshapeletregressor method)": [[25, "wildboar.linear_model._shapelet.RandomShapeletRegressor.get_params"]], "score() (wildboar.linear_model._shapelet.randomshapeletclassifier method)": [[25, "wildboar.linear_model._shapelet.RandomShapeletClassifier.score"]], "score() (wildboar.linear_model._shapelet.randomshapeletregressor method)": [[25, "wildboar.linear_model._shapelet.RandomShapeletRegressor.score"]], "set_params() (wildboar.linear_model._shapelet.randomshapeletclassifier method)": [[25, "wildboar.linear_model._shapelet.RandomShapeletClassifier.set_params"]], "set_params() (wildboar.linear_model._shapelet.randomshapeletregressor method)": [[25, "wildboar.linear_model._shapelet.RandomShapeletRegressor.set_params"]], "wildboar.linear_model._shapelet": [[25, "module-wildboar.linear_model._shapelet"]], "basetransformclassifier (class in wildboar.linear_model._transform)": [[26, "wildboar.linear_model._transform.BaseTransformClassifier"]], "basetransformestimator (class in wildboar.linear_model._transform)": [[26, "wildboar.linear_model._transform.BaseTransformEstimator"]], "basetransformregressor (class in wildboar.linear_model._transform)": [[26, "wildboar.linear_model._transform.BaseTransformRegressor"]], "transformridgecv (class in wildboar.linear_model._transform)": [[26, "wildboar.linear_model._transform.TransformRidgeCV"]], "transformridgeclassifiercv (class in wildboar.linear_model._transform)": [[26, "wildboar.linear_model._transform.TransformRidgeClassifierCV"]], "get_metadata_routing() (wildboar.linear_model._transform.basetransformclassifier method)": [[26, "wildboar.linear_model._transform.BaseTransformClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model._transform.basetransformestimator method)": [[26, "wildboar.linear_model._transform.BaseTransformEstimator.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model._transform.basetransformregressor method)": [[26, "wildboar.linear_model._transform.BaseTransformRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model._transform.transformridgecv method)": [[26, "wildboar.linear_model._transform.TransformRidgeCV.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model._transform.transformridgeclassifiercv method)": [[26, "wildboar.linear_model._transform.TransformRidgeClassifierCV.get_metadata_routing"]], "get_params() (wildboar.linear_model._transform.basetransformclassifier method)": [[26, "wildboar.linear_model._transform.BaseTransformClassifier.get_params"]], "get_params() (wildboar.linear_model._transform.basetransformestimator method)": [[26, "wildboar.linear_model._transform.BaseTransformEstimator.get_params"]], "get_params() (wildboar.linear_model._transform.basetransformregressor method)": [[26, "wildboar.linear_model._transform.BaseTransformRegressor.get_params"]], "get_params() (wildboar.linear_model._transform.transformridgecv method)": [[26, "wildboar.linear_model._transform.TransformRidgeCV.get_params"]], "get_params() (wildboar.linear_model._transform.transformridgeclassifiercv method)": [[26, "wildboar.linear_model._transform.TransformRidgeClassifierCV.get_params"]], "score() (wildboar.linear_model._transform.basetransformclassifier method)": [[26, "wildboar.linear_model._transform.BaseTransformClassifier.score"]], "score() (wildboar.linear_model._transform.basetransformregressor method)": [[26, "wildboar.linear_model._transform.BaseTransformRegressor.score"]], "score() (wildboar.linear_model._transform.transformridgecv method)": [[26, "wildboar.linear_model._transform.TransformRidgeCV.score"]], "score() (wildboar.linear_model._transform.transformridgeclassifiercv method)": [[26, "wildboar.linear_model._transform.TransformRidgeClassifierCV.score"]], "set_params() (wildboar.linear_model._transform.basetransformclassifier method)": [[26, "wildboar.linear_model._transform.BaseTransformClassifier.set_params"]], "set_params() (wildboar.linear_model._transform.basetransformestimator method)": [[26, "wildboar.linear_model._transform.BaseTransformEstimator.set_params"]], "set_params() (wildboar.linear_model._transform.basetransformregressor method)": [[26, "wildboar.linear_model._transform.BaseTransformRegressor.set_params"]], "set_params() (wildboar.linear_model._transform.transformridgecv method)": [[26, "wildboar.linear_model._transform.TransformRidgeCV.set_params"]], "set_params() (wildboar.linear_model._transform.transformridgeclassifiercv method)": [[26, "wildboar.linear_model._transform.TransformRidgeClassifierCV.set_params"]], "wildboar.linear_model._transform": [[26, "module-wildboar.linear_model._transform"]], "hydraclassifier (class in wildboar.linear_model)": [[27, "wildboar.linear_model.HydraClassifier"]], "randomshapeletclassifier (class in wildboar.linear_model)": [[27, "wildboar.linear_model.RandomShapeletClassifier"]], "randomshapeletregressor (class in wildboar.linear_model)": [[27, "wildboar.linear_model.RandomShapeletRegressor"]], "rocketclassifier (class in wildboar.linear_model)": [[27, "wildboar.linear_model.RocketClassifier"]], "rocketregressor (class in wildboar.linear_model)": [[27, "wildboar.linear_model.RocketRegressor"]], "get_metadata_routing() (wildboar.linear_model.hydraclassifier method)": [[27, "wildboar.linear_model.HydraClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model.randomshapeletclassifier method)": [[27, "wildboar.linear_model.RandomShapeletClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model.randomshapeletregressor method)": [[27, "wildboar.linear_model.RandomShapeletRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model.rocketclassifier method)": [[27, "wildboar.linear_model.RocketClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model.rocketregressor method)": [[27, "wildboar.linear_model.RocketRegressor.get_metadata_routing"]], "get_params() (wildboar.linear_model.hydraclassifier method)": [[27, "wildboar.linear_model.HydraClassifier.get_params"]], "get_params() (wildboar.linear_model.randomshapeletclassifier method)": [[27, "wildboar.linear_model.RandomShapeletClassifier.get_params"]], "get_params() (wildboar.linear_model.randomshapeletregressor method)": [[27, "wildboar.linear_model.RandomShapeletRegressor.get_params"]], "get_params() (wildboar.linear_model.rocketclassifier method)": [[27, "wildboar.linear_model.RocketClassifier.get_params"]], "get_params() (wildboar.linear_model.rocketregressor method)": [[27, "wildboar.linear_model.RocketRegressor.get_params"]], "score() (wildboar.linear_model.hydraclassifier method)": [[27, "wildboar.linear_model.HydraClassifier.score"]], "score() (wildboar.linear_model.randomshapeletclassifier method)": [[27, "wildboar.linear_model.RandomShapeletClassifier.score"]], "score() (wildboar.linear_model.randomshapeletregressor method)": [[27, "wildboar.linear_model.RandomShapeletRegressor.score"]], "score() (wildboar.linear_model.rocketclassifier method)": [[27, "wildboar.linear_model.RocketClassifier.score"]], "score() (wildboar.linear_model.rocketregressor method)": [[27, "wildboar.linear_model.RocketRegressor.score"]], "set_params() (wildboar.linear_model.hydraclassifier method)": [[27, "wildboar.linear_model.HydraClassifier.set_params"]], "set_params() (wildboar.linear_model.randomshapeletclassifier method)": [[27, "wildboar.linear_model.RandomShapeletClassifier.set_params"]], "set_params() (wildboar.linear_model.randomshapeletregressor method)": [[27, "wildboar.linear_model.RandomShapeletRegressor.set_params"]], "set_params() (wildboar.linear_model.rocketclassifier method)": [[27, "wildboar.linear_model.RocketClassifier.set_params"]], "set_params() (wildboar.linear_model.rocketregressor method)": [[27, "wildboar.linear_model.RocketRegressor.set_params"]], "wildboar.linear_model": [[27, "module-wildboar.linear_model"]], "compactness_score() (in module wildboar.metrics._counterfactual)": [[28, "wildboar.metrics._counterfactual.compactness_score"]], "plausability_score() (in module wildboar.metrics._counterfactual)": [[28, "wildboar.metrics._counterfactual.plausability_score"]], "proximity_score() (in module wildboar.metrics._counterfactual)": [[28, "wildboar.metrics._counterfactual.proximity_score"]], "redudancy_score() (in module wildboar.metrics._counterfactual)": [[28, "wildboar.metrics._counterfactual.redudancy_score"]], "relative_proximity_score() (in module wildboar.metrics._counterfactual)": [[28, "wildboar.metrics._counterfactual.relative_proximity_score"]], "validity_score() (in module wildboar.metrics._counterfactual)": [[28, "wildboar.metrics._counterfactual.validity_score"]], "wildboar.metrics._counterfactual": [[28, "module-wildboar.metrics._counterfactual"]], "compactness_score() (in module wildboar.metrics)": [[29, "wildboar.metrics.compactness_score"]], "plausability_score() (in module wildboar.metrics)": [[29, "wildboar.metrics.plausability_score"]], "proximity_score() (in module wildboar.metrics)": [[29, "wildboar.metrics.proximity_score"]], "redudancy_score() (in module wildboar.metrics)": [[29, "wildboar.metrics.redudancy_score"]], "relative_proximity_score() (in module wildboar.metrics)": [[29, "wildboar.metrics.relative_proximity_score"]], "validity_score() (in module wildboar.metrics)": [[29, "wildboar.metrics.validity_score"]], "wildboar.metrics": [[29, "module-wildboar.metrics"]], "repeatedoutliersplit (class in wildboar.model_selection._cv)": [[30, "wildboar.model_selection._cv.RepeatedOutlierSplit"]], "get_n_splits() (wildboar.model_selection._cv.repeatedoutliersplit method)": [[30, "wildboar.model_selection._cv.RepeatedOutlierSplit.get_n_splits"]], "split() (wildboar.model_selection._cv.repeatedoutliersplit method)": [[30, "wildboar.model_selection._cv.RepeatedOutlierSplit.split"]], "wildboar.model_selection._cv": [[30, "module-wildboar.model_selection._cv"]], "outlier_train_test_split() (in module wildboar.model_selection._outlier)": [[31, "wildboar.model_selection._outlier.outlier_train_test_split"]], "wildboar.model_selection._outlier": [[31, "module-wildboar.model_selection._outlier"]], "repeatedoutliersplit (class in wildboar.model_selection)": [[32, "wildboar.model_selection.RepeatedOutlierSplit"]], "get_n_splits() (wildboar.model_selection.repeatedoutliersplit method)": [[32, "wildboar.model_selection.RepeatedOutlierSplit.get_n_splits"]], "outlier_train_test_split() (in module wildboar.model_selection)": [[32, "wildboar.model_selection.outlier_train_test_split"]], "split() (wildboar.model_selection.repeatedoutliersplit method)": [[32, "wildboar.model_selection.RepeatedOutlierSplit.split"]], "wildboar.model_selection": [[32, "module-wildboar.model_selection"]], "baseattributetransform (class in wildboar.transform._base)": [[33, "wildboar.transform._base.BaseAttributeTransform"]], "fit() (wildboar.transform._base.baseattributetransform method)": [[33, "wildboar.transform._base.BaseAttributeTransform.fit"]], "fit_transform() (wildboar.transform._base.baseattributetransform method)": [[33, "wildboar.transform._base.BaseAttributeTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._base.baseattributetransform method)": [[33, "wildboar.transform._base.BaseAttributeTransform.get_metadata_routing"]], "get_params() (wildboar.transform._base.baseattributetransform method)": [[33, "wildboar.transform._base.BaseAttributeTransform.get_params"]], "set_output() (wildboar.transform._base.baseattributetransform method)": [[33, "wildboar.transform._base.BaseAttributeTransform.set_output"]], "set_params() (wildboar.transform._base.baseattributetransform method)": [[33, "wildboar.transform._base.BaseAttributeTransform.set_params"]], "transform() (wildboar.transform._base.baseattributetransform method)": [[33, "wildboar.transform._base.BaseAttributeTransform.transform"]], "wildboar.transform._base": [[33, "module-wildboar.transform._base"]], "convolve() (in module wildboar.transform._conv)": [[34, "wildboar.transform._conv.convolve"]], "wildboar.transform._conv": [[34, "module-wildboar.transform._conv"]], "difftransform (class in wildboar.transform._diff)": [[35, "wildboar.transform._diff.DiffTransform"]], "fit_transform() (wildboar.transform._diff.difftransform method)": [[35, "wildboar.transform._diff.DiffTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._diff.difftransform method)": [[35, "wildboar.transform._diff.DiffTransform.get_metadata_routing"]], "get_params() (wildboar.transform._diff.difftransform method)": [[35, "wildboar.transform._diff.DiffTransform.get_params"]], "set_output() (wildboar.transform._diff.difftransform method)": [[35, "wildboar.transform._diff.DiffTransform.set_output"]], "set_params() (wildboar.transform._diff.difftransform method)": [[35, "wildboar.transform._diff.DiffTransform.set_params"]], "wildboar.transform._diff": [[35, "module-wildboar.transform._diff"]], "hydratransform (class in wildboar.transform._hydra)": [[36, "wildboar.transform._hydra.HydraTransform"]], "fit() (wildboar.transform._hydra.hydratransform method)": [[36, "wildboar.transform._hydra.HydraTransform.fit"]], "fit_transform() (wildboar.transform._hydra.hydratransform method)": [[36, "wildboar.transform._hydra.HydraTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._hydra.hydratransform method)": [[36, "wildboar.transform._hydra.HydraTransform.get_metadata_routing"]], "get_params() (wildboar.transform._hydra.hydratransform method)": [[36, "wildboar.transform._hydra.HydraTransform.get_params"]], "set_output() (wildboar.transform._hydra.hydratransform method)": [[36, "wildboar.transform._hydra.HydraTransform.set_output"]], "set_params() (wildboar.transform._hydra.hydratransform method)": [[36, "wildboar.transform._hydra.HydraTransform.set_params"]], "transform() (wildboar.transform._hydra.hydratransform method)": [[36, "wildboar.transform._hydra.HydraTransform.transform"]], "wildboar.transform._hydra": [[36, "module-wildboar.transform._hydra"]], "featuretransform (class in wildboar.transform._interval)": [[37, "wildboar.transform._interval.FeatureTransform"]], "intervalmixin (class in wildboar.transform._interval)": [[37, "wildboar.transform._interval.IntervalMixin"]], "intervaltransform (class in wildboar.transform._interval)": [[37, "wildboar.transform._interval.IntervalTransform"]], "fit() (wildboar.transform._interval.featuretransform method)": [[37, "wildboar.transform._interval.FeatureTransform.fit"]], "fit() (wildboar.transform._interval.intervaltransform method)": [[37, "wildboar.transform._interval.IntervalTransform.fit"]], "fit_transform() (wildboar.transform._interval.featuretransform method)": [[37, "wildboar.transform._interval.FeatureTransform.fit_transform"]], "fit_transform() (wildboar.transform._interval.intervaltransform method)": [[37, "wildboar.transform._interval.IntervalTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._interval.featuretransform method)": [[37, "wildboar.transform._interval.FeatureTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform._interval.intervaltransform method)": [[37, "wildboar.transform._interval.IntervalTransform.get_metadata_routing"]], "get_params() (wildboar.transform._interval.featuretransform method)": [[37, "wildboar.transform._interval.FeatureTransform.get_params"]], "get_params() (wildboar.transform._interval.intervaltransform method)": [[37, "wildboar.transform._interval.IntervalTransform.get_params"]], "set_output() (wildboar.transform._interval.featuretransform method)": [[37, "wildboar.transform._interval.FeatureTransform.set_output"]], "set_output() (wildboar.transform._interval.intervaltransform method)": [[37, "wildboar.transform._interval.IntervalTransform.set_output"]], "set_params() (wildboar.transform._interval.featuretransform method)": [[37, "wildboar.transform._interval.FeatureTransform.set_params"]], "set_params() (wildboar.transform._interval.intervaltransform method)": [[37, "wildboar.transform._interval.IntervalTransform.set_params"]], "transform() (wildboar.transform._interval.featuretransform method)": [[37, "wildboar.transform._interval.FeatureTransform.transform"]], "transform() (wildboar.transform._interval.intervaltransform method)": [[37, "wildboar.transform._interval.IntervalTransform.transform"]], "wildboar.transform._interval": [[37, "module-wildboar.transform._interval"]], "matrixprofiletransform (class in wildboar.transform._matrix_profile)": [[38, "wildboar.transform._matrix_profile.MatrixProfileTransform"]], "fit() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[38, "wildboar.transform._matrix_profile.MatrixProfileTransform.fit"]], "fit_transform() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[38, "wildboar.transform._matrix_profile.MatrixProfileTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[38, "wildboar.transform._matrix_profile.MatrixProfileTransform.get_metadata_routing"]], "get_params() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[38, "wildboar.transform._matrix_profile.MatrixProfileTransform.get_params"]], "set_output() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[38, "wildboar.transform._matrix_profile.MatrixProfileTransform.set_output"]], "set_params() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[38, "wildboar.transform._matrix_profile.MatrixProfileTransform.set_params"]], "transform() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[38, "wildboar.transform._matrix_profile.MatrixProfileTransform.transform"]], "wildboar.transform._matrix_profile": [[38, "module-wildboar.transform._matrix_profile"]], "pivotmixin (class in wildboar.transform._pivot)": [[39, "wildboar.transform._pivot.PivotMixin"]], "pivottransform (class in wildboar.transform._pivot)": [[39, "wildboar.transform._pivot.PivotTransform"]], "proximitytransform (class in wildboar.transform._pivot)": [[39, "wildboar.transform._pivot.ProximityTransform"]], "fit() (wildboar.transform._pivot.pivottransform method)": [[39, "wildboar.transform._pivot.PivotTransform.fit"]], "fit_transform() (wildboar.transform._pivot.pivottransform method)": [[39, "wildboar.transform._pivot.PivotTransform.fit_transform"]], "fit_transform() (wildboar.transform._pivot.proximitytransform method)": [[39, "wildboar.transform._pivot.ProximityTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._pivot.pivottransform method)": [[39, "wildboar.transform._pivot.PivotTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform._pivot.proximitytransform method)": [[39, "wildboar.transform._pivot.ProximityTransform.get_metadata_routing"]], "get_params() (wildboar.transform._pivot.pivottransform method)": [[39, "wildboar.transform._pivot.PivotTransform.get_params"]], "get_params() (wildboar.transform._pivot.proximitytransform method)": [[39, "wildboar.transform._pivot.ProximityTransform.get_params"]], "set_output() (wildboar.transform._pivot.pivottransform method)": [[39, "wildboar.transform._pivot.PivotTransform.set_output"]], "set_output() (wildboar.transform._pivot.proximitytransform method)": [[39, "wildboar.transform._pivot.ProximityTransform.set_output"]], "set_params() (wildboar.transform._pivot.pivottransform method)": [[39, "wildboar.transform._pivot.PivotTransform.set_params"]], "set_params() (wildboar.transform._pivot.proximitytransform method)": [[39, "wildboar.transform._pivot.ProximityTransform.set_params"]], "transform() (wildboar.transform._pivot.pivottransform method)": [[39, "wildboar.transform._pivot.PivotTransform.transform"]], "wildboar.transform._pivot": [[39, "module-wildboar.transform._pivot"]], "rocketmixin (class in wildboar.transform._rocket)": [[40, "wildboar.transform._rocket.RocketMixin"]], "rockettransform (class in wildboar.transform._rocket)": [[40, "wildboar.transform._rocket.RocketTransform"]], "fit() (wildboar.transform._rocket.rockettransform method)": [[40, "wildboar.transform._rocket.RocketTransform.fit"]], "fit_transform() (wildboar.transform._rocket.rockettransform method)": [[40, "wildboar.transform._rocket.RocketTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._rocket.rockettransform method)": [[40, "wildboar.transform._rocket.RocketTransform.get_metadata_routing"]], "get_params() (wildboar.transform._rocket.rockettransform method)": [[40, "wildboar.transform._rocket.RocketTransform.get_params"]], "set_output() (wildboar.transform._rocket.rockettransform method)": [[40, "wildboar.transform._rocket.RocketTransform.set_output"]], "set_params() (wildboar.transform._rocket.rockettransform method)": [[40, "wildboar.transform._rocket.RocketTransform.set_params"]], "transform() (wildboar.transform._rocket.rockettransform method)": [[40, "wildboar.transform._rocket.RocketTransform.transform"]], "wildboar.transform._rocket": [[40, "module-wildboar.transform._rocket"]], "binning (class in wildboar.transform._sax)": [[41, "wildboar.transform._sax.Binning"]], "normalbinning (class in wildboar.transform._sax)": [[41, "wildboar.transform._sax.NormalBinning"]], "paa (class in wildboar.transform._sax)": [[41, "wildboar.transform._sax.PAA"]], "sax (class in wildboar.transform._sax)": [[41, "wildboar.transform._sax.SAX"]], "uniformbinning (class in wildboar.transform._sax)": [[41, "wildboar.transform._sax.UniformBinning"]], "fit_transform() (wildboar.transform._sax.paa method)": [[41, "wildboar.transform._sax.PAA.fit_transform"]], "fit_transform() (wildboar.transform._sax.sax method)": [[41, "wildboar.transform._sax.SAX.fit_transform"]], "get_metadata_routing() (wildboar.transform._sax.paa method)": [[41, "wildboar.transform._sax.PAA.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform._sax.sax method)": [[41, "wildboar.transform._sax.SAX.get_metadata_routing"]], "get_params() (wildboar.transform._sax.paa method)": [[41, "wildboar.transform._sax.PAA.get_params"]], "get_params() (wildboar.transform._sax.sax method)": [[41, "wildboar.transform._sax.SAX.get_params"]], "get_thresholds() (wildboar.transform._sax.binning method)": [[41, "wildboar.transform._sax.Binning.get_thresholds"]], "get_thresholds() (wildboar.transform._sax.normalbinning method)": [[41, "wildboar.transform._sax.NormalBinning.get_thresholds"]], "get_thresholds() (wildboar.transform._sax.uniformbinning method)": [[41, "wildboar.transform._sax.UniformBinning.get_thresholds"]], "piecewice_aggregate_approximation() (in module wildboar.transform._sax)": [[41, "wildboar.transform._sax.piecewice_aggregate_approximation"]], "scale() (wildboar.transform._sax.binning method)": [[41, "wildboar.transform._sax.Binning.scale"]], "scale() (wildboar.transform._sax.normalbinning method)": [[41, "wildboar.transform._sax.NormalBinning.scale"]], "scale() (wildboar.transform._sax.uniformbinning method)": [[41, "wildboar.transform._sax.UniformBinning.scale"]], "set_output() (wildboar.transform._sax.paa method)": [[41, "wildboar.transform._sax.PAA.set_output"]], "set_output() (wildboar.transform._sax.sax method)": [[41, "wildboar.transform._sax.SAX.set_output"]], "set_params() (wildboar.transform._sax.paa method)": [[41, "wildboar.transform._sax.PAA.set_params"]], "set_params() (wildboar.transform._sax.sax method)": [[41, "wildboar.transform._sax.SAX.set_params"]], "symbolic_aggregate_approximation() (in module wildboar.transform._sax)": [[41, "wildboar.transform._sax.symbolic_aggregate_approximation"]], "wildboar.transform._sax": [[41, "module-wildboar.transform._sax"]], "randomshapelettransform (class in wildboar.transform._shapelet)": [[42, "wildboar.transform._shapelet.RandomShapeletTransform"]], "shapeletmixin (class in wildboar.transform._shapelet)": [[42, "wildboar.transform._shapelet.ShapeletMixin"]], "fit() (wildboar.transform._shapelet.randomshapelettransform method)": [[42, "wildboar.transform._shapelet.RandomShapeletTransform.fit"]], "fit_transform() (wildboar.transform._shapelet.randomshapelettransform method)": [[42, "wildboar.transform._shapelet.RandomShapeletTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._shapelet.randomshapelettransform method)": [[42, "wildboar.transform._shapelet.RandomShapeletTransform.get_metadata_routing"]], "get_params() (wildboar.transform._shapelet.randomshapelettransform method)": [[42, "wildboar.transform._shapelet.RandomShapeletTransform.get_params"]], "set_output() (wildboar.transform._shapelet.randomshapelettransform method)": [[42, "wildboar.transform._shapelet.RandomShapeletTransform.set_output"]], "set_params() (wildboar.transform._shapelet.randomshapelettransform method)": [[42, "wildboar.transform._shapelet.RandomShapeletTransform.set_params"]], "transform() (wildboar.transform._shapelet.randomshapelettransform method)": [[42, "wildboar.transform._shapelet.RandomShapeletTransform.transform"]], "wildboar.transform._shapelet": [[42, "module-wildboar.transform._shapelet"]], "difftransform (class in wildboar.transform)": [[43, "wildboar.transform.DiffTransform"]], "featuretransform (class in wildboar.transform)": [[43, "wildboar.transform.FeatureTransform"]], "hydratransform (class in wildboar.transform)": [[43, "wildboar.transform.HydraTransform"]], "intervaltransform (class in wildboar.transform)": [[43, "wildboar.transform.IntervalTransform"]], "matrixprofiletransform (class in wildboar.transform)": [[43, "wildboar.transform.MatrixProfileTransform"]], "paa (class in wildboar.transform)": [[43, "wildboar.transform.PAA"]], "pivottransform (class in wildboar.transform)": [[43, "wildboar.transform.PivotTransform"]], "proximitytransform (class in wildboar.transform)": [[43, "wildboar.transform.ProximityTransform"]], "randomshapelettransform (class in wildboar.transform)": [[43, "wildboar.transform.RandomShapeletTransform"]], "rockettransform (class in wildboar.transform)": [[43, "wildboar.transform.RocketTransform"]], "sax (class in wildboar.transform)": [[43, "wildboar.transform.SAX"]], "convolve() (in module wildboar.transform)": [[43, "wildboar.transform.convolve"]], "fit() (wildboar.transform.featuretransform method)": [[43, "wildboar.transform.FeatureTransform.fit"]], "fit() (wildboar.transform.hydratransform method)": [[43, "wildboar.transform.HydraTransform.fit"]], "fit() (wildboar.transform.intervaltransform method)": [[43, "wildboar.transform.IntervalTransform.fit"]], "fit() (wildboar.transform.matrixprofiletransform method)": [[43, "wildboar.transform.MatrixProfileTransform.fit"]], "fit() (wildboar.transform.pivottransform method)": [[43, "wildboar.transform.PivotTransform.fit"]], "fit() (wildboar.transform.randomshapelettransform method)": [[43, "wildboar.transform.RandomShapeletTransform.fit"]], "fit() (wildboar.transform.rockettransform method)": [[43, "wildboar.transform.RocketTransform.fit"]], "fit_transform() (wildboar.transform.difftransform method)": [[43, "wildboar.transform.DiffTransform.fit_transform"]], "fit_transform() (wildboar.transform.featuretransform method)": [[43, "wildboar.transform.FeatureTransform.fit_transform"]], "fit_transform() (wildboar.transform.hydratransform method)": [[43, "wildboar.transform.HydraTransform.fit_transform"]], "fit_transform() (wildboar.transform.intervaltransform method)": [[43, "wildboar.transform.IntervalTransform.fit_transform"]], "fit_transform() (wildboar.transform.matrixprofiletransform method)": [[43, "wildboar.transform.MatrixProfileTransform.fit_transform"]], "fit_transform() (wildboar.transform.paa method)": [[43, "wildboar.transform.PAA.fit_transform"]], "fit_transform() (wildboar.transform.pivottransform method)": [[43, "wildboar.transform.PivotTransform.fit_transform"]], "fit_transform() (wildboar.transform.proximitytransform method)": [[43, "wildboar.transform.ProximityTransform.fit_transform"]], "fit_transform() (wildboar.transform.randomshapelettransform method)": [[43, "wildboar.transform.RandomShapeletTransform.fit_transform"]], "fit_transform() (wildboar.transform.rockettransform method)": [[43, "wildboar.transform.RocketTransform.fit_transform"]], "fit_transform() (wildboar.transform.sax method)": [[43, "wildboar.transform.SAX.fit_transform"]], "get_metadata_routing() (wildboar.transform.difftransform method)": [[43, "wildboar.transform.DiffTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.featuretransform method)": [[43, "wildboar.transform.FeatureTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.hydratransform method)": [[43, "wildboar.transform.HydraTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.intervaltransform method)": [[43, "wildboar.transform.IntervalTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.matrixprofiletransform method)": [[43, "wildboar.transform.MatrixProfileTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.paa method)": [[43, "wildboar.transform.PAA.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.pivottransform method)": [[43, "wildboar.transform.PivotTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.proximitytransform method)": [[43, "wildboar.transform.ProximityTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.randomshapelettransform method)": [[43, "wildboar.transform.RandomShapeletTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.rockettransform method)": [[43, "wildboar.transform.RocketTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.sax method)": [[43, "wildboar.transform.SAX.get_metadata_routing"]], "get_params() (wildboar.transform.difftransform method)": [[43, "wildboar.transform.DiffTransform.get_params"]], "get_params() (wildboar.transform.featuretransform method)": [[43, "wildboar.transform.FeatureTransform.get_params"]], "get_params() (wildboar.transform.hydratransform method)": [[43, "wildboar.transform.HydraTransform.get_params"]], "get_params() (wildboar.transform.intervaltransform method)": [[43, "wildboar.transform.IntervalTransform.get_params"]], "get_params() (wildboar.transform.matrixprofiletransform method)": [[43, "wildboar.transform.MatrixProfileTransform.get_params"]], "get_params() (wildboar.transform.paa method)": [[43, "wildboar.transform.PAA.get_params"]], "get_params() (wildboar.transform.pivottransform method)": [[43, "wildboar.transform.PivotTransform.get_params"]], "get_params() (wildboar.transform.proximitytransform method)": [[43, "wildboar.transform.ProximityTransform.get_params"]], "get_params() (wildboar.transform.randomshapelettransform method)": [[43, "wildboar.transform.RandomShapeletTransform.get_params"]], "get_params() (wildboar.transform.rockettransform method)": [[43, "wildboar.transform.RocketTransform.get_params"]], "get_params() (wildboar.transform.sax method)": [[43, "wildboar.transform.SAX.get_params"]], "piecewice_aggregate_approximation() (in module wildboar.transform)": [[43, "wildboar.transform.piecewice_aggregate_approximation"]], "set_output() (wildboar.transform.difftransform method)": [[43, "wildboar.transform.DiffTransform.set_output"]], "set_output() (wildboar.transform.featuretransform method)": [[43, "wildboar.transform.FeatureTransform.set_output"]], "set_output() (wildboar.transform.hydratransform method)": [[43, "wildboar.transform.HydraTransform.set_output"]], "set_output() (wildboar.transform.intervaltransform method)": [[43, "wildboar.transform.IntervalTransform.set_output"]], "set_output() (wildboar.transform.matrixprofiletransform method)": [[43, "wildboar.transform.MatrixProfileTransform.set_output"]], "set_output() (wildboar.transform.paa method)": [[43, "wildboar.transform.PAA.set_output"]], "set_output() (wildboar.transform.pivottransform method)": [[43, "wildboar.transform.PivotTransform.set_output"]], "set_output() (wildboar.transform.proximitytransform method)": [[43, "wildboar.transform.ProximityTransform.set_output"]], "set_output() (wildboar.transform.randomshapelettransform method)": [[43, "wildboar.transform.RandomShapeletTransform.set_output"]], "set_output() (wildboar.transform.rockettransform method)": [[43, "wildboar.transform.RocketTransform.set_output"]], "set_output() (wildboar.transform.sax method)": [[43, "wildboar.transform.SAX.set_output"]], "set_params() (wildboar.transform.difftransform method)": [[43, "wildboar.transform.DiffTransform.set_params"]], "set_params() (wildboar.transform.featuretransform method)": [[43, "wildboar.transform.FeatureTransform.set_params"]], "set_params() (wildboar.transform.hydratransform method)": [[43, "wildboar.transform.HydraTransform.set_params"]], "set_params() (wildboar.transform.intervaltransform method)": [[43, "wildboar.transform.IntervalTransform.set_params"]], "set_params() (wildboar.transform.matrixprofiletransform method)": [[43, "wildboar.transform.MatrixProfileTransform.set_params"]], "set_params() (wildboar.transform.paa method)": [[43, "wildboar.transform.PAA.set_params"]], "set_params() (wildboar.transform.pivottransform method)": [[43, "wildboar.transform.PivotTransform.set_params"]], "set_params() (wildboar.transform.proximitytransform method)": [[43, "wildboar.transform.ProximityTransform.set_params"]], "set_params() (wildboar.transform.randomshapelettransform method)": [[43, "wildboar.transform.RandomShapeletTransform.set_params"]], "set_params() (wildboar.transform.rockettransform method)": [[43, "wildboar.transform.RocketTransform.set_params"]], "set_params() (wildboar.transform.sax method)": [[43, "wildboar.transform.SAX.set_params"]], "symbolic_aggregate_approximation() (in module wildboar.transform)": [[43, "wildboar.transform.symbolic_aggregate_approximation"]], "transform() (wildboar.transform.featuretransform method)": [[43, "wildboar.transform.FeatureTransform.transform"]], "transform() (wildboar.transform.hydratransform method)": [[43, "wildboar.transform.HydraTransform.transform"]], "transform() (wildboar.transform.intervaltransform method)": [[43, "wildboar.transform.IntervalTransform.transform"]], "transform() (wildboar.transform.matrixprofiletransform method)": [[43, "wildboar.transform.MatrixProfileTransform.transform"]], "transform() (wildboar.transform.pivottransform method)": [[43, "wildboar.transform.PivotTransform.transform"]], "transform() (wildboar.transform.randomshapelettransform method)": [[43, "wildboar.transform.RandomShapeletTransform.transform"]], "transform() (wildboar.transform.rockettransform method)": [[43, "wildboar.transform.RocketTransform.transform"]], "wildboar.transform": [[43, "module-wildboar.transform"]], "basetree (class in wildboar.tree._base)": [[44, "wildboar.tree._base.BaseTree"]], "basetreeclassifier (class in wildboar.tree._base)": [[44, "wildboar.tree._base.BaseTreeClassifier"]], "basetreeregressor (class in wildboar.tree._base)": [[44, "wildboar.tree._base.BaseTreeRegressor"]], "apply() (wildboar.tree._base.basetree method)": [[44, "wildboar.tree._base.BaseTree.apply"]], "apply() (wildboar.tree._base.basetreeclassifier method)": [[44, "wildboar.tree._base.BaseTreeClassifier.apply"]], "apply() (wildboar.tree._base.basetreeregressor method)": [[44, "wildboar.tree._base.BaseTreeRegressor.apply"]], "decision_path() (wildboar.tree._base.basetree method)": [[44, "wildboar.tree._base.BaseTree.decision_path"]], "decision_path() (wildboar.tree._base.basetreeclassifier method)": [[44, "wildboar.tree._base.BaseTreeClassifier.decision_path"]], "decision_path() (wildboar.tree._base.basetreeregressor method)": [[44, "wildboar.tree._base.BaseTreeRegressor.decision_path"]], "fit() (wildboar.tree._base.basetreeclassifier method)": [[44, "wildboar.tree._base.BaseTreeClassifier.fit"]], "fit() (wildboar.tree._base.basetreeregressor method)": [[44, "wildboar.tree._base.BaseTreeRegressor.fit"]], "get_metadata_routing() (wildboar.tree._base.basetree method)": [[44, "wildboar.tree._base.BaseTree.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._base.basetreeclassifier method)": [[44, "wildboar.tree._base.BaseTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._base.basetreeregressor method)": [[44, "wildboar.tree._base.BaseTreeRegressor.get_metadata_routing"]], "get_params() (wildboar.tree._base.basetree method)": [[44, "wildboar.tree._base.BaseTree.get_params"]], "get_params() (wildboar.tree._base.basetreeclassifier method)": [[44, "wildboar.tree._base.BaseTreeClassifier.get_params"]], "get_params() (wildboar.tree._base.basetreeregressor method)": [[44, "wildboar.tree._base.BaseTreeRegressor.get_params"]], "predict() (wildboar.tree._base.basetreeclassifier method)": [[44, "wildboar.tree._base.BaseTreeClassifier.predict"]], "predict() (wildboar.tree._base.basetreeregressor method)": [[44, "wildboar.tree._base.BaseTreeRegressor.predict"]], "predict_proba() (wildboar.tree._base.basetreeclassifier method)": [[44, "wildboar.tree._base.BaseTreeClassifier.predict_proba"]], "score() (wildboar.tree._base.basetreeclassifier method)": [[44, "wildboar.tree._base.BaseTreeClassifier.score"]], "score() (wildboar.tree._base.basetreeregressor method)": [[44, "wildboar.tree._base.BaseTreeRegressor.score"]], "set_params() (wildboar.tree._base.basetree method)": [[44, "wildboar.tree._base.BaseTree.set_params"]], "set_params() (wildboar.tree._base.basetreeclassifier method)": [[44, "wildboar.tree._base.BaseTreeClassifier.set_params"]], "set_params() (wildboar.tree._base.basetreeregressor method)": [[44, "wildboar.tree._base.BaseTreeRegressor.set_params"]], "wildboar.tree._base": [[44, "module-wildboar.tree._base"]], "proximitytreeclassifier (class in wildboar.tree._ptree)": [[45, "wildboar.tree._ptree.ProximityTreeClassifier"]], "apply() (wildboar.tree._ptree.proximitytreeclassifier method)": [[45, "wildboar.tree._ptree.ProximityTreeClassifier.apply"]], "decision_path() (wildboar.tree._ptree.proximitytreeclassifier method)": [[45, "wildboar.tree._ptree.ProximityTreeClassifier.decision_path"]], "fit() (wildboar.tree._ptree.proximitytreeclassifier method)": [[45, "wildboar.tree._ptree.ProximityTreeClassifier.fit"]], "get_metadata_routing() (wildboar.tree._ptree.proximitytreeclassifier method)": [[45, "wildboar.tree._ptree.ProximityTreeClassifier.get_metadata_routing"]], "get_params() (wildboar.tree._ptree.proximitytreeclassifier method)": [[45, "wildboar.tree._ptree.ProximityTreeClassifier.get_params"]], "predict() (wildboar.tree._ptree.proximitytreeclassifier method)": [[45, "wildboar.tree._ptree.ProximityTreeClassifier.predict"]], "predict_proba() (wildboar.tree._ptree.proximitytreeclassifier method)": [[45, "wildboar.tree._ptree.ProximityTreeClassifier.predict_proba"]], "score() (wildboar.tree._ptree.proximitytreeclassifier method)": [[45, "wildboar.tree._ptree.ProximityTreeClassifier.score"]], "set_params() (wildboar.tree._ptree.proximitytreeclassifier method)": [[45, "wildboar.tree._ptree.ProximityTreeClassifier.set_params"]], "wildboar.tree._ptree": [[45, "module-wildboar.tree._ptree"]], "basefeaturetreeclassifier (class in wildboar.tree._tree)": [[46, "wildboar.tree._tree.BaseFeatureTreeClassifier"]], "basefeaturetreeregressor (class in wildboar.tree._tree)": [[46, "wildboar.tree._tree.BaseFeatureTreeRegressor"]], "extrashapelettreeclassifier (class in wildboar.tree._tree)": [[46, "wildboar.tree._tree.ExtraShapeletTreeClassifier"]], "extrashapelettreeregressor (class in wildboar.tree._tree)": [[46, "wildboar.tree._tree.ExtraShapeletTreeRegressor"]], "intervaltreeclassifier (class in wildboar.tree._tree)": [[46, "wildboar.tree._tree.IntervalTreeClassifier"]], "intervaltreeregressor (class in wildboar.tree._tree)": [[46, "wildboar.tree._tree.IntervalTreeRegressor"]], "pivottreeclassifier (class in wildboar.tree._tree)": [[46, "wildboar.tree._tree.PivotTreeClassifier"]], "rockettreeclassifier (class in wildboar.tree._tree)": [[46, "wildboar.tree._tree.RocketTreeClassifier"]], "rockettreeregressor (class in wildboar.tree._tree)": [[46, "wildboar.tree._tree.RocketTreeRegressor"]], "shapelettreeclassifier (class in wildboar.tree._tree)": [[46, "wildboar.tree._tree.ShapeletTreeClassifier"]], "shapelettreeregressor (class in wildboar.tree._tree)": [[46, "wildboar.tree._tree.ShapeletTreeRegressor"]], "apply() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[46, "wildboar.tree._tree.BaseFeatureTreeClassifier.apply"]], "apply() (wildboar.tree._tree.basefeaturetreeregressor method)": [[46, "wildboar.tree._tree.BaseFeatureTreeRegressor.apply"]], "apply() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[46, "wildboar.tree._tree.ExtraShapeletTreeClassifier.apply"]], "apply() (wildboar.tree._tree.extrashapelettreeregressor method)": [[46, "wildboar.tree._tree.ExtraShapeletTreeRegressor.apply"]], "apply() (wildboar.tree._tree.intervaltreeclassifier method)": [[46, "wildboar.tree._tree.IntervalTreeClassifier.apply"]], "apply() (wildboar.tree._tree.intervaltreeregressor method)": [[46, "wildboar.tree._tree.IntervalTreeRegressor.apply"]], "apply() (wildboar.tree._tree.pivottreeclassifier method)": [[46, "wildboar.tree._tree.PivotTreeClassifier.apply"]], "apply() (wildboar.tree._tree.rockettreeclassifier method)": [[46, "wildboar.tree._tree.RocketTreeClassifier.apply"]], "apply() (wildboar.tree._tree.rockettreeregressor method)": [[46, "wildboar.tree._tree.RocketTreeRegressor.apply"]], "apply() (wildboar.tree._tree.shapelettreeclassifier method)": [[46, "wildboar.tree._tree.ShapeletTreeClassifier.apply"]], "apply() (wildboar.tree._tree.shapelettreeregressor method)": [[46, "wildboar.tree._tree.ShapeletTreeRegressor.apply"]], "decision_path() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[46, "wildboar.tree._tree.BaseFeatureTreeClassifier.decision_path"]], "decision_path() (wildboar.tree._tree.basefeaturetreeregressor method)": [[46, "wildboar.tree._tree.BaseFeatureTreeRegressor.decision_path"]], "decision_path() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[46, "wildboar.tree._tree.ExtraShapeletTreeClassifier.decision_path"]], "decision_path() (wildboar.tree._tree.extrashapelettreeregressor method)": [[46, "wildboar.tree._tree.ExtraShapeletTreeRegressor.decision_path"]], "decision_path() (wildboar.tree._tree.intervaltreeclassifier method)": [[46, "wildboar.tree._tree.IntervalTreeClassifier.decision_path"]], "decision_path() (wildboar.tree._tree.intervaltreeregressor method)": [[46, "wildboar.tree._tree.IntervalTreeRegressor.decision_path"]], "decision_path() (wildboar.tree._tree.pivottreeclassifier method)": [[46, "wildboar.tree._tree.PivotTreeClassifier.decision_path"]], "decision_path() (wildboar.tree._tree.rockettreeclassifier method)": [[46, "wildboar.tree._tree.RocketTreeClassifier.decision_path"]], "decision_path() (wildboar.tree._tree.rockettreeregressor method)": [[46, "wildboar.tree._tree.RocketTreeRegressor.decision_path"]], "decision_path() (wildboar.tree._tree.shapelettreeclassifier method)": [[46, "wildboar.tree._tree.ShapeletTreeClassifier.decision_path"]], "decision_path() (wildboar.tree._tree.shapelettreeregressor method)": [[46, "wildboar.tree._tree.ShapeletTreeRegressor.decision_path"]], "fit() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[46, "wildboar.tree._tree.BaseFeatureTreeClassifier.fit"]], "fit() (wildboar.tree._tree.basefeaturetreeregressor method)": [[46, "wildboar.tree._tree.BaseFeatureTreeRegressor.fit"]], "fit() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[46, "wildboar.tree._tree.ExtraShapeletTreeClassifier.fit"]], "fit() (wildboar.tree._tree.extrashapelettreeregressor method)": [[46, "wildboar.tree._tree.ExtraShapeletTreeRegressor.fit"]], "fit() (wildboar.tree._tree.intervaltreeclassifier method)": [[46, "wildboar.tree._tree.IntervalTreeClassifier.fit"]], "fit() (wildboar.tree._tree.intervaltreeregressor method)": [[46, "wildboar.tree._tree.IntervalTreeRegressor.fit"]], "fit() (wildboar.tree._tree.pivottreeclassifier method)": [[46, "wildboar.tree._tree.PivotTreeClassifier.fit"]], "fit() (wildboar.tree._tree.rockettreeclassifier method)": [[46, "wildboar.tree._tree.RocketTreeClassifier.fit"]], "fit() (wildboar.tree._tree.rockettreeregressor method)": [[46, "wildboar.tree._tree.RocketTreeRegressor.fit"]], "fit() (wildboar.tree._tree.shapelettreeclassifier method)": [[46, "wildboar.tree._tree.ShapeletTreeClassifier.fit"]], "fit() (wildboar.tree._tree.shapelettreeregressor method)": [[46, "wildboar.tree._tree.ShapeletTreeRegressor.fit"]], "get_metadata_routing() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[46, "wildboar.tree._tree.BaseFeatureTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.basefeaturetreeregressor method)": [[46, "wildboar.tree._tree.BaseFeatureTreeRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[46, "wildboar.tree._tree.ExtraShapeletTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.extrashapelettreeregressor method)": [[46, "wildboar.tree._tree.ExtraShapeletTreeRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.intervaltreeclassifier method)": [[46, "wildboar.tree._tree.IntervalTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.intervaltreeregressor method)": [[46, "wildboar.tree._tree.IntervalTreeRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.pivottreeclassifier method)": [[46, "wildboar.tree._tree.PivotTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.rockettreeclassifier method)": [[46, "wildboar.tree._tree.RocketTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.rockettreeregressor method)": [[46, "wildboar.tree._tree.RocketTreeRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.shapelettreeclassifier method)": [[46, "wildboar.tree._tree.ShapeletTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.shapelettreeregressor method)": [[46, "wildboar.tree._tree.ShapeletTreeRegressor.get_metadata_routing"]], "get_params() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[46, "wildboar.tree._tree.BaseFeatureTreeClassifier.get_params"]], "get_params() (wildboar.tree._tree.basefeaturetreeregressor method)": [[46, "wildboar.tree._tree.BaseFeatureTreeRegressor.get_params"]], "get_params() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[46, "wildboar.tree._tree.ExtraShapeletTreeClassifier.get_params"]], "get_params() (wildboar.tree._tree.extrashapelettreeregressor method)": [[46, "wildboar.tree._tree.ExtraShapeletTreeRegressor.get_params"]], "get_params() (wildboar.tree._tree.intervaltreeclassifier method)": [[46, "wildboar.tree._tree.IntervalTreeClassifier.get_params"]], "get_params() (wildboar.tree._tree.intervaltreeregressor method)": [[46, "wildboar.tree._tree.IntervalTreeRegressor.get_params"]], "get_params() (wildboar.tree._tree.pivottreeclassifier method)": [[46, "wildboar.tree._tree.PivotTreeClassifier.get_params"]], "get_params() (wildboar.tree._tree.rockettreeclassifier method)": [[46, "wildboar.tree._tree.RocketTreeClassifier.get_params"]], "get_params() (wildboar.tree._tree.rockettreeregressor method)": [[46, "wildboar.tree._tree.RocketTreeRegressor.get_params"]], "get_params() (wildboar.tree._tree.shapelettreeclassifier method)": [[46, "wildboar.tree._tree.ShapeletTreeClassifier.get_params"]], "get_params() (wildboar.tree._tree.shapelettreeregressor method)": [[46, "wildboar.tree._tree.ShapeletTreeRegressor.get_params"]], "predict() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[46, "wildboar.tree._tree.BaseFeatureTreeClassifier.predict"]], "predict() (wildboar.tree._tree.basefeaturetreeregressor method)": [[46, "wildboar.tree._tree.BaseFeatureTreeRegressor.predict"]], "predict() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[46, "wildboar.tree._tree.ExtraShapeletTreeClassifier.predict"]], "predict() (wildboar.tree._tree.extrashapelettreeregressor method)": [[46, "wildboar.tree._tree.ExtraShapeletTreeRegressor.predict"]], "predict() (wildboar.tree._tree.intervaltreeclassifier method)": [[46, "wildboar.tree._tree.IntervalTreeClassifier.predict"]], "predict() (wildboar.tree._tree.intervaltreeregressor method)": [[46, "wildboar.tree._tree.IntervalTreeRegressor.predict"]], "predict() (wildboar.tree._tree.pivottreeclassifier method)": [[46, "wildboar.tree._tree.PivotTreeClassifier.predict"]], "predict() (wildboar.tree._tree.rockettreeclassifier method)": [[46, "wildboar.tree._tree.RocketTreeClassifier.predict"]], "predict() (wildboar.tree._tree.rockettreeregressor method)": [[46, "wildboar.tree._tree.RocketTreeRegressor.predict"]], "predict() (wildboar.tree._tree.shapelettreeclassifier method)": [[46, "wildboar.tree._tree.ShapeletTreeClassifier.predict"]], "predict() (wildboar.tree._tree.shapelettreeregressor method)": [[46, "wildboar.tree._tree.ShapeletTreeRegressor.predict"]], "predict_proba() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[46, "wildboar.tree._tree.BaseFeatureTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[46, "wildboar.tree._tree.ExtraShapeletTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree._tree.intervaltreeclassifier method)": [[46, "wildboar.tree._tree.IntervalTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree._tree.pivottreeclassifier method)": [[46, "wildboar.tree._tree.PivotTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree._tree.rockettreeclassifier method)": [[46, "wildboar.tree._tree.RocketTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree._tree.shapelettreeclassifier method)": [[46, "wildboar.tree._tree.ShapeletTreeClassifier.predict_proba"]], "score() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[46, "wildboar.tree._tree.BaseFeatureTreeClassifier.score"]], "score() (wildboar.tree._tree.basefeaturetreeregressor method)": [[46, "wildboar.tree._tree.BaseFeatureTreeRegressor.score"]], "score() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[46, "wildboar.tree._tree.ExtraShapeletTreeClassifier.score"]], "score() (wildboar.tree._tree.extrashapelettreeregressor method)": [[46, "wildboar.tree._tree.ExtraShapeletTreeRegressor.score"]], "score() (wildboar.tree._tree.intervaltreeclassifier method)": [[46, "wildboar.tree._tree.IntervalTreeClassifier.score"]], "score() (wildboar.tree._tree.intervaltreeregressor method)": [[46, "wildboar.tree._tree.IntervalTreeRegressor.score"]], "score() (wildboar.tree._tree.pivottreeclassifier method)": [[46, "wildboar.tree._tree.PivotTreeClassifier.score"]], "score() (wildboar.tree._tree.rockettreeclassifier method)": [[46, "wildboar.tree._tree.RocketTreeClassifier.score"]], "score() (wildboar.tree._tree.rockettreeregressor method)": [[46, "wildboar.tree._tree.RocketTreeRegressor.score"]], "score() (wildboar.tree._tree.shapelettreeclassifier method)": [[46, "wildboar.tree._tree.ShapeletTreeClassifier.score"]], "score() (wildboar.tree._tree.shapelettreeregressor method)": [[46, "wildboar.tree._tree.ShapeletTreeRegressor.score"]], "set_params() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[46, "wildboar.tree._tree.BaseFeatureTreeClassifier.set_params"]], "set_params() (wildboar.tree._tree.basefeaturetreeregressor method)": [[46, "wildboar.tree._tree.BaseFeatureTreeRegressor.set_params"]], "set_params() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[46, "wildboar.tree._tree.ExtraShapeletTreeClassifier.set_params"]], "set_params() (wildboar.tree._tree.extrashapelettreeregressor method)": [[46, "wildboar.tree._tree.ExtraShapeletTreeRegressor.set_params"]], "set_params() (wildboar.tree._tree.intervaltreeclassifier method)": [[46, "wildboar.tree._tree.IntervalTreeClassifier.set_params"]], "set_params() (wildboar.tree._tree.intervaltreeregressor method)": [[46, "wildboar.tree._tree.IntervalTreeRegressor.set_params"]], "set_params() (wildboar.tree._tree.pivottreeclassifier method)": [[46, "wildboar.tree._tree.PivotTreeClassifier.set_params"]], "set_params() (wildboar.tree._tree.rockettreeclassifier method)": [[46, "wildboar.tree._tree.RocketTreeClassifier.set_params"]], "set_params() (wildboar.tree._tree.rockettreeregressor method)": [[46, "wildboar.tree._tree.RocketTreeRegressor.set_params"]], "set_params() (wildboar.tree._tree.shapelettreeclassifier method)": [[46, "wildboar.tree._tree.ShapeletTreeClassifier.set_params"]], "set_params() (wildboar.tree._tree.shapelettreeregressor method)": [[46, "wildboar.tree._tree.ShapeletTreeRegressor.set_params"]], "wildboar.tree._tree": [[46, "module-wildboar.tree._tree"]], "extrashapelettreeclassifier (class in wildboar.tree)": [[47, "wildboar.tree.ExtraShapeletTreeClassifier"]], "extrashapelettreeregressor (class in wildboar.tree)": [[47, "wildboar.tree.ExtraShapeletTreeRegressor"]], "intervaltreeclassifier (class in wildboar.tree)": [[47, "wildboar.tree.IntervalTreeClassifier"]], "intervaltreeregressor (class in wildboar.tree)": [[47, "wildboar.tree.IntervalTreeRegressor"]], "pivottreeclassifier (class in wildboar.tree)": [[47, "wildboar.tree.PivotTreeClassifier"]], "proximitytreeclassifier (class in wildboar.tree)": [[47, "wildboar.tree.ProximityTreeClassifier"]], "rockettreeclassifier (class in wildboar.tree)": [[47, "wildboar.tree.RocketTreeClassifier"]], "rockettreeregressor (class in wildboar.tree)": [[47, "wildboar.tree.RocketTreeRegressor"]], "shapelettreeclassifier (class in wildboar.tree)": [[47, "wildboar.tree.ShapeletTreeClassifier"]], "shapelettreeregressor (class in wildboar.tree)": [[47, "wildboar.tree.ShapeletTreeRegressor"]], "apply() (wildboar.tree.extrashapelettreeclassifier method)": [[47, "wildboar.tree.ExtraShapeletTreeClassifier.apply"]], "apply() (wildboar.tree.extrashapelettreeregressor method)": [[47, "wildboar.tree.ExtraShapeletTreeRegressor.apply"]], "apply() (wildboar.tree.intervaltreeclassifier method)": [[47, "wildboar.tree.IntervalTreeClassifier.apply"]], "apply() (wildboar.tree.intervaltreeregressor method)": [[47, "wildboar.tree.IntervalTreeRegressor.apply"]], "apply() (wildboar.tree.pivottreeclassifier method)": [[47, "wildboar.tree.PivotTreeClassifier.apply"]], "apply() (wildboar.tree.proximitytreeclassifier method)": [[47, "wildboar.tree.ProximityTreeClassifier.apply"]], "apply() (wildboar.tree.rockettreeclassifier method)": [[47, "wildboar.tree.RocketTreeClassifier.apply"]], "apply() (wildboar.tree.rockettreeregressor method)": [[47, "wildboar.tree.RocketTreeRegressor.apply"]], "apply() (wildboar.tree.shapelettreeclassifier method)": [[47, "wildboar.tree.ShapeletTreeClassifier.apply"]], "apply() (wildboar.tree.shapelettreeregressor method)": [[47, "wildboar.tree.ShapeletTreeRegressor.apply"]], "decision_path() (wildboar.tree.extrashapelettreeclassifier method)": [[47, "wildboar.tree.ExtraShapeletTreeClassifier.decision_path"]], "decision_path() (wildboar.tree.extrashapelettreeregressor method)": [[47, "wildboar.tree.ExtraShapeletTreeRegressor.decision_path"]], "decision_path() (wildboar.tree.intervaltreeclassifier method)": [[47, "wildboar.tree.IntervalTreeClassifier.decision_path"]], "decision_path() (wildboar.tree.intervaltreeregressor method)": [[47, "wildboar.tree.IntervalTreeRegressor.decision_path"]], "decision_path() (wildboar.tree.pivottreeclassifier method)": [[47, "wildboar.tree.PivotTreeClassifier.decision_path"]], "decision_path() (wildboar.tree.proximitytreeclassifier method)": [[47, "wildboar.tree.ProximityTreeClassifier.decision_path"]], "decision_path() (wildboar.tree.rockettreeclassifier method)": [[47, "wildboar.tree.RocketTreeClassifier.decision_path"]], "decision_path() (wildboar.tree.rockettreeregressor method)": [[47, "wildboar.tree.RocketTreeRegressor.decision_path"]], "decision_path() (wildboar.tree.shapelettreeclassifier method)": [[47, "wildboar.tree.ShapeletTreeClassifier.decision_path"]], "decision_path() (wildboar.tree.shapelettreeregressor method)": [[47, "wildboar.tree.ShapeletTreeRegressor.decision_path"]], "fit() (wildboar.tree.extrashapelettreeclassifier method)": [[47, "wildboar.tree.ExtraShapeletTreeClassifier.fit"]], "fit() (wildboar.tree.extrashapelettreeregressor method)": [[47, "wildboar.tree.ExtraShapeletTreeRegressor.fit"]], "fit() (wildboar.tree.intervaltreeclassifier method)": [[47, "wildboar.tree.IntervalTreeClassifier.fit"]], "fit() (wildboar.tree.intervaltreeregressor method)": [[47, "wildboar.tree.IntervalTreeRegressor.fit"]], "fit() (wildboar.tree.pivottreeclassifier method)": [[47, "wildboar.tree.PivotTreeClassifier.fit"]], "fit() (wildboar.tree.proximitytreeclassifier method)": [[47, "wildboar.tree.ProximityTreeClassifier.fit"]], "fit() (wildboar.tree.rockettreeclassifier method)": [[47, "wildboar.tree.RocketTreeClassifier.fit"]], "fit() (wildboar.tree.rockettreeregressor method)": [[47, "wildboar.tree.RocketTreeRegressor.fit"]], "fit() (wildboar.tree.shapelettreeclassifier method)": [[47, "wildboar.tree.ShapeletTreeClassifier.fit"]], "fit() (wildboar.tree.shapelettreeregressor method)": [[47, "wildboar.tree.ShapeletTreeRegressor.fit"]], "get_metadata_routing() (wildboar.tree.extrashapelettreeclassifier method)": [[47, "wildboar.tree.ExtraShapeletTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.extrashapelettreeregressor method)": [[47, "wildboar.tree.ExtraShapeletTreeRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.intervaltreeclassifier method)": [[47, "wildboar.tree.IntervalTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.intervaltreeregressor method)": [[47, "wildboar.tree.IntervalTreeRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.pivottreeclassifier method)": [[47, "wildboar.tree.PivotTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.proximitytreeclassifier method)": [[47, "wildboar.tree.ProximityTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.rockettreeclassifier method)": [[47, "wildboar.tree.RocketTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.rockettreeregressor method)": [[47, "wildboar.tree.RocketTreeRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.shapelettreeclassifier method)": [[47, "wildboar.tree.ShapeletTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.shapelettreeregressor method)": [[47, "wildboar.tree.ShapeletTreeRegressor.get_metadata_routing"]], "get_params() (wildboar.tree.extrashapelettreeclassifier method)": [[47, "wildboar.tree.ExtraShapeletTreeClassifier.get_params"]], "get_params() (wildboar.tree.extrashapelettreeregressor method)": [[47, "wildboar.tree.ExtraShapeletTreeRegressor.get_params"]], "get_params() (wildboar.tree.intervaltreeclassifier method)": [[47, "wildboar.tree.IntervalTreeClassifier.get_params"]], "get_params() (wildboar.tree.intervaltreeregressor method)": [[47, "wildboar.tree.IntervalTreeRegressor.get_params"]], "get_params() (wildboar.tree.pivottreeclassifier method)": [[47, "wildboar.tree.PivotTreeClassifier.get_params"]], "get_params() (wildboar.tree.proximitytreeclassifier method)": [[47, "wildboar.tree.ProximityTreeClassifier.get_params"]], "get_params() (wildboar.tree.rockettreeclassifier method)": [[47, "wildboar.tree.RocketTreeClassifier.get_params"]], "get_params() (wildboar.tree.rockettreeregressor method)": [[47, "wildboar.tree.RocketTreeRegressor.get_params"]], "get_params() (wildboar.tree.shapelettreeclassifier method)": [[47, "wildboar.tree.ShapeletTreeClassifier.get_params"]], "get_params() (wildboar.tree.shapelettreeregressor method)": [[47, "wildboar.tree.ShapeletTreeRegressor.get_params"]], "predict() (wildboar.tree.extrashapelettreeclassifier method)": [[47, "wildboar.tree.ExtraShapeletTreeClassifier.predict"]], "predict() (wildboar.tree.extrashapelettreeregressor method)": [[47, "wildboar.tree.ExtraShapeletTreeRegressor.predict"]], "predict() (wildboar.tree.intervaltreeclassifier method)": [[47, "wildboar.tree.IntervalTreeClassifier.predict"]], "predict() (wildboar.tree.intervaltreeregressor method)": [[47, "wildboar.tree.IntervalTreeRegressor.predict"]], "predict() (wildboar.tree.pivottreeclassifier method)": [[47, "wildboar.tree.PivotTreeClassifier.predict"]], "predict() (wildboar.tree.proximitytreeclassifier method)": [[47, "wildboar.tree.ProximityTreeClassifier.predict"]], "predict() (wildboar.tree.rockettreeclassifier method)": [[47, "wildboar.tree.RocketTreeClassifier.predict"]], "predict() (wildboar.tree.rockettreeregressor method)": [[47, "wildboar.tree.RocketTreeRegressor.predict"]], "predict() (wildboar.tree.shapelettreeclassifier method)": [[47, "wildboar.tree.ShapeletTreeClassifier.predict"]], "predict() (wildboar.tree.shapelettreeregressor method)": [[47, "wildboar.tree.ShapeletTreeRegressor.predict"]], "predict_proba() (wildboar.tree.extrashapelettreeclassifier method)": [[47, "wildboar.tree.ExtraShapeletTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree.intervaltreeclassifier method)": [[47, "wildboar.tree.IntervalTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree.pivottreeclassifier method)": [[47, "wildboar.tree.PivotTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree.proximitytreeclassifier method)": [[47, "wildboar.tree.ProximityTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree.rockettreeclassifier method)": [[47, "wildboar.tree.RocketTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree.shapelettreeclassifier method)": [[47, "wildboar.tree.ShapeletTreeClassifier.predict_proba"]], "score() (wildboar.tree.extrashapelettreeclassifier method)": [[47, "wildboar.tree.ExtraShapeletTreeClassifier.score"]], "score() (wildboar.tree.extrashapelettreeregressor method)": [[47, "wildboar.tree.ExtraShapeletTreeRegressor.score"]], "score() (wildboar.tree.intervaltreeclassifier method)": [[47, "wildboar.tree.IntervalTreeClassifier.score"]], "score() (wildboar.tree.intervaltreeregressor method)": [[47, "wildboar.tree.IntervalTreeRegressor.score"]], "score() (wildboar.tree.pivottreeclassifier method)": [[47, "wildboar.tree.PivotTreeClassifier.score"]], "score() (wildboar.tree.proximitytreeclassifier method)": [[47, "wildboar.tree.ProximityTreeClassifier.score"]], "score() (wildboar.tree.rockettreeclassifier method)": [[47, "wildboar.tree.RocketTreeClassifier.score"]], "score() (wildboar.tree.rockettreeregressor method)": [[47, "wildboar.tree.RocketTreeRegressor.score"]], "score() (wildboar.tree.shapelettreeclassifier method)": [[47, "wildboar.tree.ShapeletTreeClassifier.score"]], "score() (wildboar.tree.shapelettreeregressor method)": [[47, "wildboar.tree.ShapeletTreeRegressor.score"]], "set_params() (wildboar.tree.extrashapelettreeclassifier method)": [[47, "wildboar.tree.ExtraShapeletTreeClassifier.set_params"]], "set_params() (wildboar.tree.extrashapelettreeregressor method)": [[47, "wildboar.tree.ExtraShapeletTreeRegressor.set_params"]], "set_params() (wildboar.tree.intervaltreeclassifier method)": [[47, "wildboar.tree.IntervalTreeClassifier.set_params"]], "set_params() (wildboar.tree.intervaltreeregressor method)": [[47, "wildboar.tree.IntervalTreeRegressor.set_params"]], "set_params() (wildboar.tree.pivottreeclassifier method)": [[47, "wildboar.tree.PivotTreeClassifier.set_params"]], "set_params() (wildboar.tree.proximitytreeclassifier method)": [[47, "wildboar.tree.ProximityTreeClassifier.set_params"]], "set_params() (wildboar.tree.rockettreeclassifier method)": [[47, "wildboar.tree.RocketTreeClassifier.set_params"]], "set_params() (wildboar.tree.rockettreeregressor method)": [[47, "wildboar.tree.RocketTreeRegressor.set_params"]], "set_params() (wildboar.tree.shapelettreeclassifier method)": [[47, "wildboar.tree.ShapeletTreeClassifier.set_params"]], "set_params() (wildboar.tree.shapelettreeregressor method)": [[47, "wildboar.tree.ShapeletTreeRegressor.set_params"]], "wildboar.tree": [[47, "module-wildboar.tree"]], "run_in_parallel() (in module wildboar.utils._parallel)": [[48, "wildboar.utils._parallel.run_in_parallel"]], "wildboar.utils._parallel": [[48, "module-wildboar.utils._parallel"]], "assert_exhaustive_parameter_checks() (in module wildboar.utils._testing)": [[49, "wildboar.utils._testing.assert_exhaustive_parameter_checks"]], "assert_parameter_checks() (in module wildboar.utils._testing)": [[49, "wildboar.utils._testing.assert_parameter_checks"]], "wildboar.utils._testing": [[49, "module-wildboar.utils._testing"]], "array_or_scalar() (in module wildboar.utils.decorators)": [[50, "wildboar.utils.decorators.array_or_scalar"]], "singleton() (in module wildboar.utils.decorators)": [[50, "wildboar.utils.decorators.singleton"]], "unstable() (in module wildboar.utils.decorators)": [[50, "wildboar.utils.decorators.unstable"]], "wildboar.utils.decorators": [[50, "module-wildboar.utils.decorators"]], "check_estimator() (in module wildboar.utils.estimator_checks)": [[51, "wildboar.utils.estimator_checks.check_estimator"]], "wildboar.utils.estimator_checks": [[51, "module-wildboar.utils.estimator_checks"]], "check_x_y() (in module wildboar.utils)": [[52, "wildboar.utils.check_X_y"]], "check_array() (in module wildboar.utils)": [[52, "wildboar.utils.check_array"]], "wildboar.utils": [[52, "module-wildboar.utils"]], "midpointnormalize (class in wildboar.utils.plot)": [[53, "wildboar.utils.plot.MidpointNormalize"]], "autoscale() (wildboar.utils.plot.midpointnormalize method)": [[53, "wildboar.utils.plot.MidpointNormalize.autoscale"]], "autoscale_none() (wildboar.utils.plot.midpointnormalize method)": [[53, "wildboar.utils.plot.MidpointNormalize.autoscale_None"]], "plot_frequency_domain() (in module wildboar.utils.plot)": [[53, "wildboar.utils.plot.plot_frequency_domain"]], "plot_time_domain() (in module wildboar.utils.plot)": [[53, "wildboar.utils.plot.plot_time_domain"]], "process_value() (wildboar.utils.plot.midpointnormalize static method)": [[53, "wildboar.utils.plot.MidpointNormalize.process_value"]], "scaled() (wildboar.utils.plot.midpointnormalize method)": [[53, "wildboar.utils.plot.MidpointNormalize.scaled"]], "wildboar.utils.plot": [[53, "module-wildboar.utils.plot"]], "check_x_y() (in module wildboar.utils.validation)": [[54, "wildboar.utils.validation.check_X_y"]], "check_array() (in module wildboar.utils.validation)": [[54, "wildboar.utils.validation.check_array"]], "check_option() (in module wildboar.utils.validation)": [[54, "wildboar.utils.validation.check_option"]], "check_type() (in module wildboar.utils.validation)": [[54, "wildboar.utils.validation.check_type"]], "wildboar.utils.validation": [[54, "module-wildboar.utils.validation"]], "get_variable_length() (in module wildboar.utils.variable_len)": [[55, "wildboar.utils.variable_len.get_variable_length"]], "is_end_of_series() (in module wildboar.utils.variable_len)": [[55, "wildboar.utils.variable_len.is_end_of_series"]], "is_variable_length() (in module wildboar.utils.variable_len)": [[55, "wildboar.utils.variable_len.is_variable_length"]], "wildboar.utils.variable_len": [[55, "module-wildboar.utils.variable_len"]], "wildboar.version": [[56, "module-wildboar.version"]]}})