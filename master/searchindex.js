Search.setIndex({"alltitles": {"API Reference": [[0, "api-reference"]], "Annotate": [[74, "annotate"]], "Benchmark": [[83, "benchmark"]], "Build from source": [[96, "build-from-source"]], "Castor transform": [[87, "castor-transform"]], "Classes": [[4, "classes"], [6, "classes"], [7, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [16, "classes"], [19, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [42, "classes"], [44, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [50, "classes"], [51, "classes"], [52, "classes"], [53, "classes"], [54, "classes"], [55, "classes"], [56, "classes"], [57, "classes"], [58, "classes"], [59, "classes"], [61, "classes"], [62, "classes"], [63, "classes"], [70, "classes"]], "Convolution-based transform": [[87, "convolution-based-transform"]], "Convolutional transform": [[93, "convolutional-transform"]], "Counterfactual explanations": [[80, "counterfactual-explanations"]], "Datasets": [[76, "datasets"]], "Decision tree structure": [[88, "decision-tree-structure"]], "Dependencies": [[97, "dependencies"]], "Dilated shapelet transform": [[87, "dilated-shapelet-transform"]], "Dimension selection": [[79, "dimension-selection"]], "Dimension variance threshold": [[79, "dimension-variance-threshold"]], "Distance": [[83, "distance"]], "Dynamic time warping": [[84, "dynamic-time-warping"]], "Edit-distance for real sequence": [[84, "edit-distance-for-real-sequence"]], "Edit-distance with real penalty": [[84, "edit-distance-with-real-penalty"]], "Elastic Ensemble": [[86, "elastic-ensemble"]], "Elastic and non-elastic metrics": [[82, "elastic-and-non-elastic-metrics"]], "Elastic metrics": [[84, "elastic-metrics"]], "Emmott labeler": [[91, "emmott-labeler"]], "Ensemble estimators": [[86, "ensemble-estimators"]], "Exploring model performance": [[73, "exploring-model-performance"]], "Filters": [[76, "filters"]], "Functions": [[1, "functions"], [2, "functions"], [3, "functions"], [4, "functions"], [5, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [15, "functions"], [17, "functions"], [20, "functions"], [21, "functions"], [25, "functions"], [26, "functions"], [31, "functions"], [32, "functions"], [39, "functions"], [40, "functions"], [41, "functions"], [43, "functions"], [44, "functions"], [49, "functions"], [56, "functions"], [58, "functions"], [60, "functions"], [63, "functions"], [64, "functions"], [65, "functions"], [66, "functions"], [67, "functions"], [68, "functions"], [69, "functions"], [70, "functions"], [71, "functions"]], "Glossary": [[81, "glossary"]], "Hydra": [[87, "hydra"]], "Hydra transform": [[93, "hydra-transform"]], "Install wildboar": [[95, "install-wildboar"]], "Installing repositories": [[78, "installing-repositories"]], "Interval Forest": [[86, "interval-forest"]], "Interval-based decision trees": [[88, "interval-based-decision-trees"]], "JSON repositories": [[78, "json-repositories"]], "Learning and predicting": [[73, "learning-and-predicting"]], "Loading a single dataset": [[76, "loading-a-single-dataset"]], "Loading an example dataset": [[73, "loading-an-example-dataset"]], "Loading datasets": [[76, "loading-datasets"]], "Loading multiple datasets": [[76, "loading-multiple-datasets"]], "Local cache": [[78, "local-cache"]], "Longest common subsequence": [[84, "longest-common-subsequence"]], "Majority labeler": [[91, "majority-labeler"]], "MatrixProfile": [[74, "matrixprofile"]], "MatrixProfile data structure": [[74, "matrixprofile-data-structure"]], "Metric specification": [[82, "metric-specification"]], "Metrics": [[82, "metrics"], [83, "metrics"]], "Minimum distance": [[83, "minimum-distance"]], "Minority labeler": [[91, "minority-labeler"]], "Model persistence": [[73, "model-persistence"]], "Motif discovery": [[74, "motif-discovery"]], "Move-split-merge": [[84, "move-split-merge"]], "Multivariate support": [[83, "multivariate-support"]], "Nearest neighbour counterfactuals": [[80, "nearest-neighbour-counterfactuals"]], "New and changed models": [[97, "new-and-changed-models"]], "Outlier detection": [[90, "outlier-detection"]], "Outlier detection benchmarks": [[91, "outlier-detection-benchmarks"]], "Paired distance": [[83, "paired-distance"]], "Pairwise distance": [[83, "pairwise-distance"]], "Pairwise subsequence distance": [[83, "pairwise-subsequence-distance"]], "Parallelization": [[83, "parallelization"]], "Plotting": [[88, "plotting"]], "Pre-processing": [[77, "pre-processing"]], "Proximity forests": [[86, "proximity-forests"]], "Random shapelet transform": [[87, "random-shapelet-transform"]], "Reference": [[74, "reference"]], "References": [[80, "references"], [86, "references"], [87, "references"]], "Repositories": [[78, "repositories"]], "Repository definitions": [[78, "repository-definitions"]], "Rocket": [[87, "rocket"]], "Rocket transform": [[93, "rocket-transform"]], "Segmentation": [[92, "segmentation"]], "Sequential dimension selector": [[79, "sequential-dimension-selector"]], "Shapelet forest counterfactuals": [[80, "shapelet-forest-counterfactuals"]], "Shapelet forests": [[86, "shapelet-forests"]], "Shapelet-based decision trees": [[88, "shapelet-based-decision-trees"]], "Shapelet-based transform": [[87, "shapelet-based-transform"]], "Subsequence metrics": [[82, "subsequence-metrics"], [83, "subsequence-metrics"]], "Subsequence search": [[83, "subsequence-search"]], "Supervised learning": [[85, "supervised-learning"]], "Time series": [[75, "time-series"]], "Time series transform": [[93, "time-series-transform"]], "Time-warp edit distance": [[84, "time-warp-edit-distance"]], "Transform-based estimators": [[87, "transform-based-estimators"]], "Transforming time series to tabular data": [[73, "transforming-time-series-to-tabular-data"]], "Tree-based estimators": [[88, "tree-based-estimators"]], "Unsupervised learning": [[89, "unsupervised-learning"]], "User Guide": [[73, "user-guide"]], "Variable length time series": [[75, "variable-length-time-series"]], "Version 1.3.0": [[97, "version-1-3-0"]], "What\u2019s new": [[97, "what-s-new"]], "wildboar": [[33, "module-wildboar"]], "wildboar.annotate": [[3, "module-wildboar.annotate"]], "wildboar.annotate._motifs": [[1, "module-wildboar.annotate._motifs"]], "wildboar.annotate._segment": [[2, "module-wildboar.annotate._segment"]], "wildboar.base": [[4, "module-wildboar.base"]], "wildboar.datasets": [[7, "module-wildboar.datasets"]], "wildboar.datasets._filter": [[5, "module-wildboar.datasets._filter"]], "wildboar.datasets._repository": [[6, "module-wildboar.datasets._repository"]], "wildboar.datasets.outlier": [[8, "module-wildboar.datasets.outlier"]], "wildboar.datasets.preprocess": [[9, "module-wildboar.datasets.preprocess"]], "wildboar.dimension_selection": [[14, "module-wildboar.dimension_selection"]], "wildboar.dimension_selection._base": [[10, "module-wildboar.dimension_selection._base"]], "wildboar.dimension_selection._distance": [[11, "module-wildboar.dimension_selection._distance"]], "wildboar.dimension_selection._sequential": [[12, "module-wildboar.dimension_selection._sequential"]], "wildboar.dimension_selection._variance": [[13, "module-wildboar.dimension_selection._variance"]], "wildboar.distance": [[21, "module-wildboar.distance"]], "wildboar.distance._distance": [[15, "module-wildboar.distance._distance"]], "wildboar.distance._manifold": [[16, "module-wildboar.distance._manifold"]], "wildboar.distance._matrix_profile": [[17, "module-wildboar.distance._matrix_profile"]], "wildboar.distance._multi_metric": [[18, "module-wildboar.distance._multi_metric"]], "wildboar.distance._neighbors": [[19, "module-wildboar.distance._neighbors"]], "wildboar.distance.dtw": [[20, "module-wildboar.distance.dtw"]], "wildboar.ensemble": [[24, "module-wildboar.ensemble"]], "wildboar.ensemble._elastic": [[22, "module-wildboar.ensemble._elastic"]], "wildboar.ensemble._ensemble": [[23, "module-wildboar.ensemble._ensemble"]], "wildboar.explain": [[32, "module-wildboar.explain"]], "wildboar.explain._importance": [[25, "module-wildboar.explain._importance"]], "wildboar.explain.counterfactual": [[31, "module-wildboar.explain.counterfactual"]], "wildboar.explain.counterfactual._helper": [[26, "module-wildboar.explain.counterfactual._helper"]], "wildboar.explain.counterfactual._nn": [[27, "module-wildboar.explain.counterfactual._nn"]], "wildboar.explain.counterfactual._nun": [[28, "module-wildboar.explain.counterfactual._nun"]], "wildboar.explain.counterfactual._proto": [[29, "module-wildboar.explain.counterfactual._proto"]], "wildboar.explain.counterfactual._sf": [[30, "module-wildboar.explain.counterfactual._sf"]], "wildboar.linear_model": [[38, "module-wildboar.linear_model"]], "wildboar.linear_model._hydra": [[34, "module-wildboar.linear_model._hydra"]], "wildboar.linear_model._rocket": [[35, "module-wildboar.linear_model._rocket"]], "wildboar.linear_model._shapelet": [[36, "module-wildboar.linear_model._shapelet"]], "wildboar.linear_model._transform": [[37, "module-wildboar.linear_model._transform"]], "wildboar.metrics": [[41, "module-wildboar.metrics"]], "wildboar.metrics._cluster": [[39, "module-wildboar.metrics._cluster"]], "wildboar.metrics._counterfactual": [[40, "module-wildboar.metrics._counterfactual"]], "wildboar.model_selection": [[44, "module-wildboar.model_selection"]], "wildboar.model_selection._cv": [[42, "module-wildboar.model_selection._cv"]], "wildboar.model_selection._outlier": [[43, "module-wildboar.model_selection._outlier"]], "wildboar.segment": [[47, "module-wildboar.segment"]], "wildboar.segment._base": [[45, "module-wildboar.segment._base"]], "wildboar.segment._mp": [[46, "module-wildboar.segment._mp"]], "wildboar.transform": [[58, "module-wildboar.transform"]], "wildboar.transform._base": [[48, "module-wildboar.transform._base"]], "wildboar.transform._conv": [[49, "module-wildboar.transform._conv"]], "wildboar.transform._diff": [[50, "module-wildboar.transform._diff"]], "wildboar.transform._hydra": [[51, "module-wildboar.transform._hydra"]], "wildboar.transform._interval": [[52, "module-wildboar.transform._interval"]], "wildboar.transform._matrix_profile": [[53, "module-wildboar.transform._matrix_profile"]], "wildboar.transform._pivot": [[54, "module-wildboar.transform._pivot"]], "wildboar.transform._rocket": [[55, "module-wildboar.transform._rocket"]], "wildboar.transform._sax": [[56, "module-wildboar.transform._sax"]], "wildboar.transform._shapelet": [[57, "module-wildboar.transform._shapelet"]], "wildboar.tree": [[63, "module-wildboar.tree"]], "wildboar.tree._base": [[59, "module-wildboar.tree._base"]], "wildboar.tree._plot": [[60, "module-wildboar.tree._plot"]], "wildboar.tree._ptree": [[61, "module-wildboar.tree._ptree"]], "wildboar.tree._tree": [[62, "module-wildboar.tree._tree"]], "wildboar.utils": [[68, "module-wildboar.utils"]], "wildboar.utils._parallel": [[64, "module-wildboar.utils._parallel"]], "wildboar.utils._testing": [[65, "module-wildboar.utils._testing"]], "wildboar.utils.decorators": [[66, "module-wildboar.utils.decorators"]], "wildboar.utils.estimator_checks": [[67, "module-wildboar.utils.estimator_checks"]], "wildboar.utils.plot": [[69, "module-wildboar.utils.plot"]], "wildboar.utils.validation": [[70, "module-wildboar.utils.validation"]], "wildboar.utils.variable_len": [[71, "module-wildboar.utils.variable_len"]], "wildboar.version": [[72, "module-wildboar.version"]]}, "docnames": ["api/index", "api/wildboar/annotate/_motifs/index", "api/wildboar/annotate/_segment/index", "api/wildboar/annotate/index", "api/wildboar/base/index", "api/wildboar/datasets/_filter/index", "api/wildboar/datasets/_repository/index", "api/wildboar/datasets/index", "api/wildboar/datasets/outlier/index", "api/wildboar/datasets/preprocess/index", "api/wildboar/dimension_selection/_base/index", "api/wildboar/dimension_selection/_distance/index", "api/wildboar/dimension_selection/_sequential/index", "api/wildboar/dimension_selection/_variance/index", "api/wildboar/dimension_selection/index", "api/wildboar/distance/_distance/index", "api/wildboar/distance/_manifold/index", "api/wildboar/distance/_matrix_profile/index", "api/wildboar/distance/_multi_metric/index", "api/wildboar/distance/_neighbors/index", "api/wildboar/distance/dtw/index", "api/wildboar/distance/index", "api/wildboar/ensemble/_elastic/index", "api/wildboar/ensemble/_ensemble/index", "api/wildboar/ensemble/index", "api/wildboar/explain/_importance/index", "api/wildboar/explain/counterfactual/_helper/index", "api/wildboar/explain/counterfactual/_nn/index", "api/wildboar/explain/counterfactual/_nun/index", "api/wildboar/explain/counterfactual/_proto/index", "api/wildboar/explain/counterfactual/_sf/index", "api/wildboar/explain/counterfactual/index", "api/wildboar/explain/index", "api/wildboar/index", "api/wildboar/linear_model/_hydra/index", "api/wildboar/linear_model/_rocket/index", "api/wildboar/linear_model/_shapelet/index", "api/wildboar/linear_model/_transform/index", "api/wildboar/linear_model/index", "api/wildboar/metrics/_cluster/index", "api/wildboar/metrics/_counterfactual/index", "api/wildboar/metrics/index", "api/wildboar/model_selection/_cv/index", "api/wildboar/model_selection/_outlier/index", "api/wildboar/model_selection/index", "api/wildboar/segment/_base/index", "api/wildboar/segment/_mp/index", "api/wildboar/segment/index", "api/wildboar/transform/_base/index", "api/wildboar/transform/_conv/index", "api/wildboar/transform/_diff/index", "api/wildboar/transform/_hydra/index", "api/wildboar/transform/_interval/index", "api/wildboar/transform/_matrix_profile/index", "api/wildboar/transform/_pivot/index", "api/wildboar/transform/_rocket/index", "api/wildboar/transform/_sax/index", "api/wildboar/transform/_shapelet/index", "api/wildboar/transform/index", "api/wildboar/tree/_base/index", "api/wildboar/tree/_plot/index", "api/wildboar/tree/_ptree/index", "api/wildboar/tree/_tree/index", "api/wildboar/tree/index", "api/wildboar/utils/_parallel/index", "api/wildboar/utils/_testing/index", "api/wildboar/utils/decorators/index", "api/wildboar/utils/estimator_checks/index", "api/wildboar/utils/index", "api/wildboar/utils/plot/index", "api/wildboar/utils/validation/index", "api/wildboar/utils/variable_len/index", "api/wildboar/version/index", "guide", "guide/annotate", "guide/basics", "guide/datasets", "guide/datasets/preprocess", "guide/datasets/repositories", "guide/dimension_selection", "guide/explain/counterfactuals", "guide/glossary", "guide/metrics", "guide/metrics/distance", "guide/metrics/elastic", "guide/supervised", "guide/supervised/ensemble", "guide/supervised/transform", "guide/supervised/trees", "guide/unsupervised", "guide/unsupervised/outlier", "guide/unsupervised/outlier/generation", "guide/unsupervised/segmentation", "guide/unsupervised/transform", "index", "install", "install/build", "more/whatsnew"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["api/index.rst", "api/wildboar/annotate/_motifs/index.rst", "api/wildboar/annotate/_segment/index.rst", "api/wildboar/annotate/index.rst", "api/wildboar/base/index.rst", "api/wildboar/datasets/_filter/index.rst", "api/wildboar/datasets/_repository/index.rst", "api/wildboar/datasets/index.rst", "api/wildboar/datasets/outlier/index.rst", "api/wildboar/datasets/preprocess/index.rst", "api/wildboar/dimension_selection/_base/index.rst", "api/wildboar/dimension_selection/_distance/index.rst", "api/wildboar/dimension_selection/_sequential/index.rst", "api/wildboar/dimension_selection/_variance/index.rst", "api/wildboar/dimension_selection/index.rst", "api/wildboar/distance/_distance/index.rst", "api/wildboar/distance/_manifold/index.rst", "api/wildboar/distance/_matrix_profile/index.rst", "api/wildboar/distance/_multi_metric/index.rst", "api/wildboar/distance/_neighbors/index.rst", "api/wildboar/distance/dtw/index.rst", "api/wildboar/distance/index.rst", "api/wildboar/ensemble/_elastic/index.rst", "api/wildboar/ensemble/_ensemble/index.rst", "api/wildboar/ensemble/index.rst", "api/wildboar/explain/_importance/index.rst", "api/wildboar/explain/counterfactual/_helper/index.rst", "api/wildboar/explain/counterfactual/_nn/index.rst", "api/wildboar/explain/counterfactual/_nun/index.rst", "api/wildboar/explain/counterfactual/_proto/index.rst", "api/wildboar/explain/counterfactual/_sf/index.rst", "api/wildboar/explain/counterfactual/index.rst", "api/wildboar/explain/index.rst", "api/wildboar/index.rst", "api/wildboar/linear_model/_hydra/index.rst", "api/wildboar/linear_model/_rocket/index.rst", "api/wildboar/linear_model/_shapelet/index.rst", "api/wildboar/linear_model/_transform/index.rst", "api/wildboar/linear_model/index.rst", "api/wildboar/metrics/_cluster/index.rst", "api/wildboar/metrics/_counterfactual/index.rst", "api/wildboar/metrics/index.rst", "api/wildboar/model_selection/_cv/index.rst", "api/wildboar/model_selection/_outlier/index.rst", "api/wildboar/model_selection/index.rst", "api/wildboar/segment/_base/index.rst", "api/wildboar/segment/_mp/index.rst", "api/wildboar/segment/index.rst", "api/wildboar/transform/_base/index.rst", "api/wildboar/transform/_conv/index.rst", "api/wildboar/transform/_diff/index.rst", "api/wildboar/transform/_hydra/index.rst", "api/wildboar/transform/_interval/index.rst", "api/wildboar/transform/_matrix_profile/index.rst", "api/wildboar/transform/_pivot/index.rst", "api/wildboar/transform/_rocket/index.rst", "api/wildboar/transform/_sax/index.rst", "api/wildboar/transform/_shapelet/index.rst", "api/wildboar/transform/index.rst", "api/wildboar/tree/_base/index.rst", "api/wildboar/tree/_plot/index.rst", "api/wildboar/tree/_ptree/index.rst", "api/wildboar/tree/_tree/index.rst", "api/wildboar/tree/index.rst", "api/wildboar/utils/_parallel/index.rst", "api/wildboar/utils/_testing/index.rst", "api/wildboar/utils/decorators/index.rst", "api/wildboar/utils/estimator_checks/index.rst", "api/wildboar/utils/index.rst", "api/wildboar/utils/plot/index.rst", "api/wildboar/utils/validation/index.rst", "api/wildboar/utils/variable_len/index.rst", "api/wildboar/version/index.rst", "guide.rst", "guide/annotate.rst", "guide/basics.rst", "guide/datasets.rst", "guide/datasets/preprocess.rst", "guide/datasets/repositories.rst", "guide/dimension_selection.rst", "guide/explain/counterfactuals.rst", "guide/glossary.rst", "guide/metrics.rst", "guide/metrics/distance.rst", "guide/metrics/elastic.rst", "guide/supervised.rst", "guide/supervised/ensemble.rst", "guide/supervised/transform.rst", "guide/supervised/trees.rst", "guide/unsupervised.rst", "guide/unsupervised/outlier.rst", "guide/unsupervised/outlier/generation.rst", "guide/unsupervised/segmentation.rst", "guide/unsupervised/transform.rst", "index.rst", "install.rst", "install/build.rst", "more/whatsnew.rst"], "indexentries": {"amplitudeimportance (class in wildboar.explain)": [[32, "wildboar.explain.AmplitudeImportance", false]], "amplitudeimportance (class in wildboar.explain._importance)": [[25, "wildboar.explain._importance.AmplitudeImportance", false]], "apply() (wildboar.tree._base.basetree method)": [[59, "wildboar.tree._base.BaseTree.apply", false]], "apply() (wildboar.tree._base.basetreeclassifier method)": [[59, "wildboar.tree._base.BaseTreeClassifier.apply", false]], "apply() (wildboar.tree._base.basetreeregressor method)": [[59, "wildboar.tree._base.BaseTreeRegressor.apply", false]], "apply() (wildboar.tree._ptree.proximitytreeclassifier method)": [[61, "wildboar.tree._ptree.ProximityTreeClassifier.apply", false]], "apply() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[62, "wildboar.tree._tree.BaseFeatureTreeClassifier.apply", false]], "apply() (wildboar.tree._tree.basefeaturetreeregressor method)": [[62, "wildboar.tree._tree.BaseFeatureTreeRegressor.apply", false]], "apply() (wildboar.tree._tree.dilatedshapelettreeclassifier method)": [[62, "wildboar.tree._tree.DilatedShapeletTreeClassifier.apply", false]], "apply() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[62, "wildboar.tree._tree.ExtraShapeletTreeClassifier.apply", false]], "apply() (wildboar.tree._tree.extrashapelettreeregressor method)": [[62, "wildboar.tree._tree.ExtraShapeletTreeRegressor.apply", false]], "apply() (wildboar.tree._tree.intervaltreeclassifier method)": [[62, "wildboar.tree._tree.IntervalTreeClassifier.apply", false]], "apply() (wildboar.tree._tree.intervaltreeregressor method)": [[62, "wildboar.tree._tree.IntervalTreeRegressor.apply", false]], "apply() (wildboar.tree._tree.pivottreeclassifier method)": [[62, "wildboar.tree._tree.PivotTreeClassifier.apply", false]], "apply() (wildboar.tree._tree.rockettreeclassifier method)": [[62, "wildboar.tree._tree.RocketTreeClassifier.apply", false]], "apply() (wildboar.tree._tree.rockettreeregressor method)": [[62, "wildboar.tree._tree.RocketTreeRegressor.apply", false]], "apply() (wildboar.tree._tree.shapelettreeclassifier method)": [[62, "wildboar.tree._tree.ShapeletTreeClassifier.apply", false]], "apply() (wildboar.tree._tree.shapelettreeregressor method)": [[62, "wildboar.tree._tree.ShapeletTreeRegressor.apply", false]], "apply() (wildboar.tree.extrashapelettreeclassifier method)": [[63, "wildboar.tree.ExtraShapeletTreeClassifier.apply", false]], "apply() (wildboar.tree.extrashapelettreeregressor method)": [[63, "wildboar.tree.ExtraShapeletTreeRegressor.apply", false]], "apply() (wildboar.tree.intervaltreeclassifier method)": [[63, "wildboar.tree.IntervalTreeClassifier.apply", false]], "apply() (wildboar.tree.intervaltreeregressor method)": [[63, "wildboar.tree.IntervalTreeRegressor.apply", false]], "apply() (wildboar.tree.pivottreeclassifier method)": [[63, "wildboar.tree.PivotTreeClassifier.apply", false]], "apply() (wildboar.tree.proximitytreeclassifier method)": [[63, "wildboar.tree.ProximityTreeClassifier.apply", false]], "apply() (wildboar.tree.rockettreeclassifier method)": [[63, "wildboar.tree.RocketTreeClassifier.apply", false]], "apply() (wildboar.tree.rockettreeregressor method)": [[63, "wildboar.tree.RocketTreeRegressor.apply", false]], "apply() (wildboar.tree.shapelettreeclassifier method)": [[63, "wildboar.tree.ShapeletTreeClassifier.apply", false]], "apply() (wildboar.tree.shapelettreeregressor method)": [[63, "wildboar.tree.ShapeletTreeRegressor.apply", false]], "argmin_distance() (in module wildboar.distance)": [[21, "wildboar.distance.argmin_distance", false]], "argmin_distance() (in module wildboar.distance._distance)": [[15, "wildboar.distance._distance.argmin_distance", false]], "argmin_subsequence_distance() (in module wildboar.distance)": [[21, "wildboar.distance.argmin_subsequence_distance", false]], "argmin_subsequence_distance() (in module wildboar.distance._distance)": [[15, "wildboar.distance._distance.argmin_subsequence_distance", false]], "array_or_scalar() (in module wildboar.utils.decorators)": [[66, "wildboar.utils.decorators.array_or_scalar", false]], "assert_exhaustive_parameter_checks() (in module wildboar.utils._testing)": [[65, "wildboar.utils._testing.assert_exhaustive_parameter_checks", false]], "assert_parameter_checks() (in module wildboar.utils._testing)": [[65, "wildboar.utils._testing.assert_parameter_checks", false]], "baggingclassifier (class in wildboar.ensemble)": [[24, "wildboar.ensemble.BaggingClassifier", false]], "baggingclassifier (class in wildboar.ensemble._ensemble)": [[23, "wildboar.ensemble._ensemble.BaggingClassifier", false]], "baggingregressor (class in wildboar.ensemble)": [[24, "wildboar.ensemble.BaggingRegressor", false]], "baggingregressor (class in wildboar.ensemble._ensemble)": [[23, "wildboar.ensemble._ensemble.BaggingRegressor", false]], "baseattributetransform (class in wildboar.transform._base)": [[48, "wildboar.transform._base.BaseAttributeTransform", false]], "basebagging (class in wildboar.ensemble)": [[24, "wildboar.ensemble.BaseBagging", false]], "basebagging (class in wildboar.ensemble._ensemble)": [[23, "wildboar.ensemble._ensemble.BaseBagging", false]], "basedistanceselector (class in wildboar.dimension_selection._base)": [[10, "wildboar.dimension_selection._base.BaseDistanceSelector", false]], "baseestimator (class in wildboar.base)": [[4, "wildboar.base.BaseEstimator", false]], "basefeaturetreeclassifier (class in wildboar.tree._tree)": [[62, "wildboar.tree._tree.BaseFeatureTreeClassifier", false]], "basefeaturetreeregressor (class in wildboar.tree._tree)": [[62, "wildboar.tree._tree.BaseFeatureTreeRegressor", false]], "baseforestclassifier (class in wildboar.ensemble._ensemble)": [[23, "wildboar.ensemble._ensemble.BaseForestClassifier", false]], "baseforestregressor (class in wildboar.ensemble._ensemble)": [[23, "wildboar.ensemble._ensemble.BaseForestRegressor", false]], "basesegmenter (class in wildboar.segment._base)": [[45, "wildboar.segment._base.BaseSegmenter", false]], "baseshapeletforestclassifier (class in wildboar.ensemble._ensemble)": [[23, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier", false]], "baseshapeletforestregressor (class in wildboar.ensemble._ensemble)": [[23, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor", false]], "basetransformclassifier (class in wildboar.linear_model._transform)": [[37, "wildboar.linear_model._transform.BaseTransformClassifier", false]], "basetransformestimator (class in wildboar.linear_model._transform)": [[37, "wildboar.linear_model._transform.BaseTransformEstimator", false]], "basetransformregressor (class in wildboar.linear_model._transform)": [[37, "wildboar.linear_model._transform.BaseTransformRegressor", false]], "basetree (class in wildboar.tree._base)": [[59, "wildboar.tree._base.BaseTree", false]], "basetreeclassifier (class in wildboar.tree._base)": [[59, "wildboar.tree._base.BaseTreeClassifier", false]], "basetreeregressor (class in wildboar.tree._base)": [[59, "wildboar.tree._base.BaseTreeRegressor", false]], "binning (class in wildboar.transform._sax)": [[56, "wildboar.transform._sax.Binning", false]], "bundle (class in wildboar.datasets)": [[7, "wildboar.datasets.Bundle", false]], "bundle (class in wildboar.datasets._repository)": [[6, "wildboar.datasets._repository.Bundle", false]], "castorclassifier (class in wildboar.linear_model)": [[38, "wildboar.linear_model.CastorClassifier", false]], "castorclassifier (class in wildboar.linear_model._shapelet)": [[36, "wildboar.linear_model._shapelet.CastorClassifier", false]], "castortransform (class in wildboar.transform)": [[58, "wildboar.transform.CastorTransform", false]], "castortransform (class in wildboar.transform._shapelet)": [[57, "wildboar.transform._shapelet.CastorTransform", false]], "check_array() (in module wildboar.utils)": [[68, "wildboar.utils.check_array", false]], "check_array() (in module wildboar.utils.validation)": [[70, "wildboar.utils.validation.check_array", false]], "check_classification_targets() (in module wildboar.utils.validation)": [[70, "wildboar.utils.validation.check_classification_targets", false]], "check_estimator() (in module wildboar.utils.estimator_checks)": [[67, "wildboar.utils.estimator_checks.check_estimator", false]], "check_option() (in module wildboar.utils.validation)": [[70, "wildboar.utils.validation.check_option", false]], "check_type() (in module wildboar.utils.validation)": [[70, "wildboar.utils.validation.check_type", false]], "check_x_y() (in module wildboar.utils)": [[68, "wildboar.utils.check_X_y", false]], "check_x_y() (in module wildboar.utils.validation)": [[70, "wildboar.utils.validation.check_X_y", false]], "clear_cache() (in module wildboar.datasets)": [[7, "wildboar.datasets.clear_cache", false]], "compactness_score() (in module wildboar.metrics)": [[41, "wildboar.metrics.compactness_score", false]], "compactness_score() (in module wildboar.metrics._counterfactual)": [[40, "wildboar.metrics._counterfactual.compactness_score", false]], "convolve() (in module wildboar.transform)": [[58, "wildboar.transform.convolve", false]], "convolve() (in module wildboar.transform._conv)": [[49, "wildboar.transform._conv.convolve", false]], "counterfactualmixin (class in wildboar.base)": [[4, "wildboar.base.CounterfactualMixin", false]], "counterfactuals() (in module wildboar.explain.counterfactual)": [[31, "wildboar.explain.counterfactual.counterfactuals", false]], "counterfactuals() (in module wildboar.explain.counterfactual._helper)": [[26, "wildboar.explain.counterfactual._helper.counterfactuals", false]], "ddtw_distance() (in module wildboar.distance.dtw)": [[20, "wildboar.distance.dtw.ddtw_distance", false]], "decision_function() (wildboar.ensemble._ensemble.baggingclassifier method)": [[23, "wildboar.ensemble._ensemble.BaggingClassifier.decision_function", false]], "decision_function() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[23, "wildboar.ensemble._ensemble.BaseForestClassifier.decision_function", false]], "decision_function() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[23, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.decision_function", false]], "decision_function() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[23, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.decision_function", false]], "decision_function() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[23, "wildboar.ensemble._ensemble.IntervalForestClassifier.decision_function", false]], "decision_function() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[23, "wildboar.ensemble._ensemble.PivotForestClassifier.decision_function", false]], "decision_function() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[23, "wildboar.ensemble._ensemble.ProximityForestClassifier.decision_function", false]], "decision_function() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[23, "wildboar.ensemble._ensemble.RocketForestClassifier.decision_function", false]], "decision_function() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[23, "wildboar.ensemble._ensemble.ShapeletForestClassifier.decision_function", false]], "decision_function() (wildboar.ensemble.baggingclassifier method)": [[24, "wildboar.ensemble.BaggingClassifier.decision_function", false]], "decision_function() (wildboar.ensemble.extrashapelettreesclassifier method)": [[24, "wildboar.ensemble.ExtraShapeletTreesClassifier.decision_function", false]], "decision_function() (wildboar.ensemble.intervalforestclassifier method)": [[24, "wildboar.ensemble.IntervalForestClassifier.decision_function", false]], "decision_function() (wildboar.ensemble.pivotforestclassifier method)": [[24, "wildboar.ensemble.PivotForestClassifier.decision_function", false]], "decision_function() (wildboar.ensemble.proximityforestclassifier method)": [[24, "wildboar.ensemble.ProximityForestClassifier.decision_function", false]], "decision_function() (wildboar.ensemble.rocketforestclassifier method)": [[24, "wildboar.ensemble.RocketForestClassifier.decision_function", false]], "decision_function() (wildboar.ensemble.shapeletforestclassifier method)": [[24, "wildboar.ensemble.ShapeletForestClassifier.decision_function", false]], "decision_path() (wildboar.tree._base.basetree method)": [[59, "wildboar.tree._base.BaseTree.decision_path", false]], "decision_path() (wildboar.tree._base.basetreeclassifier method)": [[59, "wildboar.tree._base.BaseTreeClassifier.decision_path", false]], "decision_path() (wildboar.tree._base.basetreeregressor method)": [[59, "wildboar.tree._base.BaseTreeRegressor.decision_path", false]], "decision_path() (wildboar.tree._ptree.proximitytreeclassifier method)": [[61, "wildboar.tree._ptree.ProximityTreeClassifier.decision_path", false]], "decision_path() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[62, "wildboar.tree._tree.BaseFeatureTreeClassifier.decision_path", false]], "decision_path() (wildboar.tree._tree.basefeaturetreeregressor method)": [[62, "wildboar.tree._tree.BaseFeatureTreeRegressor.decision_path", false]], "decision_path() (wildboar.tree._tree.dilatedshapelettreeclassifier method)": [[62, "wildboar.tree._tree.DilatedShapeletTreeClassifier.decision_path", false]], "decision_path() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[62, "wildboar.tree._tree.ExtraShapeletTreeClassifier.decision_path", false]], "decision_path() (wildboar.tree._tree.extrashapelettreeregressor method)": [[62, "wildboar.tree._tree.ExtraShapeletTreeRegressor.decision_path", false]], "decision_path() (wildboar.tree._tree.intervaltreeclassifier method)": [[62, "wildboar.tree._tree.IntervalTreeClassifier.decision_path", false]], "decision_path() (wildboar.tree._tree.intervaltreeregressor method)": [[62, "wildboar.tree._tree.IntervalTreeRegressor.decision_path", false]], "decision_path() (wildboar.tree._tree.pivottreeclassifier method)": [[62, "wildboar.tree._tree.PivotTreeClassifier.decision_path", false]], "decision_path() (wildboar.tree._tree.rockettreeclassifier method)": [[62, "wildboar.tree._tree.RocketTreeClassifier.decision_path", false]], "decision_path() (wildboar.tree._tree.rockettreeregressor method)": [[62, "wildboar.tree._tree.RocketTreeRegressor.decision_path", false]], "decision_path() (wildboar.tree._tree.shapelettreeclassifier method)": [[62, "wildboar.tree._tree.ShapeletTreeClassifier.decision_path", false]], "decision_path() (wildboar.tree._tree.shapelettreeregressor method)": [[62, "wildboar.tree._tree.ShapeletTreeRegressor.decision_path", false]], "decision_path() (wildboar.tree.extrashapelettreeclassifier method)": [[63, "wildboar.tree.ExtraShapeletTreeClassifier.decision_path", false]], "decision_path() (wildboar.tree.extrashapelettreeregressor method)": [[63, "wildboar.tree.ExtraShapeletTreeRegressor.decision_path", false]], "decision_path() (wildboar.tree.intervaltreeclassifier method)": [[63, "wildboar.tree.IntervalTreeClassifier.decision_path", false]], "decision_path() (wildboar.tree.intervaltreeregressor method)": [[63, "wildboar.tree.IntervalTreeRegressor.decision_path", false]], "decision_path() (wildboar.tree.pivottreeclassifier method)": [[63, "wildboar.tree.PivotTreeClassifier.decision_path", false]], "decision_path() (wildboar.tree.proximitytreeclassifier method)": [[63, "wildboar.tree.ProximityTreeClassifier.decision_path", false]], "decision_path() (wildboar.tree.rockettreeclassifier method)": [[63, "wildboar.tree.RocketTreeClassifier.decision_path", false]], "decision_path() (wildboar.tree.rockettreeregressor method)": [[63, "wildboar.tree.RocketTreeRegressor.decision_path", false]], "decision_path() (wildboar.tree.shapelettreeclassifier method)": [[63, "wildboar.tree.ShapeletTreeClassifier.decision_path", false]], "decision_path() (wildboar.tree.shapelettreeregressor method)": [[63, "wildboar.tree.ShapeletTreeRegressor.decision_path", false]], "density_outliers() (in module wildboar.datasets.outlier)": [[8, "wildboar.datasets.outlier.density_outliers", false]], "derivativetransform (class in wildboar.transform)": [[58, "wildboar.transform.DerivativeTransform", false]], "derivativetransform (class in wildboar.transform._diff)": [[50, "wildboar.transform._diff.DerivativeTransform", false]], "difftransform (class in wildboar.transform)": [[58, "wildboar.transform.DiffTransform", false]], "difftransform (class in wildboar.transform._diff)": [[50, "wildboar.transform._diff.DiffTransform", false]], "dilatedshapeletclassifier (class in wildboar.linear_model)": [[38, "wildboar.linear_model.DilatedShapeletClassifier", false]], "dilatedshapeletclassifier (class in wildboar.linear_model._shapelet)": [[36, "wildboar.linear_model._shapelet.DilatedShapeletClassifier", false]], "dilatedshapelettransform (class in wildboar.transform)": [[58, "wildboar.transform.DilatedShapeletTransform", false]], "dilatedshapelettransform (class in wildboar.transform._shapelet)": [[57, "wildboar.transform._shapelet.DilatedShapeletTransform", false]], "dilatedshapelettreeclassifier (class in wildboar.tree._tree)": [[62, "wildboar.tree._tree.DilatedShapeletTreeClassifier", false]], "dimensionselectormixin (class in wildboar.dimension_selection._base)": [[10, "wildboar.dimension_selection._base.DimensionSelectorMixin", false]], "distance_profile() (in module wildboar.distance)": [[21, "wildboar.distance.distance_profile", false]], "distance_profile() (in module wildboar.distance._distance)": [[15, "wildboar.distance._distance.distance_profile", false]], "distancevariancethreshold (class in wildboar.dimension_selection)": [[14, "wildboar.dimension_selection.DistanceVarianceThreshold", false]], "distancevariancethreshold (class in wildboar.dimension_selection._variance)": [[13, "wildboar.dimension_selection._variance.DistanceVarianceThreshold", false]], "download_url (wildboar.datasets._repository.jsonrepository property)": [[6, "wildboar.datasets._repository.JSONRepository.download_url", false]], "download_url (wildboar.datasets._repository.repository property)": [[6, "wildboar.datasets._repository.Repository.download_url", false]], "download_url (wildboar.datasets.jsonrepository property)": [[7, "wildboar.datasets.JSONRepository.download_url", false]], "download_url (wildboar.datasets.repository property)": [[7, "wildboar.datasets.Repository.download_url", false]], "dtw_alignment() (in module wildboar.distance.dtw)": [[20, "wildboar.distance.dtw.dtw_alignment", false]], "dtw_average() (in module wildboar.distance.dtw)": [[20, "wildboar.distance.dtw.dtw_average", false]], "dtw_distance() (in module wildboar.distance.dtw)": [[20, "wildboar.distance.dtw.dtw_distance", false]], "dtw_envelop() (in module wildboar.distance.dtw)": [[20, "wildboar.distance.dtw.dtw_envelop", false]], "dtw_lb_keogh() (in module wildboar.distance.dtw)": [[20, "wildboar.distance.dtw.dtw_lb_keogh", false]], "dtw_mapping() (in module wildboar.distance.dtw)": [[20, "wildboar.distance.dtw.dtw_mapping", false]], "dynamictimewarptransform (class in wildboar.explain.counterfactual._proto)": [[29, "wildboar.explain.counterfactual._proto.DynamicTimeWarpTransform", false]], "elasticensembleclassifier (class in wildboar.ensemble)": [[24, "wildboar.ensemble.ElasticEnsembleClassifier", false]], "elasticensembleclassifier (class in wildboar.ensemble._elastic)": [[22, "wildboar.ensemble._elastic.ElasticEnsembleClassifier", false]], "emmott_outliers() (in module wildboar.datasets.outlier)": [[8, "wildboar.datasets.outlier.emmott_outliers", false]], "estimators_samples_ (wildboar.ensemble._ensemble.baggingclassifier property)": [[23, "wildboar.ensemble._ensemble.BaggingClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble._ensemble.baggingregressor property)": [[23, "wildboar.ensemble._ensemble.BaggingRegressor.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble._ensemble.basebagging property)": [[23, "wildboar.ensemble._ensemble.BaseBagging.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble._ensemble.baseforestclassifier property)": [[23, "wildboar.ensemble._ensemble.BaseForestClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble._ensemble.baseforestregressor property)": [[23, "wildboar.ensemble._ensemble.BaseForestRegressor.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble._ensemble.baseshapeletforestclassifier property)": [[23, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble._ensemble.baseshapeletforestregressor property)": [[23, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble._ensemble.extrashapelettreesclassifier property)": [[23, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble._ensemble.extrashapelettreesregressor property)": [[23, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble._ensemble.intervalforestclassifier property)": [[23, "wildboar.ensemble._ensemble.IntervalForestClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble._ensemble.intervalforestregressor property)": [[23, "wildboar.ensemble._ensemble.IntervalForestRegressor.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble._ensemble.isolationshapeletforest property)": [[23, "wildboar.ensemble._ensemble.IsolationShapeletForest.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble._ensemble.pivotforestclassifier property)": [[23, "wildboar.ensemble._ensemble.PivotForestClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble._ensemble.proximityforestclassifier property)": [[23, "wildboar.ensemble._ensemble.ProximityForestClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble._ensemble.rocketforestclassifier property)": [[23, "wildboar.ensemble._ensemble.RocketForestClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble._ensemble.rocketforestregressor property)": [[23, "wildboar.ensemble._ensemble.RocketForestRegressor.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble._ensemble.shapeletforestclassifier property)": [[23, "wildboar.ensemble._ensemble.ShapeletForestClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble._ensemble.shapeletforestembedding property)": [[23, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble._ensemble.shapeletforestregressor property)": [[23, "wildboar.ensemble._ensemble.ShapeletForestRegressor.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.baggingclassifier property)": [[24, "wildboar.ensemble.BaggingClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.baggingregressor property)": [[24, "wildboar.ensemble.BaggingRegressor.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.basebagging property)": [[24, "wildboar.ensemble.BaseBagging.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.extrashapelettreesclassifier property)": [[24, "wildboar.ensemble.ExtraShapeletTreesClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.extrashapelettreesregressor property)": [[24, "wildboar.ensemble.ExtraShapeletTreesRegressor.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.intervalforestclassifier property)": [[24, "wildboar.ensemble.IntervalForestClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.intervalforestregressor property)": [[24, "wildboar.ensemble.IntervalForestRegressor.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.isolationshapeletforest property)": [[24, "wildboar.ensemble.IsolationShapeletForest.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.pivotforestclassifier property)": [[24, "wildboar.ensemble.PivotForestClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.proximityforestclassifier property)": [[24, "wildboar.ensemble.ProximityForestClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.rocketforestclassifier property)": [[24, "wildboar.ensemble.RocketForestClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.rocketforestregressor property)": [[24, "wildboar.ensemble.RocketForestRegressor.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.shapeletforestclassifier property)": [[24, "wildboar.ensemble.ShapeletForestClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.shapeletforestembedding property)": [[24, "wildboar.ensemble.ShapeletForestEmbedding.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.shapeletforestregressor property)": [[24, "wildboar.ensemble.ShapeletForestRegressor.estimators_samples_", false]], "euclideantransform (class in wildboar.explain.counterfactual._proto)": [[29, "wildboar.explain.counterfactual._proto.EuclideanTransform", false]], "explainermixin (class in wildboar.base)": [[4, "wildboar.base.ExplainerMixin", false]], "extrashapelettreeclassifier (class in wildboar.tree)": [[63, "wildboar.tree.ExtraShapeletTreeClassifier", false]], "extrashapelettreeclassifier (class in wildboar.tree._tree)": [[62, "wildboar.tree._tree.ExtraShapeletTreeClassifier", false]], "extrashapelettreeregressor (class in wildboar.tree)": [[63, "wildboar.tree.ExtraShapeletTreeRegressor", false]], "extrashapelettreeregressor (class in wildboar.tree._tree)": [[62, "wildboar.tree._tree.ExtraShapeletTreeRegressor", false]], "extrashapelettreesclassifier (class in wildboar.ensemble)": [[24, "wildboar.ensemble.ExtraShapeletTreesClassifier", false]], "extrashapelettreesclassifier (class in wildboar.ensemble._ensemble)": [[23, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier", false]], "extrashapelettreesregressor (class in wildboar.ensemble)": [[24, "wildboar.ensemble.ExtraShapeletTreesRegressor", false]], "extrashapelettreesregressor (class in wildboar.ensemble._ensemble)": [[23, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor", false]], "featuretransform (class in wildboar.transform)": [[58, "wildboar.transform.FeatureTransform", false]], "featuretransform (class in wildboar.transform._interval)": [[52, "wildboar.transform._interval.FeatureTransform", false]], "fit() (wildboar.dimension_selection._base.basedistanceselector method)": [[10, "wildboar.dimension_selection._base.BaseDistanceSelector.fit", false]], "fit() (wildboar.dimension_selection._distance.selectdimensionpercentile method)": [[11, "wildboar.dimension_selection._distance.SelectDimensionPercentile.fit", false]], "fit() (wildboar.dimension_selection._distance.selectdimensionsignificance method)": [[11, "wildboar.dimension_selection._distance.SelectDimensionSignificance.fit", false]], "fit() (wildboar.dimension_selection._distance.selectdimensiontopk method)": [[11, "wildboar.dimension_selection._distance.SelectDimensionTopK.fit", false]], "fit() (wildboar.dimension_selection._sequential.sequentialdimensionselector method)": [[12, "wildboar.dimension_selection._sequential.SequentialDimensionSelector.fit", false]], "fit() (wildboar.dimension_selection._variance.distancevariancethreshold method)": [[13, "wildboar.dimension_selection._variance.DistanceVarianceThreshold.fit", false]], "fit() (wildboar.dimension_selection.distancevariancethreshold method)": [[14, "wildboar.dimension_selection.DistanceVarianceThreshold.fit", false]], "fit() (wildboar.dimension_selection.selectdimensionpercentile method)": [[14, "wildboar.dimension_selection.SelectDimensionPercentile.fit", false]], "fit() (wildboar.dimension_selection.selectdimensionsignificance method)": [[14, "wildboar.dimension_selection.SelectDimensionSignificance.fit", false]], "fit() (wildboar.dimension_selection.selectdimensiontopk method)": [[14, "wildboar.dimension_selection.SelectDimensionTopK.fit", false]], "fit() (wildboar.dimension_selection.sequentialdimensionselector method)": [[14, "wildboar.dimension_selection.SequentialDimensionSelector.fit", false]], "fit() (wildboar.distance._neighbors.kmeans method)": [[19, "wildboar.distance._neighbors.KMeans.fit", false]], "fit() (wildboar.distance._neighbors.kmedoids method)": [[19, "wildboar.distance._neighbors.KMedoids.fit", false]], "fit() (wildboar.distance._neighbors.kneighborsclassifier method)": [[19, "wildboar.distance._neighbors.KNeighborsClassifier.fit", false]], "fit() (wildboar.distance.kmeans method)": [[21, "wildboar.distance.KMeans.fit", false]], "fit() (wildboar.distance.kmedoids method)": [[21, "wildboar.distance.KMedoids.fit", false]], "fit() (wildboar.distance.kneighborsclassifier method)": [[21, "wildboar.distance.KNeighborsClassifier.fit", false]], "fit() (wildboar.ensemble._elastic.elasticensembleclassifier method)": [[22, "wildboar.ensemble._elastic.ElasticEnsembleClassifier.fit", false]], "fit() (wildboar.ensemble._ensemble.baggingclassifier method)": [[23, "wildboar.ensemble._ensemble.BaggingClassifier.fit", false]], "fit() (wildboar.ensemble._ensemble.baggingregressor method)": [[23, "wildboar.ensemble._ensemble.BaggingRegressor.fit", false]], "fit() (wildboar.ensemble._ensemble.basebagging method)": [[23, "wildboar.ensemble._ensemble.BaseBagging.fit", false]], "fit() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[23, "wildboar.ensemble._ensemble.BaseForestClassifier.fit", false]], "fit() (wildboar.ensemble._ensemble.baseforestregressor method)": [[23, "wildboar.ensemble._ensemble.BaseForestRegressor.fit", false]], "fit() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[23, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.fit", false]], "fit() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[23, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.fit", false]], "fit() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[23, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.fit", false]], "fit() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[23, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.fit", false]], "fit() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[23, "wildboar.ensemble._ensemble.IntervalForestClassifier.fit", false]], "fit() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[23, "wildboar.ensemble._ensemble.IntervalForestRegressor.fit", false]], "fit() (wildboar.ensemble._ensemble.isolationshapeletforest method)": [[23, "wildboar.ensemble._ensemble.IsolationShapeletForest.fit", false]], "fit() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[23, "wildboar.ensemble._ensemble.PivotForestClassifier.fit", false]], "fit() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[23, "wildboar.ensemble._ensemble.ProximityForestClassifier.fit", false]], "fit() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[23, "wildboar.ensemble._ensemble.RocketForestClassifier.fit", false]], "fit() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[23, "wildboar.ensemble._ensemble.RocketForestRegressor.fit", false]], "fit() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[23, "wildboar.ensemble._ensemble.ShapeletForestClassifier.fit", false]], "fit() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[23, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.fit", false]], "fit() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[23, "wildboar.ensemble._ensemble.ShapeletForestRegressor.fit", false]], "fit() (wildboar.ensemble.baggingclassifier method)": [[24, "wildboar.ensemble.BaggingClassifier.fit", false]], "fit() (wildboar.ensemble.baggingregressor method)": [[24, "wildboar.ensemble.BaggingRegressor.fit", false]], "fit() (wildboar.ensemble.basebagging method)": [[24, "wildboar.ensemble.BaseBagging.fit", false]], "fit() (wildboar.ensemble.elasticensembleclassifier method)": [[24, "wildboar.ensemble.ElasticEnsembleClassifier.fit", false]], "fit() (wildboar.ensemble.extrashapelettreesclassifier method)": [[24, "wildboar.ensemble.ExtraShapeletTreesClassifier.fit", false]], "fit() (wildboar.ensemble.extrashapelettreesregressor method)": [[24, "wildboar.ensemble.ExtraShapeletTreesRegressor.fit", false]], "fit() (wildboar.ensemble.intervalforestclassifier method)": [[24, "wildboar.ensemble.IntervalForestClassifier.fit", false]], "fit() (wildboar.ensemble.intervalforestregressor method)": [[24, "wildboar.ensemble.IntervalForestRegressor.fit", false]], "fit() (wildboar.ensemble.isolationshapeletforest method)": [[24, "wildboar.ensemble.IsolationShapeletForest.fit", false]], "fit() (wildboar.ensemble.pivotforestclassifier method)": [[24, "wildboar.ensemble.PivotForestClassifier.fit", false]], "fit() (wildboar.ensemble.proximityforestclassifier method)": [[24, "wildboar.ensemble.ProximityForestClassifier.fit", false]], "fit() (wildboar.ensemble.rocketforestclassifier method)": [[24, "wildboar.ensemble.RocketForestClassifier.fit", false]], "fit() (wildboar.ensemble.rocketforestregressor method)": [[24, "wildboar.ensemble.RocketForestRegressor.fit", false]], "fit() (wildboar.ensemble.shapeletforestclassifier method)": [[24, "wildboar.ensemble.ShapeletForestClassifier.fit", false]], "fit() (wildboar.ensemble.shapeletforestembedding method)": [[24, "wildboar.ensemble.ShapeletForestEmbedding.fit", false]], "fit() (wildboar.ensemble.shapeletforestregressor method)": [[24, "wildboar.ensemble.ShapeletForestRegressor.fit", false]], "fit() (wildboar.segment._mp.flusssegmenter method)": [[46, "wildboar.segment._mp.FlussSegmenter.fit", false]], "fit() (wildboar.segment.flusssegmenter method)": [[47, "wildboar.segment.FlussSegmenter.fit", false]], "fit() (wildboar.transform._base.baseattributetransform method)": [[48, "wildboar.transform._base.BaseAttributeTransform.fit", false]], "fit() (wildboar.transform._hydra.hydratransform method)": [[51, "wildboar.transform._hydra.HydraTransform.fit", false]], "fit() (wildboar.transform._interval.featuretransform method)": [[52, "wildboar.transform._interval.FeatureTransform.fit", false]], "fit() (wildboar.transform._interval.intervaltransform method)": [[52, "wildboar.transform._interval.IntervalTransform.fit", false]], "fit() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[53, "wildboar.transform._matrix_profile.MatrixProfileTransform.fit", false]], "fit() (wildboar.transform._pivot.pivottransform method)": [[54, "wildboar.transform._pivot.PivotTransform.fit", false]], "fit() (wildboar.transform._rocket.rockettransform method)": [[55, "wildboar.transform._rocket.RocketTransform.fit", false]], "fit() (wildboar.transform._shapelet.castortransform method)": [[57, "wildboar.transform._shapelet.CastorTransform.fit", false]], "fit() (wildboar.transform._shapelet.dilatedshapelettransform method)": [[57, "wildboar.transform._shapelet.DilatedShapeletTransform.fit", false]], "fit() (wildboar.transform._shapelet.randomshapelettransform method)": [[57, "wildboar.transform._shapelet.RandomShapeletTransform.fit", false]], "fit() (wildboar.transform._shapelet.shapelettransform method)": [[57, "wildboar.transform._shapelet.ShapeletTransform.fit", false]], "fit() (wildboar.transform.castortransform method)": [[58, "wildboar.transform.CastorTransform.fit", false]], "fit() (wildboar.transform.dilatedshapelettransform method)": [[58, "wildboar.transform.DilatedShapeletTransform.fit", false]], "fit() (wildboar.transform.featuretransform method)": [[58, "wildboar.transform.FeatureTransform.fit", false]], "fit() (wildboar.transform.hydratransform method)": [[58, "wildboar.transform.HydraTransform.fit", false]], "fit() (wildboar.transform.intervaltransform method)": [[58, "wildboar.transform.IntervalTransform.fit", false]], "fit() (wildboar.transform.matrixprofiletransform method)": [[58, "wildboar.transform.MatrixProfileTransform.fit", false]], "fit() (wildboar.transform.pivottransform method)": [[58, "wildboar.transform.PivotTransform.fit", false]], "fit() (wildboar.transform.randomshapelettransform method)": [[58, "wildboar.transform.RandomShapeletTransform.fit", false]], "fit() (wildboar.transform.rockettransform method)": [[58, "wildboar.transform.RocketTransform.fit", false]], "fit() (wildboar.transform.shapelettransform method)": [[58, "wildboar.transform.ShapeletTransform.fit", false]], "fit() (wildboar.tree._base.basetreeclassifier method)": [[59, "wildboar.tree._base.BaseTreeClassifier.fit", false]], "fit() (wildboar.tree._base.basetreeregressor method)": [[59, "wildboar.tree._base.BaseTreeRegressor.fit", false]], "fit() (wildboar.tree._ptree.proximitytreeclassifier method)": [[61, "wildboar.tree._ptree.ProximityTreeClassifier.fit", false]], "fit() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[62, "wildboar.tree._tree.BaseFeatureTreeClassifier.fit", false]], "fit() (wildboar.tree._tree.basefeaturetreeregressor method)": [[62, "wildboar.tree._tree.BaseFeatureTreeRegressor.fit", false]], "fit() (wildboar.tree._tree.dilatedshapelettreeclassifier method)": [[62, "wildboar.tree._tree.DilatedShapeletTreeClassifier.fit", false]], "fit() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[62, "wildboar.tree._tree.ExtraShapeletTreeClassifier.fit", false]], "fit() (wildboar.tree._tree.extrashapelettreeregressor method)": [[62, "wildboar.tree._tree.ExtraShapeletTreeRegressor.fit", false]], "fit() (wildboar.tree._tree.intervaltreeclassifier method)": [[62, "wildboar.tree._tree.IntervalTreeClassifier.fit", false]], "fit() (wildboar.tree._tree.intervaltreeregressor method)": [[62, "wildboar.tree._tree.IntervalTreeRegressor.fit", false]], "fit() (wildboar.tree._tree.pivottreeclassifier method)": [[62, "wildboar.tree._tree.PivotTreeClassifier.fit", false]], "fit() (wildboar.tree._tree.rockettreeclassifier method)": [[62, "wildboar.tree._tree.RocketTreeClassifier.fit", false]], "fit() (wildboar.tree._tree.rockettreeregressor method)": [[62, "wildboar.tree._tree.RocketTreeRegressor.fit", false]], "fit() (wildboar.tree._tree.shapelettreeclassifier method)": [[62, "wildboar.tree._tree.ShapeletTreeClassifier.fit", false]], "fit() (wildboar.tree._tree.shapelettreeregressor method)": [[62, "wildboar.tree._tree.ShapeletTreeRegressor.fit", false]], "fit() (wildboar.tree.extrashapelettreeclassifier method)": [[63, "wildboar.tree.ExtraShapeletTreeClassifier.fit", false]], "fit() (wildboar.tree.extrashapelettreeregressor method)": [[63, "wildboar.tree.ExtraShapeletTreeRegressor.fit", false]], "fit() (wildboar.tree.intervaltreeclassifier method)": [[63, "wildboar.tree.IntervalTreeClassifier.fit", false]], "fit() (wildboar.tree.intervaltreeregressor method)": [[63, "wildboar.tree.IntervalTreeRegressor.fit", false]], "fit() (wildboar.tree.pivottreeclassifier method)": [[63, "wildboar.tree.PivotTreeClassifier.fit", false]], "fit() (wildboar.tree.proximitytreeclassifier method)": [[63, "wildboar.tree.ProximityTreeClassifier.fit", false]], "fit() (wildboar.tree.rockettreeclassifier method)": [[63, "wildboar.tree.RocketTreeClassifier.fit", false]], "fit() (wildboar.tree.rockettreeregressor method)": [[63, "wildboar.tree.RocketTreeRegressor.fit", false]], "fit() (wildboar.tree.shapelettreeclassifier method)": [[63, "wildboar.tree.ShapeletTreeClassifier.fit", false]], "fit() (wildboar.tree.shapelettreeregressor method)": [[63, "wildboar.tree.ShapeletTreeRegressor.fit", false]], "fit_explain() (wildboar.base.explainermixin method)": [[4, "wildboar.base.ExplainerMixin.fit_explain", false]], "fit_explain() (wildboar.explain._importance.amplitudeimportance method)": [[25, "wildboar.explain._importance.AmplitudeImportance.fit_explain", false]], "fit_explain() (wildboar.explain._importance.frequencyimportance method)": [[25, "wildboar.explain._importance.FrequencyImportance.fit_explain", false]], "fit_explain() (wildboar.explain._importance.intervalimportance method)": [[25, "wildboar.explain._importance.IntervalImportance.fit_explain", false]], "fit_explain() (wildboar.explain._importance.shapeletimportance method)": [[25, "wildboar.explain._importance.ShapeletImportance.fit_explain", false]], "fit_explain() (wildboar.explain.amplitudeimportance method)": [[32, "wildboar.explain.AmplitudeImportance.fit_explain", false]], "fit_explain() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[27, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.fit_explain", false]], "fit_explain() (wildboar.explain.counterfactual._nun.nativeguidecounterfactual method)": [[28, "wildboar.explain.counterfactual._nun.NativeGuideCounterfactual.fit_explain", false]], "fit_explain() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[29, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.fit_explain", false]], "fit_explain() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[30, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.fit_explain", false]], "fit_explain() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[31, "wildboar.explain.counterfactual.KNeighborsCounterfactual.fit_explain", false]], "fit_explain() (wildboar.explain.counterfactual.nativeguidecounterfactual method)": [[31, "wildboar.explain.counterfactual.NativeGuideCounterfactual.fit_explain", false]], "fit_explain() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[31, "wildboar.explain.counterfactual.PrototypeCounterfactual.fit_explain", false]], "fit_explain() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[31, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.fit_explain", false]], "fit_explain() (wildboar.explain.frequencyimportance method)": [[32, "wildboar.explain.FrequencyImportance.fit_explain", false]], "fit_explain() (wildboar.explain.intervalimportance method)": [[32, "wildboar.explain.IntervalImportance.fit_explain", false]], "fit_explain() (wildboar.explain.shapeletimportance method)": [[32, "wildboar.explain.ShapeletImportance.fit_explain", false]], "fit_predict() (wildboar.distance._neighbors.kmeans method)": [[19, "wildboar.distance._neighbors.KMeans.fit_predict", false]], "fit_predict() (wildboar.distance._neighbors.kmedoids method)": [[19, "wildboar.distance._neighbors.KMedoids.fit_predict", false]], "fit_predict() (wildboar.distance.kmeans method)": [[21, "wildboar.distance.KMeans.fit_predict", false]], "fit_predict() (wildboar.distance.kmedoids method)": [[21, "wildboar.distance.KMedoids.fit_predict", false]], "fit_predict() (wildboar.ensemble._ensemble.isolationshapeletforest method)": [[23, "wildboar.ensemble._ensemble.IsolationShapeletForest.fit_predict", false]], "fit_predict() (wildboar.ensemble.isolationshapeletforest method)": [[24, "wildboar.ensemble.IsolationShapeletForest.fit_predict", false]], "fit_transform() (wildboar.dimension_selection._base.basedistanceselector method)": [[10, "wildboar.dimension_selection._base.BaseDistanceSelector.fit_transform", false]], "fit_transform() (wildboar.dimension_selection._base.dimensionselectormixin method)": [[10, "wildboar.dimension_selection._base.DimensionSelectorMixin.fit_transform", false]], "fit_transform() (wildboar.dimension_selection._distance.selectdimensionpercentile method)": [[11, "wildboar.dimension_selection._distance.SelectDimensionPercentile.fit_transform", false]], "fit_transform() (wildboar.dimension_selection._distance.selectdimensionsignificance method)": [[11, "wildboar.dimension_selection._distance.SelectDimensionSignificance.fit_transform", false]], "fit_transform() (wildboar.dimension_selection._distance.selectdimensiontopk method)": [[11, "wildboar.dimension_selection._distance.SelectDimensionTopK.fit_transform", false]], "fit_transform() (wildboar.dimension_selection._sequential.sequentialdimensionselector method)": [[12, "wildboar.dimension_selection._sequential.SequentialDimensionSelector.fit_transform", false]], "fit_transform() (wildboar.dimension_selection._variance.distancevariancethreshold method)": [[13, "wildboar.dimension_selection._variance.DistanceVarianceThreshold.fit_transform", false]], "fit_transform() (wildboar.dimension_selection.distancevariancethreshold method)": [[14, "wildboar.dimension_selection.DistanceVarianceThreshold.fit_transform", false]], "fit_transform() (wildboar.dimension_selection.selectdimensionpercentile method)": [[14, "wildboar.dimension_selection.SelectDimensionPercentile.fit_transform", false]], "fit_transform() (wildboar.dimension_selection.selectdimensionsignificance method)": [[14, "wildboar.dimension_selection.SelectDimensionSignificance.fit_transform", false]], "fit_transform() (wildboar.dimension_selection.selectdimensiontopk method)": [[14, "wildboar.dimension_selection.SelectDimensionTopK.fit_transform", false]], "fit_transform() (wildboar.dimension_selection.sequentialdimensionselector method)": [[14, "wildboar.dimension_selection.SequentialDimensionSelector.fit_transform", false]], "fit_transform() (wildboar.distance._neighbors.kmeans method)": [[19, "wildboar.distance._neighbors.KMeans.fit_transform", false]], "fit_transform() (wildboar.distance._neighbors.kmedoids method)": [[19, "wildboar.distance._neighbors.KMedoids.fit_transform", false]], "fit_transform() (wildboar.distance.kmeans method)": [[21, "wildboar.distance.KMeans.fit_transform", false]], "fit_transform() (wildboar.distance.kmedoids method)": [[21, "wildboar.distance.KMedoids.fit_transform", false]], "fit_transform() (wildboar.segment._base.basesegmenter method)": [[45, "wildboar.segment._base.BaseSegmenter.fit_transform", false]], "fit_transform() (wildboar.segment._mp.flusssegmenter method)": [[46, "wildboar.segment._mp.FlussSegmenter.fit_transform", false]], "fit_transform() (wildboar.segment.flusssegmenter method)": [[47, "wildboar.segment.FlussSegmenter.fit_transform", false]], "fit_transform() (wildboar.transform._base.baseattributetransform method)": [[48, "wildboar.transform._base.BaseAttributeTransform.fit_transform", false]], "fit_transform() (wildboar.transform._diff.derivativetransform method)": [[50, "wildboar.transform._diff.DerivativeTransform.fit_transform", false]], "fit_transform() (wildboar.transform._diff.difftransform method)": [[50, "wildboar.transform._diff.DiffTransform.fit_transform", false]], "fit_transform() (wildboar.transform._hydra.hydratransform method)": [[51, "wildboar.transform._hydra.HydraTransform.fit_transform", false]], "fit_transform() (wildboar.transform._interval.featuretransform method)": [[52, "wildboar.transform._interval.FeatureTransform.fit_transform", false]], "fit_transform() (wildboar.transform._interval.intervaltransform method)": [[52, "wildboar.transform._interval.IntervalTransform.fit_transform", false]], "fit_transform() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[53, "wildboar.transform._matrix_profile.MatrixProfileTransform.fit_transform", false]], "fit_transform() (wildboar.transform._pivot.pivottransform method)": [[54, "wildboar.transform._pivot.PivotTransform.fit_transform", false]], "fit_transform() (wildboar.transform._pivot.proximitytransform method)": [[54, "wildboar.transform._pivot.ProximityTransform.fit_transform", false]], "fit_transform() (wildboar.transform._rocket.rockettransform method)": [[55, "wildboar.transform._rocket.RocketTransform.fit_transform", false]], "fit_transform() (wildboar.transform._sax.paa method)": [[56, "wildboar.transform._sax.PAA.fit_transform", false]], "fit_transform() (wildboar.transform._sax.sax method)": [[56, "wildboar.transform._sax.SAX.fit_transform", false]], "fit_transform() (wildboar.transform._shapelet.castortransform method)": [[57, "wildboar.transform._shapelet.CastorTransform.fit_transform", false]], "fit_transform() (wildboar.transform._shapelet.dilatedshapelettransform method)": [[57, "wildboar.transform._shapelet.DilatedShapeletTransform.fit_transform", false]], "fit_transform() (wildboar.transform._shapelet.randomshapelettransform method)": [[57, "wildboar.transform._shapelet.RandomShapeletTransform.fit_transform", false]], "fit_transform() (wildboar.transform._shapelet.shapelettransform method)": [[57, "wildboar.transform._shapelet.ShapeletTransform.fit_transform", false]], "fit_transform() (wildboar.transform.castortransform method)": [[58, "wildboar.transform.CastorTransform.fit_transform", false]], "fit_transform() (wildboar.transform.derivativetransform method)": [[58, "wildboar.transform.DerivativeTransform.fit_transform", false]], "fit_transform() (wildboar.transform.difftransform method)": [[58, "wildboar.transform.DiffTransform.fit_transform", false]], "fit_transform() (wildboar.transform.dilatedshapelettransform method)": [[58, "wildboar.transform.DilatedShapeletTransform.fit_transform", false]], "fit_transform() (wildboar.transform.featuretransform method)": [[58, "wildboar.transform.FeatureTransform.fit_transform", false]], "fit_transform() (wildboar.transform.hydratransform method)": [[58, "wildboar.transform.HydraTransform.fit_transform", false]], "fit_transform() (wildboar.transform.intervaltransform method)": [[58, "wildboar.transform.IntervalTransform.fit_transform", false]], "fit_transform() (wildboar.transform.matrixprofiletransform method)": [[58, "wildboar.transform.MatrixProfileTransform.fit_transform", false]], "fit_transform() (wildboar.transform.paa method)": [[58, "wildboar.transform.PAA.fit_transform", false]], "fit_transform() (wildboar.transform.pivottransform method)": [[58, "wildboar.transform.PivotTransform.fit_transform", false]], "fit_transform() (wildboar.transform.proximitytransform method)": [[58, "wildboar.transform.ProximityTransform.fit_transform", false]], "fit_transform() (wildboar.transform.randomshapelettransform method)": [[58, "wildboar.transform.RandomShapeletTransform.fit_transform", false]], "fit_transform() (wildboar.transform.rockettransform method)": [[58, "wildboar.transform.RocketTransform.fit_transform", false]], "fit_transform() (wildboar.transform.sax method)": [[58, "wildboar.transform.SAX.fit_transform", false]], "fit_transform() (wildboar.transform.shapelettransform method)": [[58, "wildboar.transform.ShapeletTransform.fit_transform", false]], "flusssegmenter (class in wildboar.segment)": [[47, "wildboar.segment.FlussSegmenter", false]], "flusssegmenter (class in wildboar.segment._mp)": [[46, "wildboar.segment._mp.FlussSegmenter", false]], "forestmixin (class in wildboar.ensemble._ensemble)": [[23, "wildboar.ensemble._ensemble.ForestMixin", false]], "frequencyimportance (class in wildboar.explain)": [[32, "wildboar.explain.FrequencyImportance", false]], "frequencyimportance (class in wildboar.explain._importance)": [[25, "wildboar.explain._importance.FrequencyImportance", false]], "get_bundle() (wildboar.datasets._repository.jsonrepository method)": [[6, "wildboar.datasets._repository.JSONRepository.get_bundle", false]], "get_bundle() (wildboar.datasets._repository.repository method)": [[6, "wildboar.datasets._repository.Repository.get_bundle", false]], "get_bundle() (wildboar.datasets.jsonrepository method)": [[7, "wildboar.datasets.JSONRepository.get_bundle", false]], "get_bundle() (wildboar.datasets.repository method)": [[7, "wildboar.datasets.Repository.get_bundle", false]], "get_bundles() (in module wildboar.datasets)": [[7, "wildboar.datasets.get_bundles", false]], "get_bundles() (wildboar.datasets._repository.jsonrepository method)": [[6, "wildboar.datasets._repository.JSONRepository.get_bundles", false]], "get_bundles() (wildboar.datasets._repository.repository method)": [[6, "wildboar.datasets._repository.Repository.get_bundles", false]], "get_bundles() (wildboar.datasets.jsonrepository method)": [[7, "wildboar.datasets.JSONRepository.get_bundles", false]], "get_bundles() (wildboar.datasets.repository method)": [[7, "wildboar.datasets.Repository.get_bundles", false]], "get_collection() (wildboar.datasets._repository.bundle method)": [[6, "wildboar.datasets._repository.Bundle.get_collection", false]], "get_collection() (wildboar.datasets._repository.npbundle method)": [[6, "wildboar.datasets._repository.NpBundle.get_collection", false]], "get_collection() (wildboar.datasets.bundle method)": [[7, "wildboar.datasets.Bundle.get_collection", false]], "get_collection() (wildboar.datasets.npbundle method)": [[7, "wildboar.datasets.NpBundle.get_collection", false]], "get_dimensions() (wildboar.dimension_selection._base.basedistanceselector method)": [[10, "wildboar.dimension_selection._base.BaseDistanceSelector.get_dimensions", false]], "get_dimensions() (wildboar.dimension_selection._base.dimensionselectormixin method)": [[10, "wildboar.dimension_selection._base.DimensionSelectorMixin.get_dimensions", false]], "get_dimensions() (wildboar.dimension_selection._distance.selectdimensionpercentile method)": [[11, "wildboar.dimension_selection._distance.SelectDimensionPercentile.get_dimensions", false]], "get_dimensions() (wildboar.dimension_selection._distance.selectdimensionsignificance method)": [[11, "wildboar.dimension_selection._distance.SelectDimensionSignificance.get_dimensions", false]], "get_dimensions() (wildboar.dimension_selection._distance.selectdimensiontopk method)": [[11, "wildboar.dimension_selection._distance.SelectDimensionTopK.get_dimensions", false]], "get_dimensions() (wildboar.dimension_selection._sequential.sequentialdimensionselector method)": [[12, "wildboar.dimension_selection._sequential.SequentialDimensionSelector.get_dimensions", false]], "get_dimensions() (wildboar.dimension_selection._variance.distancevariancethreshold method)": [[13, "wildboar.dimension_selection._variance.DistanceVarianceThreshold.get_dimensions", false]], "get_dimensions() (wildboar.dimension_selection.distancevariancethreshold method)": [[14, "wildboar.dimension_selection.DistanceVarianceThreshold.get_dimensions", false]], "get_dimensions() (wildboar.dimension_selection.selectdimensionpercentile method)": [[14, "wildboar.dimension_selection.SelectDimensionPercentile.get_dimensions", false]], "get_dimensions() (wildboar.dimension_selection.selectdimensionsignificance method)": [[14, "wildboar.dimension_selection.SelectDimensionSignificance.get_dimensions", false]], "get_dimensions() (wildboar.dimension_selection.selectdimensiontopk method)": [[14, "wildboar.dimension_selection.SelectDimensionTopK.get_dimensions", false]], "get_dimensions() (wildboar.dimension_selection.sequentialdimensionselector method)": [[14, "wildboar.dimension_selection.SequentialDimensionSelector.get_dimensions", false]], "get_filename() (wildboar.datasets._repository.bundle method)": [[6, "wildboar.datasets._repository.Bundle.get_filename", false]], "get_filename() (wildboar.datasets._repository.npbundle method)": [[6, "wildboar.datasets._repository.NpBundle.get_filename", false]], "get_filename() (wildboar.datasets.bundle method)": [[7, "wildboar.datasets.Bundle.get_filename", false]], "get_filename() (wildboar.datasets.npbundle method)": [[7, "wildboar.datasets.NpBundle.get_filename", false]], "get_metadata_routing() (wildboar.base.baseestimator method)": [[4, "wildboar.base.BaseEstimator.get_metadata_routing", false]], "get_metadata_routing() (wildboar.dimension_selection._base.basedistanceselector method)": [[10, "wildboar.dimension_selection._base.BaseDistanceSelector.get_metadata_routing", false]], "get_metadata_routing() (wildboar.dimension_selection._distance.selectdimensionpercentile method)": [[11, "wildboar.dimension_selection._distance.SelectDimensionPercentile.get_metadata_routing", false]], "get_metadata_routing() (wildboar.dimension_selection._distance.selectdimensionsignificance method)": [[11, "wildboar.dimension_selection._distance.SelectDimensionSignificance.get_metadata_routing", false]], "get_metadata_routing() (wildboar.dimension_selection._distance.selectdimensiontopk method)": [[11, "wildboar.dimension_selection._distance.SelectDimensionTopK.get_metadata_routing", false]], "get_metadata_routing() (wildboar.dimension_selection._sequential.sequentialdimensionselector method)": [[12, "wildboar.dimension_selection._sequential.SequentialDimensionSelector.get_metadata_routing", false]], "get_metadata_routing() (wildboar.dimension_selection._variance.distancevariancethreshold method)": [[13, "wildboar.dimension_selection._variance.DistanceVarianceThreshold.get_metadata_routing", false]], "get_metadata_routing() (wildboar.dimension_selection.distancevariancethreshold method)": [[14, "wildboar.dimension_selection.DistanceVarianceThreshold.get_metadata_routing", false]], "get_metadata_routing() (wildboar.dimension_selection.selectdimensionpercentile method)": [[14, "wildboar.dimension_selection.SelectDimensionPercentile.get_metadata_routing", false]], "get_metadata_routing() (wildboar.dimension_selection.selectdimensionsignificance method)": [[14, "wildboar.dimension_selection.SelectDimensionSignificance.get_metadata_routing", false]], "get_metadata_routing() (wildboar.dimension_selection.selectdimensiontopk method)": [[14, "wildboar.dimension_selection.SelectDimensionTopK.get_metadata_routing", false]], "get_metadata_routing() (wildboar.dimension_selection.sequentialdimensionselector method)": [[14, "wildboar.dimension_selection.SequentialDimensionSelector.get_metadata_routing", false]], "get_metadata_routing() (wildboar.distance._manifold.mds method)": [[16, "wildboar.distance._manifold.MDS.get_metadata_routing", false]], "get_metadata_routing() (wildboar.distance._neighbors.kmeans method)": [[19, "wildboar.distance._neighbors.KMeans.get_metadata_routing", false]], "get_metadata_routing() (wildboar.distance._neighbors.kmedoids method)": [[19, "wildboar.distance._neighbors.KMedoids.get_metadata_routing", false]], "get_metadata_routing() (wildboar.distance._neighbors.kneighborsclassifier method)": [[19, "wildboar.distance._neighbors.KNeighborsClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.distance.kmeans method)": [[21, "wildboar.distance.KMeans.get_metadata_routing", false]], "get_metadata_routing() (wildboar.distance.kmedoids method)": [[21, "wildboar.distance.KMedoids.get_metadata_routing", false]], "get_metadata_routing() (wildboar.distance.kneighborsclassifier method)": [[21, "wildboar.distance.KNeighborsClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.distance.mds method)": [[21, "wildboar.distance.MDS.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble._elastic.elasticensembleclassifier method)": [[22, "wildboar.ensemble._elastic.ElasticEnsembleClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble._ensemble.baggingclassifier method)": [[23, "wildboar.ensemble._ensemble.BaggingClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble._ensemble.baggingregressor method)": [[23, "wildboar.ensemble._ensemble.BaggingRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble._ensemble.basebagging method)": [[23, "wildboar.ensemble._ensemble.BaseBagging.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[23, "wildboar.ensemble._ensemble.BaseForestClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble._ensemble.baseforestregressor method)": [[23, "wildboar.ensemble._ensemble.BaseForestRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[23, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[23, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[23, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[23, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[23, "wildboar.ensemble._ensemble.IntervalForestClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[23, "wildboar.ensemble._ensemble.IntervalForestRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble._ensemble.isolationshapeletforest method)": [[23, "wildboar.ensemble._ensemble.IsolationShapeletForest.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[23, "wildboar.ensemble._ensemble.PivotForestClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[23, "wildboar.ensemble._ensemble.ProximityForestClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[23, "wildboar.ensemble._ensemble.RocketForestClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[23, "wildboar.ensemble._ensemble.RocketForestRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[23, "wildboar.ensemble._ensemble.ShapeletForestClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[23, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[23, "wildboar.ensemble._ensemble.ShapeletForestRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.baggingclassifier method)": [[24, "wildboar.ensemble.BaggingClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.baggingregressor method)": [[24, "wildboar.ensemble.BaggingRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.basebagging method)": [[24, "wildboar.ensemble.BaseBagging.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.elasticensembleclassifier method)": [[24, "wildboar.ensemble.ElasticEnsembleClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.extrashapelettreesclassifier method)": [[24, "wildboar.ensemble.ExtraShapeletTreesClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.extrashapelettreesregressor method)": [[24, "wildboar.ensemble.ExtraShapeletTreesRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.intervalforestclassifier method)": [[24, "wildboar.ensemble.IntervalForestClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.intervalforestregressor method)": [[24, "wildboar.ensemble.IntervalForestRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.isolationshapeletforest method)": [[24, "wildboar.ensemble.IsolationShapeletForest.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.pivotforestclassifier method)": [[24, "wildboar.ensemble.PivotForestClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.proximityforestclassifier method)": [[24, "wildboar.ensemble.ProximityForestClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.rocketforestclassifier method)": [[24, "wildboar.ensemble.RocketForestClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.rocketforestregressor method)": [[24, "wildboar.ensemble.RocketForestRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.shapeletforestclassifier method)": [[24, "wildboar.ensemble.ShapeletForestClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.shapeletforestembedding method)": [[24, "wildboar.ensemble.ShapeletForestEmbedding.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.shapeletforestregressor method)": [[24, "wildboar.ensemble.ShapeletForestRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain._importance.amplitudeimportance method)": [[25, "wildboar.explain._importance.AmplitudeImportance.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain._importance.frequencyimportance method)": [[25, "wildboar.explain._importance.FrequencyImportance.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain._importance.intervalimportance method)": [[25, "wildboar.explain._importance.IntervalImportance.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain._importance.permuteimportance method)": [[25, "wildboar.explain._importance.PermuteImportance.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain._importance.shapeletimportance method)": [[25, "wildboar.explain._importance.ShapeletImportance.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain.amplitudeimportance method)": [[32, "wildboar.explain.AmplitudeImportance.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[27, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain.counterfactual._nun.nativeguidecounterfactual method)": [[28, "wildboar.explain.counterfactual._nun.NativeGuideCounterfactual.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[29, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[30, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[31, "wildboar.explain.counterfactual.KNeighborsCounterfactual.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain.counterfactual.nativeguidecounterfactual method)": [[31, "wildboar.explain.counterfactual.NativeGuideCounterfactual.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[31, "wildboar.explain.counterfactual.PrototypeCounterfactual.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[31, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain.frequencyimportance method)": [[32, "wildboar.explain.FrequencyImportance.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain.intervalimportance method)": [[32, "wildboar.explain.IntervalImportance.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain.shapeletimportance method)": [[32, "wildboar.explain.ShapeletImportance.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model._hydra.hydraclassifier method)": [[34, "wildboar.linear_model._hydra.HydraClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model._rocket.rocketclassifier method)": [[35, "wildboar.linear_model._rocket.RocketClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model._rocket.rocketregressor method)": [[35, "wildboar.linear_model._rocket.RocketRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model._shapelet.castorclassifier method)": [[36, "wildboar.linear_model._shapelet.CastorClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model._shapelet.dilatedshapeletclassifier method)": [[36, "wildboar.linear_model._shapelet.DilatedShapeletClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model._shapelet.randomshapeletclassifier method)": [[36, "wildboar.linear_model._shapelet.RandomShapeletClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model._shapelet.randomshapeletregressor method)": [[36, "wildboar.linear_model._shapelet.RandomShapeletRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model._transform.basetransformclassifier method)": [[37, "wildboar.linear_model._transform.BaseTransformClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model._transform.basetransformestimator method)": [[37, "wildboar.linear_model._transform.BaseTransformEstimator.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model._transform.basetransformregressor method)": [[37, "wildboar.linear_model._transform.BaseTransformRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model._transform.transformridgeclassifiercv method)": [[37, "wildboar.linear_model._transform.TransformRidgeClassifierCV.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model._transform.transformridgecv method)": [[37, "wildboar.linear_model._transform.TransformRidgeCV.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model.castorclassifier method)": [[38, "wildboar.linear_model.CastorClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model.dilatedshapeletclassifier method)": [[38, "wildboar.linear_model.DilatedShapeletClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model.hydraclassifier method)": [[38, "wildboar.linear_model.HydraClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model.randomshapeletclassifier method)": [[38, "wildboar.linear_model.RandomShapeletClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model.randomshapeletregressor method)": [[38, "wildboar.linear_model.RandomShapeletRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model.rocketclassifier method)": [[38, "wildboar.linear_model.RocketClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model.rocketregressor method)": [[38, "wildboar.linear_model.RocketRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.segment._base.basesegmenter method)": [[45, "wildboar.segment._base.BaseSegmenter.get_metadata_routing", false]], "get_metadata_routing() (wildboar.segment._mp.flusssegmenter method)": [[46, "wildboar.segment._mp.FlussSegmenter.get_metadata_routing", false]], "get_metadata_routing() (wildboar.segment.flusssegmenter method)": [[47, "wildboar.segment.FlussSegmenter.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform._base.baseattributetransform method)": [[48, "wildboar.transform._base.BaseAttributeTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform._diff.derivativetransform method)": [[50, "wildboar.transform._diff.DerivativeTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform._diff.difftransform method)": [[50, "wildboar.transform._diff.DiffTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform._hydra.hydratransform method)": [[51, "wildboar.transform._hydra.HydraTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform._interval.featuretransform method)": [[52, "wildboar.transform._interval.FeatureTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform._interval.intervaltransform method)": [[52, "wildboar.transform._interval.IntervalTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[53, "wildboar.transform._matrix_profile.MatrixProfileTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform._pivot.pivottransform method)": [[54, "wildboar.transform._pivot.PivotTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform._pivot.proximitytransform method)": [[54, "wildboar.transform._pivot.ProximityTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform._rocket.rockettransform method)": [[55, "wildboar.transform._rocket.RocketTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform._sax.paa method)": [[56, "wildboar.transform._sax.PAA.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform._sax.sax method)": [[56, "wildboar.transform._sax.SAX.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform._shapelet.castortransform method)": [[57, "wildboar.transform._shapelet.CastorTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform._shapelet.dilatedshapelettransform method)": [[57, "wildboar.transform._shapelet.DilatedShapeletTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform._shapelet.randomshapelettransform method)": [[57, "wildboar.transform._shapelet.RandomShapeletTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform._shapelet.shapelettransform method)": [[57, "wildboar.transform._shapelet.ShapeletTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.castortransform method)": [[58, "wildboar.transform.CastorTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.derivativetransform method)": [[58, "wildboar.transform.DerivativeTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.difftransform method)": [[58, "wildboar.transform.DiffTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.dilatedshapelettransform method)": [[58, "wildboar.transform.DilatedShapeletTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.featuretransform method)": [[58, "wildboar.transform.FeatureTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.hydratransform method)": [[58, "wildboar.transform.HydraTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.intervaltransform method)": [[58, "wildboar.transform.IntervalTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.matrixprofiletransform method)": [[58, "wildboar.transform.MatrixProfileTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.paa method)": [[58, "wildboar.transform.PAA.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.pivottransform method)": [[58, "wildboar.transform.PivotTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.proximitytransform method)": [[58, "wildboar.transform.ProximityTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.randomshapelettransform method)": [[58, "wildboar.transform.RandomShapeletTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.rockettransform method)": [[58, "wildboar.transform.RocketTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.sax method)": [[58, "wildboar.transform.SAX.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.shapelettransform method)": [[58, "wildboar.transform.ShapeletTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree._base.basetree method)": [[59, "wildboar.tree._base.BaseTree.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree._base.basetreeclassifier method)": [[59, "wildboar.tree._base.BaseTreeClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree._base.basetreeregressor method)": [[59, "wildboar.tree._base.BaseTreeRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree._ptree.proximitytreeclassifier method)": [[61, "wildboar.tree._ptree.ProximityTreeClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[62, "wildboar.tree._tree.BaseFeatureTreeClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree._tree.basefeaturetreeregressor method)": [[62, "wildboar.tree._tree.BaseFeatureTreeRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree._tree.dilatedshapelettreeclassifier method)": [[62, "wildboar.tree._tree.DilatedShapeletTreeClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[62, "wildboar.tree._tree.ExtraShapeletTreeClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree._tree.extrashapelettreeregressor method)": [[62, "wildboar.tree._tree.ExtraShapeletTreeRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree._tree.intervaltreeclassifier method)": [[62, "wildboar.tree._tree.IntervalTreeClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree._tree.intervaltreeregressor method)": [[62, "wildboar.tree._tree.IntervalTreeRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree._tree.pivottreeclassifier method)": [[62, "wildboar.tree._tree.PivotTreeClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree._tree.rockettreeclassifier method)": [[62, "wildboar.tree._tree.RocketTreeClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree._tree.rockettreeregressor method)": [[62, "wildboar.tree._tree.RocketTreeRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree._tree.shapelettreeclassifier method)": [[62, "wildboar.tree._tree.ShapeletTreeClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree._tree.shapelettreeregressor method)": [[62, "wildboar.tree._tree.ShapeletTreeRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.extrashapelettreeclassifier method)": [[63, "wildboar.tree.ExtraShapeletTreeClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.extrashapelettreeregressor method)": [[63, "wildboar.tree.ExtraShapeletTreeRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.intervaltreeclassifier method)": [[63, "wildboar.tree.IntervalTreeClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.intervaltreeregressor method)": [[63, "wildboar.tree.IntervalTreeRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.pivottreeclassifier method)": [[63, "wildboar.tree.PivotTreeClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.proximitytreeclassifier method)": [[63, "wildboar.tree.ProximityTreeClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.rockettreeclassifier method)": [[63, "wildboar.tree.RocketTreeClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.rockettreeregressor method)": [[63, "wildboar.tree.RocketTreeRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.shapelettreeclassifier method)": [[63, "wildboar.tree.ShapeletTreeClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.shapelettreeregressor method)": [[63, "wildboar.tree.ShapeletTreeRegressor.get_metadata_routing", false]], "get_n_splits() (wildboar.model_selection._cv.repeatedoutliersplit method)": [[42, "wildboar.model_selection._cv.RepeatedOutlierSplit.get_n_splits", false]], "get_n_splits() (wildboar.model_selection.repeatedoutliersplit method)": [[44, "wildboar.model_selection.RepeatedOutlierSplit.get_n_splits", false]], "get_params() (wildboar.base.baseestimator method)": [[4, "wildboar.base.BaseEstimator.get_params", false]], "get_params() (wildboar.dimension_selection._base.basedistanceselector method)": [[10, "wildboar.dimension_selection._base.BaseDistanceSelector.get_params", false]], "get_params() (wildboar.dimension_selection._distance.selectdimensionpercentile method)": [[11, "wildboar.dimension_selection._distance.SelectDimensionPercentile.get_params", false]], "get_params() (wildboar.dimension_selection._distance.selectdimensionsignificance method)": [[11, "wildboar.dimension_selection._distance.SelectDimensionSignificance.get_params", false]], "get_params() (wildboar.dimension_selection._distance.selectdimensiontopk method)": [[11, "wildboar.dimension_selection._distance.SelectDimensionTopK.get_params", false]], "get_params() (wildboar.dimension_selection._sequential.sequentialdimensionselector method)": [[12, "wildboar.dimension_selection._sequential.SequentialDimensionSelector.get_params", false]], "get_params() (wildboar.dimension_selection._variance.distancevariancethreshold method)": [[13, "wildboar.dimension_selection._variance.DistanceVarianceThreshold.get_params", false]], "get_params() (wildboar.dimension_selection.distancevariancethreshold method)": [[14, "wildboar.dimension_selection.DistanceVarianceThreshold.get_params", false]], "get_params() (wildboar.dimension_selection.selectdimensionpercentile method)": [[14, "wildboar.dimension_selection.SelectDimensionPercentile.get_params", false]], "get_params() (wildboar.dimension_selection.selectdimensionsignificance method)": [[14, "wildboar.dimension_selection.SelectDimensionSignificance.get_params", false]], "get_params() (wildboar.dimension_selection.selectdimensiontopk method)": [[14, "wildboar.dimension_selection.SelectDimensionTopK.get_params", false]], "get_params() (wildboar.dimension_selection.sequentialdimensionselector method)": [[14, "wildboar.dimension_selection.SequentialDimensionSelector.get_params", false]], "get_params() (wildboar.distance._manifold.mds method)": [[16, "wildboar.distance._manifold.MDS.get_params", false]], "get_params() (wildboar.distance._neighbors.kmeans method)": [[19, "wildboar.distance._neighbors.KMeans.get_params", false]], "get_params() (wildboar.distance._neighbors.kmedoids method)": [[19, "wildboar.distance._neighbors.KMedoids.get_params", false]], "get_params() (wildboar.distance._neighbors.kneighborsclassifier method)": [[19, "wildboar.distance._neighbors.KNeighborsClassifier.get_params", false]], "get_params() (wildboar.distance.kmeans method)": [[21, "wildboar.distance.KMeans.get_params", false]], "get_params() (wildboar.distance.kmedoids method)": [[21, "wildboar.distance.KMedoids.get_params", false]], "get_params() (wildboar.distance.kneighborsclassifier method)": [[21, "wildboar.distance.KNeighborsClassifier.get_params", false]], "get_params() (wildboar.distance.mds method)": [[21, "wildboar.distance.MDS.get_params", false]], "get_params() (wildboar.ensemble._elastic.elasticensembleclassifier method)": [[22, "wildboar.ensemble._elastic.ElasticEnsembleClassifier.get_params", false]], "get_params() (wildboar.ensemble._ensemble.baggingclassifier method)": [[23, "wildboar.ensemble._ensemble.BaggingClassifier.get_params", false]], "get_params() (wildboar.ensemble._ensemble.baggingregressor method)": [[23, "wildboar.ensemble._ensemble.BaggingRegressor.get_params", false]], "get_params() (wildboar.ensemble._ensemble.basebagging method)": [[23, "wildboar.ensemble._ensemble.BaseBagging.get_params", false]], "get_params() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[23, "wildboar.ensemble._ensemble.BaseForestClassifier.get_params", false]], "get_params() (wildboar.ensemble._ensemble.baseforestregressor method)": [[23, "wildboar.ensemble._ensemble.BaseForestRegressor.get_params", false]], "get_params() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[23, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.get_params", false]], "get_params() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[23, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.get_params", false]], "get_params() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[23, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.get_params", false]], "get_params() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[23, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.get_params", false]], "get_params() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[23, "wildboar.ensemble._ensemble.IntervalForestClassifier.get_params", false]], "get_params() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[23, "wildboar.ensemble._ensemble.IntervalForestRegressor.get_params", false]], "get_params() (wildboar.ensemble._ensemble.isolationshapeletforest method)": [[23, "wildboar.ensemble._ensemble.IsolationShapeletForest.get_params", false]], "get_params() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[23, "wildboar.ensemble._ensemble.PivotForestClassifier.get_params", false]], "get_params() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[23, "wildboar.ensemble._ensemble.ProximityForestClassifier.get_params", false]], "get_params() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[23, "wildboar.ensemble._ensemble.RocketForestClassifier.get_params", false]], "get_params() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[23, "wildboar.ensemble._ensemble.RocketForestRegressor.get_params", false]], "get_params() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[23, "wildboar.ensemble._ensemble.ShapeletForestClassifier.get_params", false]], "get_params() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[23, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.get_params", false]], "get_params() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[23, "wildboar.ensemble._ensemble.ShapeletForestRegressor.get_params", false]], "get_params() (wildboar.ensemble.baggingclassifier method)": [[24, "wildboar.ensemble.BaggingClassifier.get_params", false]], "get_params() (wildboar.ensemble.baggingregressor method)": [[24, "wildboar.ensemble.BaggingRegressor.get_params", false]], "get_params() (wildboar.ensemble.basebagging method)": [[24, "wildboar.ensemble.BaseBagging.get_params", false]], "get_params() (wildboar.ensemble.elasticensembleclassifier method)": [[24, "wildboar.ensemble.ElasticEnsembleClassifier.get_params", false]], "get_params() (wildboar.ensemble.extrashapelettreesclassifier method)": [[24, "wildboar.ensemble.ExtraShapeletTreesClassifier.get_params", false]], "get_params() (wildboar.ensemble.extrashapelettreesregressor method)": [[24, "wildboar.ensemble.ExtraShapeletTreesRegressor.get_params", false]], "get_params() (wildboar.ensemble.intervalforestclassifier method)": [[24, "wildboar.ensemble.IntervalForestClassifier.get_params", false]], "get_params() (wildboar.ensemble.intervalforestregressor method)": [[24, "wildboar.ensemble.IntervalForestRegressor.get_params", false]], "get_params() (wildboar.ensemble.isolationshapeletforest method)": [[24, "wildboar.ensemble.IsolationShapeletForest.get_params", false]], "get_params() (wildboar.ensemble.pivotforestclassifier method)": [[24, "wildboar.ensemble.PivotForestClassifier.get_params", false]], "get_params() (wildboar.ensemble.proximityforestclassifier method)": [[24, "wildboar.ensemble.ProximityForestClassifier.get_params", false]], "get_params() (wildboar.ensemble.rocketforestclassifier method)": [[24, "wildboar.ensemble.RocketForestClassifier.get_params", false]], "get_params() (wildboar.ensemble.rocketforestregressor method)": [[24, "wildboar.ensemble.RocketForestRegressor.get_params", false]], "get_params() (wildboar.ensemble.shapeletforestclassifier method)": [[24, "wildboar.ensemble.ShapeletForestClassifier.get_params", false]], "get_params() (wildboar.ensemble.shapeletforestembedding method)": [[24, "wildboar.ensemble.ShapeletForestEmbedding.get_params", false]], "get_params() (wildboar.ensemble.shapeletforestregressor method)": [[24, "wildboar.ensemble.ShapeletForestRegressor.get_params", false]], "get_params() (wildboar.explain._importance.amplitudeimportance method)": [[25, "wildboar.explain._importance.AmplitudeImportance.get_params", false]], "get_params() (wildboar.explain._importance.frequencyimportance method)": [[25, "wildboar.explain._importance.FrequencyImportance.get_params", false]], "get_params() (wildboar.explain._importance.intervalimportance method)": [[25, "wildboar.explain._importance.IntervalImportance.get_params", false]], "get_params() (wildboar.explain._importance.permuteimportance method)": [[25, "wildboar.explain._importance.PermuteImportance.get_params", false]], "get_params() (wildboar.explain._importance.shapeletimportance method)": [[25, "wildboar.explain._importance.ShapeletImportance.get_params", false]], "get_params() (wildboar.explain.amplitudeimportance method)": [[32, "wildboar.explain.AmplitudeImportance.get_params", false]], "get_params() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[27, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.get_params", false]], "get_params() (wildboar.explain.counterfactual._nun.nativeguidecounterfactual method)": [[28, "wildboar.explain.counterfactual._nun.NativeGuideCounterfactual.get_params", false]], "get_params() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[29, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.get_params", false]], "get_params() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[30, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.get_params", false]], "get_params() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[31, "wildboar.explain.counterfactual.KNeighborsCounterfactual.get_params", false]], "get_params() (wildboar.explain.counterfactual.nativeguidecounterfactual method)": [[31, "wildboar.explain.counterfactual.NativeGuideCounterfactual.get_params", false]], "get_params() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[31, "wildboar.explain.counterfactual.PrototypeCounterfactual.get_params", false]], "get_params() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[31, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.get_params", false]], "get_params() (wildboar.explain.frequencyimportance method)": [[32, "wildboar.explain.FrequencyImportance.get_params", false]], "get_params() (wildboar.explain.intervalimportance method)": [[32, "wildboar.explain.IntervalImportance.get_params", false]], "get_params() (wildboar.explain.shapeletimportance method)": [[32, "wildboar.explain.ShapeletImportance.get_params", false]], "get_params() (wildboar.linear_model._hydra.hydraclassifier method)": [[34, "wildboar.linear_model._hydra.HydraClassifier.get_params", false]], "get_params() (wildboar.linear_model._rocket.rocketclassifier method)": [[35, "wildboar.linear_model._rocket.RocketClassifier.get_params", false]], "get_params() (wildboar.linear_model._rocket.rocketregressor method)": [[35, "wildboar.linear_model._rocket.RocketRegressor.get_params", false]], "get_params() (wildboar.linear_model._shapelet.castorclassifier method)": [[36, "wildboar.linear_model._shapelet.CastorClassifier.get_params", false]], "get_params() (wildboar.linear_model._shapelet.dilatedshapeletclassifier method)": [[36, "wildboar.linear_model._shapelet.DilatedShapeletClassifier.get_params", false]], "get_params() (wildboar.linear_model._shapelet.randomshapeletclassifier method)": [[36, "wildboar.linear_model._shapelet.RandomShapeletClassifier.get_params", false]], "get_params() (wildboar.linear_model._shapelet.randomshapeletregressor method)": [[36, "wildboar.linear_model._shapelet.RandomShapeletRegressor.get_params", false]], "get_params() (wildboar.linear_model._transform.basetransformclassifier method)": [[37, "wildboar.linear_model._transform.BaseTransformClassifier.get_params", false]], "get_params() (wildboar.linear_model._transform.basetransformestimator method)": [[37, "wildboar.linear_model._transform.BaseTransformEstimator.get_params", false]], "get_params() (wildboar.linear_model._transform.basetransformregressor method)": [[37, "wildboar.linear_model._transform.BaseTransformRegressor.get_params", false]], "get_params() (wildboar.linear_model._transform.transformridgeclassifiercv method)": [[37, "wildboar.linear_model._transform.TransformRidgeClassifierCV.get_params", false]], "get_params() (wildboar.linear_model._transform.transformridgecv method)": [[37, "wildboar.linear_model._transform.TransformRidgeCV.get_params", false]], "get_params() (wildboar.linear_model.castorclassifier method)": [[38, "wildboar.linear_model.CastorClassifier.get_params", false]], "get_params() (wildboar.linear_model.dilatedshapeletclassifier method)": [[38, "wildboar.linear_model.DilatedShapeletClassifier.get_params", false]], "get_params() (wildboar.linear_model.hydraclassifier method)": [[38, "wildboar.linear_model.HydraClassifier.get_params", false]], "get_params() (wildboar.linear_model.randomshapeletclassifier method)": [[38, "wildboar.linear_model.RandomShapeletClassifier.get_params", false]], "get_params() (wildboar.linear_model.randomshapeletregressor method)": [[38, "wildboar.linear_model.RandomShapeletRegressor.get_params", false]], "get_params() (wildboar.linear_model.rocketclassifier method)": [[38, "wildboar.linear_model.RocketClassifier.get_params", false]], "get_params() (wildboar.linear_model.rocketregressor method)": [[38, "wildboar.linear_model.RocketRegressor.get_params", false]], "get_params() (wildboar.segment._base.basesegmenter method)": [[45, "wildboar.segment._base.BaseSegmenter.get_params", false]], "get_params() (wildboar.segment._mp.flusssegmenter method)": [[46, "wildboar.segment._mp.FlussSegmenter.get_params", false]], "get_params() (wildboar.segment.flusssegmenter method)": [[47, "wildboar.segment.FlussSegmenter.get_params", false]], "get_params() (wildboar.transform._base.baseattributetransform method)": [[48, "wildboar.transform._base.BaseAttributeTransform.get_params", false]], "get_params() (wildboar.transform._diff.derivativetransform method)": [[50, "wildboar.transform._diff.DerivativeTransform.get_params", false]], "get_params() (wildboar.transform._diff.difftransform method)": [[50, "wildboar.transform._diff.DiffTransform.get_params", false]], "get_params() (wildboar.transform._hydra.hydratransform method)": [[51, "wildboar.transform._hydra.HydraTransform.get_params", false]], "get_params() (wildboar.transform._interval.featuretransform method)": [[52, "wildboar.transform._interval.FeatureTransform.get_params", false]], "get_params() (wildboar.transform._interval.intervaltransform method)": [[52, "wildboar.transform._interval.IntervalTransform.get_params", false]], "get_params() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[53, "wildboar.transform._matrix_profile.MatrixProfileTransform.get_params", false]], "get_params() (wildboar.transform._pivot.pivottransform method)": [[54, "wildboar.transform._pivot.PivotTransform.get_params", false]], "get_params() (wildboar.transform._pivot.proximitytransform method)": [[54, "wildboar.transform._pivot.ProximityTransform.get_params", false]], "get_params() (wildboar.transform._rocket.rockettransform method)": [[55, "wildboar.transform._rocket.RocketTransform.get_params", false]], "get_params() (wildboar.transform._sax.paa method)": [[56, "wildboar.transform._sax.PAA.get_params", false]], "get_params() (wildboar.transform._sax.sax method)": [[56, "wildboar.transform._sax.SAX.get_params", false]], "get_params() (wildboar.transform._shapelet.castortransform method)": [[57, "wildboar.transform._shapelet.CastorTransform.get_params", false]], "get_params() (wildboar.transform._shapelet.dilatedshapelettransform method)": [[57, "wildboar.transform._shapelet.DilatedShapeletTransform.get_params", false]], "get_params() (wildboar.transform._shapelet.randomshapelettransform method)": [[57, "wildboar.transform._shapelet.RandomShapeletTransform.get_params", false]], "get_params() (wildboar.transform._shapelet.shapelettransform method)": [[57, "wildboar.transform._shapelet.ShapeletTransform.get_params", false]], "get_params() (wildboar.transform.castortransform method)": [[58, "wildboar.transform.CastorTransform.get_params", false]], "get_params() (wildboar.transform.derivativetransform method)": [[58, "wildboar.transform.DerivativeTransform.get_params", false]], "get_params() (wildboar.transform.difftransform method)": [[58, "wildboar.transform.DiffTransform.get_params", false]], "get_params() (wildboar.transform.dilatedshapelettransform method)": [[58, "wildboar.transform.DilatedShapeletTransform.get_params", false]], "get_params() (wildboar.transform.featuretransform method)": [[58, "wildboar.transform.FeatureTransform.get_params", false]], "get_params() (wildboar.transform.hydratransform method)": [[58, "wildboar.transform.HydraTransform.get_params", false]], "get_params() (wildboar.transform.intervaltransform method)": [[58, "wildboar.transform.IntervalTransform.get_params", false]], "get_params() (wildboar.transform.matrixprofiletransform method)": [[58, "wildboar.transform.MatrixProfileTransform.get_params", false]], "get_params() (wildboar.transform.paa method)": [[58, "wildboar.transform.PAA.get_params", false]], "get_params() (wildboar.transform.pivottransform method)": [[58, "wildboar.transform.PivotTransform.get_params", false]], "get_params() (wildboar.transform.proximitytransform method)": [[58, "wildboar.transform.ProximityTransform.get_params", false]], "get_params() (wildboar.transform.randomshapelettransform method)": [[58, "wildboar.transform.RandomShapeletTransform.get_params", false]], "get_params() (wildboar.transform.rockettransform method)": [[58, "wildboar.transform.RocketTransform.get_params", false]], "get_params() (wildboar.transform.sax method)": [[58, "wildboar.transform.SAX.get_params", false]], "get_params() (wildboar.transform.shapelettransform method)": [[58, "wildboar.transform.ShapeletTransform.get_params", false]], "get_params() (wildboar.tree._base.basetree method)": [[59, "wildboar.tree._base.BaseTree.get_params", false]], "get_params() (wildboar.tree._base.basetreeclassifier method)": [[59, "wildboar.tree._base.BaseTreeClassifier.get_params", false]], "get_params() (wildboar.tree._base.basetreeregressor method)": [[59, "wildboar.tree._base.BaseTreeRegressor.get_params", false]], "get_params() (wildboar.tree._ptree.proximitytreeclassifier method)": [[61, "wildboar.tree._ptree.ProximityTreeClassifier.get_params", false]], "get_params() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[62, "wildboar.tree._tree.BaseFeatureTreeClassifier.get_params", false]], "get_params() (wildboar.tree._tree.basefeaturetreeregressor method)": [[62, "wildboar.tree._tree.BaseFeatureTreeRegressor.get_params", false]], "get_params() (wildboar.tree._tree.dilatedshapelettreeclassifier method)": [[62, "wildboar.tree._tree.DilatedShapeletTreeClassifier.get_params", false]], "get_params() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[62, "wildboar.tree._tree.ExtraShapeletTreeClassifier.get_params", false]], "get_params() (wildboar.tree._tree.extrashapelettreeregressor method)": [[62, "wildboar.tree._tree.ExtraShapeletTreeRegressor.get_params", false]], "get_params() (wildboar.tree._tree.intervaltreeclassifier method)": [[62, "wildboar.tree._tree.IntervalTreeClassifier.get_params", false]], "get_params() (wildboar.tree._tree.intervaltreeregressor method)": [[62, "wildboar.tree._tree.IntervalTreeRegressor.get_params", false]], "get_params() (wildboar.tree._tree.pivottreeclassifier method)": [[62, "wildboar.tree._tree.PivotTreeClassifier.get_params", false]], "get_params() (wildboar.tree._tree.rockettreeclassifier method)": [[62, "wildboar.tree._tree.RocketTreeClassifier.get_params", false]], "get_params() (wildboar.tree._tree.rockettreeregressor method)": [[62, "wildboar.tree._tree.RocketTreeRegressor.get_params", false]], "get_params() (wildboar.tree._tree.shapelettreeclassifier method)": [[62, "wildboar.tree._tree.ShapeletTreeClassifier.get_params", false]], "get_params() (wildboar.tree._tree.shapelettreeregressor method)": [[62, "wildboar.tree._tree.ShapeletTreeRegressor.get_params", false]], "get_params() (wildboar.tree.extrashapelettreeclassifier method)": [[63, "wildboar.tree.ExtraShapeletTreeClassifier.get_params", false]], "get_params() (wildboar.tree.extrashapelettreeregressor method)": [[63, "wildboar.tree.ExtraShapeletTreeRegressor.get_params", false]], "get_params() (wildboar.tree.intervaltreeclassifier method)": [[63, "wildboar.tree.IntervalTreeClassifier.get_params", false]], "get_params() (wildboar.tree.intervaltreeregressor method)": [[63, "wildboar.tree.IntervalTreeRegressor.get_params", false]], "get_params() (wildboar.tree.pivottreeclassifier method)": [[63, "wildboar.tree.PivotTreeClassifier.get_params", false]], "get_params() (wildboar.tree.proximitytreeclassifier method)": [[63, "wildboar.tree.ProximityTreeClassifier.get_params", false]], "get_params() (wildboar.tree.rockettreeclassifier method)": [[63, "wildboar.tree.RocketTreeClassifier.get_params", false]], "get_params() (wildboar.tree.rockettreeregressor method)": [[63, "wildboar.tree.RocketTreeRegressor.get_params", false]], "get_params() (wildboar.tree.shapelettreeclassifier method)": [[63, "wildboar.tree.ShapeletTreeClassifier.get_params", false]], "get_params() (wildboar.tree.shapelettreeregressor method)": [[63, "wildboar.tree.ShapeletTreeRegressor.get_params", false]], "get_repository() (in module wildboar.datasets)": [[7, "wildboar.datasets.get_repository", false]], "get_thresholds() (wildboar.transform._sax.binning method)": [[56, "wildboar.transform._sax.Binning.get_thresholds", false]], "get_thresholds() (wildboar.transform._sax.normalbinning method)": [[56, "wildboar.transform._sax.NormalBinning.get_thresholds", false]], "get_thresholds() (wildboar.transform._sax.uniformbinning method)": [[56, "wildboar.transform._sax.UniformBinning.get_thresholds", false]], "get_variable_length() (in module wildboar.utils.variable_len)": [[71, "wildboar.utils.variable_len.get_variable_length", false]], "hydraclassifier (class in wildboar.linear_model)": [[38, "wildboar.linear_model.HydraClassifier", false]], "hydraclassifier (class in wildboar.linear_model._hydra)": [[34, "wildboar.linear_model._hydra.HydraClassifier", false]], "hydratransform (class in wildboar.transform)": [[58, "wildboar.transform.HydraTransform", false]], "hydratransform (class in wildboar.transform._hydra)": [[51, "wildboar.transform._hydra.HydraTransform", false]], "install_repository() (in module wildboar.datasets)": [[7, "wildboar.datasets.install_repository", false]], "intervalforestclassifier (class in wildboar.ensemble)": [[24, "wildboar.ensemble.IntervalForestClassifier", false]], "intervalforestclassifier (class in wildboar.ensemble._ensemble)": [[23, "wildboar.ensemble._ensemble.IntervalForestClassifier", false]], "intervalforestregressor (class in wildboar.ensemble)": [[24, "wildboar.ensemble.IntervalForestRegressor", false]], "intervalforestregressor (class in wildboar.ensemble._ensemble)": [[23, "wildboar.ensemble._ensemble.IntervalForestRegressor", false]], "intervalimportance (class in wildboar.explain)": [[32, "wildboar.explain.IntervalImportance", false]], "intervalimportance (class in wildboar.explain._importance)": [[25, "wildboar.explain._importance.IntervalImportance", false]], "intervalmixin (class in wildboar.transform._interval)": [[52, "wildboar.transform._interval.IntervalMixin", false]], "intervaltransform (class in wildboar.transform)": [[58, "wildboar.transform.IntervalTransform", false]], "intervaltransform (class in wildboar.transform._interval)": [[52, "wildboar.transform._interval.IntervalTransform", false]], "intervaltreeclassifier (class in wildboar.tree)": [[63, "wildboar.tree.IntervalTreeClassifier", false]], "intervaltreeclassifier (class in wildboar.tree._tree)": [[62, "wildboar.tree._tree.IntervalTreeClassifier", false]], "intervaltreeregressor (class in wildboar.tree)": [[63, "wildboar.tree.IntervalTreeRegressor", false]], "intervaltreeregressor (class in wildboar.tree._tree)": [[62, "wildboar.tree._tree.IntervalTreeRegressor", false]], "inverse_transform() (wildboar.dimension_selection._base.basedistanceselector method)": [[10, "wildboar.dimension_selection._base.BaseDistanceSelector.inverse_transform", false]], "inverse_transform() (wildboar.dimension_selection._base.dimensionselectormixin method)": [[10, "wildboar.dimension_selection._base.DimensionSelectorMixin.inverse_transform", false]], "inverse_transform() (wildboar.dimension_selection._distance.selectdimensionpercentile method)": [[11, "wildboar.dimension_selection._distance.SelectDimensionPercentile.inverse_transform", false]], "inverse_transform() (wildboar.dimension_selection._distance.selectdimensionsignificance method)": [[11, "wildboar.dimension_selection._distance.SelectDimensionSignificance.inverse_transform", false]], "inverse_transform() (wildboar.dimension_selection._distance.selectdimensiontopk method)": [[11, "wildboar.dimension_selection._distance.SelectDimensionTopK.inverse_transform", false]], "inverse_transform() (wildboar.dimension_selection._sequential.sequentialdimensionselector method)": [[12, "wildboar.dimension_selection._sequential.SequentialDimensionSelector.inverse_transform", false]], "inverse_transform() (wildboar.dimension_selection._variance.distancevariancethreshold method)": [[13, "wildboar.dimension_selection._variance.DistanceVarianceThreshold.inverse_transform", false]], "inverse_transform() (wildboar.dimension_selection.distancevariancethreshold method)": [[14, "wildboar.dimension_selection.DistanceVarianceThreshold.inverse_transform", false]], "inverse_transform() (wildboar.dimension_selection.selectdimensionpercentile method)": [[14, "wildboar.dimension_selection.SelectDimensionPercentile.inverse_transform", false]], "inverse_transform() (wildboar.dimension_selection.selectdimensionsignificance method)": [[14, "wildboar.dimension_selection.SelectDimensionSignificance.inverse_transform", false]], "inverse_transform() (wildboar.dimension_selection.selectdimensiontopk method)": [[14, "wildboar.dimension_selection.SelectDimensionTopK.inverse_transform", false]], "inverse_transform() (wildboar.dimension_selection.sequentialdimensionselector method)": [[14, "wildboar.dimension_selection.SequentialDimensionSelector.inverse_transform", false]], "is_counterfactual() (in module wildboar.base)": [[4, "wildboar.base.is_counterfactual", false]], "is_counterfactual() (wildboar.explain.counterfactual._helper.predictevaluator method)": [[26, "wildboar.explain.counterfactual._helper.PredictEvaluator.is_counterfactual", false]], "is_counterfactual() (wildboar.explain.counterfactual._helper.probabilityevaluator method)": [[26, "wildboar.explain.counterfactual._helper.ProbabilityEvaluator.is_counterfactual", false]], "is_counterfactual() (wildboar.explain.counterfactual._helper.targetevaluator method)": [[26, "wildboar.explain.counterfactual._helper.TargetEvaluator.is_counterfactual", false]], "is_counterfactual() (wildboar.explain.counterfactual._proto.predictevaluator method)": [[29, "wildboar.explain.counterfactual._proto.PredictEvaluator.is_counterfactual", false]], "is_counterfactual() (wildboar.explain.counterfactual._proto.probabilityevaluator method)": [[29, "wildboar.explain.counterfactual._proto.ProbabilityEvaluator.is_counterfactual", false]], "is_counterfactual() (wildboar.explain.counterfactual._proto.targetevaluator method)": [[29, "wildboar.explain.counterfactual._proto.TargetEvaluator.is_counterfactual", false]], "is_end_of_series() (in module wildboar.utils.variable_len)": [[71, "wildboar.utils.variable_len.is_end_of_series", false]], "is_explainer() (in module wildboar.base)": [[4, "wildboar.base.is_explainer", false]], "is_satisfied_by() (wildboar.utils.validation.metricoptions method)": [[70, "wildboar.utils.validation.MetricOptions.is_satisfied_by", false]], "is_satisfied_by() (wildboar.utils.validation.subsequencemetricoptions method)": [[70, "wildboar.utils.validation.SubsequenceMetricOptions.is_satisfied_by", false]], "is_variable_length() (in module wildboar.utils.variable_len)": [[71, "wildboar.utils.variable_len.is_variable_length", false]], "isolationshapeletforest (class in wildboar.ensemble)": [[24, "wildboar.ensemble.IsolationShapeletForest", false]], "isolationshapeletforest (class in wildboar.ensemble._ensemble)": [[23, "wildboar.ensemble._ensemble.IsolationShapeletForest", false]], "jeong_weight() (in module wildboar.distance.dtw)": [[20, "wildboar.distance.dtw.jeong_weight", false]], "jsonrepository (class in wildboar.datasets)": [[7, "wildboar.datasets.JSONRepository", false]], "jsonrepository (class in wildboar.datasets._repository)": [[6, "wildboar.datasets._repository.JSONRepository", false]], "kmeans (class in wildboar.distance)": [[21, "wildboar.distance.KMeans", false]], "kmeans (class in wildboar.distance._neighbors)": [[19, "wildboar.distance._neighbors.KMeans", false]], "kmeans_outliers() (in module wildboar.datasets.outlier)": [[8, "wildboar.datasets.outlier.kmeans_outliers", false]], "kmedoids (class in wildboar.distance)": [[21, "wildboar.distance.KMedoids", false]], "kmedoids (class in wildboar.distance._neighbors)": [[19, "wildboar.distance._neighbors.KMedoids", false]], "knearestprototypesampler (class in wildboar.explain.counterfactual._proto)": [[29, "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler", false]], "knearestshapeletprototypesampler (class in wildboar.explain.counterfactual._proto)": [[29, "wildboar.explain.counterfactual._proto.KNearestShapeletPrototypeSampler", false]], "kneighborsclassifier (class in wildboar.distance)": [[21, "wildboar.distance.KNeighborsClassifier", false]], "kneighborsclassifier (class in wildboar.distance._neighbors)": [[19, "wildboar.distance._neighbors.KNeighborsClassifier", false]], "kneighborscounterfactual (class in wildboar.explain.counterfactual)": [[31, "wildboar.explain.counterfactual.KNeighborsCounterfactual", false]], "kneighborscounterfactual (class in wildboar.explain.counterfactual._nn)": [[27, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual", false]], "list() (wildboar.datasets._repository.bundle method)": [[6, "wildboar.datasets._repository.Bundle.list", false]], "list() (wildboar.datasets._repository.npbundle method)": [[6, "wildboar.datasets._repository.NpBundle.list", false]], "list() (wildboar.datasets.bundle method)": [[7, "wildboar.datasets.Bundle.list", false]], "list() (wildboar.datasets.npbundle method)": [[7, "wildboar.datasets.NpBundle.list", false]], "list_bundles() (in module wildboar.datasets)": [[7, "wildboar.datasets.list_bundles", false]], "list_collections() (in module wildboar.datasets)": [[7, "wildboar.datasets.list_collections", false]], "list_datasets() (in module wildboar.datasets)": [[7, "wildboar.datasets.list_datasets", false]], "list_repositories() (in module wildboar.datasets)": [[7, "wildboar.datasets.list_repositories", false]], "load() (wildboar.datasets._repository.bundle method)": [[6, "wildboar.datasets._repository.Bundle.load", false]], "load() (wildboar.datasets._repository.npbundle method)": [[6, "wildboar.datasets._repository.NpBundle.load", false]], "load() (wildboar.datasets.bundle method)": [[7, "wildboar.datasets.Bundle.load", false]], "load() (wildboar.datasets.npbundle method)": [[7, "wildboar.datasets.NpBundle.load", false]], "load_articulary_word_recognition() (in module wildboar.datasets)": [[7, "wildboar.datasets.load_articulary_word_recognition", false]], "load_basic_motions() (in module wildboar.datasets)": [[7, "wildboar.datasets.load_basic_motions", false]], "load_dataset() (in module wildboar.datasets)": [[7, "wildboar.datasets.load_dataset", false]], "load_datasets() (in module wildboar.datasets)": [[7, "wildboar.datasets.load_datasets", false]], "load_ering() (in module wildboar.datasets)": [[7, "wildboar.datasets.load_ering", false]], "load_gun_point() (in module wildboar.datasets)": [[7, "wildboar.datasets.load_gun_point", false]], "load_synthetic_control() (in module wildboar.datasets)": [[7, "wildboar.datasets.load_synthetic_control", false]], "load_two_lead_ecg() (in module wildboar.datasets)": [[7, "wildboar.datasets.load_two_lead_ecg", false]], "majority_outliers() (in module wildboar.datasets.outlier)": [[8, "wildboar.datasets.outlier.majority_outliers", false]], "make_dict_filter() (in module wildboar.datasets._filter)": [[5, "wildboar.datasets._filter.make_dict_filter", false]], "make_filter() (in module wildboar.datasets._filter)": [[5, "wildboar.datasets._filter.make_filter", false]], "make_list_filter() (in module wildboar.datasets._filter)": [[5, "wildboar.datasets._filter.make_list_filter", false]], "make_str_filter() (in module wildboar.datasets._filter)": [[5, "wildboar.datasets._filter.make_str_filter", false]], "matrix_profile() (in module wildboar.distance._matrix_profile)": [[17, "wildboar.distance._matrix_profile.matrix_profile", false]], "matrixprofiletransform (class in wildboar.transform)": [[58, "wildboar.transform.MatrixProfileTransform", false]], "matrixprofiletransform (class in wildboar.transform._matrix_profile)": [[53, "wildboar.transform._matrix_profile.MatrixProfileTransform", false]], "maxabs_scale() (in module wildboar.datasets.preprocess)": [[9, "wildboar.datasets.preprocess.maxabs_scale", false]], "mds (class in wildboar.distance)": [[21, "wildboar.distance.MDS", false]], "mds (class in wildboar.distance._manifold)": [[16, "wildboar.distance._manifold.MDS", false]], "metricoptions (class in wildboar.utils.validation)": [[70, "wildboar.utils.validation.MetricOptions", false]], "metrictransform (class in wildboar.explain.counterfactual._proto)": [[29, "wildboar.explain.counterfactual._proto.MetricTransform", false]], "minmax_scale() (in module wildboar.datasets.preprocess)": [[9, "wildboar.datasets.preprocess.minmax_scale", false]], "minority_outliers() (in module wildboar.datasets.outlier)": [[8, "wildboar.datasets.outlier.minority_outliers", false]], "module": [[1, "module-wildboar.annotate._motifs", false], [2, "module-wildboar.annotate._segment", false], [3, "module-wildboar.annotate", false], [4, "module-wildboar.base", false], [5, "module-wildboar.datasets._filter", false], [6, "module-wildboar.datasets._repository", false], [7, "module-wildboar.datasets", false], [8, "module-wildboar.datasets.outlier", false], [9, "module-wildboar.datasets.preprocess", false], [10, "module-wildboar.dimension_selection._base", false], [11, "module-wildboar.dimension_selection._distance", false], [12, "module-wildboar.dimension_selection._sequential", false], [13, "module-wildboar.dimension_selection._variance", false], [14, "module-wildboar.dimension_selection", false], [15, "module-wildboar.distance._distance", false], [16, "module-wildboar.distance._manifold", false], [17, "module-wildboar.distance._matrix_profile", false], [18, "module-wildboar.distance._multi_metric", false], [19, "module-wildboar.distance._neighbors", false], [20, "module-wildboar.distance.dtw", false], [21, "module-wildboar.distance", false], [22, "module-wildboar.ensemble._elastic", false], [23, "module-wildboar.ensemble._ensemble", false], [24, "module-wildboar.ensemble", false], [25, "module-wildboar.explain._importance", false], [26, "module-wildboar.explain.counterfactual._helper", false], [27, "module-wildboar.explain.counterfactual._nn", false], [28, "module-wildboar.explain.counterfactual._nun", false], [29, "module-wildboar.explain.counterfactual._proto", false], [30, "module-wildboar.explain.counterfactual._sf", false], [31, "module-wildboar.explain.counterfactual", false], [32, "module-wildboar.explain", false], [33, "module-wildboar", false], [34, "module-wildboar.linear_model._hydra", false], [35, "module-wildboar.linear_model._rocket", false], [36, "module-wildboar.linear_model._shapelet", false], [37, "module-wildboar.linear_model._transform", false], [38, "module-wildboar.linear_model", false], [39, "module-wildboar.metrics._cluster", false], [40, "module-wildboar.metrics._counterfactual", false], [41, "module-wildboar.metrics", false], [42, "module-wildboar.model_selection._cv", false], [43, "module-wildboar.model_selection._outlier", false], [44, "module-wildboar.model_selection", false], [45, "module-wildboar.segment._base", false], [46, "module-wildboar.segment._mp", false], [47, "module-wildboar.segment", false], [48, "module-wildboar.transform._base", false], [49, "module-wildboar.transform._conv", false], [50, "module-wildboar.transform._diff", false], [51, "module-wildboar.transform._hydra", false], [52, "module-wildboar.transform._interval", false], [53, "module-wildboar.transform._matrix_profile", false], [54, "module-wildboar.transform._pivot", false], [55, "module-wildboar.transform._rocket", false], [56, "module-wildboar.transform._sax", false], [57, "module-wildboar.transform._shapelet", false], [58, "module-wildboar.transform", false], [59, "module-wildboar.tree._base", false], [60, "module-wildboar.tree._plot", false], [61, "module-wildboar.tree._ptree", false], [62, "module-wildboar.tree._tree", false], [63, "module-wildboar.tree", false], [64, "module-wildboar.utils._parallel", false], [65, "module-wildboar.utils._testing", false], [66, "module-wildboar.utils.decorators", false], [67, "module-wildboar.utils.estimator_checks", false], [68, "module-wildboar.utils", false], [69, "module-wildboar.utils.plot", false], [70, "module-wildboar.utils.validation", false], [71, "module-wildboar.utils.variable_len", false], [72, "module-wildboar.version", false]], "motifs() (in module wildboar.annotate)": [[3, "wildboar.annotate.motifs", false]], "motifs() (in module wildboar.annotate._motifs)": [[1, "wildboar.annotate._motifs.motifs", false]], "move() (wildboar.explain.counterfactual._proto.dynamictimewarptransform method)": [[29, "wildboar.explain.counterfactual._proto.DynamicTimeWarpTransform.move", false]], "move() (wildboar.explain.counterfactual._proto.euclideantransform method)": [[29, "wildboar.explain.counterfactual._proto.EuclideanTransform.move", false]], "move() (wildboar.explain.counterfactual._proto.knearestprototypesampler method)": [[29, "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler.move", false]], "move() (wildboar.explain.counterfactual._proto.knearestshapeletprototypesampler method)": [[29, "wildboar.explain.counterfactual._proto.KNearestShapeletPrototypeSampler.move", false]], "move() (wildboar.explain.counterfactual._proto.metrictransform method)": [[29, "wildboar.explain.counterfactual._proto.MetricTransform.move", false]], "move() (wildboar.explain.counterfactual._proto.prototypesampler method)": [[29, "wildboar.explain.counterfactual._proto.PrototypeSampler.move", false]], "move() (wildboar.explain.counterfactual._proto.shapeletprototypesampler method)": [[29, "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler.move", false]], "move() (wildboar.explain.counterfactual._proto.uniformprototypesampler method)": [[29, "wildboar.explain.counterfactual._proto.UniformPrototypeSampler.move", false]], "move() (wildboar.explain.counterfactual._proto.weighteddynamictimewarptransform method)": [[29, "wildboar.explain.counterfactual._proto.WeightedDynamicTimeWarpTransform.move", false]], "name (wildboar.datasets._repository.jsonrepository property)": [[6, "wildboar.datasets._repository.JSONRepository.name", false]], "name (wildboar.datasets._repository.repository property)": [[6, "wildboar.datasets._repository.Repository.name", false]], "name (wildboar.datasets.jsonrepository property)": [[7, "wildboar.datasets.JSONRepository.name", false]], "name (wildboar.datasets.repository property)": [[7, "wildboar.datasets.Repository.name", false]], "named_preprocess() (in module wildboar.datasets.preprocess)": [[9, "wildboar.datasets.preprocess.named_preprocess", false]], "nativeguidecounterfactual (class in wildboar.explain.counterfactual)": [[31, "wildboar.explain.counterfactual.NativeGuideCounterfactual", false]], "nativeguidecounterfactual (class in wildboar.explain.counterfactual._nun)": [[28, "wildboar.explain.counterfactual._nun.NativeGuideCounterfactual", false]], "nearest_index() (wildboar.explain.counterfactual._proto.knearestprototypesampler method)": [[29, "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler.nearest_index", false]], "normalbinning (class in wildboar.transform._sax)": [[56, "wildboar.transform._sax.NormalBinning", false]], "npbundle (class in wildboar.datasets)": [[7, "wildboar.datasets.NpBundle", false]], "npbundle (class in wildboar.datasets._repository)": [[6, "wildboar.datasets._repository.NpBundle", false]], "outlier_train_test_split() (in module wildboar.model_selection)": [[44, "wildboar.model_selection.outlier_train_test_split", false]], "outlier_train_test_split() (in module wildboar.model_selection._outlier)": [[43, "wildboar.model_selection._outlier.outlier_train_test_split", false]], "paa (class in wildboar.transform)": [[58, "wildboar.transform.PAA", false]], "paa (class in wildboar.transform._sax)": [[56, "wildboar.transform._sax.PAA", false]], "paired_distance() (in module wildboar.distance)": [[21, "wildboar.distance.paired_distance", false]], "paired_distance() (in module wildboar.distance._distance)": [[15, "wildboar.distance._distance.paired_distance", false]], "paired_matrix_profile() (in module wildboar.distance._matrix_profile)": [[17, "wildboar.distance._matrix_profile.paired_matrix_profile", false]], "paired_subsequence_distance() (in module wildboar.distance)": [[21, "wildboar.distance.paired_subsequence_distance", false]], "paired_subsequence_distance() (in module wildboar.distance._distance)": [[15, "wildboar.distance._distance.paired_subsequence_distance", false]], "paired_subsequence_match() (in module wildboar.distance)": [[21, "wildboar.distance.paired_subsequence_match", false]], "paired_subsequence_match() (in module wildboar.distance._distance)": [[15, "wildboar.distance._distance.paired_subsequence_match", false]], "pairwise_distance() (in module wildboar.distance)": [[21, "wildboar.distance.pairwise_distance", false]], "pairwise_distance() (in module wildboar.distance._distance)": [[15, "wildboar.distance._distance.pairwise_distance", false]], "pairwise_subsequence_distance() (in module wildboar.distance)": [[21, "wildboar.distance.pairwise_subsequence_distance", false]], "pairwise_subsequence_distance() (in module wildboar.distance._distance)": [[15, "wildboar.distance._distance.pairwise_subsequence_distance", false]], "permuteimportance (class in wildboar.explain._importance)": [[25, "wildboar.explain._importance.PermuteImportance", false]], "piecewice_aggregate_approximation() (in module wildboar.transform)": [[58, "wildboar.transform.piecewice_aggregate_approximation", false]], "piecewice_aggregate_approximation() (in module wildboar.transform._sax)": [[56, "wildboar.transform._sax.piecewice_aggregate_approximation", false]], "pivotforestclassifier (class in wildboar.ensemble)": [[24, "wildboar.ensemble.PivotForestClassifier", false]], "pivotforestclassifier (class in wildboar.ensemble._ensemble)": [[23, "wildboar.ensemble._ensemble.PivotForestClassifier", false]], "pivotmixin (class in wildboar.transform._pivot)": [[54, "wildboar.transform._pivot.PivotMixin", false]], "pivottransform (class in wildboar.transform)": [[58, "wildboar.transform.PivotTransform", false]], "pivottransform (class in wildboar.transform._pivot)": [[54, "wildboar.transform._pivot.PivotTransform", false]], "pivottreeclassifier (class in wildboar.tree)": [[63, "wildboar.tree.PivotTreeClassifier", false]], "pivottreeclassifier (class in wildboar.tree._tree)": [[62, "wildboar.tree._tree.PivotTreeClassifier", false]], "plausability_score() (in module wildboar.metrics)": [[41, "wildboar.metrics.plausability_score", false]], "plausability_score() (in module wildboar.metrics._counterfactual)": [[40, "wildboar.metrics._counterfactual.plausability_score", false]], "plot() (wildboar.base.explainermixin method)": [[4, "wildboar.base.ExplainerMixin.plot", false]], "plot() (wildboar.explain._importance.amplitudeimportance method)": [[25, "wildboar.explain._importance.AmplitudeImportance.plot", false]], "plot() (wildboar.explain._importance.frequencyimportance method)": [[25, "wildboar.explain._importance.FrequencyImportance.plot", false]], "plot() (wildboar.explain._importance.intervalimportance method)": [[25, "wildboar.explain._importance.IntervalImportance.plot", false]], "plot() (wildboar.explain._importance.shapeletimportance method)": [[25, "wildboar.explain._importance.ShapeletImportance.plot", false]], "plot() (wildboar.explain.amplitudeimportance method)": [[32, "wildboar.explain.AmplitudeImportance.plot", false]], "plot() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[27, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.plot", false]], "plot() (wildboar.explain.counterfactual._nun.nativeguidecounterfactual method)": [[28, "wildboar.explain.counterfactual._nun.NativeGuideCounterfactual.plot", false]], "plot() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[29, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.plot", false]], "plot() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[30, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.plot", false]], "plot() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[31, "wildboar.explain.counterfactual.KNeighborsCounterfactual.plot", false]], "plot() (wildboar.explain.counterfactual.nativeguidecounterfactual method)": [[31, "wildboar.explain.counterfactual.NativeGuideCounterfactual.plot", false]], "plot() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[31, "wildboar.explain.counterfactual.PrototypeCounterfactual.plot", false]], "plot() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[31, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.plot", false]], "plot() (wildboar.explain.frequencyimportance method)": [[32, "wildboar.explain.FrequencyImportance.plot", false]], "plot() (wildboar.explain.intervalimportance method)": [[32, "wildboar.explain.IntervalImportance.plot", false]], "plot() (wildboar.explain.shapeletimportance method)": [[32, "wildboar.explain.ShapeletImportance.plot", false]], "plot_frequency_domain() (in module wildboar.utils.plot)": [[69, "wildboar.utils.plot.plot_frequency_domain", false]], "plot_importances() (in module wildboar.explain)": [[32, "wildboar.explain.plot_importances", false]], "plot_importances() (in module wildboar.explain._importance)": [[25, "wildboar.explain._importance.plot_importances", false]], "plot_time_domain() (in module wildboar.utils.plot)": [[69, "wildboar.utils.plot.plot_time_domain", false]], "plot_tree() (in module wildboar.tree)": [[63, "wildboar.tree.plot_tree", false]], "plot_tree() (in module wildboar.tree._plot)": [[60, "wildboar.tree._plot.plot_tree", false]], "predict() (wildboar.distance._neighbors.kmeans method)": [[19, "wildboar.distance._neighbors.KMeans.predict", false]], "predict() (wildboar.distance._neighbors.kmedoids method)": [[19, "wildboar.distance._neighbors.KMedoids.predict", false]], "predict() (wildboar.distance._neighbors.kneighborsclassifier method)": [[19, "wildboar.distance._neighbors.KNeighborsClassifier.predict", false]], "predict() (wildboar.distance.kmeans method)": [[21, "wildboar.distance.KMeans.predict", false]], "predict() (wildboar.distance.kmedoids method)": [[21, "wildboar.distance.KMedoids.predict", false]], "predict() (wildboar.distance.kneighborsclassifier method)": [[21, "wildboar.distance.KNeighborsClassifier.predict", false]], "predict() (wildboar.ensemble._elastic.elasticensembleclassifier method)": [[22, "wildboar.ensemble._elastic.ElasticEnsembleClassifier.predict", false]], "predict() (wildboar.ensemble._ensemble.baggingclassifier method)": [[23, "wildboar.ensemble._ensemble.BaggingClassifier.predict", false]], "predict() (wildboar.ensemble._ensemble.baggingregressor method)": [[23, "wildboar.ensemble._ensemble.BaggingRegressor.predict", false]], "predict() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[23, "wildboar.ensemble._ensemble.BaseForestClassifier.predict", false]], "predict() (wildboar.ensemble._ensemble.baseforestregressor method)": [[23, "wildboar.ensemble._ensemble.BaseForestRegressor.predict", false]], "predict() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[23, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.predict", false]], "predict() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[23, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.predict", false]], "predict() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[23, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.predict", false]], "predict() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[23, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.predict", false]], "predict() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[23, "wildboar.ensemble._ensemble.IntervalForestClassifier.predict", false]], "predict() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[23, "wildboar.ensemble._ensemble.IntervalForestRegressor.predict", false]], "predict() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[23, "wildboar.ensemble._ensemble.PivotForestClassifier.predict", false]], "predict() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[23, "wildboar.ensemble._ensemble.ProximityForestClassifier.predict", false]], "predict() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[23, "wildboar.ensemble._ensemble.RocketForestClassifier.predict", false]], "predict() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[23, "wildboar.ensemble._ensemble.RocketForestRegressor.predict", false]], "predict() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[23, "wildboar.ensemble._ensemble.ShapeletForestClassifier.predict", false]], "predict() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[23, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.predict", false]], "predict() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[23, "wildboar.ensemble._ensemble.ShapeletForestRegressor.predict", false]], "predict() (wildboar.ensemble.baggingclassifier method)": [[24, "wildboar.ensemble.BaggingClassifier.predict", false]], "predict() (wildboar.ensemble.baggingregressor method)": [[24, "wildboar.ensemble.BaggingRegressor.predict", false]], "predict() (wildboar.ensemble.elasticensembleclassifier method)": [[24, "wildboar.ensemble.ElasticEnsembleClassifier.predict", false]], "predict() (wildboar.ensemble.extrashapelettreesclassifier method)": [[24, "wildboar.ensemble.ExtraShapeletTreesClassifier.predict", false]], "predict() (wildboar.ensemble.extrashapelettreesregressor method)": [[24, "wildboar.ensemble.ExtraShapeletTreesRegressor.predict", false]], "predict() (wildboar.ensemble.intervalforestclassifier method)": [[24, "wildboar.ensemble.IntervalForestClassifier.predict", false]], "predict() (wildboar.ensemble.intervalforestregressor method)": [[24, "wildboar.ensemble.IntervalForestRegressor.predict", false]], "predict() (wildboar.ensemble.pivotforestclassifier method)": [[24, "wildboar.ensemble.PivotForestClassifier.predict", false]], "predict() (wildboar.ensemble.proximityforestclassifier method)": [[24, "wildboar.ensemble.ProximityForestClassifier.predict", false]], "predict() (wildboar.ensemble.rocketforestclassifier method)": [[24, "wildboar.ensemble.RocketForestClassifier.predict", false]], "predict() (wildboar.ensemble.rocketforestregressor method)": [[24, "wildboar.ensemble.RocketForestRegressor.predict", false]], "predict() (wildboar.ensemble.shapeletforestclassifier method)": [[24, "wildboar.ensemble.ShapeletForestClassifier.predict", false]], "predict() (wildboar.ensemble.shapeletforestembedding method)": [[24, "wildboar.ensemble.ShapeletForestEmbedding.predict", false]], "predict() (wildboar.ensemble.shapeletforestregressor method)": [[24, "wildboar.ensemble.ShapeletForestRegressor.predict", false]], "predict() (wildboar.segment._base.basesegmenter method)": [[45, "wildboar.segment._base.BaseSegmenter.predict", false]], "predict() (wildboar.segment._mp.flusssegmenter method)": [[46, "wildboar.segment._mp.FlussSegmenter.predict", false]], "predict() (wildboar.segment.flusssegmenter method)": [[47, "wildboar.segment.FlussSegmenter.predict", false]], "predict() (wildboar.tree._base.basetreeclassifier method)": [[59, "wildboar.tree._base.BaseTreeClassifier.predict", false]], "predict() (wildboar.tree._base.basetreeregressor method)": [[59, "wildboar.tree._base.BaseTreeRegressor.predict", false]], "predict() (wildboar.tree._ptree.proximitytreeclassifier method)": [[61, "wildboar.tree._ptree.ProximityTreeClassifier.predict", false]], "predict() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[62, "wildboar.tree._tree.BaseFeatureTreeClassifier.predict", false]], "predict() (wildboar.tree._tree.basefeaturetreeregressor method)": [[62, "wildboar.tree._tree.BaseFeatureTreeRegressor.predict", false]], "predict() (wildboar.tree._tree.dilatedshapelettreeclassifier method)": [[62, "wildboar.tree._tree.DilatedShapeletTreeClassifier.predict", false]], "predict() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[62, "wildboar.tree._tree.ExtraShapeletTreeClassifier.predict", false]], "predict() (wildboar.tree._tree.extrashapelettreeregressor method)": [[62, "wildboar.tree._tree.ExtraShapeletTreeRegressor.predict", false]], "predict() (wildboar.tree._tree.intervaltreeclassifier method)": [[62, "wildboar.tree._tree.IntervalTreeClassifier.predict", false]], "predict() (wildboar.tree._tree.intervaltreeregressor method)": [[62, "wildboar.tree._tree.IntervalTreeRegressor.predict", false]], "predict() (wildboar.tree._tree.pivottreeclassifier method)": [[62, "wildboar.tree._tree.PivotTreeClassifier.predict", false]], "predict() (wildboar.tree._tree.rockettreeclassifier method)": [[62, "wildboar.tree._tree.RocketTreeClassifier.predict", false]], "predict() (wildboar.tree._tree.rockettreeregressor method)": [[62, "wildboar.tree._tree.RocketTreeRegressor.predict", false]], "predict() (wildboar.tree._tree.shapelettreeclassifier method)": [[62, "wildboar.tree._tree.ShapeletTreeClassifier.predict", false]], "predict() (wildboar.tree._tree.shapelettreeregressor method)": [[62, "wildboar.tree._tree.ShapeletTreeRegressor.predict", false]], "predict() (wildboar.tree.extrashapelettreeclassifier method)": [[63, "wildboar.tree.ExtraShapeletTreeClassifier.predict", false]], "predict() (wildboar.tree.extrashapelettreeregressor method)": [[63, "wildboar.tree.ExtraShapeletTreeRegressor.predict", false]], "predict() (wildboar.tree.intervaltreeclassifier method)": [[63, "wildboar.tree.IntervalTreeClassifier.predict", false]], "predict() (wildboar.tree.intervaltreeregressor method)": [[63, "wildboar.tree.IntervalTreeRegressor.predict", false]], "predict() (wildboar.tree.pivottreeclassifier method)": [[63, "wildboar.tree.PivotTreeClassifier.predict", false]], "predict() (wildboar.tree.proximitytreeclassifier method)": [[63, "wildboar.tree.ProximityTreeClassifier.predict", false]], "predict() (wildboar.tree.rockettreeclassifier method)": [[63, "wildboar.tree.RocketTreeClassifier.predict", false]], "predict() (wildboar.tree.rockettreeregressor method)": [[63, "wildboar.tree.RocketTreeRegressor.predict", false]], "predict() (wildboar.tree.shapelettreeclassifier method)": [[63, "wildboar.tree.ShapeletTreeClassifier.predict", false]], "predict() (wildboar.tree.shapelettreeregressor method)": [[63, "wildboar.tree.ShapeletTreeRegressor.predict", false]], "predict_log_proba() (wildboar.ensemble._ensemble.baggingclassifier method)": [[23, "wildboar.ensemble._ensemble.BaggingClassifier.predict_log_proba", false]], "predict_log_proba() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[23, "wildboar.ensemble._ensemble.BaseForestClassifier.predict_log_proba", false]], "predict_log_proba() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[23, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.predict_log_proba", false]], "predict_log_proba() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[23, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.predict_log_proba", false]], "predict_log_proba() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[23, "wildboar.ensemble._ensemble.IntervalForestClassifier.predict_log_proba", false]], "predict_log_proba() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[23, "wildboar.ensemble._ensemble.PivotForestClassifier.predict_log_proba", false]], "predict_log_proba() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[23, "wildboar.ensemble._ensemble.ProximityForestClassifier.predict_log_proba", false]], "predict_log_proba() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[23, "wildboar.ensemble._ensemble.RocketForestClassifier.predict_log_proba", false]], "predict_log_proba() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[23, "wildboar.ensemble._ensemble.ShapeletForestClassifier.predict_log_proba", false]], "predict_log_proba() (wildboar.ensemble.baggingclassifier method)": [[24, "wildboar.ensemble.BaggingClassifier.predict_log_proba", false]], "predict_log_proba() (wildboar.ensemble.extrashapelettreesclassifier method)": [[24, "wildboar.ensemble.ExtraShapeletTreesClassifier.predict_log_proba", false]], "predict_log_proba() (wildboar.ensemble.intervalforestclassifier method)": [[24, "wildboar.ensemble.IntervalForestClassifier.predict_log_proba", false]], "predict_log_proba() (wildboar.ensemble.pivotforestclassifier method)": [[24, "wildboar.ensemble.PivotForestClassifier.predict_log_proba", false]], "predict_log_proba() (wildboar.ensemble.proximityforestclassifier method)": [[24, "wildboar.ensemble.ProximityForestClassifier.predict_log_proba", false]], "predict_log_proba() (wildboar.ensemble.rocketforestclassifier method)": [[24, "wildboar.ensemble.RocketForestClassifier.predict_log_proba", false]], "predict_log_proba() (wildboar.ensemble.shapeletforestclassifier method)": [[24, "wildboar.ensemble.ShapeletForestClassifier.predict_log_proba", false]], "predict_proba() (wildboar.distance._neighbors.kneighborsclassifier method)": [[19, "wildboar.distance._neighbors.KNeighborsClassifier.predict_proba", false]], "predict_proba() (wildboar.distance.kneighborsclassifier method)": [[21, "wildboar.distance.KNeighborsClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble._elastic.elasticensembleclassifier method)": [[22, "wildboar.ensemble._elastic.ElasticEnsembleClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble._ensemble.baggingclassifier method)": [[23, "wildboar.ensemble._ensemble.BaggingClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[23, "wildboar.ensemble._ensemble.BaseForestClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[23, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[23, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[23, "wildboar.ensemble._ensemble.IntervalForestClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[23, "wildboar.ensemble._ensemble.PivotForestClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[23, "wildboar.ensemble._ensemble.ProximityForestClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[23, "wildboar.ensemble._ensemble.RocketForestClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[23, "wildboar.ensemble._ensemble.ShapeletForestClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble.baggingclassifier method)": [[24, "wildboar.ensemble.BaggingClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble.elasticensembleclassifier method)": [[24, "wildboar.ensemble.ElasticEnsembleClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble.extrashapelettreesclassifier method)": [[24, "wildboar.ensemble.ExtraShapeletTreesClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble.intervalforestclassifier method)": [[24, "wildboar.ensemble.IntervalForestClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble.pivotforestclassifier method)": [[24, "wildboar.ensemble.PivotForestClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble.proximityforestclassifier method)": [[24, "wildboar.ensemble.ProximityForestClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble.rocketforestclassifier method)": [[24, "wildboar.ensemble.RocketForestClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble.shapeletforestclassifier method)": [[24, "wildboar.ensemble.ShapeletForestClassifier.predict_proba", false]], "predict_proba() (wildboar.tree._base.basetreeclassifier method)": [[59, "wildboar.tree._base.BaseTreeClassifier.predict_proba", false]], "predict_proba() (wildboar.tree._ptree.proximitytreeclassifier method)": [[61, "wildboar.tree._ptree.ProximityTreeClassifier.predict_proba", false]], "predict_proba() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[62, "wildboar.tree._tree.BaseFeatureTreeClassifier.predict_proba", false]], "predict_proba() (wildboar.tree._tree.dilatedshapelettreeclassifier method)": [[62, "wildboar.tree._tree.DilatedShapeletTreeClassifier.predict_proba", false]], "predict_proba() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[62, "wildboar.tree._tree.ExtraShapeletTreeClassifier.predict_proba", false]], "predict_proba() (wildboar.tree._tree.intervaltreeclassifier method)": [[62, "wildboar.tree._tree.IntervalTreeClassifier.predict_proba", false]], "predict_proba() (wildboar.tree._tree.pivottreeclassifier method)": [[62, "wildboar.tree._tree.PivotTreeClassifier.predict_proba", false]], "predict_proba() (wildboar.tree._tree.rockettreeclassifier method)": [[62, "wildboar.tree._tree.RocketTreeClassifier.predict_proba", false]], "predict_proba() (wildboar.tree._tree.shapelettreeclassifier method)": [[62, "wildboar.tree._tree.ShapeletTreeClassifier.predict_proba", false]], "predict_proba() (wildboar.tree.extrashapelettreeclassifier method)": [[63, "wildboar.tree.ExtraShapeletTreeClassifier.predict_proba", false]], "predict_proba() (wildboar.tree.intervaltreeclassifier method)": [[63, "wildboar.tree.IntervalTreeClassifier.predict_proba", false]], "predict_proba() (wildboar.tree.pivottreeclassifier method)": [[63, "wildboar.tree.PivotTreeClassifier.predict_proba", false]], "predict_proba() (wildboar.tree.proximitytreeclassifier method)": [[63, "wildboar.tree.ProximityTreeClassifier.predict_proba", false]], "predict_proba() (wildboar.tree.rockettreeclassifier method)": [[63, "wildboar.tree.RocketTreeClassifier.predict_proba", false]], "predict_proba() (wildboar.tree.shapelettreeclassifier method)": [[63, "wildboar.tree.ShapeletTreeClassifier.predict_proba", false]], "predictevaluator (class in wildboar.explain.counterfactual._helper)": [[26, "wildboar.explain.counterfactual._helper.PredictEvaluator", false]], "predictevaluator (class in wildboar.explain.counterfactual._proto)": [[29, "wildboar.explain.counterfactual._proto.PredictEvaluator", false]], "probabilityevaluator (class in wildboar.explain.counterfactual._helper)": [[26, "wildboar.explain.counterfactual._helper.ProbabilityEvaluator", false]], "probabilityevaluator (class in wildboar.explain.counterfactual._proto)": [[29, "wildboar.explain.counterfactual._proto.ProbabilityEvaluator", false]], "prototypecounterfactual (class in wildboar.explain.counterfactual)": [[31, "wildboar.explain.counterfactual.PrototypeCounterfactual", false]], "prototypecounterfactual (class in wildboar.explain.counterfactual._proto)": [[29, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual", false]], "prototypesampler (class in wildboar.explain.counterfactual._proto)": [[29, "wildboar.explain.counterfactual._proto.PrototypeSampler", false]], "proximity() (in module wildboar.explain.counterfactual)": [[31, "wildboar.explain.counterfactual.proximity", false]], "proximity_score() (in module wildboar.metrics)": [[41, "wildboar.metrics.proximity_score", false]], "proximity_score() (in module wildboar.metrics._counterfactual)": [[40, "wildboar.metrics._counterfactual.proximity_score", false]], "proximityforestclassifier (class in wildboar.ensemble)": [[24, "wildboar.ensemble.ProximityForestClassifier", false]], "proximityforestclassifier (class in wildboar.ensemble._ensemble)": [[23, "wildboar.ensemble._ensemble.ProximityForestClassifier", false]], "proximitytransform (class in wildboar.transform)": [[58, "wildboar.transform.ProximityTransform", false]], "proximitytransform (class in wildboar.transform._pivot)": [[54, "wildboar.transform._pivot.ProximityTransform", false]], "proximitytreeclassifier (class in wildboar.tree)": [[63, "wildboar.tree.ProximityTreeClassifier", false]], "proximitytreeclassifier (class in wildboar.tree._ptree)": [[61, "wildboar.tree._ptree.ProximityTreeClassifier", false]], "randomshapeletclassifier (class in wildboar.linear_model)": [[38, "wildboar.linear_model.RandomShapeletClassifier", false]], "randomshapeletclassifier (class in wildboar.linear_model._shapelet)": [[36, "wildboar.linear_model._shapelet.RandomShapeletClassifier", false]], "randomshapeletmixin (class in wildboar.transform._shapelet)": [[57, "wildboar.transform._shapelet.RandomShapeletMixin", false]], "randomshapeletregressor (class in wildboar.linear_model)": [[38, "wildboar.linear_model.RandomShapeletRegressor", false]], "randomshapeletregressor (class in wildboar.linear_model._shapelet)": [[36, "wildboar.linear_model._shapelet.RandomShapeletRegressor", false]], "randomshapelettransform (class in wildboar.transform)": [[58, "wildboar.transform.RandomShapeletTransform", false]], "randomshapelettransform (class in wildboar.transform._shapelet)": [[57, "wildboar.transform._shapelet.RandomShapeletTransform", false]], "redudancy_score() (in module wildboar.metrics)": [[41, "wildboar.metrics.redudancy_score", false]], "redudancy_score() (in module wildboar.metrics._counterfactual)": [[40, "wildboar.metrics._counterfactual.redudancy_score", false]], "refresh() (wildboar.datasets._repository.jsonrepository method)": [[6, "wildboar.datasets._repository.JSONRepository.refresh", false]], "refresh() (wildboar.datasets._repository.repository method)": [[6, "wildboar.datasets._repository.Repository.refresh", false]], "refresh() (wildboar.datasets.jsonrepository method)": [[7, "wildboar.datasets.JSONRepository.refresh", false]], "refresh() (wildboar.datasets.repository method)": [[7, "wildboar.datasets.Repository.refresh", false]], "refresh_repositories() (in module wildboar.datasets)": [[7, "wildboar.datasets.refresh_repositories", false]], "relative_proximity_score() (in module wildboar.metrics)": [[41, "wildboar.metrics.relative_proximity_score", false]], "relative_proximity_score() (in module wildboar.metrics._counterfactual)": [[40, "wildboar.metrics._counterfactual.relative_proximity_score", false]], "repeatedoutliersplit (class in wildboar.model_selection)": [[44, "wildboar.model_selection.RepeatedOutlierSplit", false]], "repeatedoutliersplit (class in wildboar.model_selection._cv)": [[42, "wildboar.model_selection._cv.RepeatedOutlierSplit", false]], "repository (class in wildboar.datasets)": [[7, "wildboar.datasets.Repository", false]], "repository (class in wildboar.datasets._repository)": [[6, "wildboar.datasets._repository.Repository", false]], "rocketclassifier (class in wildboar.linear_model)": [[38, "wildboar.linear_model.RocketClassifier", false]], "rocketclassifier (class in wildboar.linear_model._rocket)": [[35, "wildboar.linear_model._rocket.RocketClassifier", false]], "rocketforestclassifier (class in wildboar.ensemble)": [[24, "wildboar.ensemble.RocketForestClassifier", false]], "rocketforestclassifier (class in wildboar.ensemble._ensemble)": [[23, "wildboar.ensemble._ensemble.RocketForestClassifier", false]], "rocketforestregressor (class in wildboar.ensemble)": [[24, "wildboar.ensemble.RocketForestRegressor", false]], "rocketforestregressor (class in wildboar.ensemble._ensemble)": [[23, "wildboar.ensemble._ensemble.RocketForestRegressor", false]], "rocketmixin (class in wildboar.transform._rocket)": [[55, "wildboar.transform._rocket.RocketMixin", false]], "rocketregressor (class in wildboar.linear_model)": [[38, "wildboar.linear_model.RocketRegressor", false]], "rocketregressor (class in wildboar.linear_model._rocket)": [[35, "wildboar.linear_model._rocket.RocketRegressor", false]], "rockettransform (class in wildboar.transform)": [[58, "wildboar.transform.RocketTransform", false]], "rockettransform (class in wildboar.transform._rocket)": [[55, "wildboar.transform._rocket.RocketTransform", false]], "rockettreeclassifier (class in wildboar.tree)": [[63, "wildboar.tree.RocketTreeClassifier", false]], "rockettreeclassifier (class in wildboar.tree._tree)": [[62, "wildboar.tree._tree.RocketTreeClassifier", false]], "rockettreeregressor (class in wildboar.tree)": [[63, "wildboar.tree.RocketTreeRegressor", false]], "rockettreeregressor (class in wildboar.tree._tree)": [[62, "wildboar.tree._tree.RocketTreeRegressor", false]], "run_in_parallel() (in module wildboar.utils._parallel)": [[64, "wildboar.utils._parallel.run_in_parallel", false]], "sample() (wildboar.explain.counterfactual._proto.knearestprototypesampler method)": [[29, "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler.sample", false]], "sample() (wildboar.explain.counterfactual._proto.knearestshapeletprototypesampler method)": [[29, "wildboar.explain.counterfactual._proto.KNearestShapeletPrototypeSampler.sample", false]], "sample() (wildboar.explain.counterfactual._proto.prototypesampler method)": [[29, "wildboar.explain.counterfactual._proto.PrototypeSampler.sample", false]], "sample() (wildboar.explain.counterfactual._proto.shapeletprototypesampler method)": [[29, "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler.sample", false]], "sample() (wildboar.explain.counterfactual._proto.uniformprototypesampler method)": [[29, "wildboar.explain.counterfactual._proto.UniformPrototypeSampler.sample", false]], "sample_move() (wildboar.explain.counterfactual._proto.knearestprototypesampler method)": [[29, "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler.sample_move", false]], "sample_move() (wildboar.explain.counterfactual._proto.knearestshapeletprototypesampler method)": [[29, "wildboar.explain.counterfactual._proto.KNearestShapeletPrototypeSampler.sample_move", false]], "sample_move() (wildboar.explain.counterfactual._proto.prototypesampler method)": [[29, "wildboar.explain.counterfactual._proto.PrototypeSampler.sample_move", false]], "sample_move() (wildboar.explain.counterfactual._proto.shapeletprototypesampler method)": [[29, "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler.sample_move", false]], "sample_move() (wildboar.explain.counterfactual._proto.uniformprototypesampler method)": [[29, "wildboar.explain.counterfactual._proto.UniformPrototypeSampler.sample_move", false]], "sample_shapelet() (wildboar.explain.counterfactual._proto.shapeletprototypesampler method)": [[29, "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler.sample_shapelet", false]], "sax (class in wildboar.transform)": [[58, "wildboar.transform.SAX", false]], "sax (class in wildboar.transform._sax)": [[56, "wildboar.transform._sax.SAX", false]], "scale() (wildboar.transform._sax.binning method)": [[56, "wildboar.transform._sax.Binning.scale", false]], "scale() (wildboar.transform._sax.normalbinning method)": [[56, "wildboar.transform._sax.NormalBinning.scale", false]], "scale() (wildboar.transform._sax.uniformbinning method)": [[56, "wildboar.transform._sax.UniformBinning.scale", false]], "score() (wildboar.base.counterfactualmixin method)": [[4, "wildboar.base.CounterfactualMixin.score", false]], "score() (wildboar.distance._neighbors.kneighborsclassifier method)": [[19, "wildboar.distance._neighbors.KNeighborsClassifier.score", false]], "score() (wildboar.distance.kneighborsclassifier method)": [[21, "wildboar.distance.KNeighborsClassifier.score", false]], "score() (wildboar.ensemble._elastic.elasticensembleclassifier method)": [[22, "wildboar.ensemble._elastic.ElasticEnsembleClassifier.score", false]], "score() (wildboar.ensemble._ensemble.baggingclassifier method)": [[23, "wildboar.ensemble._ensemble.BaggingClassifier.score", false]], "score() (wildboar.ensemble._ensemble.baggingregressor method)": [[23, "wildboar.ensemble._ensemble.BaggingRegressor.score", false]], "score() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[23, "wildboar.ensemble._ensemble.BaseForestClassifier.score", false]], "score() (wildboar.ensemble._ensemble.baseforestregressor method)": [[23, "wildboar.ensemble._ensemble.BaseForestRegressor.score", false]], "score() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[23, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.score", false]], "score() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[23, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.score", false]], "score() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[23, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.score", false]], "score() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[23, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.score", false]], "score() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[23, "wildboar.ensemble._ensemble.IntervalForestClassifier.score", false]], "score() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[23, "wildboar.ensemble._ensemble.IntervalForestRegressor.score", false]], "score() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[23, "wildboar.ensemble._ensemble.PivotForestClassifier.score", false]], "score() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[23, "wildboar.ensemble._ensemble.ProximityForestClassifier.score", false]], "score() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[23, "wildboar.ensemble._ensemble.RocketForestClassifier.score", false]], "score() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[23, "wildboar.ensemble._ensemble.RocketForestRegressor.score", false]], "score() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[23, "wildboar.ensemble._ensemble.ShapeletForestClassifier.score", false]], "score() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[23, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.score", false]], "score() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[23, "wildboar.ensemble._ensemble.ShapeletForestRegressor.score", false]], "score() (wildboar.ensemble.baggingclassifier method)": [[24, "wildboar.ensemble.BaggingClassifier.score", false]], "score() (wildboar.ensemble.baggingregressor method)": [[24, "wildboar.ensemble.BaggingRegressor.score", false]], "score() (wildboar.ensemble.elasticensembleclassifier method)": [[24, "wildboar.ensemble.ElasticEnsembleClassifier.score", false]], "score() (wildboar.ensemble.extrashapelettreesclassifier method)": [[24, "wildboar.ensemble.ExtraShapeletTreesClassifier.score", false]], "score() (wildboar.ensemble.extrashapelettreesregressor method)": [[24, "wildboar.ensemble.ExtraShapeletTreesRegressor.score", false]], "score() (wildboar.ensemble.intervalforestclassifier method)": [[24, "wildboar.ensemble.IntervalForestClassifier.score", false]], "score() (wildboar.ensemble.intervalforestregressor method)": [[24, "wildboar.ensemble.IntervalForestRegressor.score", false]], "score() (wildboar.ensemble.pivotforestclassifier method)": [[24, "wildboar.ensemble.PivotForestClassifier.score", false]], "score() (wildboar.ensemble.proximityforestclassifier method)": [[24, "wildboar.ensemble.ProximityForestClassifier.score", false]], "score() (wildboar.ensemble.rocketforestclassifier method)": [[24, "wildboar.ensemble.RocketForestClassifier.score", false]], "score() (wildboar.ensemble.rocketforestregressor method)": [[24, "wildboar.ensemble.RocketForestRegressor.score", false]], "score() (wildboar.ensemble.shapeletforestclassifier method)": [[24, "wildboar.ensemble.ShapeletForestClassifier.score", false]], "score() (wildboar.ensemble.shapeletforestembedding method)": [[24, "wildboar.ensemble.ShapeletForestEmbedding.score", false]], "score() (wildboar.ensemble.shapeletforestregressor method)": [[24, "wildboar.ensemble.ShapeletForestRegressor.score", false]], "score() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[27, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.score", false]], "score() (wildboar.explain.counterfactual._nun.nativeguidecounterfactual method)": [[28, "wildboar.explain.counterfactual._nun.NativeGuideCounterfactual.score", false]], "score() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[29, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.score", false]], "score() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[30, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.score", false]], "score() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[31, "wildboar.explain.counterfactual.KNeighborsCounterfactual.score", false]], "score() (wildboar.explain.counterfactual.nativeguidecounterfactual method)": [[31, "wildboar.explain.counterfactual.NativeGuideCounterfactual.score", false]], "score() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[31, "wildboar.explain.counterfactual.PrototypeCounterfactual.score", false]], "score() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[31, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.score", false]], "score() (wildboar.linear_model._hydra.hydraclassifier method)": [[34, "wildboar.linear_model._hydra.HydraClassifier.score", false]], "score() (wildboar.linear_model._rocket.rocketclassifier method)": [[35, "wildboar.linear_model._rocket.RocketClassifier.score", false]], "score() (wildboar.linear_model._rocket.rocketregressor method)": [[35, "wildboar.linear_model._rocket.RocketRegressor.score", false]], "score() (wildboar.linear_model._shapelet.castorclassifier method)": [[36, "wildboar.linear_model._shapelet.CastorClassifier.score", false]], "score() (wildboar.linear_model._shapelet.dilatedshapeletclassifier method)": [[36, "wildboar.linear_model._shapelet.DilatedShapeletClassifier.score", false]], "score() (wildboar.linear_model._shapelet.randomshapeletclassifier method)": [[36, "wildboar.linear_model._shapelet.RandomShapeletClassifier.score", false]], "score() (wildboar.linear_model._shapelet.randomshapeletregressor method)": [[36, "wildboar.linear_model._shapelet.RandomShapeletRegressor.score", false]], "score() (wildboar.linear_model._transform.basetransformclassifier method)": [[37, "wildboar.linear_model._transform.BaseTransformClassifier.score", false]], "score() (wildboar.linear_model._transform.basetransformregressor method)": [[37, "wildboar.linear_model._transform.BaseTransformRegressor.score", false]], "score() (wildboar.linear_model._transform.transformridgeclassifiercv method)": [[37, "wildboar.linear_model._transform.TransformRidgeClassifierCV.score", false]], "score() (wildboar.linear_model._transform.transformridgecv method)": [[37, "wildboar.linear_model._transform.TransformRidgeCV.score", false]], "score() (wildboar.linear_model.castorclassifier method)": [[38, "wildboar.linear_model.CastorClassifier.score", false]], "score() (wildboar.linear_model.dilatedshapeletclassifier method)": [[38, "wildboar.linear_model.DilatedShapeletClassifier.score", false]], "score() (wildboar.linear_model.hydraclassifier method)": [[38, "wildboar.linear_model.HydraClassifier.score", false]], "score() (wildboar.linear_model.randomshapeletclassifier method)": [[38, "wildboar.linear_model.RandomShapeletClassifier.score", false]], "score() (wildboar.linear_model.randomshapeletregressor method)": [[38, "wildboar.linear_model.RandomShapeletRegressor.score", false]], "score() (wildboar.linear_model.rocketclassifier method)": [[38, "wildboar.linear_model.RocketClassifier.score", false]], "score() (wildboar.linear_model.rocketregressor method)": [[38, "wildboar.linear_model.RocketRegressor.score", false]], "score() (wildboar.tree._base.basetreeclassifier method)": [[59, "wildboar.tree._base.BaseTreeClassifier.score", false]], "score() (wildboar.tree._base.basetreeregressor method)": [[59, "wildboar.tree._base.BaseTreeRegressor.score", false]], "score() (wildboar.tree._ptree.proximitytreeclassifier method)": [[61, "wildboar.tree._ptree.ProximityTreeClassifier.score", false]], "score() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[62, "wildboar.tree._tree.BaseFeatureTreeClassifier.score", false]], "score() (wildboar.tree._tree.basefeaturetreeregressor method)": [[62, "wildboar.tree._tree.BaseFeatureTreeRegressor.score", false]], "score() (wildboar.tree._tree.dilatedshapelettreeclassifier method)": [[62, "wildboar.tree._tree.DilatedShapeletTreeClassifier.score", false]], "score() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[62, "wildboar.tree._tree.ExtraShapeletTreeClassifier.score", false]], "score() (wildboar.tree._tree.extrashapelettreeregressor method)": [[62, "wildboar.tree._tree.ExtraShapeletTreeRegressor.score", false]], "score() (wildboar.tree._tree.intervaltreeclassifier method)": [[62, "wildboar.tree._tree.IntervalTreeClassifier.score", false]], "score() (wildboar.tree._tree.intervaltreeregressor method)": [[62, "wildboar.tree._tree.IntervalTreeRegressor.score", false]], "score() (wildboar.tree._tree.pivottreeclassifier method)": [[62, "wildboar.tree._tree.PivotTreeClassifier.score", false]], "score() (wildboar.tree._tree.rockettreeclassifier method)": [[62, "wildboar.tree._tree.RocketTreeClassifier.score", false]], "score() (wildboar.tree._tree.rockettreeregressor method)": [[62, "wildboar.tree._tree.RocketTreeRegressor.score", false]], "score() (wildboar.tree._tree.shapelettreeclassifier method)": [[62, "wildboar.tree._tree.ShapeletTreeClassifier.score", false]], "score() (wildboar.tree._tree.shapelettreeregressor method)": [[62, "wildboar.tree._tree.ShapeletTreeRegressor.score", false]], "score() (wildboar.tree.extrashapelettreeclassifier method)": [[63, "wildboar.tree.ExtraShapeletTreeClassifier.score", false]], "score() (wildboar.tree.extrashapelettreeregressor method)": [[63, "wildboar.tree.ExtraShapeletTreeRegressor.score", false]], "score() (wildboar.tree.intervaltreeclassifier method)": [[63, "wildboar.tree.IntervalTreeClassifier.score", false]], "score() (wildboar.tree.intervaltreeregressor method)": [[63, "wildboar.tree.IntervalTreeRegressor.score", false]], "score() (wildboar.tree.pivottreeclassifier method)": [[63, "wildboar.tree.PivotTreeClassifier.score", false]], "score() (wildboar.tree.proximitytreeclassifier method)": [[63, "wildboar.tree.ProximityTreeClassifier.score", false]], "score() (wildboar.tree.rockettreeclassifier method)": [[63, "wildboar.tree.RocketTreeClassifier.score", false]], "score() (wildboar.tree.rockettreeregressor method)": [[63, "wildboar.tree.RocketTreeRegressor.score", false]], "score() (wildboar.tree.shapelettreeclassifier method)": [[63, "wildboar.tree.ShapeletTreeClassifier.score", false]], "score() (wildboar.tree.shapelettreeregressor method)": [[63, "wildboar.tree.ShapeletTreeRegressor.score", false]], "segment() (in module wildboar.annotate)": [[3, "wildboar.annotate.segment", false]], "segment() (in module wildboar.annotate._segment)": [[2, "wildboar.annotate._segment.segment", false]], "selectdimensionpercentile (class in wildboar.dimension_selection)": [[14, "wildboar.dimension_selection.SelectDimensionPercentile", false]], "selectdimensionpercentile (class in wildboar.dimension_selection._distance)": [[11, "wildboar.dimension_selection._distance.SelectDimensionPercentile", false]], "selectdimensionsignificance (class in wildboar.dimension_selection)": [[14, "wildboar.dimension_selection.SelectDimensionSignificance", false]], "selectdimensionsignificance (class in wildboar.dimension_selection._distance)": [[11, "wildboar.dimension_selection._distance.SelectDimensionSignificance", false]], "selectdimensiontopk (class in wildboar.dimension_selection)": [[14, "wildboar.dimension_selection.SelectDimensionTopK", false]], "selectdimensiontopk (class in wildboar.dimension_selection._distance)": [[11, "wildboar.dimension_selection._distance.SelectDimensionTopK", false]], "sequentialdimensionselector (class in wildboar.dimension_selection)": [[14, "wildboar.dimension_selection.SequentialDimensionSelector", false]], "sequentialdimensionselector (class in wildboar.dimension_selection._sequential)": [[12, "wildboar.dimension_selection._sequential.SequentialDimensionSelector", false]], "set_cache_dir() (in module wildboar.datasets)": [[7, "wildboar.datasets.set_cache_dir", false]], "set_output() (wildboar.dimension_selection._base.basedistanceselector method)": [[10, "wildboar.dimension_selection._base.BaseDistanceSelector.set_output", false]], "set_output() (wildboar.dimension_selection._base.dimensionselectormixin method)": [[10, "wildboar.dimension_selection._base.DimensionSelectorMixin.set_output", false]], "set_output() (wildboar.dimension_selection._distance.selectdimensionpercentile method)": [[11, "wildboar.dimension_selection._distance.SelectDimensionPercentile.set_output", false]], "set_output() (wildboar.dimension_selection._distance.selectdimensionsignificance method)": [[11, "wildboar.dimension_selection._distance.SelectDimensionSignificance.set_output", false]], "set_output() (wildboar.dimension_selection._distance.selectdimensiontopk method)": [[11, "wildboar.dimension_selection._distance.SelectDimensionTopK.set_output", false]], "set_output() (wildboar.dimension_selection._sequential.sequentialdimensionselector method)": [[12, "wildboar.dimension_selection._sequential.SequentialDimensionSelector.set_output", false]], "set_output() (wildboar.dimension_selection._variance.distancevariancethreshold method)": [[13, "wildboar.dimension_selection._variance.DistanceVarianceThreshold.set_output", false]], "set_output() (wildboar.dimension_selection.distancevariancethreshold method)": [[14, "wildboar.dimension_selection.DistanceVarianceThreshold.set_output", false]], "set_output() (wildboar.dimension_selection.selectdimensionpercentile method)": [[14, "wildboar.dimension_selection.SelectDimensionPercentile.set_output", false]], "set_output() (wildboar.dimension_selection.selectdimensionsignificance method)": [[14, "wildboar.dimension_selection.SelectDimensionSignificance.set_output", false]], "set_output() (wildboar.dimension_selection.selectdimensiontopk method)": [[14, "wildboar.dimension_selection.SelectDimensionTopK.set_output", false]], "set_output() (wildboar.dimension_selection.sequentialdimensionselector method)": [[14, "wildboar.dimension_selection.SequentialDimensionSelector.set_output", false]], "set_output() (wildboar.distance._neighbors.kmeans method)": [[19, "wildboar.distance._neighbors.KMeans.set_output", false]], "set_output() (wildboar.distance._neighbors.kmedoids method)": [[19, "wildboar.distance._neighbors.KMedoids.set_output", false]], "set_output() (wildboar.distance.kmeans method)": [[21, "wildboar.distance.KMeans.set_output", false]], "set_output() (wildboar.distance.kmedoids method)": [[21, "wildboar.distance.KMedoids.set_output", false]], "set_output() (wildboar.segment._base.basesegmenter method)": [[45, "wildboar.segment._base.BaseSegmenter.set_output", false]], "set_output() (wildboar.segment._mp.flusssegmenter method)": [[46, "wildboar.segment._mp.FlussSegmenter.set_output", false]], "set_output() (wildboar.segment.flusssegmenter method)": [[47, "wildboar.segment.FlussSegmenter.set_output", false]], "set_output() (wildboar.transform._base.baseattributetransform method)": [[48, "wildboar.transform._base.BaseAttributeTransform.set_output", false]], "set_output() (wildboar.transform._diff.derivativetransform method)": [[50, "wildboar.transform._diff.DerivativeTransform.set_output", false]], "set_output() (wildboar.transform._diff.difftransform method)": [[50, "wildboar.transform._diff.DiffTransform.set_output", false]], "set_output() (wildboar.transform._hydra.hydratransform method)": [[51, "wildboar.transform._hydra.HydraTransform.set_output", false]], "set_output() (wildboar.transform._interval.featuretransform method)": [[52, "wildboar.transform._interval.FeatureTransform.set_output", false]], "set_output() (wildboar.transform._interval.intervaltransform method)": [[52, "wildboar.transform._interval.IntervalTransform.set_output", false]], "set_output() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[53, "wildboar.transform._matrix_profile.MatrixProfileTransform.set_output", false]], "set_output() (wildboar.transform._pivot.pivottransform method)": [[54, "wildboar.transform._pivot.PivotTransform.set_output", false]], "set_output() (wildboar.transform._pivot.proximitytransform method)": [[54, "wildboar.transform._pivot.ProximityTransform.set_output", false]], "set_output() (wildboar.transform._rocket.rockettransform method)": [[55, "wildboar.transform._rocket.RocketTransform.set_output", false]], "set_output() (wildboar.transform._sax.paa method)": [[56, "wildboar.transform._sax.PAA.set_output", false]], "set_output() (wildboar.transform._sax.sax method)": [[56, "wildboar.transform._sax.SAX.set_output", false]], "set_output() (wildboar.transform._shapelet.castortransform method)": [[57, "wildboar.transform._shapelet.CastorTransform.set_output", false]], "set_output() (wildboar.transform._shapelet.dilatedshapelettransform method)": [[57, "wildboar.transform._shapelet.DilatedShapeletTransform.set_output", false]], "set_output() (wildboar.transform._shapelet.randomshapelettransform method)": [[57, "wildboar.transform._shapelet.RandomShapeletTransform.set_output", false]], "set_output() (wildboar.transform._shapelet.shapelettransform method)": [[57, "wildboar.transform._shapelet.ShapeletTransform.set_output", false]], "set_output() (wildboar.transform.castortransform method)": [[58, "wildboar.transform.CastorTransform.set_output", false]], "set_output() (wildboar.transform.derivativetransform method)": [[58, "wildboar.transform.DerivativeTransform.set_output", false]], "set_output() (wildboar.transform.difftransform method)": [[58, "wildboar.transform.DiffTransform.set_output", false]], "set_output() (wildboar.transform.dilatedshapelettransform method)": [[58, "wildboar.transform.DilatedShapeletTransform.set_output", false]], "set_output() (wildboar.transform.featuretransform method)": [[58, "wildboar.transform.FeatureTransform.set_output", false]], "set_output() (wildboar.transform.hydratransform method)": [[58, "wildboar.transform.HydraTransform.set_output", false]], "set_output() (wildboar.transform.intervaltransform method)": [[58, "wildboar.transform.IntervalTransform.set_output", false]], "set_output() (wildboar.transform.matrixprofiletransform method)": [[58, "wildboar.transform.MatrixProfileTransform.set_output", false]], "set_output() (wildboar.transform.paa method)": [[58, "wildboar.transform.PAA.set_output", false]], "set_output() (wildboar.transform.pivottransform method)": [[58, "wildboar.transform.PivotTransform.set_output", false]], "set_output() (wildboar.transform.proximitytransform method)": [[58, "wildboar.transform.ProximityTransform.set_output", false]], "set_output() (wildboar.transform.randomshapelettransform method)": [[58, "wildboar.transform.RandomShapeletTransform.set_output", false]], "set_output() (wildboar.transform.rockettransform method)": [[58, "wildboar.transform.RocketTransform.set_output", false]], "set_output() (wildboar.transform.sax method)": [[58, "wildboar.transform.SAX.set_output", false]], "set_output() (wildboar.transform.shapelettransform method)": [[58, "wildboar.transform.ShapeletTransform.set_output", false]], "set_params() (wildboar.base.baseestimator method)": [[4, "wildboar.base.BaseEstimator.set_params", false]], "set_params() (wildboar.dimension_selection._base.basedistanceselector method)": [[10, "wildboar.dimension_selection._base.BaseDistanceSelector.set_params", false]], "set_params() (wildboar.dimension_selection._distance.selectdimensionpercentile method)": [[11, "wildboar.dimension_selection._distance.SelectDimensionPercentile.set_params", false]], "set_params() (wildboar.dimension_selection._distance.selectdimensionsignificance method)": [[11, "wildboar.dimension_selection._distance.SelectDimensionSignificance.set_params", false]], "set_params() (wildboar.dimension_selection._distance.selectdimensiontopk method)": [[11, "wildboar.dimension_selection._distance.SelectDimensionTopK.set_params", false]], "set_params() (wildboar.dimension_selection._sequential.sequentialdimensionselector method)": [[12, "wildboar.dimension_selection._sequential.SequentialDimensionSelector.set_params", false]], "set_params() (wildboar.dimension_selection._variance.distancevariancethreshold method)": [[13, "wildboar.dimension_selection._variance.DistanceVarianceThreshold.set_params", false]], "set_params() (wildboar.dimension_selection.distancevariancethreshold method)": [[14, "wildboar.dimension_selection.DistanceVarianceThreshold.set_params", false]], "set_params() (wildboar.dimension_selection.selectdimensionpercentile method)": [[14, "wildboar.dimension_selection.SelectDimensionPercentile.set_params", false]], "set_params() (wildboar.dimension_selection.selectdimensionsignificance method)": [[14, "wildboar.dimension_selection.SelectDimensionSignificance.set_params", false]], "set_params() (wildboar.dimension_selection.selectdimensiontopk method)": [[14, "wildboar.dimension_selection.SelectDimensionTopK.set_params", false]], "set_params() (wildboar.dimension_selection.sequentialdimensionselector method)": [[14, "wildboar.dimension_selection.SequentialDimensionSelector.set_params", false]], "set_params() (wildboar.distance._manifold.mds method)": [[16, "wildboar.distance._manifold.MDS.set_params", false]], "set_params() (wildboar.distance._neighbors.kmeans method)": [[19, "wildboar.distance._neighbors.KMeans.set_params", false]], "set_params() (wildboar.distance._neighbors.kmedoids method)": [[19, "wildboar.distance._neighbors.KMedoids.set_params", false]], "set_params() (wildboar.distance._neighbors.kneighborsclassifier method)": [[19, "wildboar.distance._neighbors.KNeighborsClassifier.set_params", false]], "set_params() (wildboar.distance.kmeans method)": [[21, "wildboar.distance.KMeans.set_params", false]], "set_params() (wildboar.distance.kmedoids method)": [[21, "wildboar.distance.KMedoids.set_params", false]], "set_params() (wildboar.distance.kneighborsclassifier method)": [[21, "wildboar.distance.KNeighborsClassifier.set_params", false]], "set_params() (wildboar.distance.mds method)": [[21, "wildboar.distance.MDS.set_params", false]], "set_params() (wildboar.ensemble._elastic.elasticensembleclassifier method)": [[22, "wildboar.ensemble._elastic.ElasticEnsembleClassifier.set_params", false]], "set_params() (wildboar.ensemble._ensemble.baggingclassifier method)": [[23, "wildboar.ensemble._ensemble.BaggingClassifier.set_params", false]], "set_params() (wildboar.ensemble._ensemble.baggingregressor method)": [[23, "wildboar.ensemble._ensemble.BaggingRegressor.set_params", false]], "set_params() (wildboar.ensemble._ensemble.basebagging method)": [[23, "wildboar.ensemble._ensemble.BaseBagging.set_params", false]], "set_params() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[23, "wildboar.ensemble._ensemble.BaseForestClassifier.set_params", false]], "set_params() (wildboar.ensemble._ensemble.baseforestregressor method)": [[23, "wildboar.ensemble._ensemble.BaseForestRegressor.set_params", false]], "set_params() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[23, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.set_params", false]], "set_params() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[23, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.set_params", false]], "set_params() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[23, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.set_params", false]], "set_params() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[23, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.set_params", false]], "set_params() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[23, "wildboar.ensemble._ensemble.IntervalForestClassifier.set_params", false]], "set_params() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[23, "wildboar.ensemble._ensemble.IntervalForestRegressor.set_params", false]], "set_params() (wildboar.ensemble._ensemble.isolationshapeletforest method)": [[23, "wildboar.ensemble._ensemble.IsolationShapeletForest.set_params", false]], "set_params() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[23, "wildboar.ensemble._ensemble.PivotForestClassifier.set_params", false]], "set_params() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[23, "wildboar.ensemble._ensemble.ProximityForestClassifier.set_params", false]], "set_params() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[23, "wildboar.ensemble._ensemble.RocketForestClassifier.set_params", false]], "set_params() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[23, "wildboar.ensemble._ensemble.RocketForestRegressor.set_params", false]], "set_params() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[23, "wildboar.ensemble._ensemble.ShapeletForestClassifier.set_params", false]], "set_params() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[23, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.set_params", false]], "set_params() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[23, "wildboar.ensemble._ensemble.ShapeletForestRegressor.set_params", false]], "set_params() (wildboar.ensemble.baggingclassifier method)": [[24, "wildboar.ensemble.BaggingClassifier.set_params", false]], "set_params() (wildboar.ensemble.baggingregressor method)": [[24, "wildboar.ensemble.BaggingRegressor.set_params", false]], "set_params() (wildboar.ensemble.basebagging method)": [[24, "wildboar.ensemble.BaseBagging.set_params", false]], "set_params() (wildboar.ensemble.elasticensembleclassifier method)": [[24, "wildboar.ensemble.ElasticEnsembleClassifier.set_params", false]], "set_params() (wildboar.ensemble.extrashapelettreesclassifier method)": [[24, "wildboar.ensemble.ExtraShapeletTreesClassifier.set_params", false]], "set_params() (wildboar.ensemble.extrashapelettreesregressor method)": [[24, "wildboar.ensemble.ExtraShapeletTreesRegressor.set_params", false]], "set_params() (wildboar.ensemble.intervalforestclassifier method)": [[24, "wildboar.ensemble.IntervalForestClassifier.set_params", false]], "set_params() (wildboar.ensemble.intervalforestregressor method)": [[24, "wildboar.ensemble.IntervalForestRegressor.set_params", false]], "set_params() (wildboar.ensemble.isolationshapeletforest method)": [[24, "wildboar.ensemble.IsolationShapeletForest.set_params", false]], "set_params() (wildboar.ensemble.pivotforestclassifier method)": [[24, "wildboar.ensemble.PivotForestClassifier.set_params", false]], "set_params() (wildboar.ensemble.proximityforestclassifier method)": [[24, "wildboar.ensemble.ProximityForestClassifier.set_params", false]], "set_params() (wildboar.ensemble.rocketforestclassifier method)": [[24, "wildboar.ensemble.RocketForestClassifier.set_params", false]], "set_params() (wildboar.ensemble.rocketforestregressor method)": [[24, "wildboar.ensemble.RocketForestRegressor.set_params", false]], "set_params() (wildboar.ensemble.shapeletforestclassifier method)": [[24, "wildboar.ensemble.ShapeletForestClassifier.set_params", false]], "set_params() (wildboar.ensemble.shapeletforestembedding method)": [[24, "wildboar.ensemble.ShapeletForestEmbedding.set_params", false]], "set_params() (wildboar.ensemble.shapeletforestregressor method)": [[24, "wildboar.ensemble.ShapeletForestRegressor.set_params", false]], "set_params() (wildboar.explain._importance.amplitudeimportance method)": [[25, "wildboar.explain._importance.AmplitudeImportance.set_params", false]], "set_params() (wildboar.explain._importance.frequencyimportance method)": [[25, "wildboar.explain._importance.FrequencyImportance.set_params", false]], "set_params() (wildboar.explain._importance.intervalimportance method)": [[25, "wildboar.explain._importance.IntervalImportance.set_params", false]], "set_params() (wildboar.explain._importance.permuteimportance method)": [[25, "wildboar.explain._importance.PermuteImportance.set_params", false]], "set_params() (wildboar.explain._importance.shapeletimportance method)": [[25, "wildboar.explain._importance.ShapeletImportance.set_params", false]], "set_params() (wildboar.explain.amplitudeimportance method)": [[32, "wildboar.explain.AmplitudeImportance.set_params", false]], "set_params() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[27, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.set_params", false]], "set_params() (wildboar.explain.counterfactual._nun.nativeguidecounterfactual method)": [[28, "wildboar.explain.counterfactual._nun.NativeGuideCounterfactual.set_params", false]], "set_params() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[29, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.set_params", false]], "set_params() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[30, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.set_params", false]], "set_params() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[31, "wildboar.explain.counterfactual.KNeighborsCounterfactual.set_params", false]], "set_params() (wildboar.explain.counterfactual.nativeguidecounterfactual method)": [[31, "wildboar.explain.counterfactual.NativeGuideCounterfactual.set_params", false]], "set_params() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[31, "wildboar.explain.counterfactual.PrototypeCounterfactual.set_params", false]], "set_params() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[31, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.set_params", false]], "set_params() (wildboar.explain.frequencyimportance method)": [[32, "wildboar.explain.FrequencyImportance.set_params", false]], "set_params() (wildboar.explain.intervalimportance method)": [[32, "wildboar.explain.IntervalImportance.set_params", false]], "set_params() (wildboar.explain.shapeletimportance method)": [[32, "wildboar.explain.ShapeletImportance.set_params", false]], "set_params() (wildboar.linear_model._hydra.hydraclassifier method)": [[34, "wildboar.linear_model._hydra.HydraClassifier.set_params", false]], "set_params() (wildboar.linear_model._rocket.rocketclassifier method)": [[35, "wildboar.linear_model._rocket.RocketClassifier.set_params", false]], "set_params() (wildboar.linear_model._rocket.rocketregressor method)": [[35, "wildboar.linear_model._rocket.RocketRegressor.set_params", false]], "set_params() (wildboar.linear_model._shapelet.castorclassifier method)": [[36, "wildboar.linear_model._shapelet.CastorClassifier.set_params", false]], "set_params() (wildboar.linear_model._shapelet.dilatedshapeletclassifier method)": [[36, "wildboar.linear_model._shapelet.DilatedShapeletClassifier.set_params", false]], "set_params() (wildboar.linear_model._shapelet.randomshapeletclassifier method)": [[36, "wildboar.linear_model._shapelet.RandomShapeletClassifier.set_params", false]], "set_params() (wildboar.linear_model._shapelet.randomshapeletregressor method)": [[36, "wildboar.linear_model._shapelet.RandomShapeletRegressor.set_params", false]], "set_params() (wildboar.linear_model._transform.basetransformclassifier method)": [[37, "wildboar.linear_model._transform.BaseTransformClassifier.set_params", false]], "set_params() (wildboar.linear_model._transform.basetransformestimator method)": [[37, "wildboar.linear_model._transform.BaseTransformEstimator.set_params", false]], "set_params() (wildboar.linear_model._transform.basetransformregressor method)": [[37, "wildboar.linear_model._transform.BaseTransformRegressor.set_params", false]], "set_params() (wildboar.linear_model._transform.transformridgeclassifiercv method)": [[37, "wildboar.linear_model._transform.TransformRidgeClassifierCV.set_params", false]], "set_params() (wildboar.linear_model._transform.transformridgecv method)": [[37, "wildboar.linear_model._transform.TransformRidgeCV.set_params", false]], "set_params() (wildboar.linear_model.castorclassifier method)": [[38, "wildboar.linear_model.CastorClassifier.set_params", false]], "set_params() (wildboar.linear_model.dilatedshapeletclassifier method)": [[38, "wildboar.linear_model.DilatedShapeletClassifier.set_params", false]], "set_params() (wildboar.linear_model.hydraclassifier method)": [[38, "wildboar.linear_model.HydraClassifier.set_params", false]], "set_params() (wildboar.linear_model.randomshapeletclassifier method)": [[38, "wildboar.linear_model.RandomShapeletClassifier.set_params", false]], "set_params() (wildboar.linear_model.randomshapeletregressor method)": [[38, "wildboar.linear_model.RandomShapeletRegressor.set_params", false]], "set_params() (wildboar.linear_model.rocketclassifier method)": [[38, "wildboar.linear_model.RocketClassifier.set_params", false]], "set_params() (wildboar.linear_model.rocketregressor method)": [[38, "wildboar.linear_model.RocketRegressor.set_params", false]], "set_params() (wildboar.segment._base.basesegmenter method)": [[45, "wildboar.segment._base.BaseSegmenter.set_params", false]], "set_params() (wildboar.segment._mp.flusssegmenter method)": [[46, "wildboar.segment._mp.FlussSegmenter.set_params", false]], "set_params() (wildboar.segment.flusssegmenter method)": [[47, "wildboar.segment.FlussSegmenter.set_params", false]], "set_params() (wildboar.transform._base.baseattributetransform method)": [[48, "wildboar.transform._base.BaseAttributeTransform.set_params", false]], "set_params() (wildboar.transform._diff.derivativetransform method)": [[50, "wildboar.transform._diff.DerivativeTransform.set_params", false]], "set_params() (wildboar.transform._diff.difftransform method)": [[50, "wildboar.transform._diff.DiffTransform.set_params", false]], "set_params() (wildboar.transform._hydra.hydratransform method)": [[51, "wildboar.transform._hydra.HydraTransform.set_params", false]], "set_params() (wildboar.transform._interval.featuretransform method)": [[52, "wildboar.transform._interval.FeatureTransform.set_params", false]], "set_params() (wildboar.transform._interval.intervaltransform method)": [[52, "wildboar.transform._interval.IntervalTransform.set_params", false]], "set_params() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[53, "wildboar.transform._matrix_profile.MatrixProfileTransform.set_params", false]], "set_params() (wildboar.transform._pivot.pivottransform method)": [[54, "wildboar.transform._pivot.PivotTransform.set_params", false]], "set_params() (wildboar.transform._pivot.proximitytransform method)": [[54, "wildboar.transform._pivot.ProximityTransform.set_params", false]], "set_params() (wildboar.transform._rocket.rockettransform method)": [[55, "wildboar.transform._rocket.RocketTransform.set_params", false]], "set_params() (wildboar.transform._sax.paa method)": [[56, "wildboar.transform._sax.PAA.set_params", false]], "set_params() (wildboar.transform._sax.sax method)": [[56, "wildboar.transform._sax.SAX.set_params", false]], "set_params() (wildboar.transform._shapelet.castortransform method)": [[57, "wildboar.transform._shapelet.CastorTransform.set_params", false]], "set_params() (wildboar.transform._shapelet.dilatedshapelettransform method)": [[57, "wildboar.transform._shapelet.DilatedShapeletTransform.set_params", false]], "set_params() (wildboar.transform._shapelet.randomshapelettransform method)": [[57, "wildboar.transform._shapelet.RandomShapeletTransform.set_params", false]], "set_params() (wildboar.transform._shapelet.shapelettransform method)": [[57, "wildboar.transform._shapelet.ShapeletTransform.set_params", false]], "set_params() (wildboar.transform.castortransform method)": [[58, "wildboar.transform.CastorTransform.set_params", false]], "set_params() (wildboar.transform.derivativetransform method)": [[58, "wildboar.transform.DerivativeTransform.set_params", false]], "set_params() (wildboar.transform.difftransform method)": [[58, "wildboar.transform.DiffTransform.set_params", false]], "set_params() (wildboar.transform.dilatedshapelettransform method)": [[58, "wildboar.transform.DilatedShapeletTransform.set_params", false]], "set_params() (wildboar.transform.featuretransform method)": [[58, "wildboar.transform.FeatureTransform.set_params", false]], "set_params() (wildboar.transform.hydratransform method)": [[58, "wildboar.transform.HydraTransform.set_params", false]], "set_params() (wildboar.transform.intervaltransform method)": [[58, "wildboar.transform.IntervalTransform.set_params", false]], "set_params() (wildboar.transform.matrixprofiletransform method)": [[58, "wildboar.transform.MatrixProfileTransform.set_params", false]], "set_params() (wildboar.transform.paa method)": [[58, "wildboar.transform.PAA.set_params", false]], "set_params() (wildboar.transform.pivottransform method)": [[58, "wildboar.transform.PivotTransform.set_params", false]], "set_params() (wildboar.transform.proximitytransform method)": [[58, "wildboar.transform.ProximityTransform.set_params", false]], "set_params() (wildboar.transform.randomshapelettransform method)": [[58, "wildboar.transform.RandomShapeletTransform.set_params", false]], "set_params() (wildboar.transform.rockettransform method)": [[58, "wildboar.transform.RocketTransform.set_params", false]], "set_params() (wildboar.transform.sax method)": [[58, "wildboar.transform.SAX.set_params", false]], "set_params() (wildboar.transform.shapelettransform method)": [[58, "wildboar.transform.ShapeletTransform.set_params", false]], "set_params() (wildboar.tree._base.basetree method)": [[59, "wildboar.tree._base.BaseTree.set_params", false]], "set_params() (wildboar.tree._base.basetreeclassifier method)": [[59, "wildboar.tree._base.BaseTreeClassifier.set_params", false]], "set_params() (wildboar.tree._base.basetreeregressor method)": [[59, "wildboar.tree._base.BaseTreeRegressor.set_params", false]], "set_params() (wildboar.tree._ptree.proximitytreeclassifier method)": [[61, "wildboar.tree._ptree.ProximityTreeClassifier.set_params", false]], "set_params() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[62, "wildboar.tree._tree.BaseFeatureTreeClassifier.set_params", false]], "set_params() (wildboar.tree._tree.basefeaturetreeregressor method)": [[62, "wildboar.tree._tree.BaseFeatureTreeRegressor.set_params", false]], "set_params() (wildboar.tree._tree.dilatedshapelettreeclassifier method)": [[62, "wildboar.tree._tree.DilatedShapeletTreeClassifier.set_params", false]], "set_params() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[62, "wildboar.tree._tree.ExtraShapeletTreeClassifier.set_params", false]], "set_params() (wildboar.tree._tree.extrashapelettreeregressor method)": [[62, "wildboar.tree._tree.ExtraShapeletTreeRegressor.set_params", false]], "set_params() (wildboar.tree._tree.intervaltreeclassifier method)": [[62, "wildboar.tree._tree.IntervalTreeClassifier.set_params", false]], "set_params() (wildboar.tree._tree.intervaltreeregressor method)": [[62, "wildboar.tree._tree.IntervalTreeRegressor.set_params", false]], "set_params() (wildboar.tree._tree.pivottreeclassifier method)": [[62, "wildboar.tree._tree.PivotTreeClassifier.set_params", false]], "set_params() (wildboar.tree._tree.rockettreeclassifier method)": [[62, "wildboar.tree._tree.RocketTreeClassifier.set_params", false]], "set_params() (wildboar.tree._tree.rockettreeregressor method)": [[62, "wildboar.tree._tree.RocketTreeRegressor.set_params", false]], "set_params() (wildboar.tree._tree.shapelettreeclassifier method)": [[62, "wildboar.tree._tree.ShapeletTreeClassifier.set_params", false]], "set_params() (wildboar.tree._tree.shapelettreeregressor method)": [[62, "wildboar.tree._tree.ShapeletTreeRegressor.set_params", false]], "set_params() (wildboar.tree.extrashapelettreeclassifier method)": [[63, "wildboar.tree.ExtraShapeletTreeClassifier.set_params", false]], "set_params() (wildboar.tree.extrashapelettreeregressor method)": [[63, "wildboar.tree.ExtraShapeletTreeRegressor.set_params", false]], "set_params() (wildboar.tree.intervaltreeclassifier method)": [[63, "wildboar.tree.IntervalTreeClassifier.set_params", false]], "set_params() (wildboar.tree.intervaltreeregressor method)": [[63, "wildboar.tree.IntervalTreeRegressor.set_params", false]], "set_params() (wildboar.tree.pivottreeclassifier method)": [[63, "wildboar.tree.PivotTreeClassifier.set_params", false]], "set_params() (wildboar.tree.proximitytreeclassifier method)": [[63, "wildboar.tree.ProximityTreeClassifier.set_params", false]], "set_params() (wildboar.tree.rockettreeclassifier method)": [[63, "wildboar.tree.RocketTreeClassifier.set_params", false]], "set_params() (wildboar.tree.rockettreeregressor method)": [[63, "wildboar.tree.RocketTreeRegressor.set_params", false]], "set_params() (wildboar.tree.shapelettreeclassifier method)": [[63, "wildboar.tree.ShapeletTreeClassifier.set_params", false]], "set_params() (wildboar.tree.shapelettreeregressor method)": [[63, "wildboar.tree.ShapeletTreeRegressor.set_params", false]], "shapeletforestclassifier (class in wildboar.ensemble)": [[24, "wildboar.ensemble.ShapeletForestClassifier", false]], "shapeletforestclassifier (class in wildboar.ensemble._ensemble)": [[23, "wildboar.ensemble._ensemble.ShapeletForestClassifier", false]], "shapeletforestcounterfactual (class in wildboar.explain.counterfactual)": [[31, "wildboar.explain.counterfactual.ShapeletForestCounterfactual", false]], "shapeletforestcounterfactual (class in wildboar.explain.counterfactual._sf)": [[30, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual", false]], "shapeletforestembedding (class in wildboar.ensemble)": [[24, "wildboar.ensemble.ShapeletForestEmbedding", false]], "shapeletforestembedding (class in wildboar.ensemble._ensemble)": [[23, "wildboar.ensemble._ensemble.ShapeletForestEmbedding", false]], "shapeletforestregressor (class in wildboar.ensemble)": [[24, "wildboar.ensemble.ShapeletForestRegressor", false]], "shapeletforestregressor (class in wildboar.ensemble._ensemble)": [[23, "wildboar.ensemble._ensemble.ShapeletForestRegressor", false]], "shapeletimportance (class in wildboar.explain)": [[32, "wildboar.explain.ShapeletImportance", false]], "shapeletimportance (class in wildboar.explain._importance)": [[25, "wildboar.explain._importance.ShapeletImportance", false]], "shapeletmixin (class in wildboar.transform._shapelet)": [[57, "wildboar.transform._shapelet.ShapeletMixin", false]], "shapeletprototypesampler (class in wildboar.explain.counterfactual._proto)": [[29, "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler", false]], "shapelettransform (class in wildboar.transform)": [[58, "wildboar.transform.ShapeletTransform", false]], "shapelettransform (class in wildboar.transform._shapelet)": [[57, "wildboar.transform._shapelet.ShapeletTransform", false]], "shapelettreeclassifier (class in wildboar.tree)": [[63, "wildboar.tree.ShapeletTreeClassifier", false]], "shapelettreeclassifier (class in wildboar.tree._tree)": [[62, "wildboar.tree._tree.ShapeletTreeClassifier", false]], "shapelettreeregressor (class in wildboar.tree)": [[63, "wildboar.tree.ShapeletTreeRegressor", false]], "shapelettreeregressor (class in wildboar.tree._tree)": [[62, "wildboar.tree._tree.ShapeletTreeRegressor", false]], "silhouette_samples() (in module wildboar.metrics)": [[41, "wildboar.metrics.silhouette_samples", false]], "silhouette_samples() (in module wildboar.metrics._cluster)": [[39, "wildboar.metrics._cluster.silhouette_samples", false]], "silhouette_score() (in module wildboar.metrics)": [[41, "wildboar.metrics.silhouette_score", false]], "silhouette_score() (in module wildboar.metrics._cluster)": [[39, "wildboar.metrics._cluster.silhouette_score", false]], "singleton() (in module wildboar.utils.decorators)": [[66, "wildboar.utils.decorators.singleton", false]], "split() (wildboar.model_selection._cv.repeatedoutliersplit method)": [[42, "wildboar.model_selection._cv.RepeatedOutlierSplit.split", false]], "split() (wildboar.model_selection.repeatedoutliersplit method)": [[44, "wildboar.model_selection.RepeatedOutlierSplit.split", false]], "standardize() (in module wildboar.datasets.preprocess)": [[9, "wildboar.datasets.preprocess.standardize", false]], "subsequence_match() (in module wildboar.distance)": [[21, "wildboar.distance.subsequence_match", false]], "subsequence_match() (in module wildboar.distance._distance)": [[15, "wildboar.distance._distance.subsequence_match", false]], "subsequencemetricoptions (class in wildboar.utils.validation)": [[70, "wildboar.utils.validation.SubsequenceMetricOptions", false]], "symbolic_aggregate_approximation() (in module wildboar.transform)": [[58, "wildboar.transform.symbolic_aggregate_approximation", false]], "symbolic_aggregate_approximation() (in module wildboar.transform._sax)": [[56, "wildboar.transform._sax.symbolic_aggregate_approximation", false]], "targetevaluator (class in wildboar.explain.counterfactual._helper)": [[26, "wildboar.explain.counterfactual._helper.TargetEvaluator", false]], "targetevaluator (class in wildboar.explain.counterfactual._proto)": [[29, "wildboar.explain.counterfactual._proto.TargetEvaluator", false]], "transform() (wildboar.dimension_selection._base.basedistanceselector method)": [[10, "wildboar.dimension_selection._base.BaseDistanceSelector.transform", false]], "transform() (wildboar.dimension_selection._base.dimensionselectormixin method)": [[10, "wildboar.dimension_selection._base.DimensionSelectorMixin.transform", false]], "transform() (wildboar.dimension_selection._distance.selectdimensionpercentile method)": [[11, "wildboar.dimension_selection._distance.SelectDimensionPercentile.transform", false]], "transform() (wildboar.dimension_selection._distance.selectdimensionsignificance method)": [[11, "wildboar.dimension_selection._distance.SelectDimensionSignificance.transform", false]], "transform() (wildboar.dimension_selection._distance.selectdimensiontopk method)": [[11, "wildboar.dimension_selection._distance.SelectDimensionTopK.transform", false]], "transform() (wildboar.dimension_selection._sequential.sequentialdimensionselector method)": [[12, "wildboar.dimension_selection._sequential.SequentialDimensionSelector.transform", false]], "transform() (wildboar.dimension_selection._variance.distancevariancethreshold method)": [[13, "wildboar.dimension_selection._variance.DistanceVarianceThreshold.transform", false]], "transform() (wildboar.dimension_selection.distancevariancethreshold method)": [[14, "wildboar.dimension_selection.DistanceVarianceThreshold.transform", false]], "transform() (wildboar.dimension_selection.selectdimensionpercentile method)": [[14, "wildboar.dimension_selection.SelectDimensionPercentile.transform", false]], "transform() (wildboar.dimension_selection.selectdimensionsignificance method)": [[14, "wildboar.dimension_selection.SelectDimensionSignificance.transform", false]], "transform() (wildboar.dimension_selection.selectdimensiontopk method)": [[14, "wildboar.dimension_selection.SelectDimensionTopK.transform", false]], "transform() (wildboar.dimension_selection.sequentialdimensionselector method)": [[14, "wildboar.dimension_selection.SequentialDimensionSelector.transform", false]], "transform() (wildboar.distance._neighbors.kmeans method)": [[19, "wildboar.distance._neighbors.KMeans.transform", false]], "transform() (wildboar.distance._neighbors.kmedoids method)": [[19, "wildboar.distance._neighbors.KMedoids.transform", false]], "transform() (wildboar.distance.kmeans method)": [[21, "wildboar.distance.KMeans.transform", false]], "transform() (wildboar.distance.kmedoids method)": [[21, "wildboar.distance.KMedoids.transform", false]], "transform() (wildboar.segment._base.basesegmenter method)": [[45, "wildboar.segment._base.BaseSegmenter.transform", false]], "transform() (wildboar.segment._mp.flusssegmenter method)": [[46, "wildboar.segment._mp.FlussSegmenter.transform", false]], "transform() (wildboar.segment.flusssegmenter method)": [[47, "wildboar.segment.FlussSegmenter.transform", false]], "transform() (wildboar.transform._base.baseattributetransform method)": [[48, "wildboar.transform._base.BaseAttributeTransform.transform", false]], "transform() (wildboar.transform._hydra.hydratransform method)": [[51, "wildboar.transform._hydra.HydraTransform.transform", false]], "transform() (wildboar.transform._interval.featuretransform method)": [[52, "wildboar.transform._interval.FeatureTransform.transform", false]], "transform() (wildboar.transform._interval.intervaltransform method)": [[52, "wildboar.transform._interval.IntervalTransform.transform", false]], "transform() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[53, "wildboar.transform._matrix_profile.MatrixProfileTransform.transform", false]], "transform() (wildboar.transform._pivot.pivottransform method)": [[54, "wildboar.transform._pivot.PivotTransform.transform", false]], "transform() (wildboar.transform._rocket.rockettransform method)": [[55, "wildboar.transform._rocket.RocketTransform.transform", false]], "transform() (wildboar.transform._shapelet.castortransform method)": [[57, "wildboar.transform._shapelet.CastorTransform.transform", false]], "transform() (wildboar.transform._shapelet.dilatedshapelettransform method)": [[57, "wildboar.transform._shapelet.DilatedShapeletTransform.transform", false]], "transform() (wildboar.transform._shapelet.randomshapelettransform method)": [[57, "wildboar.transform._shapelet.RandomShapeletTransform.transform", false]], "transform() (wildboar.transform._shapelet.shapelettransform method)": [[57, "wildboar.transform._shapelet.ShapeletTransform.transform", false]], "transform() (wildboar.transform.castortransform method)": [[58, "wildboar.transform.CastorTransform.transform", false]], "transform() (wildboar.transform.dilatedshapelettransform method)": [[58, "wildboar.transform.DilatedShapeletTransform.transform", false]], "transform() (wildboar.transform.featuretransform method)": [[58, "wildboar.transform.FeatureTransform.transform", false]], "transform() (wildboar.transform.hydratransform method)": [[58, "wildboar.transform.HydraTransform.transform", false]], "transform() (wildboar.transform.intervaltransform method)": [[58, "wildboar.transform.IntervalTransform.transform", false]], "transform() (wildboar.transform.matrixprofiletransform method)": [[58, "wildboar.transform.MatrixProfileTransform.transform", false]], "transform() (wildboar.transform.pivottransform method)": [[58, "wildboar.transform.PivotTransform.transform", false]], "transform() (wildboar.transform.randomshapelettransform method)": [[58, "wildboar.transform.RandomShapeletTransform.transform", false]], "transform() (wildboar.transform.rockettransform method)": [[58, "wildboar.transform.RocketTransform.transform", false]], "transform() (wildboar.transform.shapelettransform method)": [[58, "wildboar.transform.ShapeletTransform.transform", false]], "transformridgeclassifiercv (class in wildboar.linear_model._transform)": [[37, "wildboar.linear_model._transform.TransformRidgeClassifierCV", false]], "transformridgecv (class in wildboar.linear_model._transform)": [[37, "wildboar.linear_model._transform.TransformRidgeCV", false]], "truncate() (in module wildboar.datasets.preprocess)": [[9, "wildboar.datasets.preprocess.truncate", false]], "uniformbinning (class in wildboar.transform._sax)": [[56, "wildboar.transform._sax.UniformBinning", false]], "uniformprototypesampler (class in wildboar.explain.counterfactual._proto)": [[29, "wildboar.explain.counterfactual._proto.UniformPrototypeSampler", false]], "unstable() (in module wildboar.utils.decorators)": [[66, "wildboar.utils.decorators.unstable", false]], "validity_score() (in module wildboar.metrics)": [[41, "wildboar.metrics.validity_score", false]], "validity_score() (in module wildboar.metrics._counterfactual)": [[40, "wildboar.metrics._counterfactual.validity_score", false]], "version (wildboar.datasets._repository.jsonrepository property)": [[6, "wildboar.datasets._repository.JSONRepository.version", false]], "version (wildboar.datasets._repository.repository property)": [[6, "wildboar.datasets._repository.Repository.version", false]], "version (wildboar.datasets.jsonrepository property)": [[7, "wildboar.datasets.JSONRepository.version", false]], "version (wildboar.datasets.repository property)": [[7, "wildboar.datasets.Repository.version", false]], "wddtw_distance() (in module wildboar.distance.dtw)": [[20, "wildboar.distance.dtw.wddtw_distance", false]], "wdtw_alignment() (in module wildboar.distance.dtw)": [[20, "wildboar.distance.dtw.wdtw_alignment", false]], "wdtw_distance() (in module wildboar.distance.dtw)": [[20, "wildboar.distance.dtw.wdtw_distance", false]], "weighteddynamictimewarptransform (class in wildboar.explain.counterfactual._proto)": [[29, "wildboar.explain.counterfactual._proto.WeightedDynamicTimeWarpTransform", false]], "wildboar": [[33, "module-wildboar", false]], "wildboar.annotate": [[3, "module-wildboar.annotate", false]], "wildboar.annotate._motifs": [[1, "module-wildboar.annotate._motifs", false]], "wildboar.annotate._segment": [[2, "module-wildboar.annotate._segment", false]], "wildboar.base": [[4, "module-wildboar.base", false]], "wildboar.datasets": [[7, "module-wildboar.datasets", false]], "wildboar.datasets._filter": [[5, "module-wildboar.datasets._filter", false]], "wildboar.datasets._repository": [[6, "module-wildboar.datasets._repository", false]], "wildboar.datasets.outlier": [[8, "module-wildboar.datasets.outlier", false]], "wildboar.datasets.preprocess": [[9, "module-wildboar.datasets.preprocess", false]], "wildboar.dimension_selection": [[14, "module-wildboar.dimension_selection", false]], "wildboar.dimension_selection._base": [[10, "module-wildboar.dimension_selection._base", false]], "wildboar.dimension_selection._distance": [[11, "module-wildboar.dimension_selection._distance", false]], "wildboar.dimension_selection._sequential": [[12, "module-wildboar.dimension_selection._sequential", false]], "wildboar.dimension_selection._variance": [[13, "module-wildboar.dimension_selection._variance", false]], "wildboar.distance": [[21, "module-wildboar.distance", false]], "wildboar.distance._distance": [[15, "module-wildboar.distance._distance", false]], "wildboar.distance._manifold": [[16, "module-wildboar.distance._manifold", false]], "wildboar.distance._matrix_profile": [[17, "module-wildboar.distance._matrix_profile", false]], "wildboar.distance._multi_metric": [[18, "module-wildboar.distance._multi_metric", false]], "wildboar.distance._neighbors": [[19, "module-wildboar.distance._neighbors", false]], "wildboar.distance.dtw": [[20, "module-wildboar.distance.dtw", false]], "wildboar.ensemble": [[24, "module-wildboar.ensemble", false]], "wildboar.ensemble._elastic": [[22, "module-wildboar.ensemble._elastic", false]], "wildboar.ensemble._ensemble": [[23, "module-wildboar.ensemble._ensemble", false]], "wildboar.explain": [[32, "module-wildboar.explain", false]], "wildboar.explain._importance": [[25, "module-wildboar.explain._importance", false]], "wildboar.explain.counterfactual": [[31, "module-wildboar.explain.counterfactual", false]], "wildboar.explain.counterfactual._helper": [[26, "module-wildboar.explain.counterfactual._helper", false]], "wildboar.explain.counterfactual._nn": [[27, "module-wildboar.explain.counterfactual._nn", false]], "wildboar.explain.counterfactual._nun": [[28, "module-wildboar.explain.counterfactual._nun", false]], "wildboar.explain.counterfactual._proto": [[29, "module-wildboar.explain.counterfactual._proto", false]], "wildboar.explain.counterfactual._sf": [[30, "module-wildboar.explain.counterfactual._sf", false]], "wildboar.linear_model": [[38, "module-wildboar.linear_model", false]], "wildboar.linear_model._hydra": [[34, "module-wildboar.linear_model._hydra", false]], "wildboar.linear_model._rocket": [[35, "module-wildboar.linear_model._rocket", false]], "wildboar.linear_model._shapelet": [[36, "module-wildboar.linear_model._shapelet", false]], "wildboar.linear_model._transform": [[37, "module-wildboar.linear_model._transform", false]], "wildboar.metrics": [[41, "module-wildboar.metrics", false]], "wildboar.metrics._cluster": [[39, "module-wildboar.metrics._cluster", false]], "wildboar.metrics._counterfactual": [[40, "module-wildboar.metrics._counterfactual", false]], "wildboar.model_selection": [[44, "module-wildboar.model_selection", false]], "wildboar.model_selection._cv": [[42, "module-wildboar.model_selection._cv", false]], "wildboar.model_selection._outlier": [[43, "module-wildboar.model_selection._outlier", false]], "wildboar.segment": [[47, "module-wildboar.segment", false]], "wildboar.segment._base": [[45, "module-wildboar.segment._base", false]], "wildboar.segment._mp": [[46, "module-wildboar.segment._mp", false]], "wildboar.transform": [[58, "module-wildboar.transform", false]], "wildboar.transform._base": [[48, "module-wildboar.transform._base", false]], "wildboar.transform._conv": [[49, "module-wildboar.transform._conv", false]], "wildboar.transform._diff": [[50, "module-wildboar.transform._diff", false]], "wildboar.transform._hydra": [[51, "module-wildboar.transform._hydra", false]], "wildboar.transform._interval": [[52, "module-wildboar.transform._interval", false]], "wildboar.transform._matrix_profile": [[53, "module-wildboar.transform._matrix_profile", false]], "wildboar.transform._pivot": [[54, "module-wildboar.transform._pivot", false]], "wildboar.transform._rocket": [[55, "module-wildboar.transform._rocket", false]], "wildboar.transform._sax": [[56, "module-wildboar.transform._sax", false]], "wildboar.transform._shapelet": [[57, "module-wildboar.transform._shapelet", false]], "wildboar.tree": [[63, "module-wildboar.tree", false]], "wildboar.tree._base": [[59, "module-wildboar.tree._base", false]], "wildboar.tree._plot": [[60, "module-wildboar.tree._plot", false]], "wildboar.tree._ptree": [[61, "module-wildboar.tree._ptree", false]], "wildboar.tree._tree": [[62, "module-wildboar.tree._tree", false]], "wildboar.utils": [[68, "module-wildboar.utils", false]], "wildboar.utils._parallel": [[64, "module-wildboar.utils._parallel", false]], "wildboar.utils._testing": [[65, "module-wildboar.utils._testing", false]], "wildboar.utils.decorators": [[66, "module-wildboar.utils.decorators", false]], "wildboar.utils.estimator_checks": [[67, "module-wildboar.utils.estimator_checks", false]], "wildboar.utils.plot": [[69, "module-wildboar.utils.plot", false]], "wildboar.utils.validation": [[70, "module-wildboar.utils.validation", false]], "wildboar.utils.variable_len": [[71, "module-wildboar.utils.variable_len", false]], "wildboar.version": [[72, "module-wildboar.version", false]], "wildboar_requires (wildboar.datasets._repository.jsonrepository property)": [[6, "wildboar.datasets._repository.JSONRepository.wildboar_requires", false]], "wildboar_requires (wildboar.datasets._repository.repository property)": [[6, "wildboar.datasets._repository.Repository.wildboar_requires", false]], "wildboar_requires (wildboar.datasets.jsonrepository property)": [[7, "wildboar.datasets.JSONRepository.wildboar_requires", false]], "wildboar_requires (wildboar.datasets.repository property)": [[7, "wildboar.datasets.Repository.wildboar_requires", false]]}, "objects": {"": [[33, 0, 0, "-", "wildboar"]], "wildboar": [[3, 0, 0, "-", "annotate"], [4, 0, 0, "-", "base"], [7, 0, 0, "-", "datasets"], [14, 0, 0, "-", "dimension_selection"], [21, 0, 0, "-", "distance"], [24, 0, 0, "-", "ensemble"], [32, 0, 0, "-", "explain"], [38, 0, 0, "-", "linear_model"], [41, 0, 0, "-", "metrics"], [44, 0, 0, "-", "model_selection"], [47, 0, 0, "-", "segment"], [58, 0, 0, "-", "transform"], [63, 0, 0, "-", "tree"], [68, 0, 0, "-", "utils"], [72, 0, 0, "-", "version"]], "wildboar.annotate": [[1, 0, 0, "-", "_motifs"], [2, 0, 0, "-", "_segment"], [3, 1, 1, "", "motifs"], [3, 1, 1, "", "segment"]], "wildboar.annotate._motifs": [[1, 1, 1, "", "motifs"]], "wildboar.annotate._segment": [[2, 1, 1, "", "segment"]], "wildboar.base": [[4, 2, 1, "", "BaseEstimator"], [4, 2, 1, "", "CounterfactualMixin"], [4, 2, 1, "", "ExplainerMixin"], [4, 1, 1, "", "is_counterfactual"], [4, 1, 1, "", "is_explainer"]], "wildboar.base.BaseEstimator": [[4, 3, 1, "", "get_metadata_routing"], [4, 3, 1, "", "get_params"], [4, 3, 1, "", "set_params"]], "wildboar.base.CounterfactualMixin": [[4, 3, 1, "", "score"]], "wildboar.base.ExplainerMixin": [[4, 3, 1, "", "fit_explain"], [4, 3, 1, "", "plot"]], "wildboar.datasets": [[7, 2, 1, "", "Bundle"], [7, 2, 1, "", "JSONRepository"], [7, 2, 1, "", "NpBundle"], [7, 2, 1, "", "Repository"], [5, 0, 0, "-", "_filter"], [6, 0, 0, "-", "_repository"], [7, 1, 1, "", "clear_cache"], [7, 1, 1, "", "get_bundles"], [7, 1, 1, "", "get_repository"], [7, 1, 1, "", "install_repository"], [7, 1, 1, "", "list_bundles"], [7, 1, 1, "", "list_collections"], [7, 1, 1, "", "list_datasets"], [7, 1, 1, "", "list_repositories"], [7, 1, 1, "", "load_articulary_word_recognition"], [7, 1, 1, "", "load_basic_motions"], [7, 1, 1, "", "load_dataset"], [7, 1, 1, "", "load_datasets"], [7, 1, 1, "", "load_ering"], [7, 1, 1, "", "load_gun_point"], [7, 1, 1, "", "load_synthetic_control"], [7, 1, 1, "", "load_two_lead_ecg"], [8, 0, 0, "-", "outlier"], [9, 0, 0, "-", "preprocess"], [7, 1, 1, "", "refresh_repositories"], [7, 1, 1, "", "set_cache_dir"]], "wildboar.datasets.Bundle": [[7, 3, 1, "", "get_collection"], [7, 3, 1, "", "get_filename"], [7, 3, 1, "", "list"], [7, 3, 1, "", "load"]], "wildboar.datasets.JSONRepository": [[7, 4, 1, "", "download_url"], [7, 3, 1, "", "get_bundle"], [7, 3, 1, "", "get_bundles"], [7, 4, 1, "", "name"], [7, 3, 1, "", "refresh"], [7, 4, 1, "", "version"], [7, 4, 1, "", "wildboar_requires"]], "wildboar.datasets.NpBundle": [[7, 3, 1, "", "get_collection"], [7, 3, 1, "", "get_filename"], [7, 3, 1, "", "list"], [7, 3, 1, "", "load"]], "wildboar.datasets.Repository": [[7, 4, 1, "", "download_url"], [7, 3, 1, "", "get_bundle"], [7, 3, 1, "", "get_bundles"], [7, 4, 1, "", "name"], [7, 3, 1, "", "refresh"], [7, 4, 1, "", "version"], [7, 4, 1, "", "wildboar_requires"]], "wildboar.datasets._filter": [[5, 1, 1, "", "make_dict_filter"], [5, 1, 1, "", "make_filter"], [5, 1, 1, "", "make_list_filter"], [5, 1, 1, "", "make_str_filter"]], "wildboar.datasets._repository": [[6, 2, 1, "", "Bundle"], [6, 2, 1, "", "JSONRepository"], [6, 2, 1, "", "NpBundle"], [6, 2, 1, "", "Repository"]], "wildboar.datasets._repository.Bundle": [[6, 3, 1, "", "get_collection"], [6, 3, 1, "", "get_filename"], [6, 3, 1, "", "list"], [6, 3, 1, "", "load"]], "wildboar.datasets._repository.JSONRepository": [[6, 4, 1, "", "download_url"], [6, 3, 1, "", "get_bundle"], [6, 3, 1, "", "get_bundles"], [6, 4, 1, "", "name"], [6, 3, 1, "", "refresh"], [6, 4, 1, "", "version"], [6, 4, 1, "", "wildboar_requires"]], "wildboar.datasets._repository.NpBundle": [[6, 3, 1, "", "get_collection"], [6, 3, 1, "", "get_filename"], [6, 3, 1, "", "list"], [6, 3, 1, "", "load"]], "wildboar.datasets._repository.Repository": [[6, 4, 1, "", "download_url"], [6, 3, 1, "", "get_bundle"], [6, 3, 1, "", "get_bundles"], [6, 4, 1, "", "name"], [6, 3, 1, "", "refresh"], [6, 4, 1, "", "version"], [6, 4, 1, "", "wildboar_requires"]], "wildboar.datasets.outlier": [[8, 1, 1, "", "density_outliers"], [8, 1, 1, "", "emmott_outliers"], [8, 1, 1, "", "kmeans_outliers"], [8, 1, 1, "", "majority_outliers"], [8, 1, 1, "", "minority_outliers"]], "wildboar.datasets.preprocess": [[9, 1, 1, "", "maxabs_scale"], [9, 1, 1, "", "minmax_scale"], [9, 1, 1, "", "named_preprocess"], [9, 1, 1, "", "standardize"], [9, 1, 1, "", "truncate"]], "wildboar.dimension_selection": [[14, 2, 1, "", "DistanceVarianceThreshold"], [14, 2, 1, "", "SelectDimensionPercentile"], [14, 2, 1, "", "SelectDimensionSignificance"], [14, 2, 1, "", "SelectDimensionTopK"], [14, 2, 1, "", "SequentialDimensionSelector"], [10, 0, 0, "-", "_base"], [11, 0, 0, "-", "_distance"], [12, 0, 0, "-", "_sequential"], [13, 0, 0, "-", "_variance"]], "wildboar.dimension_selection.DistanceVarianceThreshold": [[14, 3, 1, "", "fit"], [14, 3, 1, "", "fit_transform"], [14, 3, 1, "", "get_dimensions"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "inverse_transform"], [14, 3, 1, "", "set_output"], [14, 3, 1, "", "set_params"], [14, 3, 1, "", "transform"]], "wildboar.dimension_selection.SelectDimensionPercentile": [[14, 3, 1, "", "fit"], [14, 3, 1, "", "fit_transform"], [14, 3, 1, "", "get_dimensions"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "inverse_transform"], [14, 3, 1, "", "set_output"], [14, 3, 1, "", "set_params"], [14, 3, 1, "", "transform"]], "wildboar.dimension_selection.SelectDimensionSignificance": [[14, 3, 1, "", "fit"], [14, 3, 1, "", "fit_transform"], [14, 3, 1, "", "get_dimensions"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "inverse_transform"], [14, 3, 1, "", "set_output"], [14, 3, 1, "", "set_params"], [14, 3, 1, "", "transform"]], "wildboar.dimension_selection.SelectDimensionTopK": [[14, 3, 1, "", "fit"], [14, 3, 1, "", "fit_transform"], [14, 3, 1, "", "get_dimensions"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "inverse_transform"], [14, 3, 1, "", "set_output"], [14, 3, 1, "", "set_params"], [14, 3, 1, "", "transform"]], "wildboar.dimension_selection.SequentialDimensionSelector": [[14, 3, 1, "", "fit"], [14, 3, 1, "", "fit_transform"], [14, 3, 1, "", "get_dimensions"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "inverse_transform"], [14, 3, 1, "", "set_output"], [14, 3, 1, "", "set_params"], [14, 3, 1, "", "transform"]], "wildboar.dimension_selection._base": [[10, 2, 1, "", "BaseDistanceSelector"], [10, 2, 1, "", "DimensionSelectorMixin"]], "wildboar.dimension_selection._base.BaseDistanceSelector": [[10, 3, 1, "", "fit"], [10, 3, 1, "", "fit_transform"], [10, 3, 1, "", "get_dimensions"], [10, 3, 1, "", "get_metadata_routing"], [10, 3, 1, "", "get_params"], [10, 3, 1, "", "inverse_transform"], [10, 3, 1, "", "set_output"], [10, 3, 1, "", "set_params"], [10, 3, 1, "", "transform"]], "wildboar.dimension_selection._base.DimensionSelectorMixin": [[10, 3, 1, "", "fit_transform"], [10, 3, 1, "", "get_dimensions"], [10, 3, 1, "", "inverse_transform"], [10, 3, 1, "", "set_output"], [10, 3, 1, "", "transform"]], "wildboar.dimension_selection._distance": [[11, 2, 1, "", "SelectDimensionPercentile"], [11, 2, 1, "", "SelectDimensionSignificance"], [11, 2, 1, "", "SelectDimensionTopK"]], "wildboar.dimension_selection._distance.SelectDimensionPercentile": [[11, 3, 1, "", "fit"], [11, 3, 1, "", "fit_transform"], [11, 3, 1, "", "get_dimensions"], [11, 3, 1, "", "get_metadata_routing"], [11, 3, 1, "", "get_params"], [11, 3, 1, "", "inverse_transform"], [11, 3, 1, "", "set_output"], [11, 3, 1, "", "set_params"], [11, 3, 1, "", "transform"]], "wildboar.dimension_selection._distance.SelectDimensionSignificance": [[11, 3, 1, "", "fit"], [11, 3, 1, "", "fit_transform"], [11, 3, 1, "", "get_dimensions"], [11, 3, 1, "", "get_metadata_routing"], [11, 3, 1, "", "get_params"], [11, 3, 1, "", "inverse_transform"], [11, 3, 1, "", "set_output"], [11, 3, 1, "", "set_params"], [11, 3, 1, "", "transform"]], "wildboar.dimension_selection._distance.SelectDimensionTopK": [[11, 3, 1, "", "fit"], [11, 3, 1, "", "fit_transform"], [11, 3, 1, "", "get_dimensions"], [11, 3, 1, "", "get_metadata_routing"], [11, 3, 1, "", "get_params"], [11, 3, 1, "", "inverse_transform"], [11, 3, 1, "", "set_output"], [11, 3, 1, "", "set_params"], [11, 3, 1, "", "transform"]], "wildboar.dimension_selection._sequential": [[12, 2, 1, "", "SequentialDimensionSelector"]], "wildboar.dimension_selection._sequential.SequentialDimensionSelector": [[12, 3, 1, "", "fit"], [12, 3, 1, "", "fit_transform"], [12, 3, 1, "", "get_dimensions"], [12, 3, 1, "", "get_metadata_routing"], [12, 3, 1, "", "get_params"], [12, 3, 1, "", "inverse_transform"], [12, 3, 1, "", "set_output"], [12, 3, 1, "", "set_params"], [12, 3, 1, "", "transform"]], "wildboar.dimension_selection._variance": [[13, 2, 1, "", "DistanceVarianceThreshold"]], "wildboar.dimension_selection._variance.DistanceVarianceThreshold": [[13, 3, 1, "", "fit"], [13, 3, 1, "", "fit_transform"], [13, 3, 1, "", "get_dimensions"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "inverse_transform"], [13, 3, 1, "", "set_output"], [13, 3, 1, "", "set_params"], [13, 3, 1, "", "transform"]], "wildboar.distance": [[21, 2, 1, "", "KMeans"], [21, 2, 1, "", "KMedoids"], [21, 2, 1, "", "KNeighborsClassifier"], [21, 2, 1, "", "MDS"], [15, 0, 0, "-", "_distance"], [16, 0, 0, "-", "_manifold"], [17, 0, 0, "-", "_matrix_profile"], [18, 0, 0, "-", "_multi_metric"], [19, 0, 0, "-", "_neighbors"], [21, 1, 1, "", "argmin_distance"], [21, 1, 1, "", "argmin_subsequence_distance"], [21, 1, 1, "", "distance_profile"], [20, 0, 0, "-", "dtw"], [21, 1, 1, "", "paired_distance"], [21, 1, 1, "", "paired_subsequence_distance"], [21, 1, 1, "", "paired_subsequence_match"], [21, 1, 1, "", "pairwise_distance"], [21, 1, 1, "", "pairwise_subsequence_distance"], [21, 1, 1, "", "subsequence_match"]], "wildboar.distance.KMeans": [[21, 3, 1, "", "fit"], [21, 3, 1, "", "fit_predict"], [21, 3, 1, "", "fit_transform"], [21, 3, 1, "", "get_metadata_routing"], [21, 3, 1, "", "get_params"], [21, 3, 1, "", "predict"], [21, 3, 1, "", "set_output"], [21, 3, 1, "", "set_params"], [21, 3, 1, "", "transform"]], "wildboar.distance.KMedoids": [[21, 3, 1, "", "fit"], [21, 3, 1, "", "fit_predict"], [21, 3, 1, "", "fit_transform"], [21, 3, 1, "", "get_metadata_routing"], [21, 3, 1, "", "get_params"], [21, 3, 1, "", "predict"], [21, 3, 1, "", "set_output"], [21, 3, 1, "", "set_params"], [21, 3, 1, "", "transform"]], "wildboar.distance.KNeighborsClassifier": [[21, 3, 1, "", "fit"], [21, 3, 1, "", "get_metadata_routing"], [21, 3, 1, "", "get_params"], [21, 3, 1, "", "predict"], [21, 3, 1, "", "predict_proba"], [21, 3, 1, "", "score"], [21, 3, 1, "", "set_params"]], "wildboar.distance.MDS": [[21, 3, 1, "", "get_metadata_routing"], [21, 3, 1, "", "get_params"], [21, 3, 1, "", "set_params"]], "wildboar.distance._distance": [[15, 1, 1, "", "argmin_distance"], [15, 1, 1, "", "argmin_subsequence_distance"], [15, 1, 1, "", "distance_profile"], [15, 1, 1, "", "paired_distance"], [15, 1, 1, "", "paired_subsequence_distance"], [15, 1, 1, "", "paired_subsequence_match"], [15, 1, 1, "", "pairwise_distance"], [15, 1, 1, "", "pairwise_subsequence_distance"], [15, 1, 1, "", "subsequence_match"]], "wildboar.distance._manifold": [[16, 2, 1, "", "MDS"]], "wildboar.distance._manifold.MDS": [[16, 3, 1, "", "get_metadata_routing"], [16, 3, 1, "", "get_params"], [16, 3, 1, "", "set_params"]], "wildboar.distance._matrix_profile": [[17, 1, 1, "", "matrix_profile"], [17, 1, 1, "", "paired_matrix_profile"]], "wildboar.distance._neighbors": [[19, 2, 1, "", "KMeans"], [19, 2, 1, "", "KMedoids"], [19, 2, 1, "", "KNeighborsClassifier"]], "wildboar.distance._neighbors.KMeans": [[19, 3, 1, "", "fit"], [19, 3, 1, "", "fit_predict"], [19, 3, 1, "", "fit_transform"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "predict"], [19, 3, 1, "", "set_output"], [19, 3, 1, "", "set_params"], [19, 3, 1, "", "transform"]], "wildboar.distance._neighbors.KMedoids": [[19, 3, 1, "", "fit"], [19, 3, 1, "", "fit_predict"], [19, 3, 1, "", "fit_transform"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "predict"], [19, 3, 1, "", "set_output"], [19, 3, 1, "", "set_params"], [19, 3, 1, "", "transform"]], "wildboar.distance._neighbors.KNeighborsClassifier": [[19, 3, 1, "", "fit"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "predict"], [19, 3, 1, "", "predict_proba"], [19, 3, 1, "", "score"], [19, 3, 1, "", "set_params"]], "wildboar.distance.dtw": [[20, 1, 1, "", "ddtw_distance"], [20, 1, 1, "", "dtw_alignment"], [20, 1, 1, "", "dtw_average"], [20, 1, 1, "", "dtw_distance"], [20, 1, 1, "", "dtw_envelop"], [20, 1, 1, "", "dtw_lb_keogh"], [20, 1, 1, "", "dtw_mapping"], [20, 1, 1, "", "jeong_weight"], [20, 1, 1, "", "wddtw_distance"], [20, 1, 1, "", "wdtw_alignment"], [20, 1, 1, "", "wdtw_distance"]], "wildboar.ensemble": [[24, 2, 1, "", "BaggingClassifier"], [24, 2, 1, "", "BaggingRegressor"], [24, 2, 1, "", "BaseBagging"], [24, 2, 1, "", "ElasticEnsembleClassifier"], [24, 2, 1, "", "ExtraShapeletTreesClassifier"], [24, 2, 1, "", "ExtraShapeletTreesRegressor"], [24, 2, 1, "", "IntervalForestClassifier"], [24, 2, 1, "", "IntervalForestRegressor"], [24, 2, 1, "", "IsolationShapeletForest"], [24, 2, 1, "", "PivotForestClassifier"], [24, 2, 1, "", "ProximityForestClassifier"], [24, 2, 1, "", "RocketForestClassifier"], [24, 2, 1, "", "RocketForestRegressor"], [24, 2, 1, "", "ShapeletForestClassifier"], [24, 2, 1, "", "ShapeletForestEmbedding"], [24, 2, 1, "", "ShapeletForestRegressor"], [22, 0, 0, "-", "_elastic"], [23, 0, 0, "-", "_ensemble"]], "wildboar.ensemble.BaggingClassifier": [[24, 3, 1, "", "decision_function"], [24, 4, 1, "", "estimators_samples_"], [24, 3, 1, "", "fit"], [24, 3, 1, "", "get_metadata_routing"], [24, 3, 1, "", "get_params"], [24, 3, 1, "", "predict"], [24, 3, 1, "", "predict_log_proba"], [24, 3, 1, "", "predict_proba"], [24, 3, 1, "", "score"], [24, 3, 1, "", "set_params"]], "wildboar.ensemble.BaggingRegressor": [[24, 4, 1, "", "estimators_samples_"], [24, 3, 1, "", "fit"], [24, 3, 1, "", "get_metadata_routing"], [24, 3, 1, "", "get_params"], [24, 3, 1, "", "predict"], [24, 3, 1, "", "score"], [24, 3, 1, "", "set_params"]], "wildboar.ensemble.BaseBagging": [[24, 4, 1, "", "estimators_samples_"], [24, 3, 1, "", "fit"], [24, 3, 1, "", "get_metadata_routing"], [24, 3, 1, "", "get_params"], [24, 3, 1, "", "set_params"]], "wildboar.ensemble.ElasticEnsembleClassifier": [[24, 3, 1, "", "fit"], [24, 3, 1, "", "get_metadata_routing"], [24, 3, 1, "", "get_params"], [24, 3, 1, "", "predict"], [24, 3, 1, "", "predict_proba"], [24, 3, 1, "", "score"], [24, 3, 1, "", "set_params"]], "wildboar.ensemble.ExtraShapeletTreesClassifier": [[24, 3, 1, "", "decision_function"], [24, 4, 1, "", "estimators_samples_"], [24, 3, 1, "", "fit"], [24, 3, 1, "", "get_metadata_routing"], [24, 3, 1, "", "get_params"], [24, 3, 1, "", "predict"], [24, 3, 1, "", "predict_log_proba"], [24, 3, 1, "", "predict_proba"], [24, 3, 1, "", "score"], [24, 3, 1, "", "set_params"]], "wildboar.ensemble.ExtraShapeletTreesRegressor": [[24, 4, 1, "", "estimators_samples_"], [24, 3, 1, "", "fit"], [24, 3, 1, "", "get_metadata_routing"], [24, 3, 1, "", "get_params"], [24, 3, 1, "", "predict"], [24, 3, 1, "", "score"], [24, 3, 1, "", "set_params"]], "wildboar.ensemble.IntervalForestClassifier": [[24, 3, 1, "", "decision_function"], [24, 4, 1, "", "estimators_samples_"], [24, 3, 1, "", "fit"], [24, 3, 1, "", "get_metadata_routing"], [24, 3, 1, "", "get_params"], [24, 3, 1, "", "predict"], [24, 3, 1, "", "predict_log_proba"], [24, 3, 1, "", "predict_proba"], [24, 3, 1, "", "score"], [24, 3, 1, "", "set_params"]], "wildboar.ensemble.IntervalForestRegressor": [[24, 4, 1, "", "estimators_samples_"], [24, 3, 1, "", "fit"], [24, 3, 1, "", "get_metadata_routing"], [24, 3, 1, "", "get_params"], [24, 3, 1, "", "predict"], [24, 3, 1, "", "score"], [24, 3, 1, "", "set_params"]], "wildboar.ensemble.IsolationShapeletForest": [[24, 4, 1, "", "estimators_samples_"], [24, 3, 1, "", "fit"], [24, 3, 1, "", "fit_predict"], [24, 3, 1, "", "get_metadata_routing"], [24, 3, 1, "", "get_params"], [24, 3, 1, "", "set_params"]], "wildboar.ensemble.PivotForestClassifier": [[24, 3, 1, "", "decision_function"], [24, 4, 1, "", "estimators_samples_"], [24, 3, 1, "", "fit"], [24, 3, 1, "", "get_metadata_routing"], [24, 3, 1, "", "get_params"], [24, 3, 1, "", "predict"], [24, 3, 1, "", "predict_log_proba"], [24, 3, 1, "", "predict_proba"], [24, 3, 1, "", "score"], [24, 3, 1, "", "set_params"]], "wildboar.ensemble.ProximityForestClassifier": [[24, 3, 1, "", "decision_function"], [24, 4, 1, "", "estimators_samples_"], [24, 3, 1, "", "fit"], [24, 3, 1, "", "get_metadata_routing"], [24, 3, 1, "", "get_params"], [24, 3, 1, "", "predict"], [24, 3, 1, "", "predict_log_proba"], [24, 3, 1, "", "predict_proba"], [24, 3, 1, "", "score"], [24, 3, 1, "", "set_params"]], "wildboar.ensemble.RocketForestClassifier": [[24, 3, 1, "", "decision_function"], [24, 4, 1, "", "estimators_samples_"], [24, 3, 1, "", "fit"], [24, 3, 1, "", "get_metadata_routing"], [24, 3, 1, "", "get_params"], [24, 3, 1, "", "predict"], [24, 3, 1, "", "predict_log_proba"], [24, 3, 1, "", "predict_proba"], [24, 3, 1, "", "score"], [24, 3, 1, "", "set_params"]], "wildboar.ensemble.RocketForestRegressor": [[24, 4, 1, "", "estimators_samples_"], [24, 3, 1, "", "fit"], [24, 3, 1, "", "get_metadata_routing"], [24, 3, 1, "", "get_params"], [24, 3, 1, "", "predict"], [24, 3, 1, "", "score"], [24, 3, 1, "", "set_params"]], "wildboar.ensemble.ShapeletForestClassifier": [[24, 3, 1, "", "decision_function"], [24, 4, 1, "", "estimators_samples_"], [24, 3, 1, "", "fit"], [24, 3, 1, "", "get_metadata_routing"], [24, 3, 1, "", "get_params"], [24, 3, 1, "", "predict"], [24, 3, 1, "", "predict_log_proba"], [24, 3, 1, "", "predict_proba"], [24, 3, 1, "", "score"], [24, 3, 1, "", "set_params"]], "wildboar.ensemble.ShapeletForestEmbedding": [[24, 4, 1, "", "estimators_samples_"], [24, 3, 1, "", "fit"], [24, 3, 1, "", "get_metadata_routing"], [24, 3, 1, "", "get_params"], [24, 3, 1, "", "predict"], [24, 3, 1, "", "score"], [24, 3, 1, "", "set_params"]], "wildboar.ensemble.ShapeletForestRegressor": [[24, 4, 1, "", "estimators_samples_"], [24, 3, 1, "", "fit"], [24, 3, 1, "", "get_metadata_routing"], [24, 3, 1, "", "get_params"], [24, 3, 1, "", "predict"], [24, 3, 1, "", "score"], [24, 3, 1, "", "set_params"]], "wildboar.ensemble._elastic": [[22, 2, 1, "", "ElasticEnsembleClassifier"]], "wildboar.ensemble._elastic.ElasticEnsembleClassifier": [[22, 3, 1, "", "fit"], [22, 3, 1, "", "get_metadata_routing"], [22, 3, 1, "", "get_params"], [22, 3, 1, "", "predict"], [22, 3, 1, "", "predict_proba"], [22, 3, 1, "", "score"], [22, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble": [[23, 2, 1, "", "BaggingClassifier"], [23, 2, 1, "", "BaggingRegressor"], [23, 2, 1, "", "BaseBagging"], [23, 2, 1, "", "BaseForestClassifier"], [23, 2, 1, "", "BaseForestRegressor"], [23, 2, 1, "", "BaseShapeletForestClassifier"], [23, 2, 1, "", "BaseShapeletForestRegressor"], [23, 2, 1, "", "ExtraShapeletTreesClassifier"], [23, 2, 1, "", "ExtraShapeletTreesRegressor"], [23, 2, 1, "", "ForestMixin"], [23, 2, 1, "", "IntervalForestClassifier"], [23, 2, 1, "", "IntervalForestRegressor"], [23, 2, 1, "", "IsolationShapeletForest"], [23, 2, 1, "", "PivotForestClassifier"], [23, 2, 1, "", "ProximityForestClassifier"], [23, 2, 1, "", "RocketForestClassifier"], [23, 2, 1, "", "RocketForestRegressor"], [23, 2, 1, "", "ShapeletForestClassifier"], [23, 2, 1, "", "ShapeletForestEmbedding"], [23, 2, 1, "", "ShapeletForestRegressor"]], "wildboar.ensemble._ensemble.BaggingClassifier": [[23, 3, 1, "", "decision_function"], [23, 4, 1, "", "estimators_samples_"], [23, 3, 1, "", "fit"], [23, 3, 1, "", "get_metadata_routing"], [23, 3, 1, "", "get_params"], [23, 3, 1, "", "predict"], [23, 3, 1, "", "predict_log_proba"], [23, 3, 1, "", "predict_proba"], [23, 3, 1, "", "score"], [23, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaggingRegressor": [[23, 4, 1, "", "estimators_samples_"], [23, 3, 1, "", "fit"], [23, 3, 1, "", "get_metadata_routing"], [23, 3, 1, "", "get_params"], [23, 3, 1, "", "predict"], [23, 3, 1, "", "score"], [23, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaseBagging": [[23, 4, 1, "", "estimators_samples_"], [23, 3, 1, "", "fit"], [23, 3, 1, "", "get_metadata_routing"], [23, 3, 1, "", "get_params"], [23, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaseForestClassifier": [[23, 3, 1, "", "decision_function"], [23, 4, 1, "", "estimators_samples_"], [23, 3, 1, "", "fit"], [23, 3, 1, "", "get_metadata_routing"], [23, 3, 1, "", "get_params"], [23, 3, 1, "", "predict"], [23, 3, 1, "", "predict_log_proba"], [23, 3, 1, "", "predict_proba"], [23, 3, 1, "", "score"], [23, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaseForestRegressor": [[23, 4, 1, "", "estimators_samples_"], [23, 3, 1, "", "fit"], [23, 3, 1, "", "get_metadata_routing"], [23, 3, 1, "", "get_params"], [23, 3, 1, "", "predict"], [23, 3, 1, "", "score"], [23, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaseShapeletForestClassifier": [[23, 3, 1, "", "decision_function"], [23, 4, 1, "", "estimators_samples_"], [23, 3, 1, "", "fit"], [23, 3, 1, "", "get_metadata_routing"], [23, 3, 1, "", "get_params"], [23, 3, 1, "", "predict"], [23, 3, 1, "", "predict_log_proba"], [23, 3, 1, "", "predict_proba"], [23, 3, 1, "", "score"], [23, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaseShapeletForestRegressor": [[23, 4, 1, "", "estimators_samples_"], [23, 3, 1, "", "fit"], [23, 3, 1, "", "get_metadata_routing"], [23, 3, 1, "", "get_params"], [23, 3, 1, "", "predict"], [23, 3, 1, "", "score"], [23, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier": [[23, 3, 1, "", "decision_function"], [23, 4, 1, "", "estimators_samples_"], [23, 3, 1, "", "fit"], [23, 3, 1, "", "get_metadata_routing"], [23, 3, 1, "", "get_params"], [23, 3, 1, "", "predict"], [23, 3, 1, "", "predict_log_proba"], [23, 3, 1, "", "predict_proba"], [23, 3, 1, "", "score"], [23, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor": [[23, 4, 1, "", "estimators_samples_"], [23, 3, 1, "", "fit"], [23, 3, 1, "", "get_metadata_routing"], [23, 3, 1, "", "get_params"], [23, 3, 1, "", "predict"], [23, 3, 1, "", "score"], [23, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.IntervalForestClassifier": [[23, 3, 1, "", "decision_function"], [23, 4, 1, "", "estimators_samples_"], [23, 3, 1, "", "fit"], [23, 3, 1, "", "get_metadata_routing"], [23, 3, 1, "", "get_params"], [23, 3, 1, "", "predict"], [23, 3, 1, "", "predict_log_proba"], [23, 3, 1, "", "predict_proba"], [23, 3, 1, "", "score"], [23, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.IntervalForestRegressor": [[23, 4, 1, "", "estimators_samples_"], [23, 3, 1, "", "fit"], [23, 3, 1, "", "get_metadata_routing"], [23, 3, 1, "", "get_params"], [23, 3, 1, "", "predict"], [23, 3, 1, "", "score"], [23, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.IsolationShapeletForest": [[23, 4, 1, "", "estimators_samples_"], [23, 3, 1, "", "fit"], [23, 3, 1, "", "fit_predict"], [23, 3, 1, "", "get_metadata_routing"], [23, 3, 1, "", "get_params"], [23, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.PivotForestClassifier": [[23, 3, 1, "", "decision_function"], [23, 4, 1, "", "estimators_samples_"], [23, 3, 1, "", "fit"], [23, 3, 1, "", "get_metadata_routing"], [23, 3, 1, "", "get_params"], [23, 3, 1, "", "predict"], [23, 3, 1, "", "predict_log_proba"], [23, 3, 1, "", "predict_proba"], [23, 3, 1, "", "score"], [23, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ProximityForestClassifier": [[23, 3, 1, "", "decision_function"], [23, 4, 1, "", "estimators_samples_"], [23, 3, 1, "", "fit"], [23, 3, 1, "", "get_metadata_routing"], [23, 3, 1, "", "get_params"], [23, 3, 1, "", "predict"], [23, 3, 1, "", "predict_log_proba"], [23, 3, 1, "", "predict_proba"], [23, 3, 1, "", "score"], [23, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.RocketForestClassifier": [[23, 3, 1, "", "decision_function"], [23, 4, 1, "", "estimators_samples_"], [23, 3, 1, "", "fit"], [23, 3, 1, "", "get_metadata_routing"], [23, 3, 1, "", "get_params"], [23, 3, 1, "", "predict"], [23, 3, 1, "", "predict_log_proba"], [23, 3, 1, "", "predict_proba"], [23, 3, 1, "", "score"], [23, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.RocketForestRegressor": [[23, 4, 1, "", "estimators_samples_"], [23, 3, 1, "", "fit"], [23, 3, 1, "", "get_metadata_routing"], [23, 3, 1, "", "get_params"], [23, 3, 1, "", "predict"], [23, 3, 1, "", "score"], [23, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ShapeletForestClassifier": [[23, 3, 1, "", "decision_function"], [23, 4, 1, "", "estimators_samples_"], [23, 3, 1, "", "fit"], [23, 3, 1, "", "get_metadata_routing"], [23, 3, 1, "", "get_params"], [23, 3, 1, "", "predict"], [23, 3, 1, "", "predict_log_proba"], [23, 3, 1, "", "predict_proba"], [23, 3, 1, "", "score"], [23, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ShapeletForestEmbedding": [[23, 4, 1, "", "estimators_samples_"], [23, 3, 1, "", "fit"], [23, 3, 1, "", "get_metadata_routing"], [23, 3, 1, "", "get_params"], [23, 3, 1, "", "predict"], [23, 3, 1, "", "score"], [23, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ShapeletForestRegressor": [[23, 4, 1, "", "estimators_samples_"], [23, 3, 1, "", "fit"], [23, 3, 1, "", "get_metadata_routing"], [23, 3, 1, "", "get_params"], [23, 3, 1, "", "predict"], [23, 3, 1, "", "score"], [23, 3, 1, "", "set_params"]], "wildboar.explain": [[32, 2, 1, "", "AmplitudeImportance"], [32, 2, 1, "", "FrequencyImportance"], [32, 2, 1, "", "IntervalImportance"], [32, 2, 1, "", "ShapeletImportance"], [25, 0, 0, "-", "_importance"], [31, 0, 0, "-", "counterfactual"], [32, 1, 1, "", "plot_importances"]], "wildboar.explain.AmplitudeImportance": [[32, 3, 1, "", "fit_explain"], [32, 3, 1, "", "get_metadata_routing"], [32, 3, 1, "", "get_params"], [32, 3, 1, "", "plot"], [32, 3, 1, "", "set_params"]], "wildboar.explain.FrequencyImportance": [[32, 3, 1, "", "fit_explain"], [32, 3, 1, "", "get_metadata_routing"], [32, 3, 1, "", "get_params"], [32, 3, 1, "", "plot"], [32, 3, 1, "", "set_params"]], "wildboar.explain.IntervalImportance": [[32, 3, 1, "", "fit_explain"], [32, 3, 1, "", "get_metadata_routing"], [32, 3, 1, "", "get_params"], [32, 3, 1, "", "plot"], [32, 3, 1, "", "set_params"]], "wildboar.explain.ShapeletImportance": [[32, 3, 1, "", "fit_explain"], [32, 3, 1, "", "get_metadata_routing"], [32, 3, 1, "", "get_params"], [32, 3, 1, "", "plot"], [32, 3, 1, "", "set_params"]], "wildboar.explain._importance": [[25, 2, 1, "", "AmplitudeImportance"], [25, 2, 1, "", "FrequencyImportance"], [25, 2, 1, "", "IntervalImportance"], [25, 2, 1, "", "PermuteImportance"], [25, 2, 1, "", "ShapeletImportance"], [25, 1, 1, "", "plot_importances"]], "wildboar.explain._importance.AmplitudeImportance": [[25, 3, 1, "", "fit_explain"], [25, 3, 1, "", "get_metadata_routing"], [25, 3, 1, "", "get_params"], [25, 3, 1, "", "plot"], [25, 3, 1, "", "set_params"]], "wildboar.explain._importance.FrequencyImportance": [[25, 3, 1, "", "fit_explain"], [25, 3, 1, "", "get_metadata_routing"], [25, 3, 1, "", "get_params"], [25, 3, 1, "", "plot"], [25, 3, 1, "", "set_params"]], "wildboar.explain._importance.IntervalImportance": [[25, 3, 1, "", "fit_explain"], [25, 3, 1, "", "get_metadata_routing"], [25, 3, 1, "", "get_params"], [25, 3, 1, "", "plot"], [25, 3, 1, "", "set_params"]], "wildboar.explain._importance.PermuteImportance": [[25, 3, 1, "", "get_metadata_routing"], [25, 3, 1, "", "get_params"], [25, 3, 1, "", "set_params"]], "wildboar.explain._importance.ShapeletImportance": [[25, 3, 1, "", "fit_explain"], [25, 3, 1, "", "get_metadata_routing"], [25, 3, 1, "", "get_params"], [25, 3, 1, "", "plot"], [25, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual": [[31, 2, 1, "", "KNeighborsCounterfactual"], [31, 2, 1, "", "NativeGuideCounterfactual"], [31, 2, 1, "", "PrototypeCounterfactual"], [31, 2, 1, "", "ShapeletForestCounterfactual"], [26, 0, 0, "-", "_helper"], [27, 0, 0, "-", "_nn"], [28, 0, 0, "-", "_nun"], [29, 0, 0, "-", "_proto"], [30, 0, 0, "-", "_sf"], [31, 1, 1, "", "counterfactuals"], [31, 1, 1, "", "proximity"]], "wildboar.explain.counterfactual.KNeighborsCounterfactual": [[31, 3, 1, "", "fit_explain"], [31, 3, 1, "", "get_metadata_routing"], [31, 3, 1, "", "get_params"], [31, 3, 1, "", "plot"], [31, 3, 1, "", "score"], [31, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual.NativeGuideCounterfactual": [[31, 3, 1, "", "fit_explain"], [31, 3, 1, "", "get_metadata_routing"], [31, 3, 1, "", "get_params"], [31, 3, 1, "", "plot"], [31, 3, 1, "", "score"], [31, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual.PrototypeCounterfactual": [[31, 3, 1, "", "fit_explain"], [31, 3, 1, "", "get_metadata_routing"], [31, 3, 1, "", "get_params"], [31, 3, 1, "", "plot"], [31, 3, 1, "", "score"], [31, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual.ShapeletForestCounterfactual": [[31, 3, 1, "", "fit_explain"], [31, 3, 1, "", "get_metadata_routing"], [31, 3, 1, "", "get_params"], [31, 3, 1, "", "plot"], [31, 3, 1, "", "score"], [31, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual._helper": [[26, 2, 1, "", "PredictEvaluator"], [26, 2, 1, "", "ProbabilityEvaluator"], [26, 2, 1, "", "TargetEvaluator"], [26, 1, 1, "", "counterfactuals"]], "wildboar.explain.counterfactual._helper.PredictEvaluator": [[26, 3, 1, "", "is_counterfactual"]], "wildboar.explain.counterfactual._helper.ProbabilityEvaluator": [[26, 3, 1, "", "is_counterfactual"]], "wildboar.explain.counterfactual._helper.TargetEvaluator": [[26, 3, 1, "", "is_counterfactual"]], "wildboar.explain.counterfactual._nn": [[27, 2, 1, "", "KNeighborsCounterfactual"]], "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual": [[27, 3, 1, "", "fit_explain"], [27, 3, 1, "", "get_metadata_routing"], [27, 3, 1, "", "get_params"], [27, 3, 1, "", "plot"], [27, 3, 1, "", "score"], [27, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual._nun": [[28, 2, 1, "", "NativeGuideCounterfactual"]], "wildboar.explain.counterfactual._nun.NativeGuideCounterfactual": [[28, 3, 1, "", "fit_explain"], [28, 3, 1, "", "get_metadata_routing"], [28, 3, 1, "", "get_params"], [28, 3, 1, "", "plot"], [28, 3, 1, "", "score"], [28, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual._proto": [[29, 2, 1, "", "DynamicTimeWarpTransform"], [29, 2, 1, "", "EuclideanTransform"], [29, 2, 1, "", "KNearestPrototypeSampler"], [29, 2, 1, "", "KNearestShapeletPrototypeSampler"], [29, 2, 1, "", "MetricTransform"], [29, 2, 1, "", "PredictEvaluator"], [29, 2, 1, "", "ProbabilityEvaluator"], [29, 2, 1, "", "PrototypeCounterfactual"], [29, 2, 1, "", "PrototypeSampler"], [29, 2, 1, "", "ShapeletPrototypeSampler"], [29, 2, 1, "", "TargetEvaluator"], [29, 2, 1, "", "UniformPrototypeSampler"], [29, 2, 1, "", "WeightedDynamicTimeWarpTransform"]], "wildboar.explain.counterfactual._proto.DynamicTimeWarpTransform": [[29, 3, 1, "", "move"]], "wildboar.explain.counterfactual._proto.EuclideanTransform": [[29, 3, 1, "", "move"]], "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler": [[29, 3, 1, "", "move"], [29, 3, 1, "", "nearest_index"], [29, 3, 1, "", "sample"], [29, 3, 1, "", "sample_move"]], "wildboar.explain.counterfactual._proto.KNearestShapeletPrototypeSampler": [[29, 3, 1, "", "move"], [29, 3, 1, "", "sample"], [29, 3, 1, "", "sample_move"]], "wildboar.explain.counterfactual._proto.MetricTransform": [[29, 3, 1, "", "move"]], "wildboar.explain.counterfactual._proto.PredictEvaluator": [[29, 3, 1, "", "is_counterfactual"]], "wildboar.explain.counterfactual._proto.ProbabilityEvaluator": [[29, 3, 1, "", "is_counterfactual"]], "wildboar.explain.counterfactual._proto.PrototypeCounterfactual": [[29, 3, 1, "", "fit_explain"], [29, 3, 1, "", "get_metadata_routing"], [29, 3, 1, "", "get_params"], [29, 3, 1, "", "plot"], [29, 3, 1, "", "score"], [29, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual._proto.PrototypeSampler": [[29, 3, 1, "", "move"], [29, 3, 1, "", "sample"], [29, 3, 1, "", "sample_move"]], "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler": [[29, 3, 1, "", "move"], [29, 3, 1, "", "sample"], [29, 3, 1, "", "sample_move"], [29, 3, 1, "", "sample_shapelet"]], "wildboar.explain.counterfactual._proto.TargetEvaluator": [[29, 3, 1, "", "is_counterfactual"]], "wildboar.explain.counterfactual._proto.UniformPrototypeSampler": [[29, 3, 1, "", "move"], [29, 3, 1, "", "sample"], [29, 3, 1, "", "sample_move"]], "wildboar.explain.counterfactual._proto.WeightedDynamicTimeWarpTransform": [[29, 3, 1, "", "move"]], "wildboar.explain.counterfactual._sf": [[30, 2, 1, "", "ShapeletForestCounterfactual"]], "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual": [[30, 3, 1, "", "fit_explain"], [30, 3, 1, "", "get_metadata_routing"], [30, 3, 1, "", "get_params"], [30, 3, 1, "", "plot"], [30, 3, 1, "", "score"], [30, 3, 1, "", "set_params"]], "wildboar.linear_model": [[38, 2, 1, "", "CastorClassifier"], [38, 2, 1, "", "DilatedShapeletClassifier"], [38, 2, 1, "", "HydraClassifier"], [38, 2, 1, "", "RandomShapeletClassifier"], [38, 2, 1, "", "RandomShapeletRegressor"], [38, 2, 1, "", "RocketClassifier"], [38, 2, 1, "", "RocketRegressor"], [34, 0, 0, "-", "_hydra"], [35, 0, 0, "-", "_rocket"], [36, 0, 0, "-", "_shapelet"], [37, 0, 0, "-", "_transform"]], "wildboar.linear_model.CastorClassifier": [[38, 3, 1, "", "get_metadata_routing"], [38, 3, 1, "", "get_params"], [38, 3, 1, "", "score"], [38, 3, 1, "", "set_params"]], "wildboar.linear_model.DilatedShapeletClassifier": [[38, 3, 1, "", "get_metadata_routing"], [38, 3, 1, "", "get_params"], [38, 3, 1, "", "score"], [38, 3, 1, "", "set_params"]], "wildboar.linear_model.HydraClassifier": [[38, 3, 1, "", "get_metadata_routing"], [38, 3, 1, "", "get_params"], [38, 3, 1, "", "score"], [38, 3, 1, "", "set_params"]], "wildboar.linear_model.RandomShapeletClassifier": [[38, 3, 1, "", "get_metadata_routing"], [38, 3, 1, "", "get_params"], [38, 3, 1, "", "score"], [38, 3, 1, "", "set_params"]], "wildboar.linear_model.RandomShapeletRegressor": [[38, 3, 1, "", "get_metadata_routing"], [38, 3, 1, "", "get_params"], [38, 3, 1, "", "score"], [38, 3, 1, "", "set_params"]], "wildboar.linear_model.RocketClassifier": [[38, 3, 1, "", "get_metadata_routing"], [38, 3, 1, "", "get_params"], [38, 3, 1, "", "score"], [38, 3, 1, "", "set_params"]], "wildboar.linear_model.RocketRegressor": [[38, 3, 1, "", "get_metadata_routing"], [38, 3, 1, "", "get_params"], [38, 3, 1, "", "score"], [38, 3, 1, "", "set_params"]], "wildboar.linear_model._hydra": [[34, 2, 1, "", "HydraClassifier"]], "wildboar.linear_model._hydra.HydraClassifier": [[34, 3, 1, "", "get_metadata_routing"], [34, 3, 1, "", "get_params"], [34, 3, 1, "", "score"], [34, 3, 1, "", "set_params"]], "wildboar.linear_model._rocket": [[35, 2, 1, "", "RocketClassifier"], [35, 2, 1, "", "RocketRegressor"]], "wildboar.linear_model._rocket.RocketClassifier": [[35, 3, 1, "", "get_metadata_routing"], [35, 3, 1, "", "get_params"], [35, 3, 1, "", "score"], [35, 3, 1, "", "set_params"]], "wildboar.linear_model._rocket.RocketRegressor": [[35, 3, 1, "", "get_metadata_routing"], [35, 3, 1, "", "get_params"], [35, 3, 1, "", "score"], [35, 3, 1, "", "set_params"]], "wildboar.linear_model._shapelet": [[36, 2, 1, "", "CastorClassifier"], [36, 2, 1, "", "DilatedShapeletClassifier"], [36, 2, 1, "", "RandomShapeletClassifier"], [36, 2, 1, "", "RandomShapeletRegressor"]], "wildboar.linear_model._shapelet.CastorClassifier": [[36, 3, 1, "", "get_metadata_routing"], [36, 3, 1, "", "get_params"], [36, 3, 1, "", "score"], [36, 3, 1, "", "set_params"]], "wildboar.linear_model._shapelet.DilatedShapeletClassifier": [[36, 3, 1, "", "get_metadata_routing"], [36, 3, 1, "", "get_params"], [36, 3, 1, "", "score"], [36, 3, 1, "", "set_params"]], "wildboar.linear_model._shapelet.RandomShapeletClassifier": [[36, 3, 1, "", "get_metadata_routing"], [36, 3, 1, "", "get_params"], [36, 3, 1, "", "score"], [36, 3, 1, "", "set_params"]], "wildboar.linear_model._shapelet.RandomShapeletRegressor": [[36, 3, 1, "", "get_metadata_routing"], [36, 3, 1, "", "get_params"], [36, 3, 1, "", "score"], [36, 3, 1, "", "set_params"]], "wildboar.linear_model._transform": [[37, 2, 1, "", "BaseTransformClassifier"], [37, 2, 1, "", "BaseTransformEstimator"], [37, 2, 1, "", "BaseTransformRegressor"], [37, 2, 1, "", "TransformRidgeCV"], [37, 2, 1, "", "TransformRidgeClassifierCV"]], "wildboar.linear_model._transform.BaseTransformClassifier": [[37, 3, 1, "", "get_metadata_routing"], [37, 3, 1, "", "get_params"], [37, 3, 1, "", "score"], [37, 3, 1, "", "set_params"]], "wildboar.linear_model._transform.BaseTransformEstimator": [[37, 3, 1, "", "get_metadata_routing"], [37, 3, 1, "", "get_params"], [37, 3, 1, "", "set_params"]], "wildboar.linear_model._transform.BaseTransformRegressor": [[37, 3, 1, "", "get_metadata_routing"], [37, 3, 1, "", "get_params"], [37, 3, 1, "", "score"], [37, 3, 1, "", "set_params"]], "wildboar.linear_model._transform.TransformRidgeCV": [[37, 3, 1, "", "get_metadata_routing"], [37, 3, 1, "", "get_params"], [37, 3, 1, "", "score"], [37, 3, 1, "", "set_params"]], "wildboar.linear_model._transform.TransformRidgeClassifierCV": [[37, 3, 1, "", "get_metadata_routing"], [37, 3, 1, "", "get_params"], [37, 3, 1, "", "score"], [37, 3, 1, "", "set_params"]], "wildboar.metrics": [[39, 0, 0, "-", "_cluster"], [40, 0, 0, "-", "_counterfactual"], [41, 1, 1, "", "compactness_score"], [41, 1, 1, "", "plausability_score"], [41, 1, 1, "", "proximity_score"], [41, 1, 1, "", "redudancy_score"], [41, 1, 1, "", "relative_proximity_score"], [41, 1, 1, "", "silhouette_samples"], [41, 1, 1, "", "silhouette_score"], [41, 1, 1, "", "validity_score"]], "wildboar.metrics._cluster": [[39, 1, 1, "", "silhouette_samples"], [39, 1, 1, "", "silhouette_score"]], "wildboar.metrics._counterfactual": [[40, 1, 1, "", "compactness_score"], [40, 1, 1, "", "plausability_score"], [40, 1, 1, "", "proximity_score"], [40, 1, 1, "", "redudancy_score"], [40, 1, 1, "", "relative_proximity_score"], [40, 1, 1, "", "validity_score"]], "wildboar.model_selection": [[44, 2, 1, "", "RepeatedOutlierSplit"], [42, 0, 0, "-", "_cv"], [43, 0, 0, "-", "_outlier"], [44, 1, 1, "", "outlier_train_test_split"]], "wildboar.model_selection.RepeatedOutlierSplit": [[44, 3, 1, "", "get_n_splits"], [44, 3, 1, "", "split"]], "wildboar.model_selection._cv": [[42, 2, 1, "", "RepeatedOutlierSplit"]], "wildboar.model_selection._cv.RepeatedOutlierSplit": [[42, 3, 1, "", "get_n_splits"], [42, 3, 1, "", "split"]], "wildboar.model_selection._outlier": [[43, 1, 1, "", "outlier_train_test_split"]], "wildboar.segment": [[47, 2, 1, "", "FlussSegmenter"], [45, 0, 0, "-", "_base"], [46, 0, 0, "-", "_mp"]], "wildboar.segment.FlussSegmenter": [[47, 3, 1, "", "fit"], [47, 3, 1, "", "fit_transform"], [47, 3, 1, "", "get_metadata_routing"], [47, 3, 1, "", "get_params"], [47, 3, 1, "", "predict"], [47, 3, 1, "", "set_output"], [47, 3, 1, "", "set_params"], [47, 3, 1, "", "transform"]], "wildboar.segment._base": [[45, 2, 1, "", "BaseSegmenter"]], "wildboar.segment._base.BaseSegmenter": [[45, 3, 1, "", "fit_transform"], [45, 3, 1, "", "get_metadata_routing"], [45, 3, 1, "", "get_params"], [45, 3, 1, "", "predict"], [45, 3, 1, "", "set_output"], [45, 3, 1, "", "set_params"], [45, 3, 1, "", "transform"]], "wildboar.segment._mp": [[46, 2, 1, "", "FlussSegmenter"]], "wildboar.segment._mp.FlussSegmenter": [[46, 3, 1, "", "fit"], [46, 3, 1, "", "fit_transform"], [46, 3, 1, "", "get_metadata_routing"], [46, 3, 1, "", "get_params"], [46, 3, 1, "", "predict"], [46, 3, 1, "", "set_output"], [46, 3, 1, "", "set_params"], [46, 3, 1, "", "transform"]], "wildboar.transform": [[58, 2, 1, "", "CastorTransform"], [58, 2, 1, "", "DerivativeTransform"], [58, 2, 1, "", "DiffTransform"], [58, 2, 1, "", "DilatedShapeletTransform"], [58, 2, 1, "", "FeatureTransform"], [58, 2, 1, "", "HydraTransform"], [58, 2, 1, "", "IntervalTransform"], [58, 2, 1, "", "MatrixProfileTransform"], [58, 2, 1, "", "PAA"], [58, 2, 1, "", "PivotTransform"], [58, 2, 1, "", "ProximityTransform"], [58, 2, 1, "", "RandomShapeletTransform"], [58, 2, 1, "", "RocketTransform"], [58, 2, 1, "", "SAX"], [58, 2, 1, "", "ShapeletTransform"], [48, 0, 0, "-", "_base"], [49, 0, 0, "-", "_conv"], [50, 0, 0, "-", "_diff"], [51, 0, 0, "-", "_hydra"], [52, 0, 0, "-", "_interval"], [53, 0, 0, "-", "_matrix_profile"], [54, 0, 0, "-", "_pivot"], [55, 0, 0, "-", "_rocket"], [56, 0, 0, "-", "_sax"], [57, 0, 0, "-", "_shapelet"], [58, 1, 1, "", "convolve"], [58, 1, 1, "", "piecewice_aggregate_approximation"], [58, 1, 1, "", "symbolic_aggregate_approximation"]], "wildboar.transform.CastorTransform": [[58, 3, 1, "", "fit"], [58, 3, 1, "", "fit_transform"], [58, 3, 1, "", "get_metadata_routing"], [58, 3, 1, "", "get_params"], [58, 3, 1, "", "set_output"], [58, 3, 1, "", "set_params"], [58, 3, 1, "", "transform"]], "wildboar.transform.DerivativeTransform": [[58, 3, 1, "", "fit_transform"], [58, 3, 1, "", "get_metadata_routing"], [58, 3, 1, "", "get_params"], [58, 3, 1, "", "set_output"], [58, 3, 1, "", "set_params"]], "wildboar.transform.DiffTransform": [[58, 3, 1, "", "fit_transform"], [58, 3, 1, "", "get_metadata_routing"], [58, 3, 1, "", "get_params"], [58, 3, 1, "", "set_output"], [58, 3, 1, "", "set_params"]], "wildboar.transform.DilatedShapeletTransform": [[58, 3, 1, "", "fit"], [58, 3, 1, "", "fit_transform"], [58, 3, 1, "", "get_metadata_routing"], [58, 3, 1, "", "get_params"], [58, 3, 1, "", "set_output"], [58, 3, 1, "", "set_params"], [58, 3, 1, "", "transform"]], "wildboar.transform.FeatureTransform": [[58, 3, 1, "", "fit"], [58, 3, 1, "", "fit_transform"], [58, 3, 1, "", "get_metadata_routing"], [58, 3, 1, "", "get_params"], [58, 3, 1, "", "set_output"], [58, 3, 1, "", "set_params"], [58, 3, 1, "", "transform"]], "wildboar.transform.HydraTransform": [[58, 3, 1, "", "fit"], [58, 3, 1, "", "fit_transform"], [58, 3, 1, "", "get_metadata_routing"], [58, 3, 1, "", "get_params"], [58, 3, 1, "", "set_output"], [58, 3, 1, "", "set_params"], [58, 3, 1, "", "transform"]], "wildboar.transform.IntervalTransform": [[58, 3, 1, "", "fit"], [58, 3, 1, "", "fit_transform"], [58, 3, 1, "", "get_metadata_routing"], [58, 3, 1, "", "get_params"], [58, 3, 1, "", "set_output"], [58, 3, 1, "", "set_params"], [58, 3, 1, "", "transform"]], "wildboar.transform.MatrixProfileTransform": [[58, 3, 1, "", "fit"], [58, 3, 1, "", "fit_transform"], [58, 3, 1, "", "get_metadata_routing"], [58, 3, 1, "", "get_params"], [58, 3, 1, "", "set_output"], [58, 3, 1, "", "set_params"], [58, 3, 1, "", "transform"]], "wildboar.transform.PAA": [[58, 3, 1, "", "fit_transform"], [58, 3, 1, "", "get_metadata_routing"], [58, 3, 1, "", "get_params"], [58, 3, 1, "", "set_output"], [58, 3, 1, "", "set_params"]], "wildboar.transform.PivotTransform": [[58, 3, 1, "", "fit"], [58, 3, 1, "", "fit_transform"], [58, 3, 1, "", "get_metadata_routing"], [58, 3, 1, "", "get_params"], [58, 3, 1, "", "set_output"], [58, 3, 1, "", "set_params"], [58, 3, 1, "", "transform"]], "wildboar.transform.ProximityTransform": [[58, 3, 1, "", "fit_transform"], [58, 3, 1, "", "get_metadata_routing"], [58, 3, 1, "", "get_params"], [58, 3, 1, "", "set_output"], [58, 3, 1, "", "set_params"]], "wildboar.transform.RandomShapeletTransform": [[58, 3, 1, "", "fit"], [58, 3, 1, "", "fit_transform"], [58, 3, 1, "", "get_metadata_routing"], [58, 3, 1, "", "get_params"], [58, 3, 1, "", "set_output"], [58, 3, 1, "", "set_params"], [58, 3, 1, "", "transform"]], "wildboar.transform.RocketTransform": [[58, 3, 1, "", "fit"], [58, 3, 1, "", "fit_transform"], [58, 3, 1, "", "get_metadata_routing"], [58, 3, 1, "", "get_params"], [58, 3, 1, "", "set_output"], [58, 3, 1, "", "set_params"], [58, 3, 1, "", "transform"]], "wildboar.transform.SAX": [[58, 3, 1, "", "fit_transform"], [58, 3, 1, "", "get_metadata_routing"], [58, 3, 1, "", "get_params"], [58, 3, 1, "", "set_output"], [58, 3, 1, "", "set_params"]], "wildboar.transform.ShapeletTransform": [[58, 3, 1, "", "fit"], [58, 3, 1, "", "fit_transform"], [58, 3, 1, "", "get_metadata_routing"], [58, 3, 1, "", "get_params"], [58, 3, 1, "", "set_output"], [58, 3, 1, "", "set_params"], [58, 3, 1, "", "transform"]], "wildboar.transform._base": [[48, 2, 1, "", "BaseAttributeTransform"]], "wildboar.transform._base.BaseAttributeTransform": [[48, 3, 1, "", "fit"], [48, 3, 1, "", "fit_transform"], [48, 3, 1, "", "get_metadata_routing"], [48, 3, 1, "", "get_params"], [48, 3, 1, "", "set_output"], [48, 3, 1, "", "set_params"], [48, 3, 1, "", "transform"]], "wildboar.transform._conv": [[49, 1, 1, "", "convolve"]], "wildboar.transform._diff": [[50, 2, 1, "", "DerivativeTransform"], [50, 2, 1, "", "DiffTransform"]], "wildboar.transform._diff.DerivativeTransform": [[50, 3, 1, "", "fit_transform"], [50, 3, 1, "", "get_metadata_routing"], [50, 3, 1, "", "get_params"], [50, 3, 1, "", "set_output"], [50, 3, 1, "", "set_params"]], "wildboar.transform._diff.DiffTransform": [[50, 3, 1, "", "fit_transform"], [50, 3, 1, "", "get_metadata_routing"], [50, 3, 1, "", "get_params"], [50, 3, 1, "", "set_output"], [50, 3, 1, "", "set_params"]], "wildboar.transform._hydra": [[51, 2, 1, "", "HydraTransform"]], "wildboar.transform._hydra.HydraTransform": [[51, 3, 1, "", "fit"], [51, 3, 1, "", "fit_transform"], [51, 3, 1, "", "get_metadata_routing"], [51, 3, 1, "", "get_params"], [51, 3, 1, "", "set_output"], [51, 3, 1, "", "set_params"], [51, 3, 1, "", "transform"]], "wildboar.transform._interval": [[52, 2, 1, "", "FeatureTransform"], [52, 2, 1, "", "IntervalMixin"], [52, 2, 1, "", "IntervalTransform"]], "wildboar.transform._interval.FeatureTransform": [[52, 3, 1, "", "fit"], [52, 3, 1, "", "fit_transform"], [52, 3, 1, "", "get_metadata_routing"], [52, 3, 1, "", "get_params"], [52, 3, 1, "", "set_output"], [52, 3, 1, "", "set_params"], [52, 3, 1, "", "transform"]], "wildboar.transform._interval.IntervalTransform": [[52, 3, 1, "", "fit"], [52, 3, 1, "", "fit_transform"], [52, 3, 1, "", "get_metadata_routing"], [52, 3, 1, "", "get_params"], [52, 3, 1, "", "set_output"], [52, 3, 1, "", "set_params"], [52, 3, 1, "", "transform"]], "wildboar.transform._matrix_profile": [[53, 2, 1, "", "MatrixProfileTransform"]], "wildboar.transform._matrix_profile.MatrixProfileTransform": [[53, 3, 1, "", "fit"], [53, 3, 1, "", "fit_transform"], [53, 3, 1, "", "get_metadata_routing"], [53, 3, 1, "", "get_params"], [53, 3, 1, "", "set_output"], [53, 3, 1, "", "set_params"], [53, 3, 1, "", "transform"]], "wildboar.transform._pivot": [[54, 2, 1, "", "PivotMixin"], [54, 2, 1, "", "PivotTransform"], [54, 2, 1, "", "ProximityTransform"]], "wildboar.transform._pivot.PivotTransform": [[54, 3, 1, "", "fit"], [54, 3, 1, "", "fit_transform"], [54, 3, 1, "", "get_metadata_routing"], [54, 3, 1, "", "get_params"], [54, 3, 1, "", "set_output"], [54, 3, 1, "", "set_params"], [54, 3, 1, "", "transform"]], "wildboar.transform._pivot.ProximityTransform": [[54, 3, 1, "", "fit_transform"], [54, 3, 1, "", "get_metadata_routing"], [54, 3, 1, "", "get_params"], [54, 3, 1, "", "set_output"], [54, 3, 1, "", "set_params"]], "wildboar.transform._rocket": [[55, 2, 1, "", "RocketMixin"], [55, 2, 1, "", "RocketTransform"]], "wildboar.transform._rocket.RocketTransform": [[55, 3, 1, "", "fit"], [55, 3, 1, "", "fit_transform"], [55, 3, 1, "", "get_metadata_routing"], [55, 3, 1, "", "get_params"], [55, 3, 1, "", "set_output"], [55, 3, 1, "", "set_params"], [55, 3, 1, "", "transform"]], "wildboar.transform._sax": [[56, 2, 1, "", "Binning"], [56, 2, 1, "", "NormalBinning"], [56, 2, 1, "", "PAA"], [56, 2, 1, "", "SAX"], [56, 2, 1, "", "UniformBinning"], [56, 1, 1, "", "piecewice_aggregate_approximation"], [56, 1, 1, "", "symbolic_aggregate_approximation"]], "wildboar.transform._sax.Binning": [[56, 3, 1, "", "get_thresholds"], [56, 3, 1, "", "scale"]], "wildboar.transform._sax.NormalBinning": [[56, 3, 1, "", "get_thresholds"], [56, 3, 1, "", "scale"]], "wildboar.transform._sax.PAA": [[56, 3, 1, "", "fit_transform"], [56, 3, 1, "", "get_metadata_routing"], [56, 3, 1, "", "get_params"], [56, 3, 1, "", "set_output"], [56, 3, 1, "", "set_params"]], "wildboar.transform._sax.SAX": [[56, 3, 1, "", "fit_transform"], [56, 3, 1, "", "get_metadata_routing"], [56, 3, 1, "", "get_params"], [56, 3, 1, "", "set_output"], [56, 3, 1, "", "set_params"]], "wildboar.transform._sax.UniformBinning": [[56, 3, 1, "", "get_thresholds"], [56, 3, 1, "", "scale"]], "wildboar.transform._shapelet": [[57, 2, 1, "", "CastorTransform"], [57, 2, 1, "", "DilatedShapeletTransform"], [57, 2, 1, "", "RandomShapeletMixin"], [57, 2, 1, "", "RandomShapeletTransform"], [57, 2, 1, "", "ShapeletMixin"], [57, 2, 1, "", "ShapeletTransform"]], "wildboar.transform._shapelet.CastorTransform": [[57, 3, 1, "", "fit"], [57, 3, 1, "", "fit_transform"], [57, 3, 1, "", "get_metadata_routing"], [57, 3, 1, "", "get_params"], [57, 3, 1, "", "set_output"], [57, 3, 1, "", "set_params"], [57, 3, 1, "", "transform"]], "wildboar.transform._shapelet.DilatedShapeletTransform": [[57, 3, 1, "", "fit"], [57, 3, 1, "", "fit_transform"], [57, 3, 1, "", "get_metadata_routing"], [57, 3, 1, "", "get_params"], [57, 3, 1, "", "set_output"], [57, 3, 1, "", "set_params"], [57, 3, 1, "", "transform"]], "wildboar.transform._shapelet.RandomShapeletTransform": [[57, 3, 1, "", "fit"], [57, 3, 1, "", "fit_transform"], [57, 3, 1, "", "get_metadata_routing"], [57, 3, 1, "", "get_params"], [57, 3, 1, "", "set_output"], [57, 3, 1, "", "set_params"], [57, 3, 1, "", "transform"]], "wildboar.transform._shapelet.ShapeletTransform": [[57, 3, 1, "", "fit"], [57, 3, 1, "", "fit_transform"], [57, 3, 1, "", "get_metadata_routing"], [57, 3, 1, "", "get_params"], [57, 3, 1, "", "set_output"], [57, 3, 1, "", "set_params"], [57, 3, 1, "", "transform"]], "wildboar.tree": [[63, 2, 1, "", "ExtraShapeletTreeClassifier"], [63, 2, 1, "", "ExtraShapeletTreeRegressor"], [63, 2, 1, "", "IntervalTreeClassifier"], [63, 2, 1, "", "IntervalTreeRegressor"], [63, 2, 1, "", "PivotTreeClassifier"], [63, 2, 1, "", "ProximityTreeClassifier"], [63, 2, 1, "", "RocketTreeClassifier"], [63, 2, 1, "", "RocketTreeRegressor"], [63, 2, 1, "", "ShapeletTreeClassifier"], [63, 2, 1, "", "ShapeletTreeRegressor"], [59, 0, 0, "-", "_base"], [60, 0, 0, "-", "_plot"], [61, 0, 0, "-", "_ptree"], [62, 0, 0, "-", "_tree"], [63, 1, 1, "", "plot_tree"]], "wildboar.tree.ExtraShapeletTreeClassifier": [[63, 3, 1, "", "apply"], [63, 3, 1, "", "decision_path"], [63, 3, 1, "", "fit"], [63, 3, 1, "", "get_metadata_routing"], [63, 3, 1, "", "get_params"], [63, 3, 1, "", "predict"], [63, 3, 1, "", "predict_proba"], [63, 3, 1, "", "score"], [63, 3, 1, "", "set_params"]], "wildboar.tree.ExtraShapeletTreeRegressor": [[63, 3, 1, "", "apply"], [63, 3, 1, "", "decision_path"], [63, 3, 1, "", "fit"], [63, 3, 1, "", "get_metadata_routing"], [63, 3, 1, "", "get_params"], [63, 3, 1, "", "predict"], [63, 3, 1, "", "score"], [63, 3, 1, "", "set_params"]], "wildboar.tree.IntervalTreeClassifier": [[63, 3, 1, "", "apply"], [63, 3, 1, "", "decision_path"], [63, 3, 1, "", "fit"], [63, 3, 1, "", "get_metadata_routing"], [63, 3, 1, "", "get_params"], [63, 3, 1, "", "predict"], [63, 3, 1, "", "predict_proba"], [63, 3, 1, "", "score"], [63, 3, 1, "", "set_params"]], "wildboar.tree.IntervalTreeRegressor": [[63, 3, 1, "", "apply"], [63, 3, 1, "", "decision_path"], [63, 3, 1, "", "fit"], [63, 3, 1, "", "get_metadata_routing"], [63, 3, 1, "", "get_params"], [63, 3, 1, "", "predict"], [63, 3, 1, "", "score"], [63, 3, 1, "", "set_params"]], "wildboar.tree.PivotTreeClassifier": [[63, 3, 1, "", "apply"], [63, 3, 1, "", "decision_path"], [63, 3, 1, "", "fit"], [63, 3, 1, "", "get_metadata_routing"], [63, 3, 1, "", "get_params"], [63, 3, 1, "", "predict"], [63, 3, 1, "", "predict_proba"], [63, 3, 1, "", "score"], [63, 3, 1, "", "set_params"]], "wildboar.tree.ProximityTreeClassifier": [[63, 3, 1, "", "apply"], [63, 3, 1, "", "decision_path"], [63, 3, 1, "", "fit"], [63, 3, 1, "", "get_metadata_routing"], [63, 3, 1, "", "get_params"], [63, 3, 1, "", "predict"], [63, 3, 1, "", "predict_proba"], [63, 3, 1, "", "score"], [63, 3, 1, "", "set_params"]], "wildboar.tree.RocketTreeClassifier": [[63, 3, 1, "", "apply"], [63, 3, 1, "", "decision_path"], [63, 3, 1, "", "fit"], [63, 3, 1, "", "get_metadata_routing"], [63, 3, 1, "", "get_params"], [63, 3, 1, "", "predict"], [63, 3, 1, "", "predict_proba"], [63, 3, 1, "", "score"], [63, 3, 1, "", "set_params"]], "wildboar.tree.RocketTreeRegressor": [[63, 3, 1, "", "apply"], [63, 3, 1, "", "decision_path"], [63, 3, 1, "", "fit"], [63, 3, 1, "", "get_metadata_routing"], [63, 3, 1, "", "get_params"], [63, 3, 1, "", "predict"], [63, 3, 1, "", "score"], [63, 3, 1, "", "set_params"]], "wildboar.tree.ShapeletTreeClassifier": [[63, 3, 1, "", "apply"], [63, 3, 1, "", "decision_path"], [63, 3, 1, "", "fit"], [63, 3, 1, "", "get_metadata_routing"], [63, 3, 1, "", "get_params"], [63, 3, 1, "", "predict"], [63, 3, 1, "", "predict_proba"], [63, 3, 1, "", "score"], [63, 3, 1, "", "set_params"]], "wildboar.tree.ShapeletTreeRegressor": [[63, 3, 1, "", "apply"], [63, 3, 1, "", "decision_path"], [63, 3, 1, "", "fit"], [63, 3, 1, "", "get_metadata_routing"], [63, 3, 1, "", "get_params"], [63, 3, 1, "", "predict"], [63, 3, 1, "", "score"], [63, 3, 1, "", "set_params"]], "wildboar.tree._base": [[59, 2, 1, "", "BaseTree"], [59, 2, 1, "", "BaseTreeClassifier"], [59, 2, 1, "", "BaseTreeRegressor"]], "wildboar.tree._base.BaseTree": [[59, 3, 1, "", "apply"], [59, 3, 1, "", "decision_path"], [59, 3, 1, "", "get_metadata_routing"], [59, 3, 1, "", "get_params"], [59, 3, 1, "", "set_params"]], "wildboar.tree._base.BaseTreeClassifier": [[59, 3, 1, "", "apply"], [59, 3, 1, "", "decision_path"], [59, 3, 1, "", "fit"], [59, 3, 1, "", "get_metadata_routing"], [59, 3, 1, "", "get_params"], [59, 3, 1, "", "predict"], [59, 3, 1, "", "predict_proba"], [59, 3, 1, "", "score"], [59, 3, 1, "", "set_params"]], "wildboar.tree._base.BaseTreeRegressor": [[59, 3, 1, "", "apply"], [59, 3, 1, "", "decision_path"], [59, 3, 1, "", "fit"], [59, 3, 1, "", "get_metadata_routing"], [59, 3, 1, "", "get_params"], [59, 3, 1, "", "predict"], [59, 3, 1, "", "score"], [59, 3, 1, "", "set_params"]], "wildboar.tree._plot": [[60, 1, 1, "", "plot_tree"]], "wildboar.tree._ptree": [[61, 2, 1, "", "ProximityTreeClassifier"]], "wildboar.tree._ptree.ProximityTreeClassifier": [[61, 3, 1, "", "apply"], [61, 3, 1, "", "decision_path"], [61, 3, 1, "", "fit"], [61, 3, 1, "", "get_metadata_routing"], [61, 3, 1, "", "get_params"], [61, 3, 1, "", "predict"], [61, 3, 1, "", "predict_proba"], [61, 3, 1, "", "score"], [61, 3, 1, "", "set_params"]], "wildboar.tree._tree": [[62, 2, 1, "", "BaseFeatureTreeClassifier"], [62, 2, 1, "", "BaseFeatureTreeRegressor"], [62, 2, 1, "", "DilatedShapeletTreeClassifier"], [62, 2, 1, "", "ExtraShapeletTreeClassifier"], [62, 2, 1, "", "ExtraShapeletTreeRegressor"], [62, 2, 1, "", "IntervalTreeClassifier"], [62, 2, 1, "", "IntervalTreeRegressor"], [62, 2, 1, "", "PivotTreeClassifier"], [62, 2, 1, "", "RocketTreeClassifier"], [62, 2, 1, "", "RocketTreeRegressor"], [62, 2, 1, "", "ShapeletTreeClassifier"], [62, 2, 1, "", "ShapeletTreeRegressor"]], "wildboar.tree._tree.BaseFeatureTreeClassifier": [[62, 3, 1, "", "apply"], [62, 3, 1, "", "decision_path"], [62, 3, 1, "", "fit"], [62, 3, 1, "", "get_metadata_routing"], [62, 3, 1, "", "get_params"], [62, 3, 1, "", "predict"], [62, 3, 1, "", "predict_proba"], [62, 3, 1, "", "score"], [62, 3, 1, "", "set_params"]], "wildboar.tree._tree.BaseFeatureTreeRegressor": [[62, 3, 1, "", "apply"], [62, 3, 1, "", "decision_path"], [62, 3, 1, "", "fit"], [62, 3, 1, "", "get_metadata_routing"], [62, 3, 1, "", "get_params"], [62, 3, 1, "", "predict"], [62, 3, 1, "", "score"], [62, 3, 1, "", "set_params"]], "wildboar.tree._tree.DilatedShapeletTreeClassifier": [[62, 3, 1, "", "apply"], [62, 3, 1, "", "decision_path"], [62, 3, 1, "", "fit"], [62, 3, 1, "", "get_metadata_routing"], [62, 3, 1, "", "get_params"], [62, 3, 1, "", "predict"], [62, 3, 1, "", "predict_proba"], [62, 3, 1, "", "score"], [62, 3, 1, "", "set_params"]], "wildboar.tree._tree.ExtraShapeletTreeClassifier": [[62, 3, 1, "", "apply"], [62, 3, 1, "", "decision_path"], [62, 3, 1, "", "fit"], [62, 3, 1, "", "get_metadata_routing"], [62, 3, 1, "", "get_params"], [62, 3, 1, "", "predict"], [62, 3, 1, "", "predict_proba"], [62, 3, 1, "", "score"], [62, 3, 1, "", "set_params"]], "wildboar.tree._tree.ExtraShapeletTreeRegressor": [[62, 3, 1, "", "apply"], [62, 3, 1, "", "decision_path"], [62, 3, 1, "", "fit"], [62, 3, 1, "", "get_metadata_routing"], [62, 3, 1, "", "get_params"], [62, 3, 1, "", "predict"], [62, 3, 1, "", "score"], [62, 3, 1, "", "set_params"]], "wildboar.tree._tree.IntervalTreeClassifier": [[62, 3, 1, "", "apply"], [62, 3, 1, "", "decision_path"], [62, 3, 1, "", "fit"], [62, 3, 1, "", "get_metadata_routing"], [62, 3, 1, "", "get_params"], [62, 3, 1, "", "predict"], [62, 3, 1, "", "predict_proba"], [62, 3, 1, "", "score"], [62, 3, 1, "", "set_params"]], "wildboar.tree._tree.IntervalTreeRegressor": [[62, 3, 1, "", "apply"], [62, 3, 1, "", "decision_path"], [62, 3, 1, "", "fit"], [62, 3, 1, "", "get_metadata_routing"], [62, 3, 1, "", "get_params"], [62, 3, 1, "", "predict"], [62, 3, 1, "", "score"], [62, 3, 1, "", "set_params"]], "wildboar.tree._tree.PivotTreeClassifier": [[62, 3, 1, "", "apply"], [62, 3, 1, "", "decision_path"], [62, 3, 1, "", "fit"], [62, 3, 1, "", "get_metadata_routing"], [62, 3, 1, "", "get_params"], [62, 3, 1, "", "predict"], [62, 3, 1, "", "predict_proba"], [62, 3, 1, "", "score"], [62, 3, 1, "", "set_params"]], "wildboar.tree._tree.RocketTreeClassifier": [[62, 3, 1, "", "apply"], [62, 3, 1, "", "decision_path"], [62, 3, 1, "", "fit"], [62, 3, 1, "", "get_metadata_routing"], [62, 3, 1, "", "get_params"], [62, 3, 1, "", "predict"], [62, 3, 1, "", "predict_proba"], [62, 3, 1, "", "score"], [62, 3, 1, "", "set_params"]], "wildboar.tree._tree.RocketTreeRegressor": [[62, 3, 1, "", "apply"], [62, 3, 1, "", "decision_path"], [62, 3, 1, "", "fit"], [62, 3, 1, "", "get_metadata_routing"], [62, 3, 1, "", "get_params"], [62, 3, 1, "", "predict"], [62, 3, 1, "", "score"], [62, 3, 1, "", "set_params"]], "wildboar.tree._tree.ShapeletTreeClassifier": [[62, 3, 1, "", "apply"], [62, 3, 1, "", "decision_path"], [62, 3, 1, "", "fit"], [62, 3, 1, "", "get_metadata_routing"], [62, 3, 1, "", "get_params"], [62, 3, 1, "", "predict"], [62, 3, 1, "", "predict_proba"], [62, 3, 1, "", "score"], [62, 3, 1, "", "set_params"]], "wildboar.tree._tree.ShapeletTreeRegressor": [[62, 3, 1, "", "apply"], [62, 3, 1, "", "decision_path"], [62, 3, 1, "", "fit"], [62, 3, 1, "", "get_metadata_routing"], [62, 3, 1, "", "get_params"], [62, 3, 1, "", "predict"], [62, 3, 1, "", "score"], [62, 3, 1, "", "set_params"]], "wildboar.utils": [[64, 0, 0, "-", "_parallel"], [65, 0, 0, "-", "_testing"], [68, 1, 1, "", "check_X_y"], [68, 1, 1, "", "check_array"], [66, 0, 0, "-", "decorators"], [67, 0, 0, "-", "estimator_checks"], [69, 0, 0, "-", "plot"], [70, 0, 0, "-", "validation"], [71, 0, 0, "-", "variable_len"]], "wildboar.utils._parallel": [[64, 1, 1, "", "run_in_parallel"]], "wildboar.utils._testing": [[65, 1, 1, "", "assert_exhaustive_parameter_checks"], [65, 1, 1, "", "assert_parameter_checks"]], "wildboar.utils.decorators": [[66, 1, 1, "", "array_or_scalar"], [66, 1, 1, "", "singleton"], [66, 1, 1, "", "unstable"]], "wildboar.utils.estimator_checks": [[67, 1, 1, "", "check_estimator"]], "wildboar.utils.plot": [[69, 1, 1, "", "plot_frequency_domain"], [69, 1, 1, "", "plot_time_domain"]], "wildboar.utils.validation": [[70, 2, 1, "", "MetricOptions"], [70, 2, 1, "", "SubsequenceMetricOptions"], [70, 1, 1, "", "check_X_y"], [70, 1, 1, "", "check_array"], [70, 1, 1, "", "check_classification_targets"], [70, 1, 1, "", "check_option"], [70, 1, 1, "", "check_type"]], "wildboar.utils.validation.MetricOptions": [[70, 3, 1, "", "is_satisfied_by"]], "wildboar.utils.validation.SubsequenceMetricOptions": [[70, 3, 1, "", "is_satisfied_by"]], "wildboar.utils.variable_len": [[71, 1, 1, "", "get_variable_length"], [71, 1, 1, "", "is_end_of_series"], [71, 1, 1, "", "is_variable_length"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property"}, "terms": {"": [4, 8, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 70, 73, 80, 82, 83, 86, 88, 91, 92, 94], "0": [1, 2, 3, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 42, 43, 44, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 86, 87, 88, 91, 92, 93, 95], "00": [20, 52, 58], "00000000e": [52, 58], "0001": [19, 21], "00019": 83, "00021": 83, "00022": 83, "00028": 83, "00029": 83, "00030": 83, "00032": 83, "00035": 83, "00048": 83, "00052": 83, "00054": 83, "00056": 83, "00061": 83, "00064": 83, "00071": 83, "00074": 83, "00091": 83, "00095": 83, "00096": 83, "00097": 83, "00099": 83, "001": [16, 19, 21, 82], "00100": 83, "00101": 83, "00102": 83, "00103": 83, "00104": 83, "00106": 83, "00107": 83, "00120332": [15, 21], "00136": 83, "00146": 83, "00153": 83, "00181": 83, "00182": 83, "00185": 83, "00189": 83, "00190": 83, "00194": 83, "00195": 83, "00216": 83, "00226": 83, "00278": 83, "00413": 83, "00425122e": 20, "00606825": 83, "0061231459189364": 88, "0061831": 80, "01": [11, 14, 20, 52, 58, 82, 86], "01881424": [15, 21], "02": [20, 52, 58], "02389872e": 20, "03": 20, "03608265e": 20, "03658537": 83, "04": 93, "04521294": 80, "04712544": [55, 58], "05": [8, 11, 14, 20, 23, 24, 29, 31, 36, 38, 42, 43, 44, 52, 57, 58, 62, 82, 91], "05018": [36, 38, 57, 58, 87], "05212617": 80, "06099416": 83, "06307646200002637": 83, "06460666": 83, "06653283e": 20, "06851": 83, "06939656": 83, "07092": 83, "08": [40, 41], "08536585": 83, "08588712e": 20, "08999765": 93, "09010828e": 20, "09056v1": [40, 41], "09269015": 80, "0961576": [15, 21], "09710811": 83, "09711063": 80, "09756098": 83, "09806374": 83, "09954847e": 20, "0x7f262ce95d00": 76, "0x7f3c303384b0": 88, "1": [1, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 91, 92, 93, 95, 96], "10": [1, 3, 11, 14, 15, 21, 23, 24, 25, 32, 34, 35, 36, 37, 38, 52, 54, 55, 57, 58, 61, 62, 63, 69, 82, 83, 87, 88, 93, 96], "100": [11, 14, 23, 24, 25, 28, 29, 31, 32, 54, 58, 61, 63, 69, 76, 80, 82, 83, 86, 88], "1000": [36, 38, 55, 57, 58, 62, 63], "10000": [35, 38, 92, 93], "101": 83, "1024": 87, "10321": 83, "1053": [62, 63], "1085": [62, 63], "109": 83, "10973127": 83, "11": [15, 21, 23, 24, 35, 36, 38, 55, 57, 58, 83, 87], "111": 83, "11131": 83, "11177626": 83, "11248815e": 20, "11514381": 83, "115143810620726": 83, "11526939": [55, 58], "1162": [7, 76], "11914265": 83, "12": [52, 58, 74, 83], "120": 83, "12069088": 80, "12195122": 83, "12209986": 80, "128": 87, "12877": [28, 31], "1297157449999986": 83, "13": [23, 24, 35, 38, 55, 58], "13076667": 83, "13211v2": [40, 41], "13350353": 83, "13364922": 80, "13414634": 83, "1344171278001063": 88, "13489775": 83, "137": 82, "1374": 74, "13964118e": 20, "14": [15, 21, 83], "14157": 83, "142": 86, "1425": 82, "1438": 82, "1454": [55, 58, 87], "146": 83, "14763103": 80, "1495": [55, 58, 87], "15": [52, 58], "150": [7, 52, 58, 76, 80], "1503": [36, 38, 57, 58, 87], "15083281": [15, 21], "15122819": 80, "153": 86, "15611733": 83, "1568": 74, "16": [8, 87, 91], "160": 83, "16256033": 80, "1671": [27, 30, 31, 40, 41, 80], "16754772": 83, "16th": [1, 3, 17, 74], "17": [93, 97], "1700": [27, 30, 31, 40, 41, 80], "17437783e": 20, "17725071": 83, "1821": [52, 58, 86], "18507116": 83, "1852": [52, 58, 86], "18777928": 83, "18811169": 80, "18th": 83, "193": 83, "19309254": 93, "19633603e": [52, 58], "1977": 82, "19807473e": 20, "19960042": 93, "1d": [15, 21, 49, 58, 68, 70, 81, 83], "1dyg3rww_zpd": [74, 92], "1e": [20, 40, 41], "2": [1, 2, 3, 8, 12, 14, 15, 16, 17, 20, 21, 23, 24, 25, 26, 27, 28, 31, 32, 35, 36, 37, 38, 42, 43, 44, 46, 47, 49, 50, 52, 53, 55, 58, 59, 61, 62, 63, 68, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 86, 87, 92, 93, 94, 95, 97], "20": [61, 63, 83, 86], "200": [7, 74, 76, 92], "20000": [74, 92], "2002": 20, "2004": 82, "2005": 82, "2008": 82, "2009": [40, 41], "20106232": 80, "2011": 20, "2012": 83, "2013": [8, 82, 86, 91], "2015": [22, 24, 36, 38, 57, 58, 86, 87], "2016": [1, 3, 17, 62, 63, 74], "2017": [2, 3, 46, 47], "2018": [30, 31, 80], "2019": [23, 24, 52, 58, 61, 63, 86, 96], "2020": [23, 24, 27, 29, 30, 31, 40, 41, 55, 58, 61, 62, 63, 80, 87], "2021": [20, 28, 31, 40, 41, 87, 97], "2022": [36, 38, 57, 58, 87], "2023": [34, 38, 51, 58, 82, 87], "2024": 87, "2028058": 83, "20372777": 80, "204": 83, "207": 80, "208": 83, "20881199": 83, "21": [8, 91], "2101": [40, 41], "21051": 83, "213": 83, "21476510e": [52, 58], "2155": 74, "216": 80, "21688671": 83, "217": 83, "21757": 83, "21780536": 83, "22": 88, "2231": 20, "2240": 20, "23": [23, 24, 35, 36, 37, 38, 59, 62, 63, 93], "23060212": 83, "2356": 74, "239": 86, "23968406e": 20, "24": [55, 58], "244": 83, "24551102": 83, "246": 83, "24606299e": 20, "24621125": [15, 21], "24666667": [55, 58], "24695077": [15, 21], "24823344": 83, "25": [25, 32, 61, 63, 82, 91], "25159669e": 20, "25302505": 80, "25302660e": 20, "25333333": [55, 58], "254": 83, "255": 83, "25609756": 83, "25666948": [15, 21], "26": [55, 58, 77], "262": 83, "26442901e": 20, "26611524": [55, 58], "26666667e": [52, 58], "26677146": 83, "27": [83, 87], "270": 83, "27083874e": 20, "274": 83, "27419835": 83, "27442791e": 20, "276": 83, "27646127": 83, "277": 83, "27919601": [15, 21], "28": 83, "282": 83, "286": [7, 76], "28666866": 80, "28805337e": 20, "28841158": [55, 58], "28th": 20, "29": [22, 24, 86], "29468998": 83, "29476759": 80, "29583168e": 20, "2d": [68, 70, 73, 81, 83], "3": [8, 15, 20, 21, 22, 23, 24, 28, 31, 37, 50, 52, 55, 58, 59, 62, 63, 68, 70, 71, 75, 77, 79, 81, 82, 83, 86, 87, 88, 91], "30": [19, 21, 62, 63, 73, 74, 82, 83, 86], "300": [11, 12, 14, 16, 19, 21, 73, 79, 83], "30000": [74, 92], "30073636": [15, 21], "306": 82, "31": [73, 82], "31570726e": [52, 58], "31634668": 80, "318": 82, "31930140e": 20, "32": [28, 31, 51, 58, 76], "32272574": 80, "32666667": [55, 58], "32964692": 80, "3299048": 83, "33": [52, 58, 86], "33156061": 83, "33281894": 80, "33366128e": 20, "33595675e": 20, "33645889": 80, "33659": 83, "34": [55, 58, 62, 63, 73, 83, 87, 93], "34083722": 83, "34687887e": 20, "34982908": 80, "35333333": [55, 58], "35671953e": 20, "35905618": 83, "35954194e": 20, "35954558": 83, "36": 80, "36613719": 80, "36693984": 93, "36929508": 93, "37925246": 80, "37941185": 80, "38": [57, 58], "38342948e": 20, "38359833": 80, "38897019": 83, "38965963": 83, "39192971": 93, "39410523e": 20, "3d": [68, 70, 73, 81, 83], "4": [7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24, 25, 32, 37, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 71, 74, 75, 80, 82, 83, 86, 87, 88, 91, 97], "40": 83, "40259039e": 20, "40887": 83, "4096": 93, "41023092e": 20, "41066892": 80, "41709413": [55, 58], "41850936": 80, "41892": 83, "41918778": 80, "41943788": [15, 21], "42492836e": 20, "42761": 83, "42765": 83, "42778": 83, "42857143e": [52, 58], "43": [76, 83], "43290016": 80, "43474": 83, "43553": 83, "43925941e": 20, "44": 20, "444": 93, "44590342e": 20, "45333333": [55, 58], "4545415": 80, "45513015": 83, "47": [28, 31], "470": [7, 76], "47311800e": [52, 58], "47333333": [55, 58], "47433305e": 20, "47560976": 83, "48441896e": [52, 58], "48683192": 83, "48742855": 80, "48856368": [15, 21], "4902": [74, 92], "49048": 83, "49142159": 83, "49453": 83, "4975822": 80, "49988": 83, "5": [8, 12, 14, 15, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 38, 40, 41, 52, 55, 57, 58, 62, 63, 69, 74, 80, 82, 83, 87, 91], "50": [11, 14, 20, 76, 80, 83, 88], "50000000e": [52, 58], "50507001": 83, "50583639": 83, "50816474": 83, "50884094": 83, "51": [28, 31], "510": 93, "51047206e": [52, 58], "51158857": 83, "51301643": 80, "51333333": [55, 58], "52170730e": 20, "5265": 92, "52666667": [55, 58], "5286341": 93, "53269314e": 20, "5347352": 80, "53756324": [55, 58], "53921955": 93, "54": [55, 58, 83], "54666287e": 20, "54666667": [55, 58], "55193242": 83, "5536877": 83, "55527": 83, "55538": 83, "55819192e": 20, "56": [7, 76], "56024904": 83, "56196": 83, "56287": 83, "56436416e": 20, "56698045": 83, "56701557e": 20, "56791544": 80, "5716536": 80, "58025": 83, "5807386": 80, "58982": 83, "59": 93, "59627": 83, "59657389e": 20, "59756098": 83, "59786396": 83, "59799892": 80, "6": [11, 14, 15, 20, 21, 52, 58, 73, 75, 82, 83, 86], "60": [7, 76, 83], "600": [7, 76], "60000000e": [52, 58], "60035454": 93, "60041068": 83, "60301954": 83, "60441308e": 20, "60658533": 83, "60786006": 83, "60983434e": 20, "61": 93, "61275": 83, "61924171e": 20, "62": [27, 30, 31, 40, 41, 80], "62554784": 83, "6364614": 80, "64": [34, 36, 38, 51, 57, 58, 76, 87, 93, 96], "64041732": 83, "64184026e": 20, "64275557": 80, "64445581": 83, "64634146": 83, "65": [11, 12, 14, 79], "65083422": 83, "653": 87, "65346307": [15, 21], "65634235": [55, 58], "65779399": 93, "66": [37, 55, 58], "66077834": 80, "66240546": 80, "66371456": 83, "66394": 83, "664": 87, "66537309": 80, "668": 76, "67113": 83, "67630249": [55, 58], "6790517": 83, "68666667": [55, 58], "688": 76, "7": [15, 20, 21, 23, 24, 35, 38, 52, 55, 57, 58, 83, 87, 88], "70000000e": [52, 58], "70155561": [15, 21], "70210329e": 20, "70502518e": [52, 58], "71210092": [55, 58], "71408958e": 20, "71443248e": 20, "71687181e": 20, "72118437e": 20, "72681005": [15, 21], "72938203": [55, 58], "73": 83, "73285": 83, "73293560e": [52, 58], "73352049e": 20, "73408875": 83, "7374294": 93, "74405634": 80, "74926655": 80, "75": 91, "75114125": 83, "75219094": [15, 21], "75595579": [15, 21], "75622584": 83, "75645164": 83, "75967": 83, "76": 83, "76357782e": 20, "77": 88, "77490053e": 20, "7757554": 80, "77697444e": 20, "78": 88, "78345146e": 20, "7870391": 80, "79102936": 83, "79202": 83, "79583152": [15, 21], "7lcgyel0y2nhtkr2fi0o": [74, 92], "8": [15, 19, 20, 21, 34, 36, 38, 51, 52, 57, 58, 62, 69, 74, 87, 93, 97], "80": [11, 14, 80, 87], "80000000e": [52, 58], "80524683e": 20, "80533684": [55, 58], "81": 83, "81245725": 83, "81260641": [55, 58], "8152728": 80, "81597243": [15, 21], "82": [7, 76], "82203705": [55, 58], "82372": 83, "8250243865539288": 88, "82518334e": 20, "82717462e": 20, "82912261": [55, 58], "83": 88, "83139294": [15, 21], "83210644": 83, "83231": 83, "8380654": [55, 58], "84": [80, 93], "84117007": 93, "84227457": 83, "85": 83, "8533333333333334": 86, "85367621": 83, "85497117": 83, "85575661": [55, 58], "85832342e": 20, "85972633": 83, "86093158": 80, "86658733": 83, "8674": [23, 24], "86957415": 83, "87686": 83, "87851584": 80, "88": 83, "89": 88, "89974643e": [52, 58], "9": [13, 14, 15, 20, 21, 34, 38, 51, 52, 57, 58, 78, 79, 87], "90000000e": [52, 58], "90476179": 80, "90873852e": [52, 58], "90920635": 83, "91": 88, "9142979223080065": 88, "92": 79, "92207": 83, "93690730e": 20, "94": 88, "94631": 83, "9466666666666667": 86, "94724793": [55, 58], "949": [62, 63], "95": 88, "954": 93, "95506": 83, "96": 80, "96041": 83, "96086309": 83, "96522188": 80, "9666666666666667": 86, "9733333333333334": 86, "97539989e": 20, "97686": 83, "979": [62, 63], "98": 79, "98047216": [55, 58], "98268": 83, "98282": 83, "98368": 83, "98654485e": 20, "9866666666666667": [22, 24, 86], "990342405618964": 87, "99043671": 83, "9929762949956101": 87, "99355168e": 20, "99489626": 83, "9982440737489026": 87, "9991220368744512": 87, "99915956e": 20, "A": [4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 91, 92, 97], "And": 79, "As": [52, 58, 73, 76, 78, 82, 83, 93], "At": [12, 14, 79, 86], "But": 86, "By": [8, 23, 24, 25, 32, 34, 35, 36, 38, 51, 54, 56, 58, 61, 63, 68, 69, 70, 73, 75, 78, 79, 83, 86, 87, 91, 92, 93, 97], "For": [8, 11, 13, 14, 15, 21, 23, 24, 35, 36, 37, 38, 48, 51, 52, 54, 55, 57, 58, 59, 61, 62, 63, 73, 74, 76, 77, 78, 81, 82, 83, 86, 87, 88, 93, 95, 96], "If": [2, 3, 4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 74, 76, 78, 83, 87, 88, 91, 95, 97], "In": [1, 2, 3, 8, 17, 19, 20, 21, 22, 23, 24, 30, 31, 34, 35, 36, 37, 38, 46, 47, 52, 58, 59, 61, 62, 63, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 91, 92, 93, 97], "It": [52, 73, 74, 80, 86, 87, 92, 94], "Not": [19, 21, 23, 24], "Of": [80, 93], "On": [79, 80, 82, 83, 86, 88, 92, 93], "One": [35, 36, 38, 73, 74, 76, 77, 80, 88], "Or": 83, "Such": 66, "That": 78, "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97], "Then": [73, 93], "There": 95, "These": [74, 80, 82, 83, 87, 92], "To": [28, 31, 62, 63, 74, 76, 77, 78, 80, 81, 91, 95, 97], "_": [15, 21, 88], "__": [4, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63], "__init__": [37, 50, 58, 59, 62], "_attr": [60, 63], "_counterfactu": [26, 31], "_elastic_": 82, "_estimator_typ": [37, 59, 62], "_euclidean": 83, "_get_gener": [52, 55], "_metric": [15, 16, 21, 28, 31, 36, 38, 40, 41, 45, 46, 47, 57, 58], "_o": 29, "_pairs_": 83, "_preprocess": 7, "_subsequence_metr": [15, 21], "_summar": [23, 24, 52, 58, 62, 63], "_test": 78, "_threshold_": 83, "_train": 78, "ab": [17, 23, 24, 62, 63], "abandon": 83, "abl": 88, "abnorm": 80, "about": [11, 13, 14, 15, 16, 19, 21, 23, 24, 28, 31, 36, 38, 39, 40, 41, 45, 46, 47, 52, 54, 55, 57, 58, 60, 61, 62, 63, 68, 70, 73, 83, 86], "abov": [11, 14, 36, 38, 57, 58, 73, 77, 82, 86, 88], "absolut": [9, 40, 41, 62, 63, 77], "abstract": [6, 7, 29, 56], "accept": [23, 24, 34, 38, 51, 58, 68, 70, 73, 76, 77, 78, 82, 83, 97], "access": [73, 95], "accompani": 74, "accomplish": [77, 83], "accord": [8, 15, 17, 21, 23, 24, 35, 38, 55, 56, 58, 62, 63, 69, 78, 91], "accordingli": 92, "account": 93, "accur": [34, 38, 51, 55, 58, 83, 85, 87], "accuraci": [19, 21, 22, 23, 24, 34, 35, 36, 37, 38, 40, 41, 59, 61, 62, 63, 79, 80, 86, 87, 88, 97], "accuracy_scor": 37, "achiev": [73, 86, 93], "acm": [8, 82, 83, 91], "acquir": 73, "across": [16, 21, 83], "activ": [93, 95], "actual": 83, "ad": [7, 10, 11, 12, 13, 14, 15, 19, 21, 23, 24, 26, 27, 30, 31, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 79, 97], "add": [12, 14, 23, 24, 30, 31, 62, 63, 67, 69, 70, 79, 97], "addit": [10, 11, 12, 13, 14, 19, 21, 45, 46, 47, 50, 53, 54, 56, 58, 73, 76, 81, 83, 97], "addition": [78, 88], "adher": 67, "adjust": [62, 63, 82, 87, 92], "advanc": 76, "advis": [83, 86], "after": [88, 97], "aggreg": [30, 31, 56, 58, 86], "agnost": [2, 3, 29, 31, 46, 47], "ahm": [23, 24, 61, 63, 86], "akin": 87, "al": [1, 2, 3, 8, 17, 20, 23, 24, 46, 47, 51, 58, 61, 62, 63, 74, 80, 86, 87, 91, 93, 97], "alert": 97, "algorithm": [8, 12, 14, 16, 19, 20, 21, 30, 31, 33, 74, 75, 77, 79, 80, 82, 93, 97], "align": [20, 25, 29, 32, 40, 41], "all": [1, 3, 4, 6, 7, 8, 11, 13, 14, 15, 17, 19, 21, 22, 23, 24, 25, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 48, 50, 51, 55, 57, 58, 59, 62, 63, 65, 67, 68, 69, 70, 73, 74, 76, 77, 78, 79, 80, 82, 83, 86, 87, 88, 95, 96, 97], "alloc": 86, "allow": [8, 52, 58, 59, 61, 62, 63, 67, 68, 70, 73, 74, 78, 91, 92], "allow_3d": [68, 70], "allow_eo": [68, 70], "allow_nd": [68, 70], "along": [9, 25, 32, 34, 36, 38, 77], "alongsid": 80, "alpha": [11, 14, 23, 24, 34, 35, 36, 37, 38, 62, 63, 69, 97], "alphanumer": 78, "alreadi": [7, 76, 88, 95], "also": [7, 40, 41, 59, 61, 62, 63, 67, 73, 74, 76, 80, 81, 82, 83, 86, 87, 88, 91, 92, 95, 97], "alter": 80, "altern": [78, 80, 96], "although": 80, "alwai": [23, 24, 27, 31, 35, 36, 37, 38, 42, 44, 59, 62, 63, 82], "amerc": 82, "among": [8, 29, 60, 63, 83, 87], "amount": [15, 21, 74], "amplitud": [25, 32, 69], "amplitudeimport": [25, 32], "an": [4, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 28, 29, 31, 34, 35, 36, 38, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 68, 70, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 88, 91, 92, 94, 97], "anaconda": 95, "analog": 87, "analysi": [74, 82, 86, 92, 93], "analyt": 74, "analyz": 92, "angu": [55, 58], "angular": [82, 83], "ani": [7, 8, 17, 59, 61, 62, 63, 78, 79, 80, 81, 82], "annot": [0, 17, 25, 32, 45, 46, 47, 62, 63, 92, 97], "anomal": [43, 44], "anomali": [8, 43, 44, 74, 80, 91, 92], "anomalies_train_s": [23, 24, 43, 44], "anoth": [15, 21, 78, 80, 82, 83, 91], "anthoni": [22, 24, 86], "antoin": [36, 38, 57, 58], "anytim": 74, "api": [10, 11, 12, 13, 14, 19, 21, 23, 24, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 73, 75, 94, 97], "appear": [23, 24, 80], "appli": [7, 8, 11, 14, 15, 21, 49, 58, 59, 61, 62, 63, 76, 88, 93], "applic": [74, 77, 80, 93], "approach": [29, 31, 34, 36, 38, 51, 57, 58, 73, 74, 76, 79, 80, 87, 91, 95], "appropri": [26, 31, 81], "approxim": [8, 17, 56, 58, 83], "apt": [95, 96], "ar": [4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 80, 82, 83, 85, 86, 87, 88, 91, 92, 93, 95, 97], "arang": 77, "arbitrarili": [23, 24, 35, 36, 37, 38, 59, 62, 63], "arc": [2, 3, 46, 47], "arc_curv": [2, 3], "architectur": 96, "archiv": [6, 7, 93], "area": 92, "argmax": 77, "argmin": [74, 83], "argmin_dist": [15, 21, 83], "argmin_subsequence_dist": [15, 21], "argpartit": 83, "argument": [4, 7, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 38, 54, 57, 58, 60, 61, 62, 63, 66, 73, 78, 82, 83, 96, 97], "arithmet": 80, "armi": [62, 63], "around": [2, 3, 16, 19, 21, 39, 41, 46, 47], "arr": 81, "arrai": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 83, 86, 88, 92, 93], "array_or_scalar": 66, "arrow": [60, 63], "arrow_arg": [60, 63], "arrowstyl": [60, 63], "articularywordrecognit": 7, "artifici": [36, 38, 57, 58, 87], "arxiv": [36, 38, 40, 41, 57, 58, 87], "asarrai": 81, "ascend": 92, "ascertain": 87, "assert": 65, "assert_exhaustive_parameter_check": 65, "assert_parameter_check": 65, "asset": 76, "assign": [8, 19, 21, 28, 31, 73, 80, 86, 88, 91, 92, 93], "associ": [23, 24, 34, 35, 36, 38, 61, 62, 63], "assum": [56, 58, 69, 75, 77, 78, 80, 81], "athitso": 82, "atol": [40, 41], "attempt": [68, 70], "attr": 88, "attribut": [7, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 51, 55, 57, 58, 59, 60, 61, 62, 63, 65, 73, 76, 78, 86, 88, 93], "august": 83, "author": [28, 31], "auto": [1, 3, 12, 14, 15, 16, 19, 21, 22, 23, 24, 27, 29, 31, 35, 36, 38, 54, 57, 58, 61, 62, 63, 80], "automat": [17, 50, 58, 60, 63, 95], "auxiliari": 96, "avail": [8, 78, 83, 86, 87, 88], "avareg": [40, 41], "averag": [20, 23, 24, 40, 41, 80, 93], "avoid": [83, 95], "ax": [4, 25, 27, 28, 29, 30, 31, 32, 60, 63, 69, 74, 77], "axi": [25, 32, 59, 61, 62, 63, 66, 68, 70, 77, 83], "b": [40, 41, 80, 83, 86], "backward": [12, 14, 79, 97], "bad": 73, "bag": [23, 24], "baggingclassifi": [23, 24], "baggingregressor": [23, 24], "bagnal": [22, 24, 86], "bake": [7, 73], "balanc": [23, 24, 34, 35, 36, 38, 61, 62, 63], "balanced_accuracy_scor": [23, 24], "bar": 7, "bart": [23, 24, 61, 63, 86], "barycent": [19, 20, 21], "base": [0, 5, 6, 7, 8, 12, 14, 20, 23, 24, 25, 26, 28, 31, 34, 36, 37, 38, 40, 41, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 74, 78, 79, 82, 86, 95, 96, 97], "base_estim": [23, 24], "baseattributetransform": [48, 51, 52, 54, 55, 57, 58], "basebag": [23, 24], "basecounterfactu": [26, 31], "basedistanceselector": 10, "baseestim": [4, 37, 50, 58, 59, 62, 65], "basefeaturetreeclassifi": 62, "basefeaturetreeregressor": 62, "baseforestclassifi": 23, "baseforestregressor": 23, "baselin": [86, 97], "basesegment": 45, "baseshapeletforestclassifi": 23, "baseshapeletforestregressor": 23, "basetransformclassifi": 37, "basetransformestim": 37, "basetransformregressor": 37, "basetre": 59, "basetreeclassifi": 59, "basetreeregressor": 59, "basicmot": 7, "bat": 96, "batch": [30, 31, 64], "batch_siz": [30, 31], "batista": 83, "bbox_arg": [60, 63], "becaus": [23, 24, 35, 36, 37, 38, 59, 62, 63, 74], "beef": [7, 76, 78], "been": [10, 11, 12, 13, 14, 23, 24, 52, 58, 69, 78, 82], "befor": [8, 15, 19, 21, 34, 35, 36, 38, 97], "behavior": [12, 14, 74, 80, 92, 97], "behaviour": [15, 21, 97], "being": [16, 21, 28, 31, 87, 92], "belong": [19, 21, 73, 80, 92], "below": [11, 13, 14, 15, 21, 36, 38, 57, 58, 78, 88, 97], "ben": [52, 58], "benchmark": [8, 76, 80], "benjamin": [23, 24, 61, 63, 86], "benjamini": [11, 14], "best": [12, 14, 15, 16, 21, 23, 24, 26, 29, 31, 35, 36, 37, 38, 57, 58, 59, 62, 63, 79, 83, 97], "beta": 66, "better": [40, 41, 74, 97], "between": [1, 3, 9, 11, 12, 13, 14, 15, 19, 20, 21, 23, 24, 26, 28, 30, 31, 39, 40, 41, 49, 57, 58, 62, 63, 73, 74, 77, 79, 80, 82, 83, 88, 91, 92, 97], "beyond": 74, "bia": [23, 24, 35, 38, 49, 55, 58], "bias_prob": [23, 24, 35, 38, 55, 58, 62, 63], "bin": [25, 32, 56, 58, 69, 91, 95], "binari": [6, 7, 8, 23, 24, 70, 80, 91, 95], "bit": [76, 96], "bonferroni": [11, 14], "bool": [1, 2, 3, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71], "boolean": [10, 11, 12, 13, 14, 20, 45, 46, 47, 71, 92], "bootstrap": [23, 24], "bostr\u00f6m": [62, 63], "both": [8, 15, 17, 20, 21, 22, 24, 38, 49, 58, 68, 70, 75, 77, 78, 82, 83, 87, 88, 91, 92, 93], "bound": [20, 23, 24, 36, 38, 42, 44, 54, 57, 58, 61, 62, 63, 83, 87], "boundari": [46, 47, 92], "boundri": [2, 3], "box": [60, 63], "boxplot": [25, 32], "branch": [60, 61, 63, 86, 88], "break": [73, 92], "brew": 95, "broacast": [15, 21], "broadcast": [15, 17, 21, 26, 31, 83], "broadcast_to": [15, 21], "brows": 76, "brute": 74, "build": [23, 24, 61, 63, 73, 83, 88, 95], "buildtool": 96, "built": [88, 95], "bundl": [6, 7, 76, 78, 91], "bundle_url": 78, "bypass": [59, 61, 62, 63], "c": [1, 3, 17, 23, 24, 68, 70, 73, 74, 82, 86, 87, 96], "cach": [6, 7, 76], "cache_dir": [7, 78], "calcul": [11, 13, 14, 16, 21, 34, 35, 36, 38, 39, 41, 56, 80, 82, 83, 87], "call": [7, 16, 21, 23, 24, 35, 36, 37, 38, 59, 62, 63, 67, 78, 83, 86], "callabl": [5, 7, 9, 11, 12, 14, 15, 21, 25, 26, 28, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 45, 46, 47, 57, 58, 60, 63, 66, 88], "campana": 83, "can": [7, 8, 12, 14, 23, 24, 35, 36, 37, 38, 51, 58, 59, 61, 62, 63, 66, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97], "candid": [30, 31, 40, 41, 74], "cannot": [68, 70], "canon": [52, 58, 86], "captur": [40, 41, 73], "cardiac": 80, "carl": [52, 58], "carri": [59, 61, 62, 63], "case": [23, 24, 28, 31, 60, 63, 82, 83], "castorclassifi": [36, 38, 87], "castortransform": [57, 58], "catch22": [52, 58, 86, 88], "categori": [73, 82], "ceavet": 95, "ceil": [1, 3, 15, 21, 62, 63], "cell": [79, 80, 82, 86, 88, 92, 93], "center": [16, 19, 21], "centroid": [19, 21, 80], "certain": [80, 83], "cf": [28, 31], "cf_pred": 80, "chain": 76, "cham": [28, 31, 87], "chang": [2, 3, 7, 20, 23, 24, 26, 30, 31, 40, 41, 45, 46, 47, 62, 63, 75, 76, 78, 80, 83, 86, 87, 92], "charact": 78, "character": 87, "characterist": [52, 58, 86, 92], "charlott": [23, 24, 61, 63, 86], "cheaper": [35, 36, 38], "chebyshev": [82, 83], "check": [4, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 68, 70, 77, 81, 88, 94], "check_arrai": [68, 70], "check_classification_target": 70, "check_estim": 67, "check_input": [59, 61, 62, 63], "check_opt": 70, "check_typ": 70, "check_x_i": [68, 70], "chen": 82, "child": [59, 61, 62, 63], "children": [60, 63], "choos": [12, 14, 79, 88], "chosen": 88, "christel": [36, 38, 57, 58], "chronolog": 73, "ci": 83, "clasess_": [28, 31], "class": [0, 8, 43, 60, 73, 78, 80, 86, 88, 91, 92, 94, 97], "class_label": [34, 35, 36, 38, 60, 63], "class_weight": [23, 24, 34, 35, 36, 37, 38, 61, 62, 63, 88], "classes_": [19, 21, 23, 24, 29, 31, 59, 60, 61, 62, 63, 80, 88], "classif": [8, 19, 20, 21, 22, 23, 24, 28, 31, 34, 35, 36, 37, 38, 40, 41, 43, 44, 51, 55, 57, 58, 59, 60, 61, 62, 63, 70, 73, 74, 80, 86, 87, 88, 91], "classifi": [8, 19, 21, 22, 23, 24, 27, 30, 31, 32, 35, 36, 37, 38, 51, 58, 61, 62, 63, 67, 73, 79, 80, 86, 87, 88, 93], "classifiermixin": 37, "classnameprefixfeaturesoutmixin": [50, 58], "clear": 7, "clear_cach": 7, "clf": [12, 14, 22, 24, 28, 31, 60, 63, 73, 79, 82, 86, 87, 88], "clf_": 73, "clone": [73, 96], "close": [4, 27, 28, 29, 30, 31, 68, 70, 80, 87], "closensess": [4, 27, 28, 29, 30, 31], "closer": [15, 21, 29, 40, 41], "closest": [8, 15, 19, 21, 28, 29, 31, 40, 41, 45, 46, 47, 74, 83, 92, 97], "cluster": [8, 19, 21, 74, 80, 91, 92], "cluster_centers_": [19, 21], "cluter": 8, "cmap": 69, "cmd": 96, "code": [23, 24, 62, 63, 77, 80, 83, 88, 97], "coeffici": [23, 24, 35, 36, 37, 38, 39, 41, 59, 62, 63], "coffe": [7, 76, 78], "collect": [6, 7, 26, 31, 52, 58, 73, 78, 85, 87, 91, 95], "color": 69, "colorbar": [25, 32], "colormap": 69, "column": [23, 24, 68, 70, 74, 78, 81, 87, 88], "com": [74, 92, 96], "combin": [23, 24, 29, 52, 58, 61, 63, 93], "command": 96, "comment": 82, "common": [76, 77, 81, 82, 83, 95], "commun": 73, "compact": [40, 41], "compactness_scor": [40, 41], "companion": 74, "compar": 86, "comparis": 76, "comparison": [7, 76], "compat": [42, 44, 48, 51, 52, 54, 55, 57, 58, 97], "compens": 93, "compet": [34, 36, 38, 51, 57, 58, 87], "competit": 87, "compil": [95, 96], "complex": [83, 86, 92], "compon": [4, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 78, 83, 93], "components_": [25, 32], "compos": 78, "compris": [80, 87], "comput": [1, 2, 3, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31, 32, 35, 36, 38, 39, 40, 41, 46, 47, 53, 54, 58, 59, 60, 61, 62, 63, 74, 79, 80, 82, 83, 88, 92, 97], "computation": [62, 63, 74], "concept": 94, "concern": 73, "concurr": 83, "condit": [54, 58, 80], "confer": [1, 2, 3, 17, 20, 30, 31, 46, 47, 74, 80, 82, 83, 87], "configur": [10, 11, 12, 13, 14, 19, 21, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 73, 80, 82, 83, 86, 87, 96], "conflict": 95, "conform": 76, "confus": [8, 91], "confusion_estim": 8, "conjunct": [7, 80], "consecut": [19, 21], "consequ": [83, 87], "consid": [8, 13, 14, 15, 16, 21, 23, 24, 40, 41, 43, 44, 61, 62, 63, 73, 86, 97], "consider": 92, "consist": [19, 21, 23, 24, 28, 30, 31, 35, 36, 37, 38, 57, 58, 59, 62, 63, 83, 86, 87, 93], "consol": 96, "constant": [23, 24, 35, 36, 37, 38, 59, 62, 63], "constraint": [8, 65, 70, 82], "construct": [8, 28, 29, 31, 40, 41, 56, 58, 62, 63, 68, 70, 80, 86, 87, 88, 91, 93, 97], "contain": [4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 70, 71, 75, 78, 79, 80, 82, 83, 88, 93, 94, 97], "contamin": [23, 24, 43, 44], "context": [74, 75], "contigu": [7, 68, 70, 73, 74, 88], "continu": [73, 88], "contrari": [42, 44], "contrast": [77, 80, 93], "contribut": 20, "control": [11, 13, 14, 20, 23, 24, 25, 30, 31, 32, 34, 35, 36, 38, 48, 51, 54, 55, 57, 58, 96, 97], "conveni": [16, 21, 39, 41, 73], "convent": [19, 21, 23, 24, 67, 68, 70, 73, 76, 86, 87], "converg": [16, 19, 21], "convers": [68, 70, 87, 88], "convert": [68, 70, 76, 87, 91], "convolut": [23, 24, 34, 35, 38, 49, 51, 55, 58, 62, 63], "convolv": [34, 36, 38, 49, 58], "copi": [68, 70, 83], "core": [19, 21, 23, 24, 34, 35, 38, 48, 51, 52, 54, 55, 58, 83, 86], "correct": [11, 14, 28, 31, 37, 40, 41, 46, 47, 59, 62, 65, 85], "correctli": [19, 21, 22, 23, 24, 34, 35, 36, 37, 38, 59, 61, 62, 63], "correspond": [15, 17, 21, 23, 24, 34, 36, 38, 40, 41, 59, 61, 62, 63, 74, 80, 83, 86, 88, 92, 93], "correspondingli": 88, "cosin": [30, 31, 82, 83], "cost": [20, 30, 31, 46, 47, 82, 83, 97], "could": [77, 80], "couldn": 97, "count": [36, 38, 57, 58, 87, 88, 92, 93], "counterfact": [4, 27, 28, 29, 30, 31], "counterfactu": [0, 4, 40, 41, 73, 97], "counterfactualmixin": 4, "counterfacut": [40, 41], "counterpart": 83, "cpu": 83, "creat": [5, 7, 8, 23, 24, 59, 61, 62, 63, 75, 78, 80, 83, 95, 96], "create_cache_dir": 7, "criteria": 88, "criterion": [23, 24, 61, 62, 63, 88], "critic": 80, "cross": [12, 14, 22, 24, 34, 35, 36, 38, 42, 44, 79, 86], "crucial": [74, 83], "crude": 77, "csr": [23, 24], "csr_arrai": [45, 46, 47], "cumul": 20, "current": [23, 24, 28, 29, 31, 62, 63, 76, 77, 78, 96, 97], "curv": [2, 3, 46, 47], "custom": [22, 23, 24, 52, 58, 61, 63, 86], "cv": [12, 14, 34, 35, 36, 37, 38], "cython": [52, 58, 83], "d": [28, 31, 34, 38, 40, 41, 51, 52, 58, 76, 82, 83, 86, 87, 88], "da": [8, 82, 91], "daili": 74, "dark2": 69, "data": [1, 2, 3, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 26, 29, 30, 31, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 68, 70, 76, 77, 78, 80, 82, 83, 86, 87, 91, 92, 93], "datafram": [10, 11, 12, 13, 14, 19, 21, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58], "dataset": [0, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 28, 31, 32, 34, 35, 36, 38, 43, 44, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 68, 69, 70, 74, 75, 77, 78, 79, 80, 83, 86, 87, 88, 91, 93, 97], "dataset_nam": 78, "dba": 20, "dbscan": 8, "ddtw": [22, 24, 82, 83, 86], "ddtw_distanc": 20, "deal": 77, "debian": [95, 96], "decai": 20, "decis": [23, 24, 30, 31, 59, 60, 61, 62, 63, 80, 86, 97], "decision_funct": [23, 24, 40, 41], "decision_path": [59, 61, 62, 63, 88], "declar": [16, 19, 21, 78], "decomposit": [35, 36, 38], "decreas": [23, 24, 61, 62, 63], "deep": [4, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63], "def": [37, 50, 58, 59, 62, 80, 83], "default": [4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 67, 68, 69, 70, 73, 76, 77, 78, 82, 83, 86, 87, 91, 93, 97], "defin": [12, 14, 23, 24, 35, 36, 37, 38, 50, 54, 56, 57, 58, 59, 61, 62, 63, 78, 80, 87, 88], "degrad": 88, "degre": [30, 31], "delanei": [28, 31, 40, 41, 97], "deleg": [50, 58, 67, 68, 70, 97], "delet": 7, "delin": [80, 87], "demand": [76, 78], "dempsar": 93, "dempster": [34, 38, 51, 55, 58, 87], "dempster_hydra": [51, 58], "deng": 86, "denot": [8, 43, 44, 77, 82, 83, 88], "dens": [35, 36, 38], "densiti": 8, "densitii": 8, "density_outli": 8, "depend": [7, 8, 12, 14, 15, 16, 21, 35, 36, 38, 52, 57, 58, 60, 62, 63, 73, 75, 83, 88, 93, 95, 96], "deprec": [23, 24, 26, 31, 52, 58, 61, 62, 63, 70, 86, 97], "depth": [23, 24, 61, 62, 63, 88, 96], "deriv": [20, 23, 40, 41, 82], "derivativetransform": [50, 58], "descret": [51, 58], "describ": [8, 20, 22, 24, 30, 31, 46, 47, 51, 58, 74, 76, 78, 80, 83, 86, 87, 93, 94], "descript": [6, 7, 8, 66, 78, 91, 94], "design": [73, 74, 87], "desir": [4, 8, 26, 27, 28, 29, 30, 31, 40, 41, 51, 58, 80, 83, 91], "desired_label": 80, "despit": 73, "detail": [3, 7, 8, 21, 50, 58, 62, 63, 83, 94], "detect": [8, 24, 74, 83, 92], "determin": [16, 17, 19, 21, 23, 24, 26, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 44, 52, 57, 58, 59, 60, 62, 63, 78, 86, 87, 88, 91, 97], "dev": 96, "develop": [28, 31, 50, 58, 96, 97], "deviat": [9, 20, 23, 24, 34, 36, 38, 51, 52, 57, 58, 74, 87, 91, 93], "di": 74, "diagnost": [19, 21], "diagon": 20, "dialat": [57, 58, 87], "dict": [4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 70, 76, 78, 82, 86], "dictat": 93, "dictionari": [6, 7, 23, 24, 29, 30, 31, 34, 36, 38, 51, 54, 57, 58, 61, 62, 63, 70, 78, 82, 87], "didn": 97, "dietterich": [8, 91], "differ": [16, 21, 28, 30, 31, 34, 36, 38, 40, 41, 42, 44, 51, 58, 62, 63, 73, 74, 78, 80, 81, 82, 83, 92, 93, 97], "difficult": [8, 91], "difficulti": [8, 91], "difficulty_estim": 8, "difftransform": [50, 51, 58], "digit": 8, "dilat": [15, 21, 36, 38, 49, 57, 58, 93], "dilatedshapeletclassifi": [36, 38, 87], "dilatedshapelettransform": [57, 58], "dilatedshapelettreeclassifi": 62, "dim": [15, 17, 21, 60, 63, 77, 83, 88], "dimens": [9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 34, 36, 38, 40, 41, 53, 58, 60, 63, 68, 70, 73, 75, 76, 77, 81, 83, 87, 97], "dimension": [23, 24], "dimension_select": [0, 79, 97], "dimensionselectormixin": 10, "direct": [12, 14], "directli": [23, 78, 93], "directori": [7, 78, 95], "disabl": [34, 35, 36, 38, 68, 70, 73, 87, 97], "discord": [1, 3, 17, 74], "discov": 74, "discoveri": [11, 14, 22, 23, 24, 34, 38, 51, 52, 55, 58, 61, 62, 63, 83, 86, 87], "discret": [25, 32, 34, 36, 38, 57, 58, 69, 91], "discriminatori": 87, "discuss": 83, "disk": [73, 78], "dispers": [8, 91], "displai": 88, "disregard": [23, 24, 35, 36, 37, 38, 59, 62, 63], "dissimilar": [16, 21], "dissimilarity_param": [16, 21], "dist": [15, 21, 62, 63, 83, 88], "distanc": [0, 1, 2, 3, 8, 11, 12, 13, 14, 22, 23, 24, 25, 28, 30, 31, 32, 36, 38, 39, 40, 41, 45, 46, 47, 54, 57, 58, 61, 62, 63, 74, 79, 80, 82, 86, 87, 88, 92, 97], "distance_profil": [15, 21], "distancevariancethreshold": [13, 14, 79, 97], "distancevariancethresholdifitteddistancevariancethreshold": 79, "distinct": [82, 92], "distinguish": [80, 82], "distribut": [8, 23, 24, 34, 35, 38, 51, 55, 56, 58, 59, 61, 62, 63, 76, 83, 95, 96], "distutils_use_sdk": 96, "divers": [40, 41], "divid": 92, "do": [23, 24, 59, 61, 62, 63, 82, 83, 96, 97], "document": [73, 79, 80, 82, 86, 88, 92, 93, 95, 97], "doe": [7, 8, 42, 44, 51, 58, 73, 82, 83], "domain": [2, 3, 46, 47, 69, 92], "don": [59, 61, 62, 63, 95], "done": 74, "doubl": 87, "down": 92, "download": [6, 7, 74, 76, 78, 80, 88, 92, 93, 96], "download_url": [6, 7], "downstream": [52, 58], "draw": [11, 13, 14, 23, 24, 36, 38, 57, 58], "drawback": 76, "drawn": [23, 24, 88], "drive": [74, 92], "dst": 87, "dtw": [0, 15, 19, 21, 22, 24, 27, 29, 31, 57, 58, 61, 62, 63, 80, 82, 83], "dtw_align": 20, "dtw_averag": 20, "dtw_distanc": 20, "dtw_envelop": 20, "dtw_lb_keogh": 20, "dtw_map": 20, "dtype": [7, 19, 21, 28, 31, 68, 70, 75, 76, 86], "dump": 73, "dure": [19, 21, 30, 31], "dv": [13, 14], "dynam": [20, 23, 24, 61, 62, 63, 80, 82, 83], "dynamictimewarptransform": 29, "e": [8, 15, 16, 20, 21, 23, 24, 28, 30, 31, 40, 41, 62, 63, 68, 70, 73, 74, 75, 76, 77, 78, 82, 83, 86, 87, 88, 91, 95, 96, 97], "each": [2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 92, 93], "earli": 83, "earlier": 73, "eas": 96, "easi": [8, 76], "easier": 92, "ecg": 80, "ecg200": [15, 21, 80], "edit": [82, 96], "edit_penalti": 82, "edr": [82, 83], "effect": [8, 23, 24, 56, 58, 61, 63, 68, 70, 82, 86, 87, 92, 97], "effici": [62, 63, 74, 83, 92, 94, 97], "eigen": [35, 36, 38], "eigendecomposit": [35, 36, 38], "eigenvalu": [35, 36, 38], "either": [8, 20, 43, 44, 57, 58, 59, 61, 62, 63, 70, 73, 76, 78, 80, 83, 86, 88, 91], "elast": [22, 24, 83], "elasticensembleclassifi": [22, 24, 86], "elasticensembleclassifierifittedelasticensembleclassifi": 86, "eleasticensembl": 82, "electrocardiogram": 80, "element": [7, 15, 21, 23, 24, 36, 38, 49, 54, 57, 58, 61, 62, 63, 66, 71, 74, 83], "elimin": 87, "elloumi": [36, 38, 57, 58, 87], "els": 88, "emb": [52, 58], "embed": [48, 51, 52, 54, 55, 57, 58], "embedding_": [48, 51, 55, 57, 58], "embrac": 81, "emmott": 8, "emmott_label": 91, "emmott_outli": [8, 91], "emploi": [80, 83, 87, 93], "empti": [68, 70, 87], "empty_lik": 80, "enabl": [74, 83, 87, 93, 97], "encapsul": [4, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63], "encompass": 83, "end": [25, 32, 59, 61, 62, 63, 68, 70, 75, 77, 81, 92], "endpoint": 78, "enforc": [37, 59, 62, 68, 70], "engin": [48, 82], "enhanc": [87, 97], "ensembl": [0, 73, 80, 88, 91], "ensur": [7, 26, 31, 42, 44, 68, 70, 78, 80, 93], "ensure_2d": [68, 70], "ensure_min_dim": [68, 70], "ensure_min_sampl": [68, 70], "ensure_min_timestep": [68, 70], "ensure_ts_arrai": [68, 70], "entir": 88, "entiti": 92, "entri": 76, "entropi": [23, 24, 61, 62, 63], "enumer": [77, 95], "envelop": 20, "environ": [79, 80, 82, 86, 88, 92, 93, 95, 96], "eo": [68, 70, 71, 75, 77, 81], "ep": [8, 16, 21], "epoch": 20, "epsilon": [30, 31, 82], "equal": [15, 21, 23, 24, 54, 58, 59, 61, 62, 63, 75, 76, 82, 91, 97], "equal_nan": 92, "equi": [25, 32], "equip": 83, "equival": [20, 83, 86], "equvival": [59, 61, 62, 63], "er": 7, "erp": [57, 58, 82, 83], "error": [8, 11, 14, 23, 24, 68, 70, 74, 97], "essenti": [73, 80, 96], "estim": [4, 8, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 70, 73, 76, 79, 80, 81, 82, 83, 85, 91], "estimator_": [28, 29, 31], "estimator_param": 23, "estimators_samples_": [23, 24], "et": [1, 2, 3, 8, 17, 20, 23, 24, 46, 47, 51, 58, 61, 62, 63, 74, 80, 86, 87, 91, 93, 97], "etc": 74, "euclidean": [8, 10, 11, 13, 14, 15, 16, 19, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 36, 38, 39, 40, 41, 45, 46, 47, 57, 58, 62, 63, 74, 80, 82, 83, 86, 87], "euclideantransform": 29, "evalu": [12, 14, 23, 24, 26, 28, 29, 30, 31, 40, 41, 62, 63, 67, 73, 76, 83, 93], "even": [73, 74], "event": 74, "everi": [15, 17, 21, 59, 61, 62, 63, 68, 70, 83, 97], "evid": 83, "exact": [1, 2, 3, 15, 17, 19, 20, 21, 23, 24, 25, 32, 34, 35, 38, 46, 47, 48, 51, 53, 55, 57, 58, 62, 63, 83], "exactli": [17, 28, 31, 76, 81], "examin": 83, "exampl": [3, 7, 8, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 26, 28, 29, 31, 36, 37, 38, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 69, 71, 74, 75, 76, 77, 78, 80, 82, 83, 87, 88, 93, 94], "example1": 78, "exce": [28, 31, 88], "excel": 86, "except": [23, 24, 35, 36, 37, 38, 59, 62, 63, 78, 91], "exception": [55, 58, 87], "exclud": [1, 2, 3, 15, 17, 21, 46, 47, 53, 58], "exclus": [1, 2, 3, 15, 17, 21, 46, 47, 53, 58, 80], "execut": [30, 31, 64], "exemplifi": [74, 78], "exhibit": 93, "exist": [7, 42, 44, 73, 76, 82, 97], "exp": [20, 23, 24, 62, 63], "expand": [23, 24, 62, 63, 87], "expect": [23, 24, 35, 36, 37, 38, 53, 58, 59, 62, 63, 73, 77, 80, 91], "experi": 76, "experiment": 73, "expertis": 92, "explain": [0, 4, 40, 41, 73, 80, 93, 97], "explainer_": [27, 31], "explainermixin": 4, "explan": [4, 25, 26, 27, 28, 29, 30, 31, 32, 40, 41], "explanatori": 76, "exponenti": 93, "export": [74, 92], "expos": 92, "express": [2, 3, 8, 17, 23, 24, 40, 41, 46, 47, 53, 58, 62, 63, 76, 78], "ext": [6, 7], "extend": 65, "extens": [6, 7, 78, 93], "extra": [4, 6, 7, 25, 27, 28, 29, 30, 31, 32, 62, 63, 78, 83], "extract": [60, 63, 86], "extraordinari": 74, "extrashapelettreeclassifi": [62, 63, 88], "extrashapelettreeregressor": [62, 63, 88], "extrashapelettreesclassifi": [23, 24], "extrashapelettreesregressor": [23, 24], "extrem": [23, 24, 74, 83], "extrins": 73, "f": [7, 8, 23, 24, 28, 31, 34, 38, 51, 52, 58, 60, 61, 62, 63, 66, 68, 70, 73, 77, 82, 87, 88, 91], "f_classif": [11, 14], "facil": 8, "facilit": 80, "factual": [40, 41], "fail": [8, 27, 31], "failur": [68, 70], "fall": [23, 24, 73, 82], "fallback": 78, "fals": [1, 2, 3, 7, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 56, 57, 58, 60, 63, 67, 68, 69, 70, 73, 75, 76, 78, 79, 86, 87, 88], "famili": [11, 14], "familiar": 94, "far": 83, "farther": 8, "fashion": 88, "fast": [19, 21, 34, 36, 38, 46, 47, 51, 55, 57, 58, 82, 87], "faster": 83, "fastest": 95, "fdr": [11, 14], "featur": [23, 24, 35, 36, 37, 38, 48, 52, 55, 58, 59, 60, 62, 63, 66, 74, 76, 77, 79, 86, 87, 88, 93, 96, 97], "featuretransform": [52, 58], "fern": [8, 91], "fetch": [23, 24, 96], "few": [8, 40, 41, 79, 95], "fewer": [8, 40, 41], "field": 87, "fig": [74, 77], "figsiz": 74, "figur": 77, "file": [6, 7, 78, 96], "filenam": [6, 7], "fill_valu": [37, 50, 58, 59, 62], "filter": [5, 7, 23, 24, 35, 38, 55, 58, 73, 79, 87], "final": [8, 16, 21, 23, 24, 67], "find": [1, 2, 3, 15, 17, 21, 74, 76, 83, 96, 97], "find_counterfactu": 80, "finit": [68, 70], "first": [15, 17, 20, 21, 23, 24, 36, 38, 51, 54, 57, 58, 61, 62, 63, 68, 70, 74, 78, 80, 81, 83, 86, 88, 91, 92, 93, 96, 97], "fit": [4, 8, 10, 11, 12, 13, 14, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 73, 76, 79, 80, 86, 87, 88, 92, 93], "fit_explain": [4, 25, 27, 28, 29, 30, 31, 32], "fit_intercept": [34, 35, 36, 37, 38], "fit_param": [10, 11, 12, 13, 14, 19, 21, 45, 46, 47, 50, 53, 54, 56, 58], "fit_predict": [19, 21, 23, 24], "fit_transform": [10, 11, 12, 13, 14, 19, 21, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58], "fittedproximitytreeclassifi": 82, "five": 80, "fix": [23, 24, 52, 58, 62, 63, 86, 93, 97], "flag": [35, 36, 38], "flatten": 17, "flip": 80, "float": [1, 2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 52, 53, 55, 56, 57, 58, 59, 61, 62, 63, 68, 69, 70, 71, 75, 76, 82, 86, 97], "float32": [28, 31, 86], "floodmodeling1": 73, "floor": [49, 58], "fluss": [46, 47], "flusssegment": [46, 47, 92], "flusssegmenterifittedflusssegment": 92, "focu": [73, 91], "fold": [42, 44], "folder": 95, "follow": [23, 24, 36, 37, 38, 50, 52, 54, 55, 57, 58, 59, 61, 62, 63, 73, 76, 77, 78, 82, 83, 86, 88, 96], "font": [60, 63], "fontsiz": [60, 63], "footprint": [23, 24], "forc": [7, 35, 36, 38, 68, 70, 74, 76], "force_all_finit": [68, 70], "forecast": [73, 74, 92], "forest": [8, 23, 24, 30, 31, 61, 62, 63, 73], "forestmixin": 23, "form": [4, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 73, 79], "format": [7, 10, 11, 12, 13, 14, 19, 21, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 78, 87, 88], "former": [17, 80], "formul": 86, "forthcom": 87, "fortran": [68, 70], "forward": [12, 14, 79], "found": [15, 21], "four": [88, 91, 97], "fpr": [11, 14], "frac": [23, 24, 35, 36, 37, 38, 59, 62, 63], "fraction": [1, 2, 3, 8, 11, 13, 14, 17, 20, 23, 24, 25, 30, 31, 32, 40, 41, 42, 44, 46, 47, 53, 57, 58, 59, 60, 61, 62, 63, 91, 97], "framework": 73, "fran\u00e7oi": [23, 24, 55, 58, 61, 63, 86], "freqenc": 69, "frequenc": [23, 24, 61, 62, 63, 69, 93], "frequencyimport": [25, 32], "frequent": 74, "from": [1, 3, 6, 7, 8, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 69, 71, 73, 74, 76, 77, 78, 79, 80, 82, 83, 86, 87, 88, 91, 92, 93, 95], "fulcher": [52, 58, 86], "full": [15, 21, 37, 40, 41, 50, 52, 58, 59, 62, 73, 76, 83, 86, 92], "func": 78, "function": [0, 11, 14, 16, 23, 24, 28, 30, 37, 50, 51, 52, 59, 62, 73, 74, 76, 77, 78, 79, 80, 82, 83, 86, 88, 92, 93, 97], "further": 92, "furthermor": [87, 93], "futur": [52, 58, 76, 97], "fwe": [11, 14], "fwer": [11, 14], "g": [8, 19, 20, 21, 29, 31, 34, 38, 51, 57, 58, 73, 76, 77, 82, 83, 86, 87, 88, 91, 95, 96], "gain": 83, "gamma": 29, "gap": [23, 24, 62, 63, 82, 97], "gcv_mode": [35, 36, 37, 38], "gener": [7, 8, 11, 12, 13, 14, 16, 19, 20, 21, 23, 24, 25, 26, 27, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 48, 51, 52, 55, 57, 58, 59, 61, 62, 63, 67, 73, 74, 76, 80, 82, 83, 87, 91, 93], "generate_onli": 67, "geoffrei": [23, 24, 55, 58, 61, 63, 82, 86], "get": [4, 6, 7, 9, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 73, 77, 86, 92, 94], "get_bundl": [6, 7], "get_collect": [6, 7], "get_dimens": [10, 11, 12, 13, 14, 79], "get_feature_names_out": [50, 58], "get_filenam": [6, 7], "get_metadata_rout": [4, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63], "get_n_split": [42, 44], "get_param": [4, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63], "get_repositori": 7, "get_threshold": 56, "get_variable_length": 71, "gharghabi": [2, 3, 46, 47], "gil": [52, 58], "gini": [23, 24, 61, 62, 63], "gioni": [27, 30, 31, 40, 41, 80], "git": 96, "github": [79, 80, 82, 83, 86, 88, 92, 93, 96], "give": [23, 24, 25, 32, 36, 38, 54, 57, 58, 61, 62, 63, 86], "given": [2, 3, 8, 15, 17, 19, 20, 21, 22, 23, 24, 25, 32, 34, 35, 36, 37, 38, 49, 56, 58, 59, 61, 62, 63, 81, 83, 85, 86, 88], "global": [7, 27, 30, 31, 40, 41, 52, 58, 78, 80, 88], "gnu": [78, 95, 96], "goal": [73, 80, 85, 92], "goe": 88, "goethal": [23, 24, 61, 63, 86], "good": [15, 21, 30, 31, 40, 41, 91], "googl": [74, 92], "grabocka": [36, 38, 57, 58, 87], "gradcam": [28, 31], "greater": [76, 79, 88], "greatest": [62, 63], "greedili": [12, 14, 79, 97], "green": [28, 31, 40, 41], "grid": [22, 23, 24, 36, 38, 54, 57, 58, 61, 62, 63, 86], "group": [34, 36, 38, 42, 44, 51, 57, 58, 87, 93], "grow": [28, 31], "gt": [82, 88], "guarante": [8, 73], "guid": [3, 4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 87, 94, 97], "guillaum": [36, 38, 57, 58, 87], "gunpoint": [7, 52, 58, 61, 63, 76, 77, 78], "h": [52, 58, 62, 63, 86], "ha": [8, 15, 21, 23, 24, 40, 41, 52, 56, 58, 61, 62, 63, 66, 68, 69, 70, 74, 75, 78, 79, 80, 82, 83, 86, 87, 88, 93, 97], "had": 93, "half": [12, 14, 34, 36, 38, 83], "halv": 83, "hand": [37, 59, 62], "handl": [6, 7, 76, 92], "hard": 78, "hardest": [8, 91], "harsh": [19, 21, 22, 23, 24, 34, 35, 36, 37, 38, 59, 61, 62, 63], "hash": [74, 78], "have": [4, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 68, 70, 73, 74, 75, 76, 77, 79, 80, 81, 82, 87, 88, 92, 95, 97], "haystack": [15, 21], "heart": 80, "heartbeat": 80, "help": [50, 58, 74, 80, 92], "here": [78, 80, 83, 86, 87, 93, 95], "herrmann": 82, "high": [23, 24], "higher": [15, 21], "highest": [11, 14, 23, 24, 93, 97], "highli": 86, "highlight": [80, 92], "hirschberg": 82, "hochberg": [11, 14], "hold": [73, 82], "homebrew": 95, "homogen": 92, "hope": 76, "how": [4, 10, 11, 12, 13, 14, 16, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 73, 80, 87, 97], "howev": [75, 76, 78, 83, 87, 92], "html": [79, 80, 82, 86, 88, 92, 93], "http": [74, 78, 92, 96], "human": [6, 7], "hydra": [34, 38, 51, 58], "hydraclassifi": [34, 38, 51, 58], "hydratransform": [51, 58, 93], "hydratransformhydratransform": 93, "hyper": 97, "i": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97], "icdm": [1, 3, 17, 30, 31, 74, 80], "id": [74, 88, 92], "identifi": [2, 3, 23, 24, 36, 38, 57, 58, 62, 63, 68, 70, 73, 74, 75, 78, 80, 83, 92, 93], "idx": 83, "ieee": [1, 3, 17, 30, 31, 74, 80, 82], "ieee754": 75, "ignor": [2, 3, 10, 11, 13, 14, 15, 19, 20, 21, 23, 24, 25, 32, 35, 36, 38, 40, 41, 42, 44, 46, 47, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 67, 75], "ignore_i": [57, 58], "imag": 83, "immers": [16, 21], "impact": [40, 41], "implement": [16, 19, 20, 21, 23, 24, 25, 28, 30, 31, 32, 40, 41, 51, 52, 55, 58, 73, 74, 77, 78, 79, 80, 82, 83, 86, 87, 88, 91, 93], "implic": [15, 21], "implicit": [49, 58], "import": [7, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 28, 31, 32, 37, 43, 44, 50, 51, 52, 53, 55, 57, 58, 59, 61, 62, 63, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 86, 87, 88, 91, 92, 93, 97], "importance_": [28, 31, 73], "importances_": [25, 32], "improv": [74, 76, 83, 97], "impur": [23, 24, 61, 62, 63, 88, 97], "impurity_equality_toler": [23, 24, 59, 62, 63, 88, 97], "incic": [40, 41], "includ": [1, 3, 8, 17, 21, 31, 33, 68, 70, 73, 74, 86, 87, 93], "inclus": 82, "incorpor": [80, 87], "increas": [12, 14, 23, 24, 62, 63, 83, 87, 88, 97], "increment": 87, "independ": [62, 63], "independeth": [23, 24], "index": [2, 3, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 23, 24, 25, 29, 32, 45, 46, 47, 57, 58, 59, 61, 62, 63, 74, 75, 81, 83, 87, 88, 92], "indic": [7, 10, 11, 12, 13, 14, 15, 20, 21, 23, 24, 26, 31, 35, 36, 38, 40, 41, 59, 61, 62, 63, 71, 74, 80, 81, 87, 88, 92], "indici": [1, 3, 15, 21, 42, 44], "individu": [40, 41, 77, 92], "indptr": 88, "induc": 93, "inequ": [82, 88], "inf": [8, 68, 70], "infer": [26, 31], "infinit": [68, 70], "influenc": [20, 23, 24, 35, 36, 37, 38, 59, 62, 63], "influenti": 87, "inform": [4, 10, 11, 12, 13, 14, 16, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 73, 74, 80, 86, 87], "inherit": 45, "init": [19, 20, 21], "initi": [16, 19, 20, 21, 29, 62, 63, 78, 80, 88, 93], "inlier": [8, 23, 24, 42, 44, 91], "input": [4, 8, 10, 11, 12, 13, 14, 15, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 49, 50, 53, 54, 56, 57, 58, 59, 61, 62, 63, 68, 70, 71, 73, 80, 81, 83, 87, 93], "input_nam": [68, 70], "insert": [10, 11, 12, 13, 14, 42, 44, 87], "insight": 74, "inspect": [60, 63, 93], "inspir": 79, "instal": [7, 76, 91, 94, 96], "install_repositori": [7, 78], "instanc": [4, 8, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 67, 68, 70, 78, 80, 82, 87, 93], "instanti": 82, "instead": [10, 11, 12, 13, 14, 16, 20, 21, 23, 24, 35, 36, 37, 38, 42, 44, 59, 62, 63, 73, 79, 83, 97], "int": [1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 68, 69, 70, 76, 83, 91], "int64": [19, 21], "integ": [12, 14, 19, 21, 23, 24, 34, 35, 38, 48, 51, 55, 58, 83, 91], "integr": [33, 78], "intellig": [36, 38, 57, 58, 82, 87], "intend": [35, 36, 38], "intens": [62, 63], "interact": 80, "intercept": [34, 35, 36, 38], "interdimension": 83, "interest": 83, "interfac": [73, 78], "intern": [1, 2, 3, 17, 20, 23, 24, 28, 30, 31, 46, 47, 62, 63, 74, 80, 82, 83, 87], "interoper": 73, "interpret": [28, 31, 40, 41, 52, 58, 88], "interv": [8, 23, 24, 25, 28, 31, 32, 40, 41, 52, 56, 58, 62, 63, 73, 74, 87, 91, 97], "intervalforestclassifi": [23, 24, 86], "intervalforestclassifierifittedintervalforestclassifi": 86, "intervalforestregressor": [23, 24], "intervalimport": [25, 28, 31, 32, 73], "intervalmixin": 52, "intervaltransform": [8, 52, 58, 91], "intervaltreeclassifi": [62, 63, 88], "intervaltreeclassifierifittedintervaltreeclassifi": 88, "intervaltreeregressor": [62, 63], "introduc": [10, 11, 12, 13, 14, 19, 21, 23, 24, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 74, 86, 97], "introduct": 94, "intuit": 82, "invers": [23, 24, 61, 62, 63, 80], "inverse_transform": [10, 11, 12, 13, 14], "involv": [73, 74, 83], "irrespect": 73, "irrevers": [30, 31, 80], "is_counterfactu": [4, 26, 29], "is_end_of_seri": [71, 75, 77, 81], "is_explain": 4, "is_fitted_": [37, 59, 62], "is_satisfi": 70, "is_satisfied_bi": 70, "is_variable_length": 71, "isak": [29, 31], "isaksamsten": 96, "iseo": 77, "isnan": [75, 81], "isol": [23, 24, 96], "isolationshapeletforest": [23, 24], "issu": [95, 97], "item": 66, "iter": [12, 14, 16, 19, 21, 28, 31, 34, 35, 36, 38, 42, 44, 76, 79, 87], "its": [9, 17, 23, 24, 52, 53, 58, 62, 63, 68, 69, 70, 74, 76, 82, 88, 92, 95], "itself": [10, 11, 12, 13, 14, 74, 82], "j": [27, 30, 31, 40, 41, 80, 83, 87, 88], "jacm": 82, "jag": 83, "jason": [22, 24, 86], "jeong": 20, "jeong_weight": 20, "jitter": 69, "job": [11, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 28, 31, 34, 35, 36, 38, 46, 47, 48, 51, 53, 55, 57, 58, 64], "join": [1, 2, 3, 17, 53, 58, 62, 63, 74], "jone": [52, 58, 86], "josif": [36, 38, 57, 58], "journal": 82, "json": 7, "jsonrepositori": [6, 7, 78], "june": [74, 87], "jupyt": [79, 80, 82, 86, 88, 92, 93], "just": [23, 24, 75, 96], "k": [8, 11, 14, 15, 19, 21, 23, 24, 25, 27, 31, 32, 61, 63, 80, 83, 86, 91, 97], "karlsson": [27, 30, 31, 40, 41, 62, 63, 80], "kb": 76, "kean": [28, 31, 40, 41], "keep": [7, 23, 24, 35, 36, 37, 38, 59, 62, 63, 97], "keep_last_vers": 7, "kei": [6, 7, 15, 16, 21, 23, 24, 26, 28, 31, 36, 38, 40, 41, 45, 46, 47, 52, 54, 57, 58, 61, 62, 63, 70, 78, 82], "keogh": [20, 83], "kept": [68, 70], "kernel": [8, 11, 13, 14, 23, 24, 34, 35, 36, 37, 38, 49, 51, 55, 57, 58, 59, 62, 63, 87, 91, 93], "kernel_s": [23, 24, 34, 35, 38, 49, 51, 55, 58, 62, 63], "kernel_scal": [25, 32], "kind": [17, 74, 97], "kmean": [19, 21], "kmeans_outli": 8, "kmedoid": [19, 21], "knaut": [52, 58, 86], "knearestprototypesampl": 29, "knearestshapeletprototypesampl": 29, "kneighborclassifi": [19, 21], "kneighborsclassifi": [12, 14, 19, 21, 22, 24, 28, 31, 79, 80], "kneighborsclassifierifittedkneighborsclassifi": 80, "kneighborsclassifierkneighborsclassifi": 79, "kneighborscounterfactu": [27, 31, 80], "knife": [62, 63], "know": [59, 61, 62, 63], "knowledg": [22, 23, 24, 27, 30, 31, 34, 38, 40, 41, 51, 52, 55, 58, 61, 62, 63, 80, 82, 83, 86, 87], "known": [19, 21, 28, 31], "kwarg": [4, 7, 19, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32], "l": [82, 87], "label": [4, 6, 7, 8, 12, 13, 14, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 58, 59, 60, 61, 62, 63, 68, 69, 70, 73, 76, 78, 80, 85, 92, 93], "labels_": [19, 21, 45, 46, 47], "labl": 8, "lachlan": [23, 24, 61, 63, 86], "lambda": 82, "laptop": 83, "lar": [36, 38, 57, 58], "larg": [20, 62, 63, 74, 76, 82, 86, 87, 92, 93], "large_multiclass": 76, "large_multivari": 76, "larger": [12, 14, 23, 24, 40, 41, 62, 63, 69, 73, 81, 82], "largest": [11, 14, 15, 21], "last": [7, 73, 77, 78, 83], "latest": [7, 95, 96], "latter": [4, 10, 11, 12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 80, 83], "layout": [68, 70], "lb_keogh": 20, "lcss": [82, 83], "le": 83, "lead": [23, 24, 80, 87], "leaf": [23, 24, 59, 60, 61, 62, 63, 88], "leaf_id": 88, "learn": [10, 11, 12, 13, 14, 20, 33, 37, 50, 51, 58, 59, 62, 67, 68, 70, 79, 81, 93, 94, 97], "learning_r": 20, "least": [25, 32, 68, 70], "leav": [23, 24, 35, 36, 38, 59, 61, 62, 63, 86], "led": 80, "lee": 87, "left": [37, 59, 62, 88], "leftmost": 88, "legend": 69, "len": [8, 15, 19, 21, 25, 32, 50, 58], "lenght": 71, "length": [15, 21, 23, 24, 36, 38, 46, 47, 57, 58, 62, 63, 66, 68, 70, 71, 77, 81, 82, 87], "less": [15, 21, 23, 24, 62, 63, 73, 76, 77, 83, 88], "letter": 78, "level": [2, 3, 16, 21, 28, 31, 46, 47, 87, 88, 97], "lib": [15, 21], "librari": 33, "librarycach": 78, "like": [1, 2, 3, 4, 8, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 74, 81], "likelihood": 87, "limit": 87, "limits_": 83, "line": [22, 24, 62, 63, 69, 86, 96], "linear": [38, 87], "linear_model": [0, 73, 79, 87, 97], "linewidth": 69, "linux": [78, 95, 96], "list": [1, 3, 5, 6, 7, 15, 16, 21, 23, 24, 25, 26, 28, 31, 32, 35, 36, 37, 38, 40, 41, 45, 46, 47, 52, 54, 57, 58, 59, 61, 62, 63, 65, 66, 67, 68, 70, 76, 78, 83, 86, 88, 91], "list_bundl": [7, 78], "list_collect": 7, "list_dataset": [7, 78], "list_repositori": [7, 78], "load": [6, 7, 74, 78, 79, 80, 82, 86, 88, 92, 93], "load_articulary_word_recognit": 7, "load_basic_mot": [7, 11, 14], "load_dataset": [7, 15, 21, 52, 58, 61, 63, 73, 76, 77, 78, 80, 93], "load_er": [7, 11, 12, 13, 14, 79], "load_gun_point": [7, 22, 24, 28, 31, 51, 52, 55, 58, 59, 61, 62, 63, 69, 76, 86, 88], "load_gunpoint": [57, 58], "load_synthetic_control": [7, 23, 24, 73], "load_two_lead_ecg": [7, 20, 23, 24, 43, 44, 53, 58, 73, 83, 87], "loadtxt": [74, 92], "local": [27, 30, 31, 40, 41, 80], "localappdata": 78, "localoutlierfactor": [40, 41], "locat": [8, 74, 78, 83, 95], "lock": [52, 58, 88], "log": [23, 24, 52, 58, 62, 63], "log2": [23, 24, 25, 32, 36, 38, 40, 41, 52, 56, 57, 58, 62, 63], "logic": 73, "logist": [8, 91], "logisticregress": 73, "long": [12, 14, 78], "longer": [74, 77], "longest": 82, "loos": 82, "loss": 77, "low": [13, 14, 46, 47, 79, 88], "lower": [8, 15, 20, 21, 23, 24, 35, 36, 38, 40, 41, 54, 55, 57, 58, 61, 62, 63, 69, 83, 87], "lowest": [11, 14, 15, 20, 21, 83, 93], "lp": 82, "lt": [82, 88], "lubba": [52, 58, 86], "luca": [23, 24, 61, 63, 86], "m": [1, 3, 17, 20, 28, 31, 40, 41, 74, 82, 83, 86, 87, 95], "m2": 83, "m_sampl": [40, 41], "m_timestep": [15, 20, 21], "macbook": 83, "machin": [33, 73, 82, 94], "maco": [78, 95, 96], "magnitud": 83, "mai": [8, 23, 24, 35, 36, 37, 38, 59, 62, 63, 83, 92, 93, 97], "main": [1, 3, 73, 76, 94], "major": [8, 20], "majority_label": 91, "majority_outli": 8, "make": [5, 68, 70, 80, 82], "make_dict_filt": 5, "make_filt": 5, "make_list_filt": 5, "make_pipelin": [51, 58, 73, 79, 93], "make_str_filt": 5, "make_union": [51, 58], "manag": 82, "mandatori": [23, 24, 36, 38, 54, 57, 58, 61, 62, 63], "manhattan": [30, 31, 82, 83, 87], "mani": [15, 21, 23, 24, 68, 70, 74, 77, 92], "manifold": [16, 21], "manner": [74, 93], "map": [4, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 85], "mappabl": [25, 32], "mark": 70, "marker": 77, "marriag": 82, "marteau": 82, "martin": [36, 38, 57, 58], "mask": [10, 11, 12, 13, 14], "mass": [15, 21, 82, 83], "match": [1, 3, 15, 17, 21, 29, 74, 78, 80, 82, 83, 97], "math": [1, 3, 15, 21], "mathcal": 83, "matplotlib": [69, 74, 77, 92], "matric": [23, 24, 87], "matrix": [1, 2, 3, 17, 20, 23, 24, 26, 29, 31, 35, 36, 37, 38, 46, 47, 53, 58, 59, 61, 62, 63, 73, 74, 83, 92, 97], "matrix_profil": [1, 2, 3, 17, 74, 97], "matrixprofil": [46, 47, 53, 58], "matrixprofiletransform": [53, 58], "matthieu": 82, "max": [9, 20, 62, 63, 82, 83], "max_": 82, "max_c": [61, 63, 82, 86], "max_depth": [23, 24, 59, 60, 61, 62, 63, 80, 88], "max_dist": [1, 3, 74], "max_ep": 8, "max_epoch": 20, "max_g": [57, 58], "max_it": [16, 19, 21, 28, 29, 31], "max_match": [15, 21], "max_motif": [1, 3, 74], "max_neighbor": [1, 3], "max_path": [30, 31], "max_r": [22, 23, 24, 36, 38, 54, 57, 58, 61, 62, 63, 82, 86], "max_sampl": [23, 24], "max_shapelet_s": [23, 24, 25, 29, 31, 32, 36, 38, 57, 58, 62, 63, 87, 88], "max_siz": [23, 24, 35, 38, 52, 55, 58, 62, 63, 86], "max_stabl": 20, "maxabs_scal": [9, 77], "maxim": [8, 23, 24, 36, 38, 57, 58, 62, 63, 87, 88], "maximum": [1, 3, 9, 16, 19, 20, 21, 23, 24, 25, 28, 29, 31, 32, 35, 36, 38, 42, 44, 52, 55, 57, 58, 61, 62, 63, 69, 74, 77, 81, 83, 93], "md": [16, 21], "mean": [7, 8, 9, 15, 19, 20, 21, 22, 23, 24, 27, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 48, 51, 52, 55, 57, 58, 59, 60, 61, 62, 63, 73, 77, 80, 82, 83, 86, 87, 88, 93, 97], "mean_var_slop": [23, 24, 52, 58, 62, 63, 88], "measu": [16, 21], "measur": [8, 16, 21, 22, 23, 24, 36, 38, 40, 41, 54, 57, 58, 61, 62, 63, 74, 82, 83, 86], "mechan": [4, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63], "medoid": [19, 21, 27, 31, 80], "medoid_indices_": [19, 21], "member": [23, 24], "memori": [7, 23, 24, 68, 70, 73, 83, 97], "mention": 86, "merg": [7, 61, 63, 78, 82], "merge_train_test": [7, 22, 24, 28, 31, 73, 76, 78, 79, 86, 87, 88], "messag": [19, 21, 68, 70, 97], "met": 80, "meta": [23, 24], "metadata": [4, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63], "metadatarequest": [4, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63], "method": [4, 8, 10, 11, 12, 13, 14, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 67, 73, 74, 80, 86, 87, 88, 92, 93, 94], "method_arg": [26, 31], "metric": [0, 8, 10, 11, 13, 14, 15, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 54, 57, 58, 59, 61, 62, 63, 80, 86, 87, 88], "metric_factori": [23, 24, 61, 63], "metric_param": [10, 11, 13, 14, 15, 19, 21, 23, 24, 25, 28, 31, 32, 36, 38, 39, 40, 41, 45, 46, 47, 54, 57, 58, 61, 62, 63, 80, 82, 83], "metric_sampl": [23, 24, 54, 58, 61, 63], "metric_specif": 87, "metric_transform": 29, "metricopt": 70, "metrictransform": 29, "metrix": 17, "microsoft": 96, "might": [68, 70, 74, 80], "millisecond": 83, "min": [6, 7, 9, 19, 20, 21, 62, 63, 83], "min_": 82, "min_c": [61, 63, 82, 86], "min_dist": 20, "min_g": [57, 58], "min_impurity_decreas": [23, 24, 59, 61, 62, 63], "min_neighbor": [1, 3], "min_r": [22, 23, 24, 36, 38, 54, 57, 58, 61, 62, 63, 82, 86], "min_sampl": 8, "min_samples_leaf": [23, 24, 59, 61, 62, 63], "min_samples_split": [23, 24, 59, 61, 62, 63], "min_shapelet_s": [23, 24, 25, 29, 31, 32, 36, 38, 57, 58, 62, 63, 87], "min_siz": [23, 24, 35, 38, 52, 55, 58, 62, 63, 86], "mine": [1, 2, 3, 17, 22, 23, 24, 30, 31, 34, 38, 46, 47, 51, 52, 55, 58, 61, 62, 63, 74, 80, 83, 86, 87], "miniconda": 95, "minim": [20, 36, 38, 57, 58, 83, 87], "minimum": [1, 3, 6, 7, 9, 15, 17, 20, 21, 23, 24, 25, 26, 29, 32, 35, 36, 38, 52, 55, 57, 58, 61, 62, 63, 68, 70, 74, 78, 80, 82, 87], "minkowski": [80, 82, 83], "minmax_scal": [9, 56, 58, 76, 77], "minmum": [20, 62, 63], "minor": [8, 97], "minority_label": 91, "minority_outli": [8, 91], "minumum": [15, 21], "mirror": 83, "miscellan": 97, "miss": [7, 16, 21, 75, 81], "mix": 8, "mixin": [4, 10, 23, 25, 32, 37, 50, 52, 54, 55, 57, 58, 59, 62], "mm": 20, "mode": [35, 36, 38, 96], "model": [8, 12, 14, 23, 24, 28, 29, 31, 34, 35, 36, 37, 38, 44, 59, 62, 63, 80, 86, 88, 91], "model_select": [0, 23, 24, 73, 80, 93], "modifi": [80, 87], "modul": [20, 21, 31, 73, 77, 79, 80, 91, 97], "monkei": 67, "monthli": 74, "more": [3, 7, 8, 11, 13, 14, 15, 16, 19, 21, 23, 24, 25, 28, 31, 32, 36, 37, 38, 39, 40, 41, 45, 46, 47, 54, 57, 58, 59, 61, 62, 63, 68, 70, 73, 74, 78, 82, 83, 86, 87, 88, 91, 92], "moreov": 82, "most": [26, 28, 31, 57, 58, 74, 75, 79, 80, 81, 83, 87, 91, 93, 95, 97], "motestrain": 93, "motif": [1, 3, 17], "motif_dist": [1, 3], "motif_indic": 74, "motif_indici": [1, 3], "move": [29, 61, 63, 82], "mp": [1, 3, 17, 74], "mpi": [2, 3, 17, 74], "mpi_sampl": 17, "mpi_start": 17, "mro": [37, 59, 62], "mse": [23, 24, 62, 63], "msm": [61, 63, 82, 83, 86], "much": [20, 40, 41, 97], "mueen": 83, "mult": 97, "multi": [19, 21, 22, 23, 24, 34, 35, 36, 37, 38, 52, 58, 59, 61, 62, 63, 68, 70, 79, 91], "multi_output": [68, 70], "multiclass": [8, 70, 91], "multidimension": [16, 21], "multioutput": [23, 24, 35, 36, 37, 38, 59, 62, 63], "multioutputregressor": [23, 24, 35, 36, 37, 38, 59, 62, 63], "multipl": [8, 16, 21, 23, 24, 25, 32, 36, 38, 54, 57, 58, 62, 63, 73, 75, 78, 82, 83, 87, 91, 92], "multitud": 83, "multivarait": [19, 21], "multivaret": 75, "multivari": [7, 15, 19, 21, 30, 31, 39, 41, 73, 75, 77, 81], "must": [2, 3, 8, 20, 25, 28, 31, 32, 40, 41, 45, 52, 55, 78, 82, 91, 95], "my": 83, "myestim": [37, 59, 62], "mytransform": [50, 58], "n": [20, 73, 83, 86, 87, 88, 91], "n_alpha": [34, 35, 36, 38], "n_bin": [25, 32, 40, 41, 56, 58], "n_class": [8, 19, 21, 22, 23, 24, 59, 61, 62, 63], "n_classes_": [62, 63], "n_cluster": [8, 19, 21], "n_compon": [16, 21], "n_counterfactu": [40, 41], "n_dim": [9, 10, 11, 12, 13, 14, 15, 17, 21, 22, 24, 40, 41, 43, 44, 53, 58, 59, 61, 62, 63, 73, 75, 76, 77, 79, 81, 83], "n_dimens": [48, 51, 52, 54, 55, 57, 58, 68, 70], "n_estim": [23, 24, 80], "n_featur": [10, 11, 12, 13, 14, 19, 21, 22, 23, 24, 34, 35, 36, 37, 38, 45, 46, 47, 50, 53, 54, 56, 58, 59, 61, 62, 63], "n_features_new": [10, 11, 12, 13, 14, 19, 21, 45, 46, 47, 50, 53, 54, 56, 58], "n_group": [34, 36, 38, 51, 57, 58, 87, 93], "n_init": [16, 19, 21], "n_inlier": [8, 42, 44], "n_interv": [23, 24, 25, 32, 40, 41, 52, 56, 58, 62, 63, 86], "n_iter_": [19, 21], "n_job": [10, 11, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 28, 31, 34, 35, 36, 37, 38, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 64, 83, 86], "n_kernel": [23, 24, 34, 35, 38, 51, 55, 58, 62, 63, 93], "n_label": [76, 88], "n_match": [15, 21], "n_nativ": [40, 41], "n_neighbor": [19, 21, 22, 24, 28, 31, 80], "n_node": [59, 61, 62, 63], "n_node_sampl": [60, 63, 88], "n_outlier": [8, 42, 44, 91], "n_output": [10, 11, 12, 13, 14, 19, 21, 22, 23, 24, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63], "n_pivot": [23, 24, 54, 58, 61, 62, 63], "n_prototyp": [29, 31], "n_repeat": [25, 32], "n_sampl": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 68, 69, 70, 73, 75, 76, 77, 81, 83], "n_samples_fit": [23, 24, 35, 36, 37, 38, 59, 62, 63], "n_segment": [2, 3, 46, 47, 92], "n_selected_dim": [10, 11, 12, 13, 14], "n_shapelet": [23, 24, 25, 32, 36, 38, 57, 58, 62, 63, 87, 88], "n_shortest": 9, "n_split": [42, 44], "n_subsequ": [15, 21, 83], "n_timestep": [1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 68, 69, 70, 73, 75, 76, 77, 81, 83, 86, 87], "n_timetep": [40, 41], "n_training_sampl": [6, 7], "na": [68, 70], "naiv": 83, "name": [4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 68, 70, 73, 76, 77, 78, 82, 83], "named_preprocess": 9, "nan": [68, 70, 75, 81], "nativ": [28, 31, 39, 40, 41, 51, 58, 97], "nativeguidecounterfactu": [28, 31, 97], "natur": 80, "nayyar": [23, 24, 61, 63, 86], "nbsp": [79, 80, 82, 86, 88, 92, 93], "nbviewer": [79, 80, 82, 86, 88, 92, 93], "ndarrai": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 68, 70, 71, 73, 77], "ndim": [15, 21, 68, 70, 73], "ne": 82, "nearest": [17, 19, 21, 27, 29, 31, 74, 86, 92], "nearest_index": 29, "necessit": 92, "need": [80, 82, 83, 96, 97], "needl": [15, 21], "neg": [12, 14, 23, 24, 35, 36, 37, 38, 59, 61, 62, 63, 97], "neighbor": [17, 19, 21, 22, 24, 27, 29, 31, 74, 80, 86, 92], "neighbour": [1, 3], "neill": [23, 24, 61, 63, 86], "neither": [68, 70], "nest": [4, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63], "net": [59, 61, 62, 63], "networkx": [8, 91], "never": [23, 24, 62, 63, 68, 70, 82, 83, 93], "new": [5, 19, 21, 23, 24, 29, 36, 38, 42, 44, 57, 58, 67, 73, 77, 80, 87, 88, 94, 96], "new_counterfactu": 29, "newer": 73, "newli": 7, "next": [80, 88, 92], "nfc": [28, 31], "ng": 82, "ngc": [28, 31], "nick": [52, 58], "nn": 80, "node": [23, 24, 35, 38, 55, 58, 59, 60, 61, 62, 63, 86, 88], "node_count": [59, 61, 62, 63, 88], "node_id": 88, "node_ind": 88, "node_index": 88, "node_label": [60, 63], "nomin": 73, "non": [16, 21, 22, 23, 24, 40, 41, 52, 58, 62, 63, 68, 70, 74, 83, 86, 87, 97], "non_elast": [22, 24], "none": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 78, 82, 87, 88, 97], "nonmetr": [16, 21], "nonzero": [59, 61, 62, 63, 92], "norm": [16, 21, 74, 82], "normal": [23, 24, 25, 32, 34, 35, 36, 37, 38, 43, 44, 51, 55, 56, 58, 62, 63, 74, 77, 80, 82, 87, 93], "normal_class": [43, 44], "normalbin": 56, "normalize_prob": [23, 24, 35, 36, 38, 55, 57, 58, 62, 63, 87], "normalized_euclidean": [31, 40, 41, 82, 83], "normalized_stress": [16, 21], "notabl": [83, 87], "notat": 82, "note": [8, 16, 17, 20, 21, 23, 24, 28, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 44, 51, 52, 58, 59, 62, 63, 77, 82, 83, 92, 93], "notebook": [79, 80, 82, 86, 88, 92, 93], "noth": [68, 70], "novel": 74, "novemb": 80, "now": [80, 97], "np": [7, 8, 15, 19, 20, 21, 23, 24, 25, 27, 31, 32, 37, 40, 41, 50, 52, 54, 57, 58, 59, 61, 62, 63, 68, 70, 71, 74, 75, 77, 80, 83, 88, 92], "npbundl": [6, 7], "npy": 78, "npz": 78, "nrow": [74, 77], "nu": 82, "num_": 82, "num_c": [61, 63], "num_r": [23, 24, 36, 38, 54, 57, 58, 61, 62, 63], "number": [1, 2, 3, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 73, 76, 79, 81, 83, 86, 87, 88, 92, 93], "numer": [31, 33, 68, 70, 73, 83, 93], "numpi": [6, 7, 11, 13, 14, 15, 21, 23, 24, 25, 32, 34, 35, 36, 37, 38, 48, 50, 51, 52, 55, 57, 58, 59, 62, 63, 73, 74, 75, 77, 78, 81, 83, 88, 92, 97], "o": [20, 23, 24, 29, 61, 63, 83, 86], "obei": 82, "object": [4, 8, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 67, 68, 69, 70, 73, 76, 82, 83], "observ": [74, 83, 88], "obtain": 88, "occur": 74, "occurr": [15, 21, 87, 93], "odd": 87, "off": [7, 73, 97], "offer": [76, 93], "offici": 95, "offlin": 78, "offset": [23, 24], "offset_": [23, 24], "often": [73, 74, 79, 87, 92], "ok": 65, "older": 73, "omitaomu": 20, "onc": 92, "one": [22, 23, 24, 25, 32, 36, 38, 51, 54, 57, 58, 61, 62, 63, 66, 73, 76, 78, 80, 82, 83, 86, 87, 88, 92, 93], "ones": [23, 24], "onetoonefeaturemixin": [50, 58], "onli": [7, 10, 11, 12, 13, 14, 16, 17, 20, 21, 23, 24, 25, 26, 28, 30, 31, 32, 57, 58, 59, 60, 61, 62, 63, 68, 70, 73, 76, 77, 78, 79, 82, 83, 86, 87, 93, 96, 97], "onlin": [2, 3, 46, 47], "oob_scor": [23, 24], "op": 5, "opac": 69, "oper": [73, 76, 77, 78, 95, 96], "oppos": 91, "opt": 73, "optic": 8, "optim": [20, 22, 24, 83, 86, 88, 96], "option": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 76, 78, 82, 83, 91, 95, 96], "option_valu": 70, "optional_f": 66, "order": [15, 21, 23, 24, 34, 36, 38, 40, 41, 50, 51, 58, 59, 61, 62, 63, 68, 69, 70, 73, 74, 75, 80, 83, 92, 97], "org": [78, 79, 80, 82, 86, 88, 92, 93], "oria": 82, "origin": [7, 23, 24, 25, 26, 28, 31, 32, 34, 35, 38, 40, 41, 48, 55, 58, 68, 70, 73, 74, 80, 86], "other": [8, 19, 21, 27, 31, 42, 44, 62, 63, 73, 74, 76, 78, 83, 86, 88, 91], "othervis": 17, "otherwis": [8, 12, 14, 16, 17, 21, 23, 24, 27, 31, 35, 36, 38, 40, 41, 57, 58, 68, 70], "our": 77, "out": [20, 23, 24, 35, 36, 38, 73, 79, 86, 94], "outcom": 80, "outlier": [0, 23, 24, 40, 41, 42, 43, 44, 78], "outlier_train_test_split": [23, 24, 43, 44], "output": [10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 24, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 70, 73, 83, 88], "output_s": [15, 21, 49, 58], "outsid": 95, "over": [22, 23, 24, 25, 32, 36, 38, 40, 41, 49, 54, 57, 58, 61, 62, 63, 73, 74, 82, 86], "overal": 83, "overlai": 92, "overlap": [17, 23, 24, 40, 41, 52, 58, 62, 63, 74, 86, 87], "own": [28, 31, 52, 58, 92], "p": [11, 14, 23, 24, 27, 29, 30, 31, 40, 41, 62, 63, 80, 82, 83, 86, 97], "paa": [56, 58], "packag": [8, 91, 95, 96], "pad": [15, 21, 23, 24, 35, 38, 49, 55, 58, 93], "padding_prob": [23, 24, 35, 38, 55, 58, 62, 63], "page": [79, 80, 82, 86, 88, 92, 93], "pair": [1, 3, 7, 17, 21, 23, 24, 36, 38, 40, 41, 54, 57, 58, 61, 62, 63, 70, 74, 97], "paired_dist": [15, 21, 83], "paired_matrix_profil": [17, 97], "paired_subsequence_dist": [15, 21, 83], "paired_subsequence_match": [15, 21], "pairwis": [11, 13, 14, 21, 79, 97], "pairwise_dist": [15, 21, 82, 83], "pairwise_sd_ful": 83, "pairwise_subsequence_dist": [15, 21, 82, 83, 88], "pam": [19, 21], "panda": [10, 11, 12, 13, 14, 19, 21, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58], "papapetr": [27, 30, 31, 40, 41, 62, 63, 80], "paper": 86, "paralel": [22, 24], "parallel": [11, 13, 14, 15, 16, 17, 19, 21, 23, 24, 28, 31, 34, 35, 36, 38, 46, 47, 48, 51, 52, 55, 57, 58, 64, 88], "parallel_arg": 64, "param": [4, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63], "paramet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 78, 80, 82, 83, 86, 87, 91, 92, 93, 94, 97], "parameter": [23, 24, 61, 63, 82], "parameter_nam": 82, "part": [7, 28, 31, 76, 77, 78, 80, 81, 83, 93], "particular": [73, 80], "particularli": 74, "partit": [7, 19, 21, 62, 63, 73, 88, 93], "partitions_": [29, 31], "pass": [15, 16, 19, 21, 23, 24, 37, 59, 62, 68, 70, 83, 86, 88, 91], "patch": 67, "path": [20, 30, 31, 59, 61, 62, 63, 78, 80, 88, 96], "paths_": [30, 31], "pattern": [20, 36, 38, 57, 58, 74, 82, 83, 87, 91], "pca": 93, "pd": [68, 70], "peicewis": [56, 58], "pelleti": [23, 24, 61, 63, 86], "penal": 20, "penalti": [19, 20, 21, 82], "pend": 7, "per": [8, 25, 30, 31, 32, 34, 36, 38, 51, 52, 54, 57, 58, 62, 63, 86, 88, 97], "percent": [11, 14, 87, 93], "percentil": [8, 11, 14, 23, 24, 36, 38, 57, 58, 91], "perf_count": 83, "perform": [2, 3, 12, 14, 15, 16, 19, 21, 23, 24, 35, 36, 38, 40, 41, 46, 47, 52, 55, 58, 67, 68, 70, 74, 76, 77, 79, 83, 88, 93], "perhap": 91, "permut": [25, 32], "permuteimport": 25, "petitjean": [23, 24, 55, 58, 61, 63, 86, 87], "phase": 82, "philip": [52, 58], "pick": [35, 36, 38], "pickl": 73, "piec": 92, "piecewic": 56, "piecewice_aggregate_approxim": [56, 58], "pip": [91, 95, 96], "pipelin": [4, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 73, 79, 93], "pipelineifittedpipelin": [79, 93], "pivot": [8, 23, 24, 54, 58, 61, 62, 63, 86], "pivot_sampl": [23, 24, 61, 63], "pivotforestclassifi": [23, 24], "pivotmixin": 54, "pivottransform": [54, 58], "pivottreeclassifi": [62, 63], "platform": 95, "plausability_scor": [40, 41], "plausabl": [40, 41], "plausibl": [40, 41], "pleas": [4, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 79, 80, 82, 86, 88, 92, 93], "plot": [0, 4, 25, 27, 28, 29, 30, 31, 32, 60, 63, 73, 74, 77, 80, 93, 97], "plot_frequency_domain": 69, "plot_import": [25, 32], "plot_time_domain": [69, 74], "plot_tre": [60, 63, 88, 97], "plt": [74, 77, 92], "point": [8, 15, 20, 21, 28, 31, 45, 46, 47, 59, 62, 63, 73, 74, 76, 78, 80, 82, 91, 92], "polar": [10, 11, 12, 13, 14, 19, 21, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58], "poor": 88, "portion": 74, "posit": [11, 14, 15, 17, 19, 21, 23, 24, 25, 30, 31, 32, 34, 35, 38, 45, 46, 47, 48, 51, 55, 58, 82, 83, 93], "possibl": [4, 10, 11, 12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 68, 70, 85, 86, 95], "possibli": [23, 24, 52, 58, 62, 63, 86], "potenti": 92, "power": 74, "pp": [8, 28, 31, 62, 63, 80, 83, 86, 87, 91], "practic": 73, "precomput": [20, 23, 24, 35, 36, 37, 38, 59, 62, 63], "pred": 88, "predefin": [74, 77], "predict": [12, 14, 19, 21, 22, 23, 24, 26, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 59, 61, 62, 63, 74, 79, 80, 86, 88, 92, 93], "predict_log_proba": [23, 24], "predict_proba": [8, 19, 21, 22, 23, 24, 59, 61, 62, 63, 86], "predictevalu": [26, 29], "prefer": 73, "preprint": [36, 38, 57, 58, 87], "preprocess": [0, 7, 25, 32, 34, 35, 36, 38, 56, 58, 73, 76, 77, 93], "preprocessor": [9, 77], "present": [19, 21, 23, 24, 78, 80, 88], "preserv": [7, 68, 70, 73], "previou": [23, 24, 77], "previous": [73, 76, 80, 85, 92, 97], "price": 74, "primari": [74, 80, 91, 92], "princip": [87, 93], "print": [7, 19, 21, 30, 31, 73, 76, 88], "probabilityevalu": [26, 29], "probabl": [4, 8, 19, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 35, 36, 38, 54, 55, 57, 58, 59, 60, 61, 62, 63], "problem": [73, 74, 82, 91], "procedur": [8, 11, 14], "proceed": [2, 3, 8, 46, 47, 82, 83, 91], "process": [74, 92, 93, 96], "processor": [23, 24, 57, 58, 83, 86, 96], "produc": [81, 85], "profil": [1, 2, 3, 15, 17, 21, 46, 47, 53, 58, 62, 63, 74, 92, 97], "profile_s": [1, 2, 3, 17], "program": 96, "progress": 7, "project": [52, 58, 96], "promis": [57, 58], "proper": 73, "properli": 92, "properti": [6, 7, 23, 24, 52, 55, 88, 92], "proport": [23, 24, 61, 62, 63], "propos": [80, 97], "prototyp": 29, "prototype_indic": 29, "prototype_indici": 29, "prototypecounterfactu": [29, 31], "prototypesampl": [29, 31], "provid": [20, 28, 31, 52, 55, 73, 74, 78, 80, 82, 88, 92, 95], "proxim": [23, 24, 26, 31, 40, 41, 61, 63], "proximity_scor": [40, 41], "proximityforestclassifi": [23, 24, 82, 86], "proximityforestclassifierifittedproximityforestclassifi": 86, "proximitytransform": [54, 58], "proximitytreeclassifi": [61, 63, 82], "proximitytreeclassifierinot": 82, "pseudo": [20, 26, 28, 30, 31], "psudo": [42, 43, 44], "publish": [28, 31, 87, 91], "pull": 96, "pure": [23, 24, 62, 63], "purpos": [73, 80, 83, 88, 93], "pylab": [74, 92], "pypi": 95, "pyplot": 77, "python": [73, 76, 78, 82, 83, 94, 95, 96, 97], "python3": [95, 96], "q": 83, "quantil": 91, "quantiz": [8, 91], "queri": 83, "question": 74, "r": [19, 20, 21, 22, 23, 24, 29, 31, 34, 35, 36, 37, 38, 52, 54, 57, 58, 59, 61, 62, 63, 80, 82, 86, 96], "r2_score": [23, 24, 35, 36, 37, 38, 59, 62, 63], "rainfal": 74, "rais": [8, 68, 70, 97], "rakthanmanon": 83, "random": [8, 11, 13, 14, 16, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 41, 42, 43, 44, 48, 51, 52, 54, 55, 57, 58, 61, 62, 63, 73, 80, 86, 88, 93, 97], "random_st": [8, 10, 11, 13, 14, 16, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 48, 51, 52, 54, 55, 57, 58, 61, 62, 63, 79, 80, 86, 87, 88, 93], "randomforestclassifi": 91, "randomli": [19, 21, 23, 24, 52, 57, 58, 62, 63, 86, 88, 93], "randomshapeletclassifi": [36, 38, 87], "randomshapeletmixin": 57, "randomshapeletregressor": [36, 38], "randomshapelettransform": [57, 58, 97], "randomst": [8, 11, 13, 14, 16, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 41, 42, 43, 44, 48, 51, 52, 54, 55, 57, 58, 61, 62, 63], "rang": [8, 23, 24, 36, 38, 54, 57, 58, 59, 61, 62, 63, 77, 82, 83, 87, 91], "rank": 81, "rate": [11, 14, 20], "rather": 87, "ravel": [68, 70], "ravel_1d": [68, 70], "raw": [16, 21, 58], "rbf": [8, 91], "re": [7, 19, 21, 23, 24, 76], "reach": [60, 63, 88], "read": [7, 11, 13, 14, 15, 16, 19, 21, 23, 24, 28, 31, 36, 37, 38, 39, 40, 41, 45, 46, 47, 54, 57, 58, 59, 61, 62, 63, 73, 74, 83, 86], "readabl": [6, 7], "real": [8, 23, 24, 75, 82, 91], "reason": [28, 31, 73], "reban": [27, 30, 31, 40, 41, 80], "recal": 74, "recent": 87, "recept": 87, "recognit": [20, 36, 38, 57, 58, 82, 87], "recommend": [28, 31, 87, 95], "recomput": 74, "record": [80, 88, 93], "recur": 74, "recursivlei": 66, "reduc": [10, 11, 12, 13, 14, 23, 24, 52, 58, 76, 79], "redud": [40, 41], "redudancy_scor": [40, 41], "redund": [40, 41], "reevalu": 73, "refer": [1, 2, 3, 8, 17, 20, 22, 23, 24, 27, 28, 29, 30, 31, 34, 36, 38, 40, 41, 46, 47, 51, 52, 55, 57, 58, 61, 62, 63, 83, 88, 92, 94], "refin": 29, "reflect": 83, "refresh": [6, 7, 78, 97], "refresh_repositori": [7, 78, 97], "regim": [2, 3, 92], "region": [2, 3, 28, 31, 46, 47, 73, 92], "regress": [8, 23, 24, 37, 38, 59, 60, 61, 62, 63, 73, 88, 91], "regressor": [23, 24, 32, 35, 36, 37, 38, 59, 62, 63, 67, 79, 86, 87], "regressormixin": [37, 59, 62], "regular": 78, "reject": [68, 70], "rel": [16, 19, 21, 40, 41, 74, 83], "relat": [67, 82], "relative_proximity_scor": [40, 41], "releas": [52, 58, 88], "reliabl": [8, 73], "relianc": 73, "remain": 79, "remot": 78, "remov": [10, 11, 12, 13, 14, 23, 24, 26, 31, 62, 63, 66, 70, 78, 79, 86, 97], "renam": [23, 24, 26, 31, 52, 58, 97], "render": [79, 80, 82, 86, 88, 92, 93], "repeat": [25, 32, 42, 44, 74], "repeatedli": [42, 44, 73, 74, 76], "repeatedoutliersplit": [42, 44], "repetit": 74, "replac": [23, 24, 28, 31, 40, 41, 78, 95, 96], "replic": [28, 31], "repo": 78, "report": [68, 70, 83], "repositori": [6, 7, 73, 76, 97], "repr": 73, "repres": [23, 24, 70, 74, 75, 80, 81, 82, 88, 92], "represent": [23, 24, 57, 58, 62, 63, 70, 73, 79, 80, 82, 86, 87, 88, 91, 92, 93], "reproduc": [16, 21], "request": [7, 8, 74, 78, 83, 91, 96], "requir": [6, 7, 8, 19, 20, 21, 22, 23, 24, 26, 31, 34, 35, 36, 37, 38, 57, 58, 59, 61, 62, 63, 68, 70, 78, 80, 83, 91, 92, 96, 97], "requires_i": [37, 59, 62], "rerun": [79, 80, 82, 86, 88, 92, 93], "resampl": [23, 24, 25, 32, 34, 35, 38, 48, 55, 58], "research": [28, 31], "resembl": 87, "reset": [7, 78], "reshap": [15, 21, 83, 92], "residu": [23, 24, 35, 36, 37, 38, 59, 62, 63], "resort": [23, 24], "respect": [16, 21, 76, 78, 80, 86], "respons": 73, "rest": 74, "result": [9, 16, 21, 23, 24, 26, 29, 31, 36, 38, 43, 44, 49, 57, 58, 59, 61, 62, 63, 68, 70, 71, 77, 79, 80, 82, 83, 86, 87, 88, 91, 93], "retain": [10, 11, 12, 13, 14, 97], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 80, 81, 83, 91, 92], "return_arc_curv": [2, 3], "return_cost": 20, "return_count": 92, "return_dist": [1, 3, 15, 21], "return_extra": 7, "return_index": [15, 17, 20, 21, 74, 83, 92], "reus": [23, 24, 73, 77, 80], "revers": [10, 11, 12, 13, 14, 30, 31, 80, 97], "rewritten": 77, "ridg": 93, "ridgeclassifiercv": 87, "right": 88, "robust": [73, 82], "rocket": [23, 24, 35, 38, 55, 58, 73, 79], "rocketclassifi": [35, 38, 79], "rocketclassifierifittedrocketclassifi": 79, "rocketclassifierrocketclassifi": 79, "rocketforestclassifi": [23, 24], "rocketforestregressor": [23, 24], "rocketmixin": 55, "rocketregressor": [35, 38], "rockettransform": [55, 58, 73, 93], "rockettransformrockettransform": 93, "rockettreeclassifi": [62, 63], "rockettreeregressor": [62, 63], "root": [7, 25, 32, 36, 38, 57, 58, 62, 63, 88], "roughli": 83, "rout": [4, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63], "row": [68, 70, 81, 87, 88], "rsf": 80, "rule": [12, 14, 88], "run": [15, 16, 19, 21, 23, 24, 28, 30, 31, 34, 35, 38, 48, 51, 55, 57, 58, 67, 76, 77, 96], "run_in_parallel": 64, "runger": 86, "runtim": 20, "sai": 82, "same": [15, 20, 21, 23, 24, 25, 28, 31, 32, 40, 41, 57, 58, 59, 61, 62, 63, 73, 77, 78, 80, 82, 83, 88, 92, 97], "sampl": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 73, 75, 76, 77, 78, 80, 81, 83, 86, 87, 88, 91, 92, 93, 97], "sampla": 29, "sample_id": 88, "sample_mov": 29, "sample_s": [23, 24, 39, 41, 52, 57, 58, 62, 63, 86, 97], "sample_shapelet": 29, "sample_spac": 69, "sample_weight": [19, 20, 21, 22, 23, 24, 34, 35, 36, 37, 38, 40, 41, 59, 61, 62, 63, 88], "sampler": [34, 38, 51, 58], "sampling_param": [23, 24, 34, 35, 38, 51, 55, 58, 62, 63], "samsten": [29, 31, 87], "sarab": [52, 58], "satisfi": [8, 70, 82], "save": 78, "savez": 78, "sax": [25, 32, 40, 41, 56, 58], "scalabl": [23, 24, 61, 63, 74, 86], "scalar": [15, 21, 66, 83], "scalarmapp": [25, 32], "scale": [8, 9, 15, 16, 21, 23, 24, 34, 35, 38, 51, 55, 56, 57, 58, 77, 82, 91], "scaled_dtw": [62, 63, 82, 83], "scaled_euclidean": [23, 24, 62, 63, 82, 83, 88], "scaled_manhattan": 87, "scaler": 93, "scatter": 77, "schmidt": [34, 36, 38, 51, 57, 58, 87], "schultz": [52, 58, 86], "scienc": [28, 31, 86], "scikit": [33, 37, 50, 51, 58, 59, 62, 67, 68, 70, 73, 79, 81, 93, 97], "scipi": 97, "scope": 95, "score": [4, 8, 11, 12, 14, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 59, 61, 62, 63, 73, 79, 86, 87, 91, 97], "score_func": [11, 14], "scorer": [25, 32, 34, 35, 36, 38], "screen": 73, "scrimp": 74, "sd": [11, 12, 14], "sdp": [11, 14], "sdt": [11, 14], "seamlessli": [33, 73], "search": [15, 21, 59, 61, 62, 63, 74, 82], "second": [17, 20, 23, 24, 36, 38, 54, 57, 58, 61, 62, 63, 78, 83, 92], "section": [3, 7, 25, 32, 86, 87, 92], "secur": 73, "see": [3, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 21, 26, 28, 31, 36, 38, 40, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 83, 87], "seed": [8, 11, 13, 14, 23, 24, 25, 27, 31, 32, 34, 35, 36, 38, 48, 51, 52, 55, 57, 58, 61, 62, 63, 73], "segment": [0, 2, 3, 74], "select": [8, 10, 11, 12, 13, 14, 15, 19, 21, 23, 24, 26, 28, 31, 39, 41, 44, 52, 57, 58, 62, 63, 73, 74, 76, 77, 80, 83, 86, 88, 91, 96], "selectdimensionpercentil": [11, 14, 97], "selectdimensionsignific": [11, 14], "selectdimensiontopk": [11, 14, 97], "selector": [10, 13, 14, 97], "self": [2, 3, 4, 10, 11, 12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 76], "semant": [2, 3, 46, 47], "separ": [16, 21, 23, 24, 62, 63, 78, 91, 92, 97], "sequenc": [9, 68, 70, 74, 75, 77, 82, 92], "sequenti": [12, 14, 74, 97], "sequentialdimensionselector": [12, 14, 79, 97], "sequentialdimensionselectorifittedsequentialdimensionselector": 79, "sequentialdimensionselectorsequentialdimensionselector": 79, "seri": [1, 2, 3, 4, 9, 11, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 36, 38, 39, 40, 41, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 67, 68, 70, 71, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 91, 92, 97], "server": 83, "session": 78, "set": [4, 7, 8, 10, 11, 12, 13, 14, 16, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 68, 70, 73, 74, 76, 78, 79, 80, 82, 83, 86, 87, 88, 92, 93, 95, 96, 97], "set_cache_dir": [7, 78], "set_output": [10, 11, 12, 13, 14, 19, 21, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58], "set_param": [4, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63], "set_ylabel": 77, "sethi": [52, 58, 86], "sever": [20, 59, 61, 62, 63, 73, 82, 87, 88, 97], "sha": 78, "sha1": 78, "shaghayegh": [2, 3, 46, 47], "shape": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 69, 73, 75, 76, 77, 79, 81, 82, 83, 88], "shapel": [19, 21], "shapelet": [1, 3, 15, 17, 21, 23, 24, 25, 29, 30, 31, 32, 35, 36, 38, 55, 57, 58, 62, 63, 73, 74, 97], "shapelet_s": [36, 38, 57, 58, 62, 63, 87, 97], "shapeletforestclassifi": [23, 24, 73, 80, 86], "shapeletforestclassifierifittedshapeletforestclassifi": [80, 86], "shapeletforestcounterfactu": [30, 31, 80], "shapeletforestembed": [23, 24], "shapeletforestregressor": [23, 24, 86], "shapeletimport": [25, 32], "shapeletmixin": 57, "shapeletprototypesampl": 29, "shapelettransform": [57, 58, 97], "shapelettreeclassifi": [59, 61, 62, 63, 88], "shapelettreeclassifierifittedshapelettreeclassifi": 88, "shapelettreeregressor": [23, 24, 62, 63, 88], "shaplet": [36, 38, 57, 58, 62, 63], "sharex": 74, "shifaz": [23, 24, 61, 63, 86], "shift": 82, "short": 83, "shortcut": 82, "shorter": [81, 82], "shortest": [9, 77], "should": [8, 16, 21, 23, 37, 40, 41, 43, 44, 59, 62, 73, 77, 78, 82], "show": [7, 20, 60, 63, 69, 79, 80, 82, 86, 88, 92, 93], "show_bin": [25, 32], "show_grid": [25, 32], "show_legend": 69, "shown": [7, 25, 32], "shuffl": [42, 44, 73], "side": [37, 49, 58, 59, 62], "sigkdd": [8, 83, 91], "signal": 80, "signatur": [34, 35, 36, 38], "signifi": 88, "signific": [15, 21, 62, 63, 74], "significantli": [74, 92], "silent": 67, "silhouett": [39, 41], "silhouette_sampl": [39, 41], "silhouette_scor": [39, 41], "similar": [1, 3, 17, 26, 31, 53, 58, 73, 74, 77, 80, 82, 83, 86], "similarli": [83, 88, 92], "simon": [52, 58], "simpl": [4, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 88, 91, 94, 96], "simpler": 8, "simplest": [8, 76, 79, 87, 91], "simplifi": [73, 77, 92], "sinc": [13, 14, 19, 21, 22, 23, 24, 26, 31, 34, 35, 36, 37, 38, 52, 58, 59, 61, 62, 63, 73, 77, 80, 83, 88, 91, 92], "singl": [15, 16, 19, 21, 23, 24, 26, 31, 34, 35, 38, 40, 41, 48, 51, 55, 58, 59, 61, 62, 63, 66, 75, 78, 81, 83, 86, 87, 88, 93], "singleton": 66, "singular": [35, 36, 38, 87], "size": [1, 2, 3, 9, 15, 17, 19, 20, 21, 23, 24, 25, 29, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 51, 52, 53, 55, 56, 57, 58, 60, 62, 63, 73, 76, 87, 88, 92, 93, 97], "skip": [65, 67], "skip_scikit": 67, "sklearn": [16, 21, 23, 24, 37, 39, 41, 50, 51, 58, 59, 62, 68, 70, 73, 79, 80, 91, 93], "slice": 83, "slide": 82, "sliding_window_view": [15, 21], "slightli": [22, 24, 80], "sligtli": 93, "slope": [23, 24, 52, 58, 62, 63, 86, 88], "slower": [23, 24], "smacof": [16, 21], "small": [76, 83, 88, 91, 97], "smaller": [22, 24, 86], "smallest": [15, 16, 19, 21, 87], "smart": 83, "smyth": [40, 41], "snippet": [73, 77], "so": [4, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 73, 76, 82], "soft_max": [36, 38, 57, 58], "soft_min": [36, 38, 57, 58], "soft_threshold": [36, 38, 57, 58], "softdtw": [19, 21], "solut": [23, 24, 74, 83], "solv": [73, 74], "some": [23, 24, 35, 36, 37, 38, 59, 62, 63, 67, 68, 70, 75, 76, 81, 82, 88, 95], "someth": 97, "sometim": 83, "sophist": [74, 91], "sort": [6, 7, 15, 21, 23, 24], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 80, 88, 92, 93, 95], "space": [15, 19, 21, 29, 49, 58, 69, 74, 83, 87], "spars": [23, 24, 34, 35, 36, 38, 59, 61, 62, 63, 68, 70, 92, 93], "sparse_output": [23, 24], "sparsescal": [34, 35, 36, 38, 93], "sparsescalersparsescal": 93, "sparsiti": 93, "spec": 7, "special": [23, 24, 73], "specici": [25, 32], "specif": [7, 22, 23, 24, 36, 38, 50, 54, 57, 58, 61, 62, 63, 67, 68, 70, 76, 77, 78, 80, 86, 87, 95], "specifi": [6, 7, 11, 13, 14, 23, 24, 25, 32, 36, 38, 40, 41, 54, 57, 58, 62, 63, 73, 76, 77, 78, 80, 82, 83, 86, 87, 88, 91, 92, 95, 97], "specifii": [23, 24, 54, 57, 58, 61, 63], "split": [7, 12, 14, 23, 24, 34, 35, 36, 38, 42, 43, 44, 59, 60, 61, 62, 63, 73, 78, 82, 86, 88, 93], "spokenarabicdigit": 77, "springer": [28, 31, 87], "sqrt": [23, 24, 25, 32, 36, 38, 40, 41, 52, 56, 57, 58, 62, 63, 86], "squar": [23, 24, 25, 32, 35, 36, 37, 38, 57, 58, 59, 62, 63], "squared_error": [23, 24, 62, 63], "squeez": [15, 21, 66], "ssg": 20, "stabil": 66, "stabl": [26, 31, 43, 44, 75], "stack": 83, "stage": 93, "stamp": 74, "standard": [9, 23, 24, 34, 35, 36, 38, 51, 52, 57, 58, 73, 77, 87, 93], "standardscal": [34, 35, 36, 38, 93], "standardscalerstandardscal": 93, "start": [2, 3, 15, 17, 21, 25, 32, 45, 46, 47, 73, 83, 92, 94], "state": [29, 43, 44, 54, 58, 77], "std": [52, 58, 82], "stdout": [30, 31], "stefan": 82, "step": [20, 28, 31, 36, 38, 57, 58, 73, 76, 77, 79, 80, 83, 92, 93], "step_siz": [29, 31], "stiff": [82, 83], "still": [7, 95], "stochast": 20, "stock": 74, "stomp": 74, "store": [20, 23, 24, 74, 76, 80, 88], "str": [1, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 19, 21, 23, 24, 25, 26, 28, 31, 32, 34, 35, 36, 38, 39, 40, 41, 45, 46, 47, 52, 54, 56, 57, 58, 60, 61, 62, 63, 66, 68, 69, 70, 76], "strategi": [12, 14, 23, 24, 34, 35, 36, 38, 42, 44, 51, 55, 56, 57, 58, 62, 63, 79, 97], "stress": [16, 21], "stride": [49, 58], "stride_trick": [15, 21], "string": [5, 7, 23, 24, 34, 35, 36, 38, 54, 57, 58, 61, 62, 63, 70, 76, 77, 78], "strongli": 95, "structur": [62, 63], "studio": 96, "style": [68, 70], "sub": [23, 24, 61, 63, 74, 97], "subgradi": 20, "subject": 5, "subobject": [4, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63], "subplot": [74, 77], "subsampl": [30, 31], "subsequ": [1, 3, 15, 17, 21, 23, 24, 35, 38, 53, 55, 57, 58, 74, 80, 87, 93, 97], "subsequence_match": [1, 3, 15, 21, 83], "subsequencemetricopt": 70, "subsequenec": 17, "subsequnc": [15, 21], "subset": [12, 14, 19, 21, 22, 23, 24, 34, 35, 36, 37, 38, 39, 41, 59, 61, 62, 63, 70, 79, 97], "success": [26, 31, 74, 87], "suddenli": 92, "suffici": 8, "suggest": [23, 24, 61, 63, 86], "suit": [52, 58, 67, 83], "suitabl": [13, 14, 56, 87, 88], "sum": [23, 24, 35, 36, 37, 38, 57, 58, 59, 62, 63], "summar": [23, 24, 52, 58, 62, 63, 86, 88], "summari": 74, "superhuman": [2, 3, 46, 47], "superset": 86, "supervis": [57, 58, 73], "suppli": [8, 25, 26, 28, 31, 32], "support": [8, 15, 16, 19, 21, 23, 24, 28, 30, 31, 36, 38, 40, 41, 45, 46, 47, 52, 55, 57, 58, 62, 63, 73, 75, 76, 77, 78, 79, 82, 87, 91, 97], "sure": [59, 61, 62, 63, 68, 70], "svd": [35, 36, 38], "swap": 97, "swiss": [62, 63], "symbol": [56, 58], "symbolic_aggregate_approxim": [56, 58], "symmetr": 82, "synthet": [8, 91], "synthetic_control": [7, 73], "syntheticcontrol": [7, 76, 78], "system": [27, 30, 31, 40, 41, 74, 76, 78, 80, 95, 96], "systemat": [8, 83, 91], "t": [8, 19, 21, 22, 23, 24, 28, 31, 34, 35, 36, 37, 38, 40, 41, 51, 52, 53, 55, 57, 58, 59, 61, 62, 63, 68, 70, 79, 82, 83, 91, 95, 97], "t1": 75, "t2": 75, "t3": 75, "tabluar_x": 73, "tabular": 58, "tag": [6, 7, 37, 59, 62, 67, 78], "tailor": 67, "take": [7, 11, 14, 52, 58, 59, 61, 62, 63, 78, 82, 83], "taken": 88, "target": [10, 11, 12, 13, 14, 19, 21, 23, 24, 28, 29, 31, 45, 46, 47, 50, 53, 54, 56, 58, 59, 61, 62, 63, 70, 80, 95], "target_": [28, 29, 31], "target_typ": 70, "targetevalu": [26, 28, 29, 31], "task": [73, 74, 80, 83, 86, 88, 91, 92], "techniqu": [74, 87], "temperatur": 74, "templat": [6, 7], "tempor": [30, 31, 33, 73, 75, 80, 94], "ten": [62, 63], "term": [4, 23, 24, 27, 28, 29, 30, 31, 35, 38, 55, 58, 81, 82], "termin": 88, "test": [7, 12, 14, 19, 21, 22, 23, 24, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 59, 61, 62, 63, 65, 67, 71, 73, 76, 77, 78, 83, 86], "test_idx": [42, 44], "test_siz": [23, 24, 42, 43, 44, 73], "text": 83, "th": [15, 21, 23, 24, 40, 41, 87, 88], "than": [7, 8, 12, 14, 15, 21, 23, 24, 27, 31, 62, 63, 69, 73, 76, 79, 81, 82, 83, 87, 88, 92], "thei": [8, 23, 24, 54, 58, 59, 61, 62, 63, 74, 78, 80], "them": [8, 33, 75, 77, 78], "theoret": 83, "therebi": 87, "thi": [4, 6, 7, 8, 10, 11, 12, 13, 14, 16, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 67, 68, 70, 73, 74, 76, 77, 79, 80, 82, 83, 86, 87, 88, 92, 93, 95], "thiem": [36, 38, 57, 58, 87], "thing": [62, 63], "third": [79, 83], "thirtieth": 82, "those": [7, 74, 79, 80], "thought": 92, "thread": 83, "three": [57, 58, 79, 80, 82, 83, 88], "threshold": [13, 14, 15, 21, 23, 24, 25, 26, 29, 30, 31, 32, 36, 38, 56, 57, 58, 60, 62, 63, 74, 86, 87, 88, 97], "threshold_sign": 88, "through": [37, 59, 62, 82, 86, 87, 88, 95], "thu": [23, 24, 83, 92], "tight": [8, 91], "time": [1, 2, 3, 4, 9, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 36, 38, 39, 40, 41, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 67, 68, 69, 70, 71, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 91, 92, 97], "timeout": [6, 7, 78, 97], "timepoint": [52, 58], "timestep": [15, 21, 35, 38, 40, 41, 55, 57, 58, 62, 63, 68, 70, 73, 75, 76, 77, 81, 83], "tini": [7, 76, 78], "togeth": [74, 78, 88], "tol": [12, 14, 19, 20, 21], "toler": [12, 14, 16, 19, 21, 23, 24, 40, 41, 62, 63, 82], "tool": [74, 96], "top": [11, 14, 15, 21, 25, 32, 62, 63, 97], "total": [23, 24, 35, 36, 37, 38, 57, 58, 59, 62, 63, 88], "total_n_outli": [42, 44], "toward": [23, 24, 29, 62, 63, 67], "trade": 97, "tradit": [19, 21, 77, 79, 82, 87, 91, 92], "train": [6, 7, 10, 11, 12, 13, 14, 19, 21, 23, 24, 26, 31, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 55, 58, 59, 61, 62, 63, 73, 76, 77, 78, 88], "train_i": [26, 31], "train_idx": [42, 44], "train_test_split": [43, 44, 73, 80, 93], "train_x": [26, 31], "trajectori": 82, "tranform": [57, 58], "transact": 82, "transform": [0, 8, 9, 10, 11, 12, 13, 14, 19, 21, 23, 24, 25, 26, 29, 30, 31, 32, 35, 36, 38, 40, 41, 45, 46, 47, 62, 63, 67, 79, 80, 91, 92, 97], "transformermixin": [50, 58], "transformridgeclassifiercv": 37, "transformridgecv": 37, "travers": [59, 61, 62, 63, 80, 88], "treat": [75, 92, 97], "tree": [0, 23, 24, 80, 82, 86, 97], "tree_": [59, 61, 62, 63, 88], "trend": [74, 92], "treshold": [15, 21], "tri": 83, "triad": 87, "triangl": [82, 83], "trigger": [68, 70], "trillion": 83, "trivial": [15, 17, 21, 74], "true": [4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 70, 71, 74, 75, 76, 79, 81, 82, 83, 92], "truncat": [9, 77], "trust": [73, 79, 80, 82, 86, 88, 92, 93], "try": [34, 35, 36, 38, 66, 79, 80, 82, 86, 88, 92, 93], "tsereg": 73, "tunabl": 87, "tune": [16, 21, 87, 92, 97], "tupl": [7, 20, 22, 23, 24, 36, 38, 54, 57, 58, 61, 62, 63, 67, 70, 88], "tuv": 86, "twe": [82, 83], "tweak": [27, 30, 31, 40, 41, 80], "two": [11, 12, 14, 17, 19, 20, 21, 23, 24, 34, 35, 36, 38, 51, 52, 54, 57, 58, 61, 62, 63, 73, 78, 80, 82, 83, 87, 88, 92, 93, 97], "twoleadecg": [7, 73, 76, 78, 87], "txt": 96, "type": [7, 50, 58, 68, 70, 73, 80, 88], "typic": [40, 41, 73, 74, 83, 87, 92], "u": [23, 24, 35, 36, 37, 38, 59, 62, 63], "ubuntu": 96, "uc": [74, 92], "ucr": [7, 73, 76, 78, 83, 93], "ucrmt": 77, "uea": 73, "ultim": 93, "ultra": [36, 38, 57, 58, 87], "unabl": [79, 80, 82, 86, 88, 92, 93], "unchang": [10, 11, 12, 13, 14, 19, 20, 21, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58], "uncov": 74, "undefin": [82, 88], "under": [83, 96], "undergo": 87, "underli": [48, 51, 55, 57, 58, 74], "understand": [74, 80, 92], "unequ": [75, 77, 82], "unfamiliar": 73, "unfit": [12, 14], "unfortun": [28, 31], "unifi": [1, 3, 17, 74], "uniform": [23, 24, 35, 38, 54, 55, 56, 58, 61, 63, 74, 77, 83], "uniform_averag": [23, 24, 35, 36, 37, 38, 59, 62, 63], "uniformbin": 56, "uniformli": [29, 56, 58, 62, 63], "uniformprototypesampl": 29, "unipot": [46, 47], "uniqu": [6, 7, 40, 41, 45, 46, 47, 78, 92], "unit": [9, 34, 36, 38, 51, 57, 58, 73, 77, 82], "univari": [15, 19, 21, 39, 41, 73, 75, 81, 83], "unlabel": 73, "unless": [2, 3, 23, 24, 36, 38, 54, 57, 58, 59, 61, 62, 63, 68, 70, 78, 82, 88], "unpickl": 73, "unsat": 66, "unseen": [73, 85, 92], "unset": 78, "unstabl": 66, "unsupervis": [10, 11, 12, 13, 14, 19, 21, 23, 24, 45, 46, 47, 50, 53, 54, 56, 57, 58], "until": [23, 24, 60, 62, 63, 97], "unusu": 74, "unwant": 83, "unwrap": 66, "up": [59, 61, 62, 63, 95], "updat": [4, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63], "upon": [83, 88, 97], "upper": [20, 23, 24, 35, 36, 38, 42, 44, 54, 55, 57, 58, 61, 62, 63, 83, 87], "url": [6, 7, 78], "us": [7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 68, 69, 70, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97], "user": [3, 4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 78, 80, 83, 91, 95, 97], "util": [0, 7, 8, 9, 23, 24, 62, 63, 74, 77, 80, 81, 83, 86, 87, 88, 92, 93], "v": [23, 24, 35, 36, 37, 38, 59, 62, 63, 78, 82], "v1": [23, 24, 62, 63, 76, 78], "val": 70, "valid": [7, 12, 14, 22, 24, 26, 29, 31, 34, 35, 36, 38, 40, 41, 42, 44, 59, 61, 62, 63, 68, 75, 76, 78, 79, 86, 97], "valid_scor": [26, 31], "validity_scor": [40, 41], "valu": [4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 93, 97], "valuabl": 74, "valueerror": 70, "variabl": [71, 81, 96], "variable_len": [68, 70, 77, 81], "varial": [68, 70], "varianc": [13, 14, 23, 24, 52, 58, 62, 63, 73, 77, 82, 86, 88, 93, 97], "variant": 88, "variat": [8, 79, 91, 97], "varieti": 86, "variou": [74, 83, 88], "vc": 96, "vcvarsal": 96, "vector": [20, 68, 70, 74], "venv": 95, "verb": 5, "verbos": [16, 19, 20, 21, 23, 24, 29, 30, 31, 96], "veri": [20, 74, 77, 82], "versa": [73, 80], "version": [6, 7, 10, 11, 12, 13, 14, 15, 19, 21, 23, 24, 26, 27, 30, 31, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 73, 78, 86, 91, 95, 96], "via": [30, 31, 35, 36, 38, 80], "vice": [73, 80], "vicin": [15, 21], "view": [1, 3, 17, 74], "viii": [2, 3, 46, 47], "virtual": [95, 96], "visual": [73, 88, 96], "vladimir": 86, "vol": [28, 31], "volum": 82, "vote": [23, 24], "vrain": [36, 38, 57, 58, 87], "vstack": 75, "w": [8, 19, 20, 21, 22, 23, 24, 34, 35, 36, 37, 38, 59, 61, 62, 63, 76, 78, 87, 91], "wa": [10, 11, 12, 13, 14, 19, 21, 23, 24, 26, 31, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 74, 80, 86], "wael": [36, 38, 57, 58], "wai": 77, "want": [83, 96], "warm_start": [23, 24], "warn": [15, 16, 17, 21, 62, 63, 68, 70, 97], "warp": [19, 20, 21, 61, 63, 80, 82, 83], "wb": 75, "wddtw": [82, 83], "wddtw_distanc": 20, "wdtw": [27, 31, 82, 83], "wdtw_align": 20, "wdtw_distanc": 20, "we": [7, 12, 14, 15, 21, 22, 23, 24, 36, 38, 40, 41, 52, 54, 57, 58, 61, 62, 63, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 91, 92, 93, 95, 97], "webb": [23, 24, 34, 38, 51, 55, 58, 61, 63, 82, 86, 87], "weight": [19, 20, 21, 22, 23, 24, 34, 35, 36, 37, 38, 40, 41, 51, 54, 58, 59, 61, 62, 63, 82], "weighted_n_node_sampl": 88, "weighteddynamictimewarptransform": 29, "well": [4, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63], "were": [25, 32, 81], "westov": 83, "what": [59, 61, 62, 63, 91, 94], "wheight": 88, "when": [8, 16, 17, 19, 21, 23, 24, 25, 30, 31, 32, 35, 36, 37, 38, 39, 41, 53, 56, 58, 59, 62, 63, 67, 68, 70, 73, 76, 78, 80, 82, 83, 92, 97], "where": [7, 8, 10, 11, 12, 13, 14, 15, 17, 20, 21, 23, 24, 28, 31, 35, 36, 37, 38, 40, 41, 43, 44, 49, 52, 54, 57, 58, 59, 61, 62, 63, 69, 73, 75, 78, 79, 80, 82, 83, 86, 88, 92, 93, 95, 97], "wherea": [75, 86, 88, 92], "wherein": 93, "whether": [16, 21, 34, 35, 36, 38, 68, 69, 70, 80], "which": [7, 8, 16, 17, 19, 20, 21, 22, 23, 24, 27, 29, 31, 34, 35, 36, 37, 38, 40, 41, 52, 57, 58, 59, 60, 61, 62, 63, 73, 74, 76, 78, 80, 81, 82, 83, 86, 87, 88, 91, 92, 93, 94, 96, 97], "while": [7, 23, 24, 59, 61, 62, 63, 73, 76, 78, 80, 83, 88, 95], "whole": [23, 24], "whose": 93, "width": 69, "wildboar": [0, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 91, 92, 93, 94, 96, 97], "wildboar_build": 96, "wildboar_cach": 7, "wildboar_requir": [6, 7, 78], "wildoar": [15, 21], "window": [1, 2, 3, 17, 19, 20, 21, 25, 28, 31, 32, 40, 41, 46, 47, 53, 56, 58, 74, 78, 82, 92, 95, 96], "window_shap": [15, 21], "wise": [11, 14, 71, 73, 74, 77], "wistuba": [36, 38, 57, 58, 87], "within": [15, 21, 62, 63, 74, 79, 80, 83, 87, 92], "without": [7, 17, 66, 75, 78, 82, 87], "wlcss": 83, "wong": [8, 91], "work": [4, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 73, 83, 95, 96, 97], "workflow": [76, 83], "workshop": [8, 91], "wors": [23, 24, 35, 36, 37, 38, 59, 62, 63], "would": [8, 10, 11, 12, 13, 14, 23, 24, 35, 36, 37, 38, 54, 57, 58, 59, 61, 62, 63, 77, 80, 83], "wrap": [50, 58, 66], "wrapper": [16, 21, 39, 41, 66], "write": 95, "written": 78, "www": 78, "x": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 88, 91, 92, 93, 97], "x27": [79, 80, 82, 86, 88, 93], "x64": 96, "x86": 96, "x_cf": 80, "x_counterfactu": [26, 31, 40, 41], "x_factual": [40, 41], "x_indic": 20, "x_nativ": [40, 41], "x_new": [10, 11, 12, 13, 14, 19, 21, 45, 46, 47, 50, 53, 54, 56, 58], "x_outlier": [8, 91], "x_plausibl": [40, 41], "x_sampl": [15, 17, 21, 83], "x_t": [52, 58], "x_test": [7, 22, 23, 24, 28, 31, 43, 44, 73, 76, 78, 79, 80, 86, 87, 88, 93], "x_test_transform": 93, "x_timestep": [17, 20, 83], "x_train": [7, 22, 23, 24, 28, 31, 43, 44, 73, 76, 78, 79, 80, 86, 87, 88, 93], "x_true": 31, "xcode": 96, "xdg_cache_hom": 78, "xt": 92, "y": [4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 68, 69, 70, 73, 76, 77, 78, 79, 80, 82, 83, 88, 91, 93, 97], "y_contigu": [68, 70], "y_counterfactu": [40, 41], "y_desir": 80, "y_hat": [23, 24], "y_indic": 20, "y_nativ": [40, 41], "y_numer": [68, 70], "y_outlier": [8, 91], "y_plausibl": [40, 41], "y_pred": [23, 24, 35, 36, 37, 38, 59, 62, 63, 80], "y_predict": [40, 41], "y_sampl": [15, 17, 21, 83], "y_test": [7, 22, 23, 24, 28, 31, 43, 44, 73, 76, 78, 79, 80, 86, 87, 88, 93], "y_timestep": [17, 20, 83], "y_train": [7, 22, 23, 24, 28, 31, 43, 44, 73, 76, 78, 79, 80, 86, 87, 88, 93], "y_true": [23, 24, 35, 36, 37, 38, 59, 62, 63], "year": 74, "yearli": 74, "yeh": [1, 3, 17, 74], "yield": [7, 42, 44, 67, 77, 87], "yn_timestep": [15, 21], "you": [19, 21, 22, 23, 24, 28, 31, 34, 35, 36, 37, 38, 59, 61, 62, 63, 73, 74, 86, 95, 96, 97], "your": [28, 31, 59, 61, 62, 63, 95, 96, 97], "z": [74, 78, 82, 87], "z0": 78, "za": 78, "zaidi": [23, 24, 61, 63, 86], "zakaria": 83, "zero": [9, 10, 11, 12, 13, 14, 23, 24, 34, 35, 36, 38, 51, 55, 57, 58, 59, 61, 62, 63, 73, 77, 82, 87, 93], "zhu": [62, 63, 83], "zip": [6, 7, 76, 78, 92], "zipfil": [6, 7], "zone": [1, 3, 15, 17, 21, 46, 47, 53, 58], "zorder": 69, "\u00f6zsu": 82}, "titles": ["API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.annotate._motifs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.annotate._segment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.annotate</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets._filter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets._repository</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets.outlier</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets.preprocess</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.dimension_selection._base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.dimension_selection._distance</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.dimension_selection._sequential</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.dimension_selection._variance</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.dimension_selection</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance._distance</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance._manifold</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance._matrix_profile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance._multi_metric</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance._neighbors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance.dtw</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.ensemble._elastic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.ensemble._ensemble</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.ensemble</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain._importance</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain.counterfactual._helper</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain.counterfactual._nn</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain.counterfactual._nun</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain.counterfactual._proto</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain.counterfactual._sf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain.counterfactual</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.linear_model._hydra</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.linear_model._rocket</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.linear_model._shapelet</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.linear_model._transform</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.linear_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.metrics._cluster</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.metrics._counterfactual</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.model_selection._cv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.model_selection._outlier</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.model_selection</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.segment._base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.segment._mp</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.segment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._conv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._diff</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._hydra</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._interval</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._matrix_profile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._pivot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._rocket</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._sax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._shapelet</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.tree._base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.tree._plot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.tree._ptree</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.tree._tree</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.tree</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils._parallel</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils._testing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils.decorators</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils.estimator_checks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils.plot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils.validation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils.variable_len</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.version</span></code>", "User Guide", "Annotate", "Time series", "Datasets", "Pre-processing", "Repositories", "Dimension selection", "Counterfactual explanations", "Glossary", "Metrics", "Distance", "Elastic metrics", "Supervised learning", "Ensemble estimators", "Transform-based estimators", "Tree-based estimators", "Unsupervised learning", "Outlier detection", "Outlier detection benchmarks", "Segmentation", "Time series transform", "&lt;no title&gt;", "Install wildboar", "Build from source", "What\u2019s new"], "titleterms": {"": 97, "0": 97, "1": 97, "3": 97, "_base": [10, 45, 48, 59], "_cluster": 39, "_conv": 49, "_counterfactu": 40, "_cv": 42, "_diff": 50, "_distanc": [11, 15], "_elast": 22, "_ensembl": 23, "_filter": 5, "_helper": 26, "_hydra": [34, 51], "_import": 25, "_interv": 52, "_manifold": 16, "_matrix_profil": [17, 53], "_motif": 1, "_mp": 46, "_multi_metr": 18, "_neighbor": 19, "_nn": 27, "_nun": 28, "_outlier": 43, "_parallel": 64, "_pivot": 54, "_plot": 60, "_proto": 29, "_ptree": 61, "_repositori": 6, "_rocket": [35, 55], "_sax": 56, "_segment": 2, "_sequenti": 12, "_sf": 30, "_shapelet": [36, 57], "_test": 65, "_transform": 37, "_tree": 62, "_varianc": 13, "an": 73, "annot": [1, 2, 3, 74], "api": 0, "base": [4, 87, 88], "benchmark": [83, 91], "build": 96, "cach": 78, "castor": 87, "chang": 97, "class": [4, 6, 7, 10, 11, 12, 13, 14, 16, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 70], "common": 84, "convolut": [87, 93], "counterfactu": [26, 27, 28, 29, 30, 31, 80], "data": [73, 74], "dataset": [5, 6, 7, 8, 9, 73, 76], "decis": 88, "decor": 66, "definit": 78, "depend": 97, "detect": [90, 91], "dilat": 87, "dimens": 79, "dimension_select": [10, 11, 12, 13, 14], "discoveri": 74, "distanc": [15, 16, 17, 18, 19, 20, 21, 83, 84], "dtw": 20, "dynam": 84, "edit": 84, "elast": [82, 84, 86], "emmott": 91, "ensembl": [22, 23, 24, 86], "estim": [86, 87, 88], "estimator_check": 67, "exampl": 73, "explain": [25, 26, 27, 28, 29, 30, 31, 32], "explan": 80, "explor": 73, "filter": 76, "forest": [80, 86], "from": 96, "function": [1, 2, 3, 4, 5, 7, 8, 9, 15, 17, 20, 21, 25, 26, 31, 32, 39, 40, 41, 43, 44, 49, 56, 58, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71], "glossari": 81, "guid": 73, "hydra": [87, 93], "instal": [78, 95], "interv": [86, 88], "json": 78, "label": 91, "learn": [73, 85, 89], "length": 75, "linear_model": [34, 35, 36, 37, 38], "load": [73, 76], "local": 78, "longest": 84, "major": 91, "matrixprofil": 74, "merg": 84, "metric": [39, 40, 41, 82, 83, 84], "minimum": 83, "minor": 91, "model": [73, 97], "model_select": [42, 43, 44], "motif": 74, "move": 84, "multipl": 76, "multivari": 83, "nearest": 80, "neighbour": 80, "new": 97, "non": 82, "outlier": [8, 90, 91], "pair": 83, "pairwis": 83, "parallel": 83, "penalti": 84, "perform": 73, "persist": 73, "plot": [69, 88], "pre": 77, "predict": 73, "preprocess": 9, "process": 77, "proxim": 86, "random": 87, "real": 84, "refer": [0, 74, 80, 86, 87], "repositori": 78, "rocket": [87, 93], "search": 83, "segment": [45, 46, 47, 92], "select": 79, "selector": 79, "sequenc": 84, "sequenti": 79, "seri": [73, 75, 93], "shapelet": [80, 86, 87, 88], "singl": 76, "sourc": 96, "specif": 82, "split": 84, "structur": [74, 88], "subsequ": [82, 83, 84], "supervis": 85, "support": 83, "tabular": 73, "threshold": 79, "time": [73, 75, 84, 93], "transform": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 73, 87, 93], "tree": [59, 60, 61, 62, 63, 88], "unsupervis": 89, "user": 73, "util": [64, 65, 66, 67, 68, 69, 70, 71], "valid": 70, "variabl": 75, "variable_len": 71, "varianc": 79, "version": [72, 97], "warp": 84, "what": 97, "wildboar": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 95]}})