Search.setIndex({"alltitles": {"API Reference": [[0, "api-reference"]], "Annotate": [[23, "annotate"]], "Benchmark": [[32, "benchmark"]], "Build from source": [[45, "build-from-source"]], "Castor transform": [[36, "castor-transform"]], "Classes": [[2, "classes"], [3, "classes"], [6, "classes"], [8, "classes"], [9, "classes"], [10, "classes"], [11, "classes"], [13, "classes"], [15, "classes"], [16, "classes"], [17, "classes"], [18, "classes"]], "Convolution-based transform": [[36, "convolution-based-transform"]], "Convolutional transform": [[42, "convolutional-transform"]], "Counterfactual explanations": [[29, "counterfactual-explanations"]], "Datasets": [[25, "datasets"]], "Decision tree structure": [[37, "decision-tree-structure"]], "Dependencies": [[46, "dependencies"]], "Dilated shapelet transform": [[36, "dilated-shapelet-transform"]], "Dimension selection": [[28, "dimension-selection"]], "Dimension variance threshold": [[28, "dimension-variance-threshold"]], "Distance": [[32, "distance"]], "Dynamic time warping": [[33, "dynamic-time-warping"]], "Edit-distance for real sequence": [[33, "edit-distance-for-real-sequence"]], "Edit-distance with real penalty": [[33, "edit-distance-with-real-penalty"]], "Elastic Ensemble": [[35, "elastic-ensemble"]], "Elastic and non-elastic metrics": [[31, "elastic-and-non-elastic-metrics"]], "Elastic metrics": [[33, "elastic-metrics"]], "Emmott labeler": [[40, "emmott-labeler"]], "Ensemble estimators": [[35, "ensemble-estimators"]], "Exploring model performance": [[22, "exploring-model-performance"]], "Filters": [[25, "filters"]], "Functions": [[1, "functions"], [2, "functions"], [3, "functions"], [4, "functions"], [5, "functions"], [7, "functions"], [8, "functions"], [10, "functions"], [11, "functions"], [14, "functions"], [15, "functions"], [17, "functions"], [18, "functions"], [19, "functions"], [20, "functions"], [21, "functions"]], "Glossary": [[30, "glossary"]], "Hydra": [[36, "hydra"]], "Hydra transform": [[42, "hydra-transform"]], "Install wildboar": [[44, "install-wildboar"]], "Installing repositories": [[27, "installing-repositories"]], "Interval Forest": [[35, "interval-forest"]], "Interval-based decision trees": [[37, "interval-based-decision-trees"]], "JSON repositories": [[27, "json-repositories"]], "Learning and predicting": [[22, "learning-and-predicting"]], "Loading a single dataset": [[25, "loading-a-single-dataset"]], "Loading an example dataset": [[22, "loading-an-example-dataset"]], "Loading datasets": [[25, "loading-datasets"]], "Loading multiple datasets": [[25, "loading-multiple-datasets"]], "Local cache": [[27, "local-cache"]], "Longest common subsequence": [[33, "longest-common-subsequence"]], "Majority labeler": [[40, "majority-labeler"]], "MatrixProfile": [[23, "matrixprofile"]], "MatrixProfile data structure": [[23, "matrixprofile-data-structure"]], "Metric specification": [[31, "metric-specification"]], "Metrics": [[31, "metrics"], [32, "metrics"]], "Minimum distance": [[32, "minimum-distance"]], "Minority labeler": [[40, "minority-labeler"]], "Model persistence": [[22, "model-persistence"]], "Motif discovery": [[23, "motif-discovery"]], "Move-split-merge": [[33, "move-split-merge"]], "Multivariate support": [[32, "multivariate-support"]], "Nearest neighbour counterfactuals": [[29, "nearest-neighbour-counterfactuals"]], "New and changed models": [[46, "new-and-changed-models"]], "Outlier detection": [[39, "outlier-detection"]], "Outlier detection benchmarks": [[40, "outlier-detection-benchmarks"]], "Paired distance": [[32, "paired-distance"]], "Pairwise distance": [[32, "pairwise-distance"]], "Pairwise subsequence distance": [[32, "pairwise-subsequence-distance"]], "Parallelization": [[32, "parallelization"]], "Plotting": [[37, "plotting"]], "Pre-processing": [[26, "pre-processing"]], "Proximity forests": [[35, "proximity-forests"]], "Random shapelet transform": [[36, "random-shapelet-transform"]], "Reference": [[23, "reference"]], "References": [[29, "references"], [35, "references"], [36, "references"]], "Repositories": [[27, "repositories"]], "Repository definitions": [[27, "repository-definitions"]], "Rocket": [[36, "rocket"]], "Rocket transform": [[42, "rocket-transform"]], "Segmentation": [[41, "segmentation"]], "Sequential dimension selector": [[28, "sequential-dimension-selector"]], "Shapelet forest counterfactuals": [[29, "shapelet-forest-counterfactuals"]], "Shapelet forests": [[35, "shapelet-forests"]], "Shapelet-based decision trees": [[37, "shapelet-based-decision-trees"]], "Shapelet-based transform": [[36, "shapelet-based-transform"]], "Subsequence metrics": [[31, "subsequence-metrics"], [32, "subsequence-metrics"]], "Subsequence search": [[32, "subsequence-search"]], "Supervised learning": [[34, "supervised-learning"]], "Time series": [[24, "time-series"]], "Time series transform": [[42, "time-series-transform"]], "Time-warp edit distance": [[33, "time-warp-edit-distance"]], "Transform-based estimators": [[36, "transform-based-estimators"]], "Transforming time series to tabular data": [[22, "transforming-time-series-to-tabular-data"]], "Tree-based estimators": [[37, "tree-based-estimators"]], "Unsupervised learning": [[38, "unsupervised-learning"]], "User Guide": [[22, "user-guide"]], "Variable length time series": [[24, "variable-length-time-series"]], "Version 1.3.0": [[46, "version-1-3-0"]], "What\u2019s new": [[46, "what-s-new"]], "wildboar": [[12, "module-wildboar"]], "wildboar.annotate": [[1, "module-wildboar.annotate"]], "wildboar.base": [[2, "module-wildboar.base"]], "wildboar.datasets": [[3, "module-wildboar.datasets"]], "wildboar.datasets.outlier": [[4, "module-wildboar.datasets.outlier"]], "wildboar.datasets.preprocess": [[5, "module-wildboar.datasets.preprocess"]], "wildboar.dimension_selection": [[6, "module-wildboar.dimension_selection"]], "wildboar.distance": [[8, "module-wildboar.distance"]], "wildboar.distance.dtw": [[7, "module-wildboar.distance.dtw"]], "wildboar.ensemble": [[9, "module-wildboar.ensemble"]], "wildboar.explain": [[11, "module-wildboar.explain"]], "wildboar.explain.counterfactual": [[10, "module-wildboar.explain.counterfactual"]], "wildboar.linear_model": [[13, "module-wildboar.linear_model"]], "wildboar.metrics": [[14, "module-wildboar.metrics"]], "wildboar.model_selection": [[15, "module-wildboar.model_selection"]], "wildboar.segment": [[16, "module-wildboar.segment"]], "wildboar.transform": [[17, "module-wildboar.transform"]], "wildboar.tree": [[18, "module-wildboar.tree"]], "wildboar.utils": [[19, "module-wildboar.utils"]], "wildboar.utils.plot": [[20, "module-wildboar.utils.plot"]], "wildboar.utils.variable_len": [[21, "module-wildboar.utils.variable_len"]]}, "docnames": ["api/index", "api/wildboar/annotate/index", "api/wildboar/base/index", "api/wildboar/datasets/index", "api/wildboar/datasets/outlier/index", "api/wildboar/datasets/preprocess/index", "api/wildboar/dimension_selection/index", "api/wildboar/distance/dtw/index", "api/wildboar/distance/index", "api/wildboar/ensemble/index", "api/wildboar/explain/counterfactual/index", "api/wildboar/explain/index", "api/wildboar/index", "api/wildboar/linear_model/index", "api/wildboar/metrics/index", "api/wildboar/model_selection/index", "api/wildboar/segment/index", "api/wildboar/transform/index", "api/wildboar/tree/index", "api/wildboar/utils/index", "api/wildboar/utils/plot/index", "api/wildboar/utils/variable_len/index", "guide", "guide/annotate", "guide/basics", "guide/datasets", "guide/datasets/preprocess", "guide/datasets/repositories", "guide/dimension_selection", "guide/explain/counterfactuals", "guide/glossary", "guide/metrics", "guide/metrics/distance", "guide/metrics/elastic", "guide/supervised", "guide/supervised/ensemble", "guide/supervised/transform", "guide/supervised/trees", "guide/unsupervised", "guide/unsupervised/outlier", "guide/unsupervised/outlier/generation", "guide/unsupervised/segmentation", "guide/unsupervised/transform", "index", "install", "install/build", "more/whatsnew"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["api/index.rst", "api/wildboar/annotate/index.rst", "api/wildboar/base/index.rst", "api/wildboar/datasets/index.rst", "api/wildboar/datasets/outlier/index.rst", "api/wildboar/datasets/preprocess/index.rst", "api/wildboar/dimension_selection/index.rst", "api/wildboar/distance/dtw/index.rst", "api/wildboar/distance/index.rst", "api/wildboar/ensemble/index.rst", "api/wildboar/explain/counterfactual/index.rst", "api/wildboar/explain/index.rst", "api/wildboar/index.rst", "api/wildboar/linear_model/index.rst", "api/wildboar/metrics/index.rst", "api/wildboar/model_selection/index.rst", "api/wildboar/segment/index.rst", "api/wildboar/transform/index.rst", "api/wildboar/tree/index.rst", "api/wildboar/utils/index.rst", "api/wildboar/utils/plot/index.rst", "api/wildboar/utils/variable_len/index.rst", "guide.rst", "guide/annotate.rst", "guide/basics.rst", "guide/datasets.rst", "guide/datasets/preprocess.rst", "guide/datasets/repositories.rst", "guide/dimension_selection.rst", "guide/explain/counterfactuals.rst", "guide/glossary.rst", "guide/metrics.rst", "guide/metrics/distance.rst", "guide/metrics/elastic.rst", "guide/supervised.rst", "guide/supervised/ensemble.rst", "guide/supervised/transform.rst", "guide/supervised/trees.rst", "guide/unsupervised.rst", "guide/unsupervised/outlier.rst", "guide/unsupervised/outlier/generation.rst", "guide/unsupervised/segmentation.rst", "guide/unsupervised/transform.rst", "index.rst", "install.rst", "install/build.rst", "more/whatsnew.rst"], "indexentries": {"amplitudeimportance (class in wildboar.explain)": [[11, "wildboar.explain.AmplitudeImportance", false]], "apply() (wildboar.tree.extrashapelettreeclassifier method)": [[18, "wildboar.tree.ExtraShapeletTreeClassifier.apply", false]], "apply() (wildboar.tree.extrashapelettreeregressor method)": [[18, "wildboar.tree.ExtraShapeletTreeRegressor.apply", false]], "apply() (wildboar.tree.intervaltreeclassifier method)": [[18, "wildboar.tree.IntervalTreeClassifier.apply", false]], "apply() (wildboar.tree.intervaltreeregressor method)": [[18, "wildboar.tree.IntervalTreeRegressor.apply", false]], "apply() (wildboar.tree.pivottreeclassifier method)": [[18, "wildboar.tree.PivotTreeClassifier.apply", false]], "apply() (wildboar.tree.proximitytreeclassifier method)": [[18, "wildboar.tree.ProximityTreeClassifier.apply", false]], "apply() (wildboar.tree.rockettreeclassifier method)": [[18, "wildboar.tree.RocketTreeClassifier.apply", false]], "apply() (wildboar.tree.rockettreeregressor method)": [[18, "wildboar.tree.RocketTreeRegressor.apply", false]], "apply() (wildboar.tree.shapelettreeclassifier method)": [[18, "wildboar.tree.ShapeletTreeClassifier.apply", false]], "apply() (wildboar.tree.shapelettreeregressor method)": [[18, "wildboar.tree.ShapeletTreeRegressor.apply", false]], "argmin_distance() (in module wildboar.distance)": [[8, "wildboar.distance.argmin_distance", false]], "argmin_subsequence_distance() (in module wildboar.distance)": [[8, "wildboar.distance.argmin_subsequence_distance", false]], "baggingclassifier (class in wildboar.ensemble)": [[9, "wildboar.ensemble.BaggingClassifier", false]], "baggingregressor (class in wildboar.ensemble)": [[9, "wildboar.ensemble.BaggingRegressor", false]], "basebagging (class in wildboar.ensemble)": [[9, "wildboar.ensemble.BaseBagging", false]], "baseestimator (class in wildboar.base)": [[2, "wildboar.base.BaseEstimator", false]], "bundle (class in wildboar.datasets)": [[3, "wildboar.datasets.Bundle", false]], "castorclassifier (class in wildboar.linear_model)": [[13, "wildboar.linear_model.CastorClassifier", false]], "castortransform (class in wildboar.transform)": [[17, "wildboar.transform.CastorTransform", false]], "check_array() (in module wildboar.utils)": [[19, "wildboar.utils.check_array", false]], "check_x_y() (in module wildboar.utils)": [[19, "wildboar.utils.check_X_y", false]], "clear_cache() (in module wildboar.datasets)": [[3, "wildboar.datasets.clear_cache", false]], "compactness_score() (in module wildboar.metrics)": [[14, "wildboar.metrics.compactness_score", false]], "convolve() (in module wildboar.transform)": [[17, "wildboar.transform.convolve", false]], "counterfactualmixin (class in wildboar.base)": [[2, "wildboar.base.CounterfactualMixin", false]], "counterfactuals() (in module wildboar.explain.counterfactual)": [[10, "wildboar.explain.counterfactual.counterfactuals", false]], "ddtw_distance() (in module wildboar.distance.dtw)": [[7, "wildboar.distance.dtw.ddtw_distance", false]], "decision_function() (wildboar.ensemble.baggingclassifier method)": [[9, "wildboar.ensemble.BaggingClassifier.decision_function", false]], "decision_function() (wildboar.ensemble.extrashapelettreesclassifier method)": [[9, "wildboar.ensemble.ExtraShapeletTreesClassifier.decision_function", false]], "decision_function() (wildboar.ensemble.intervalforestclassifier method)": [[9, "wildboar.ensemble.IntervalForestClassifier.decision_function", false]], "decision_function() (wildboar.ensemble.pivotforestclassifier method)": [[9, "wildboar.ensemble.PivotForestClassifier.decision_function", false]], "decision_function() (wildboar.ensemble.proximityforestclassifier method)": [[9, "wildboar.ensemble.ProximityForestClassifier.decision_function", false]], "decision_function() (wildboar.ensemble.rocketforestclassifier method)": [[9, "wildboar.ensemble.RocketForestClassifier.decision_function", false]], "decision_function() (wildboar.ensemble.shapeletforestclassifier method)": [[9, "wildboar.ensemble.ShapeletForestClassifier.decision_function", false]], "decision_path() (wildboar.tree.extrashapelettreeclassifier method)": [[18, "wildboar.tree.ExtraShapeletTreeClassifier.decision_path", false]], "decision_path() (wildboar.tree.extrashapelettreeregressor method)": [[18, "wildboar.tree.ExtraShapeletTreeRegressor.decision_path", false]], "decision_path() (wildboar.tree.intervaltreeclassifier method)": [[18, "wildboar.tree.IntervalTreeClassifier.decision_path", false]], "decision_path() (wildboar.tree.intervaltreeregressor method)": [[18, "wildboar.tree.IntervalTreeRegressor.decision_path", false]], "decision_path() (wildboar.tree.pivottreeclassifier method)": [[18, "wildboar.tree.PivotTreeClassifier.decision_path", false]], "decision_path() (wildboar.tree.proximitytreeclassifier method)": [[18, "wildboar.tree.ProximityTreeClassifier.decision_path", false]], "decision_path() (wildboar.tree.rockettreeclassifier method)": [[18, "wildboar.tree.RocketTreeClassifier.decision_path", false]], "decision_path() (wildboar.tree.rockettreeregressor method)": [[18, "wildboar.tree.RocketTreeRegressor.decision_path", false]], "decision_path() (wildboar.tree.shapelettreeclassifier method)": [[18, "wildboar.tree.ShapeletTreeClassifier.decision_path", false]], "decision_path() (wildboar.tree.shapelettreeregressor method)": [[18, "wildboar.tree.ShapeletTreeRegressor.decision_path", false]], "density_outliers() (in module wildboar.datasets.outlier)": [[4, "wildboar.datasets.outlier.density_outliers", false]], "derivativetransform (class in wildboar.transform)": [[17, "wildboar.transform.DerivativeTransform", false]], "difftransform (class in wildboar.transform)": [[17, "wildboar.transform.DiffTransform", false]], "dilatedshapeletclassifier (class in wildboar.linear_model)": [[13, "wildboar.linear_model.DilatedShapeletClassifier", false]], "dilatedshapelettransform (class in wildboar.transform)": [[17, "wildboar.transform.DilatedShapeletTransform", false]], "distance_profile() (in module wildboar.distance)": [[8, "wildboar.distance.distance_profile", false]], "distancevariancethreshold (class in wildboar.dimension_selection)": [[6, "wildboar.dimension_selection.DistanceVarianceThreshold", false]], "download_url (wildboar.datasets.jsonrepository property)": [[3, "wildboar.datasets.JSONRepository.download_url", false]], "download_url (wildboar.datasets.repository property)": [[3, "wildboar.datasets.Repository.download_url", false]], "dtw_alignment() (in module wildboar.distance.dtw)": [[7, "wildboar.distance.dtw.dtw_alignment", false]], "dtw_average() (in module wildboar.distance.dtw)": [[7, "wildboar.distance.dtw.dtw_average", false]], "dtw_distance() (in module wildboar.distance.dtw)": [[7, "wildboar.distance.dtw.dtw_distance", false]], "dtw_envelop() (in module wildboar.distance.dtw)": [[7, "wildboar.distance.dtw.dtw_envelop", false]], "dtw_lb_keogh() (in module wildboar.distance.dtw)": [[7, "wildboar.distance.dtw.dtw_lb_keogh", false]], "dtw_mapping() (in module wildboar.distance.dtw)": [[7, "wildboar.distance.dtw.dtw_mapping", false]], "elasticensembleclassifier (class in wildboar.ensemble)": [[9, "wildboar.ensemble.ElasticEnsembleClassifier", false]], "emmott_outliers() (in module wildboar.datasets.outlier)": [[4, "wildboar.datasets.outlier.emmott_outliers", false]], "estimators_samples_ (wildboar.ensemble.baggingclassifier property)": [[9, "wildboar.ensemble.BaggingClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.baggingregressor property)": [[9, "wildboar.ensemble.BaggingRegressor.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.basebagging property)": [[9, "wildboar.ensemble.BaseBagging.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.extrashapelettreesclassifier property)": [[9, "wildboar.ensemble.ExtraShapeletTreesClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.extrashapelettreesregressor property)": [[9, "wildboar.ensemble.ExtraShapeletTreesRegressor.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.intervalforestclassifier property)": [[9, "wildboar.ensemble.IntervalForestClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.intervalforestregressor property)": [[9, "wildboar.ensemble.IntervalForestRegressor.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.isolationshapeletforest property)": [[9, "wildboar.ensemble.IsolationShapeletForest.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.pivotforestclassifier property)": [[9, "wildboar.ensemble.PivotForestClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.proximityforestclassifier property)": [[9, "wildboar.ensemble.ProximityForestClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.rocketforestclassifier property)": [[9, "wildboar.ensemble.RocketForestClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.rocketforestregressor property)": [[9, "wildboar.ensemble.RocketForestRegressor.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.shapeletforestclassifier property)": [[9, "wildboar.ensemble.ShapeletForestClassifier.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.shapeletforestembedding property)": [[9, "wildboar.ensemble.ShapeletForestEmbedding.estimators_samples_", false]], "estimators_samples_ (wildboar.ensemble.shapeletforestregressor property)": [[9, "wildboar.ensemble.ShapeletForestRegressor.estimators_samples_", false]], "explainermixin (class in wildboar.base)": [[2, "wildboar.base.ExplainerMixin", false]], "extrashapelettreeclassifier (class in wildboar.tree)": [[18, "wildboar.tree.ExtraShapeletTreeClassifier", false]], "extrashapelettreeregressor (class in wildboar.tree)": [[18, "wildboar.tree.ExtraShapeletTreeRegressor", false]], "extrashapelettreesclassifier (class in wildboar.ensemble)": [[9, "wildboar.ensemble.ExtraShapeletTreesClassifier", false]], "extrashapelettreesregressor (class in wildboar.ensemble)": [[9, "wildboar.ensemble.ExtraShapeletTreesRegressor", false]], "featuretransform (class in wildboar.transform)": [[17, "wildboar.transform.FeatureTransform", false]], "fit() (wildboar.dimension_selection.distancevariancethreshold method)": [[6, "wildboar.dimension_selection.DistanceVarianceThreshold.fit", false]], "fit() (wildboar.dimension_selection.selectdimensionpercentile method)": [[6, "wildboar.dimension_selection.SelectDimensionPercentile.fit", false]], "fit() (wildboar.dimension_selection.selectdimensionsignificance method)": [[6, "wildboar.dimension_selection.SelectDimensionSignificance.fit", false]], "fit() (wildboar.dimension_selection.selectdimensiontopk method)": [[6, "wildboar.dimension_selection.SelectDimensionTopK.fit", false]], "fit() (wildboar.dimension_selection.sequentialdimensionselector method)": [[6, "wildboar.dimension_selection.SequentialDimensionSelector.fit", false]], "fit() (wildboar.distance.kmeans method)": [[8, "wildboar.distance.KMeans.fit", false]], "fit() (wildboar.distance.kmedoids method)": [[8, "wildboar.distance.KMedoids.fit", false]], "fit() (wildboar.distance.kneighborsclassifier method)": [[8, "wildboar.distance.KNeighborsClassifier.fit", false]], "fit() (wildboar.ensemble.baggingclassifier method)": [[9, "wildboar.ensemble.BaggingClassifier.fit", false]], "fit() (wildboar.ensemble.baggingregressor method)": [[9, "wildboar.ensemble.BaggingRegressor.fit", false]], "fit() (wildboar.ensemble.basebagging method)": [[9, "wildboar.ensemble.BaseBagging.fit", false]], "fit() (wildboar.ensemble.elasticensembleclassifier method)": [[9, "wildboar.ensemble.ElasticEnsembleClassifier.fit", false]], "fit() (wildboar.ensemble.extrashapelettreesclassifier method)": [[9, "wildboar.ensemble.ExtraShapeletTreesClassifier.fit", false]], "fit() (wildboar.ensemble.extrashapelettreesregressor method)": [[9, "wildboar.ensemble.ExtraShapeletTreesRegressor.fit", false]], "fit() (wildboar.ensemble.intervalforestclassifier method)": [[9, "wildboar.ensemble.IntervalForestClassifier.fit", false]], "fit() (wildboar.ensemble.intervalforestregressor method)": [[9, "wildboar.ensemble.IntervalForestRegressor.fit", false]], "fit() (wildboar.ensemble.isolationshapeletforest method)": [[9, "wildboar.ensemble.IsolationShapeletForest.fit", false]], "fit() (wildboar.ensemble.pivotforestclassifier method)": [[9, "wildboar.ensemble.PivotForestClassifier.fit", false]], "fit() (wildboar.ensemble.proximityforestclassifier method)": [[9, "wildboar.ensemble.ProximityForestClassifier.fit", false]], "fit() (wildboar.ensemble.rocketforestclassifier method)": [[9, "wildboar.ensemble.RocketForestClassifier.fit", false]], "fit() (wildboar.ensemble.rocketforestregressor method)": [[9, "wildboar.ensemble.RocketForestRegressor.fit", false]], "fit() (wildboar.ensemble.shapeletforestclassifier method)": [[9, "wildboar.ensemble.ShapeletForestClassifier.fit", false]], "fit() (wildboar.ensemble.shapeletforestembedding method)": [[9, "wildboar.ensemble.ShapeletForestEmbedding.fit", false]], "fit() (wildboar.ensemble.shapeletforestregressor method)": [[9, "wildboar.ensemble.ShapeletForestRegressor.fit", false]], "fit() (wildboar.segment.flusssegmenter method)": [[16, "wildboar.segment.FlussSegmenter.fit", false]], "fit() (wildboar.transform.castortransform method)": [[17, "wildboar.transform.CastorTransform.fit", false]], "fit() (wildboar.transform.dilatedshapelettransform method)": [[17, "wildboar.transform.DilatedShapeletTransform.fit", false]], "fit() (wildboar.transform.featuretransform method)": [[17, "wildboar.transform.FeatureTransform.fit", false]], "fit() (wildboar.transform.hydratransform method)": [[17, "wildboar.transform.HydraTransform.fit", false]], "fit() (wildboar.transform.intervaltransform method)": [[17, "wildboar.transform.IntervalTransform.fit", false]], "fit() (wildboar.transform.matrixprofiletransform method)": [[17, "wildboar.transform.MatrixProfileTransform.fit", false]], "fit() (wildboar.transform.pivottransform method)": [[17, "wildboar.transform.PivotTransform.fit", false]], "fit() (wildboar.transform.randomshapelettransform method)": [[17, "wildboar.transform.RandomShapeletTransform.fit", false]], "fit() (wildboar.transform.rockettransform method)": [[17, "wildboar.transform.RocketTransform.fit", false]], "fit() (wildboar.transform.shapelettransform method)": [[17, "wildboar.transform.ShapeletTransform.fit", false]], "fit() (wildboar.tree.extrashapelettreeclassifier method)": [[18, "wildboar.tree.ExtraShapeletTreeClassifier.fit", false]], "fit() (wildboar.tree.extrashapelettreeregressor method)": [[18, "wildboar.tree.ExtraShapeletTreeRegressor.fit", false]], "fit() (wildboar.tree.intervaltreeclassifier method)": [[18, "wildboar.tree.IntervalTreeClassifier.fit", false]], "fit() (wildboar.tree.intervaltreeregressor method)": [[18, "wildboar.tree.IntervalTreeRegressor.fit", false]], "fit() (wildboar.tree.pivottreeclassifier method)": [[18, "wildboar.tree.PivotTreeClassifier.fit", false]], "fit() (wildboar.tree.proximitytreeclassifier method)": [[18, "wildboar.tree.ProximityTreeClassifier.fit", false]], "fit() (wildboar.tree.rockettreeclassifier method)": [[18, "wildboar.tree.RocketTreeClassifier.fit", false]], "fit() (wildboar.tree.rockettreeregressor method)": [[18, "wildboar.tree.RocketTreeRegressor.fit", false]], "fit() (wildboar.tree.shapelettreeclassifier method)": [[18, "wildboar.tree.ShapeletTreeClassifier.fit", false]], "fit() (wildboar.tree.shapelettreeregressor method)": [[18, "wildboar.tree.ShapeletTreeRegressor.fit", false]], "fit_explain() (wildboar.base.explainermixin method)": [[2, "wildboar.base.ExplainerMixin.fit_explain", false]], "fit_explain() (wildboar.explain.amplitudeimportance method)": [[11, "wildboar.explain.AmplitudeImportance.fit_explain", false]], "fit_explain() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[10, "wildboar.explain.counterfactual.KNeighborsCounterfactual.fit_explain", false]], "fit_explain() (wildboar.explain.counterfactual.nativeguidecounterfactual method)": [[10, "wildboar.explain.counterfactual.NativeGuideCounterfactual.fit_explain", false]], "fit_explain() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[10, "wildboar.explain.counterfactual.PrototypeCounterfactual.fit_explain", false]], "fit_explain() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[10, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.fit_explain", false]], "fit_explain() (wildboar.explain.frequencyimportance method)": [[11, "wildboar.explain.FrequencyImportance.fit_explain", false]], "fit_explain() (wildboar.explain.intervalimportance method)": [[11, "wildboar.explain.IntervalImportance.fit_explain", false]], "fit_explain() (wildboar.explain.shapeletimportance method)": [[11, "wildboar.explain.ShapeletImportance.fit_explain", false]], "fit_predict() (wildboar.distance.kmeans method)": [[8, "wildboar.distance.KMeans.fit_predict", false]], "fit_predict() (wildboar.distance.kmedoids method)": [[8, "wildboar.distance.KMedoids.fit_predict", false]], "fit_predict() (wildboar.ensemble.isolationshapeletforest method)": [[9, "wildboar.ensemble.IsolationShapeletForest.fit_predict", false]], "fit_transform() (wildboar.dimension_selection.distancevariancethreshold method)": [[6, "wildboar.dimension_selection.DistanceVarianceThreshold.fit_transform", false]], "fit_transform() (wildboar.dimension_selection.selectdimensionpercentile method)": [[6, "wildboar.dimension_selection.SelectDimensionPercentile.fit_transform", false]], "fit_transform() (wildboar.dimension_selection.selectdimensionsignificance method)": [[6, "wildboar.dimension_selection.SelectDimensionSignificance.fit_transform", false]], "fit_transform() (wildboar.dimension_selection.selectdimensiontopk method)": [[6, "wildboar.dimension_selection.SelectDimensionTopK.fit_transform", false]], "fit_transform() (wildboar.dimension_selection.sequentialdimensionselector method)": [[6, "wildboar.dimension_selection.SequentialDimensionSelector.fit_transform", false]], "fit_transform() (wildboar.distance.kmeans method)": [[8, "wildboar.distance.KMeans.fit_transform", false]], "fit_transform() (wildboar.distance.kmedoids method)": [[8, "wildboar.distance.KMedoids.fit_transform", false]], "fit_transform() (wildboar.segment.flusssegmenter method)": [[16, "wildboar.segment.FlussSegmenter.fit_transform", false]], "fit_transform() (wildboar.transform.castortransform method)": [[17, "wildboar.transform.CastorTransform.fit_transform", false]], "fit_transform() (wildboar.transform.derivativetransform method)": [[17, "wildboar.transform.DerivativeTransform.fit_transform", false]], "fit_transform() (wildboar.transform.difftransform method)": [[17, "wildboar.transform.DiffTransform.fit_transform", false]], "fit_transform() (wildboar.transform.dilatedshapelettransform method)": [[17, "wildboar.transform.DilatedShapeletTransform.fit_transform", false]], "fit_transform() (wildboar.transform.featuretransform method)": [[17, "wildboar.transform.FeatureTransform.fit_transform", false]], "fit_transform() (wildboar.transform.hydratransform method)": [[17, "wildboar.transform.HydraTransform.fit_transform", false]], "fit_transform() (wildboar.transform.intervaltransform method)": [[17, "wildboar.transform.IntervalTransform.fit_transform", false]], "fit_transform() (wildboar.transform.matrixprofiletransform method)": [[17, "wildboar.transform.MatrixProfileTransform.fit_transform", false]], "fit_transform() (wildboar.transform.paa method)": [[17, "wildboar.transform.PAA.fit_transform", false]], "fit_transform() (wildboar.transform.pivottransform method)": [[17, "wildboar.transform.PivotTransform.fit_transform", false]], "fit_transform() (wildboar.transform.proximitytransform method)": [[17, "wildboar.transform.ProximityTransform.fit_transform", false]], "fit_transform() (wildboar.transform.randomshapelettransform method)": [[17, "wildboar.transform.RandomShapeletTransform.fit_transform", false]], "fit_transform() (wildboar.transform.rockettransform method)": [[17, "wildboar.transform.RocketTransform.fit_transform", false]], "fit_transform() (wildboar.transform.sax method)": [[17, "wildboar.transform.SAX.fit_transform", false]], "fit_transform() (wildboar.transform.shapelettransform method)": [[17, "wildboar.transform.ShapeletTransform.fit_transform", false]], "flusssegmenter (class in wildboar.segment)": [[16, "wildboar.segment.FlussSegmenter", false]], "frequencyimportance (class in wildboar.explain)": [[11, "wildboar.explain.FrequencyImportance", false]], "get_bundle() (wildboar.datasets.jsonrepository method)": [[3, "wildboar.datasets.JSONRepository.get_bundle", false]], "get_bundle() (wildboar.datasets.repository method)": [[3, "wildboar.datasets.Repository.get_bundle", false]], "get_bundles() (in module wildboar.datasets)": [[3, "wildboar.datasets.get_bundles", false]], "get_bundles() (wildboar.datasets.jsonrepository method)": [[3, "wildboar.datasets.JSONRepository.get_bundles", false]], "get_bundles() (wildboar.datasets.repository method)": [[3, "wildboar.datasets.Repository.get_bundles", false]], "get_collection() (wildboar.datasets.bundle method)": [[3, "wildboar.datasets.Bundle.get_collection", false]], "get_collection() (wildboar.datasets.npbundle method)": [[3, "wildboar.datasets.NpBundle.get_collection", false]], "get_dimensions() (wildboar.dimension_selection.distancevariancethreshold method)": [[6, "wildboar.dimension_selection.DistanceVarianceThreshold.get_dimensions", false]], "get_dimensions() (wildboar.dimension_selection.selectdimensionpercentile method)": [[6, "wildboar.dimension_selection.SelectDimensionPercentile.get_dimensions", false]], "get_dimensions() (wildboar.dimension_selection.selectdimensionsignificance method)": [[6, "wildboar.dimension_selection.SelectDimensionSignificance.get_dimensions", false]], "get_dimensions() (wildboar.dimension_selection.selectdimensiontopk method)": [[6, "wildboar.dimension_selection.SelectDimensionTopK.get_dimensions", false]], "get_dimensions() (wildboar.dimension_selection.sequentialdimensionselector method)": [[6, "wildboar.dimension_selection.SequentialDimensionSelector.get_dimensions", false]], "get_filename() (wildboar.datasets.bundle method)": [[3, "wildboar.datasets.Bundle.get_filename", false]], "get_filename() (wildboar.datasets.npbundle method)": [[3, "wildboar.datasets.NpBundle.get_filename", false]], "get_metadata_routing() (wildboar.base.baseestimator method)": [[2, "wildboar.base.BaseEstimator.get_metadata_routing", false]], "get_metadata_routing() (wildboar.dimension_selection.distancevariancethreshold method)": [[6, "wildboar.dimension_selection.DistanceVarianceThreshold.get_metadata_routing", false]], "get_metadata_routing() (wildboar.dimension_selection.selectdimensionpercentile method)": [[6, "wildboar.dimension_selection.SelectDimensionPercentile.get_metadata_routing", false]], "get_metadata_routing() (wildboar.dimension_selection.selectdimensionsignificance method)": [[6, "wildboar.dimension_selection.SelectDimensionSignificance.get_metadata_routing", false]], "get_metadata_routing() (wildboar.dimension_selection.selectdimensiontopk method)": [[6, "wildboar.dimension_selection.SelectDimensionTopK.get_metadata_routing", false]], "get_metadata_routing() (wildboar.dimension_selection.sequentialdimensionselector method)": [[6, "wildboar.dimension_selection.SequentialDimensionSelector.get_metadata_routing", false]], "get_metadata_routing() (wildboar.distance.kmeans method)": [[8, "wildboar.distance.KMeans.get_metadata_routing", false]], "get_metadata_routing() (wildboar.distance.kmedoids method)": [[8, "wildboar.distance.KMedoids.get_metadata_routing", false]], "get_metadata_routing() (wildboar.distance.kneighborsclassifier method)": [[8, "wildboar.distance.KNeighborsClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.distance.mds method)": [[8, "wildboar.distance.MDS.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.baggingclassifier method)": [[9, "wildboar.ensemble.BaggingClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.baggingregressor method)": [[9, "wildboar.ensemble.BaggingRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.basebagging method)": [[9, "wildboar.ensemble.BaseBagging.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.elasticensembleclassifier method)": [[9, "wildboar.ensemble.ElasticEnsembleClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.extrashapelettreesclassifier method)": [[9, "wildboar.ensemble.ExtraShapeletTreesClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.extrashapelettreesregressor method)": [[9, "wildboar.ensemble.ExtraShapeletTreesRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.intervalforestclassifier method)": [[9, "wildboar.ensemble.IntervalForestClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.intervalforestregressor method)": [[9, "wildboar.ensemble.IntervalForestRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.isolationshapeletforest method)": [[9, "wildboar.ensemble.IsolationShapeletForest.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.pivotforestclassifier method)": [[9, "wildboar.ensemble.PivotForestClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.proximityforestclassifier method)": [[9, "wildboar.ensemble.ProximityForestClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.rocketforestclassifier method)": [[9, "wildboar.ensemble.RocketForestClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.rocketforestregressor method)": [[9, "wildboar.ensemble.RocketForestRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.shapeletforestclassifier method)": [[9, "wildboar.ensemble.ShapeletForestClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.shapeletforestembedding method)": [[9, "wildboar.ensemble.ShapeletForestEmbedding.get_metadata_routing", false]], "get_metadata_routing() (wildboar.ensemble.shapeletforestregressor method)": [[9, "wildboar.ensemble.ShapeletForestRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain.amplitudeimportance method)": [[11, "wildboar.explain.AmplitudeImportance.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[10, "wildboar.explain.counterfactual.KNeighborsCounterfactual.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain.counterfactual.nativeguidecounterfactual method)": [[10, "wildboar.explain.counterfactual.NativeGuideCounterfactual.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[10, "wildboar.explain.counterfactual.PrototypeCounterfactual.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[10, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain.frequencyimportance method)": [[11, "wildboar.explain.FrequencyImportance.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain.intervalimportance method)": [[11, "wildboar.explain.IntervalImportance.get_metadata_routing", false]], "get_metadata_routing() (wildboar.explain.shapeletimportance method)": [[11, "wildboar.explain.ShapeletImportance.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model.castorclassifier method)": [[13, "wildboar.linear_model.CastorClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model.dilatedshapeletclassifier method)": [[13, "wildboar.linear_model.DilatedShapeletClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model.hydraclassifier method)": [[13, "wildboar.linear_model.HydraClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model.randomshapeletclassifier method)": [[13, "wildboar.linear_model.RandomShapeletClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model.randomshapeletregressor method)": [[13, "wildboar.linear_model.RandomShapeletRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model.rocketclassifier method)": [[13, "wildboar.linear_model.RocketClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.linear_model.rocketregressor method)": [[13, "wildboar.linear_model.RocketRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.segment.flusssegmenter method)": [[16, "wildboar.segment.FlussSegmenter.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.castortransform method)": [[17, "wildboar.transform.CastorTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.derivativetransform method)": [[17, "wildboar.transform.DerivativeTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.difftransform method)": [[17, "wildboar.transform.DiffTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.dilatedshapelettransform method)": [[17, "wildboar.transform.DilatedShapeletTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.featuretransform method)": [[17, "wildboar.transform.FeatureTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.hydratransform method)": [[17, "wildboar.transform.HydraTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.intervaltransform method)": [[17, "wildboar.transform.IntervalTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.matrixprofiletransform method)": [[17, "wildboar.transform.MatrixProfileTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.paa method)": [[17, "wildboar.transform.PAA.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.pivottransform method)": [[17, "wildboar.transform.PivotTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.proximitytransform method)": [[17, "wildboar.transform.ProximityTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.randomshapelettransform method)": [[17, "wildboar.transform.RandomShapeletTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.rockettransform method)": [[17, "wildboar.transform.RocketTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.sax method)": [[17, "wildboar.transform.SAX.get_metadata_routing", false]], "get_metadata_routing() (wildboar.transform.shapelettransform method)": [[17, "wildboar.transform.ShapeletTransform.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.extrashapelettreeclassifier method)": [[18, "wildboar.tree.ExtraShapeletTreeClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.extrashapelettreeregressor method)": [[18, "wildboar.tree.ExtraShapeletTreeRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.intervaltreeclassifier method)": [[18, "wildboar.tree.IntervalTreeClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.intervaltreeregressor method)": [[18, "wildboar.tree.IntervalTreeRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.pivottreeclassifier method)": [[18, "wildboar.tree.PivotTreeClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.proximitytreeclassifier method)": [[18, "wildboar.tree.ProximityTreeClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.rockettreeclassifier method)": [[18, "wildboar.tree.RocketTreeClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.rockettreeregressor method)": [[18, "wildboar.tree.RocketTreeRegressor.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.shapelettreeclassifier method)": [[18, "wildboar.tree.ShapeletTreeClassifier.get_metadata_routing", false]], "get_metadata_routing() (wildboar.tree.shapelettreeregressor method)": [[18, "wildboar.tree.ShapeletTreeRegressor.get_metadata_routing", false]], "get_n_splits() (wildboar.model_selection.repeatedoutliersplit method)": [[15, "wildboar.model_selection.RepeatedOutlierSplit.get_n_splits", false]], "get_params() (wildboar.base.baseestimator method)": [[2, "wildboar.base.BaseEstimator.get_params", false]], "get_params() (wildboar.dimension_selection.distancevariancethreshold method)": [[6, "wildboar.dimension_selection.DistanceVarianceThreshold.get_params", false]], "get_params() (wildboar.dimension_selection.selectdimensionpercentile method)": [[6, "wildboar.dimension_selection.SelectDimensionPercentile.get_params", false]], "get_params() (wildboar.dimension_selection.selectdimensionsignificance method)": [[6, "wildboar.dimension_selection.SelectDimensionSignificance.get_params", false]], "get_params() (wildboar.dimension_selection.selectdimensiontopk method)": [[6, "wildboar.dimension_selection.SelectDimensionTopK.get_params", false]], "get_params() (wildboar.dimension_selection.sequentialdimensionselector method)": [[6, "wildboar.dimension_selection.SequentialDimensionSelector.get_params", false]], "get_params() (wildboar.distance.kmeans method)": [[8, "wildboar.distance.KMeans.get_params", false]], "get_params() (wildboar.distance.kmedoids method)": [[8, "wildboar.distance.KMedoids.get_params", false]], "get_params() (wildboar.distance.kneighborsclassifier method)": [[8, "wildboar.distance.KNeighborsClassifier.get_params", false]], "get_params() (wildboar.distance.mds method)": [[8, "wildboar.distance.MDS.get_params", false]], "get_params() (wildboar.ensemble.baggingclassifier method)": [[9, "wildboar.ensemble.BaggingClassifier.get_params", false]], "get_params() (wildboar.ensemble.baggingregressor method)": [[9, "wildboar.ensemble.BaggingRegressor.get_params", false]], "get_params() (wildboar.ensemble.basebagging method)": [[9, "wildboar.ensemble.BaseBagging.get_params", false]], "get_params() (wildboar.ensemble.elasticensembleclassifier method)": [[9, "wildboar.ensemble.ElasticEnsembleClassifier.get_params", false]], "get_params() (wildboar.ensemble.extrashapelettreesclassifier method)": [[9, "wildboar.ensemble.ExtraShapeletTreesClassifier.get_params", false]], "get_params() (wildboar.ensemble.extrashapelettreesregressor method)": [[9, "wildboar.ensemble.ExtraShapeletTreesRegressor.get_params", false]], "get_params() (wildboar.ensemble.intervalforestclassifier method)": [[9, "wildboar.ensemble.IntervalForestClassifier.get_params", false]], "get_params() (wildboar.ensemble.intervalforestregressor method)": [[9, "wildboar.ensemble.IntervalForestRegressor.get_params", false]], "get_params() (wildboar.ensemble.isolationshapeletforest method)": [[9, "wildboar.ensemble.IsolationShapeletForest.get_params", false]], "get_params() (wildboar.ensemble.pivotforestclassifier method)": [[9, "wildboar.ensemble.PivotForestClassifier.get_params", false]], "get_params() (wildboar.ensemble.proximityforestclassifier method)": [[9, "wildboar.ensemble.ProximityForestClassifier.get_params", false]], "get_params() (wildboar.ensemble.rocketforestclassifier method)": [[9, "wildboar.ensemble.RocketForestClassifier.get_params", false]], "get_params() (wildboar.ensemble.rocketforestregressor method)": [[9, "wildboar.ensemble.RocketForestRegressor.get_params", false]], "get_params() (wildboar.ensemble.shapeletforestclassifier method)": [[9, "wildboar.ensemble.ShapeletForestClassifier.get_params", false]], "get_params() (wildboar.ensemble.shapeletforestembedding method)": [[9, "wildboar.ensemble.ShapeletForestEmbedding.get_params", false]], "get_params() (wildboar.ensemble.shapeletforestregressor method)": [[9, "wildboar.ensemble.ShapeletForestRegressor.get_params", false]], "get_params() (wildboar.explain.amplitudeimportance method)": [[11, "wildboar.explain.AmplitudeImportance.get_params", false]], "get_params() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[10, "wildboar.explain.counterfactual.KNeighborsCounterfactual.get_params", false]], "get_params() (wildboar.explain.counterfactual.nativeguidecounterfactual method)": [[10, "wildboar.explain.counterfactual.NativeGuideCounterfactual.get_params", false]], "get_params() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[10, "wildboar.explain.counterfactual.PrototypeCounterfactual.get_params", false]], "get_params() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[10, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.get_params", false]], "get_params() (wildboar.explain.frequencyimportance method)": [[11, "wildboar.explain.FrequencyImportance.get_params", false]], "get_params() (wildboar.explain.intervalimportance method)": [[11, "wildboar.explain.IntervalImportance.get_params", false]], "get_params() (wildboar.explain.shapeletimportance method)": [[11, "wildboar.explain.ShapeletImportance.get_params", false]], "get_params() (wildboar.linear_model.castorclassifier method)": [[13, "wildboar.linear_model.CastorClassifier.get_params", false]], "get_params() (wildboar.linear_model.dilatedshapeletclassifier method)": [[13, "wildboar.linear_model.DilatedShapeletClassifier.get_params", false]], "get_params() (wildboar.linear_model.hydraclassifier method)": [[13, "wildboar.linear_model.HydraClassifier.get_params", false]], "get_params() (wildboar.linear_model.randomshapeletclassifier method)": [[13, "wildboar.linear_model.RandomShapeletClassifier.get_params", false]], "get_params() (wildboar.linear_model.randomshapeletregressor method)": [[13, "wildboar.linear_model.RandomShapeletRegressor.get_params", false]], "get_params() (wildboar.linear_model.rocketclassifier method)": [[13, "wildboar.linear_model.RocketClassifier.get_params", false]], "get_params() (wildboar.linear_model.rocketregressor method)": [[13, "wildboar.linear_model.RocketRegressor.get_params", false]], "get_params() (wildboar.segment.flusssegmenter method)": [[16, "wildboar.segment.FlussSegmenter.get_params", false]], "get_params() (wildboar.transform.castortransform method)": [[17, "wildboar.transform.CastorTransform.get_params", false]], "get_params() (wildboar.transform.derivativetransform method)": [[17, "wildboar.transform.DerivativeTransform.get_params", false]], "get_params() (wildboar.transform.difftransform method)": [[17, "wildboar.transform.DiffTransform.get_params", false]], "get_params() (wildboar.transform.dilatedshapelettransform method)": [[17, "wildboar.transform.DilatedShapeletTransform.get_params", false]], "get_params() (wildboar.transform.featuretransform method)": [[17, "wildboar.transform.FeatureTransform.get_params", false]], "get_params() (wildboar.transform.hydratransform method)": [[17, "wildboar.transform.HydraTransform.get_params", false]], "get_params() (wildboar.transform.intervaltransform method)": [[17, "wildboar.transform.IntervalTransform.get_params", false]], "get_params() (wildboar.transform.matrixprofiletransform method)": [[17, "wildboar.transform.MatrixProfileTransform.get_params", false]], "get_params() (wildboar.transform.paa method)": [[17, "wildboar.transform.PAA.get_params", false]], "get_params() (wildboar.transform.pivottransform method)": [[17, "wildboar.transform.PivotTransform.get_params", false]], "get_params() (wildboar.transform.proximitytransform method)": [[17, "wildboar.transform.ProximityTransform.get_params", false]], "get_params() (wildboar.transform.randomshapelettransform method)": [[17, "wildboar.transform.RandomShapeletTransform.get_params", false]], "get_params() (wildboar.transform.rockettransform method)": [[17, "wildboar.transform.RocketTransform.get_params", false]], "get_params() (wildboar.transform.sax method)": [[17, "wildboar.transform.SAX.get_params", false]], "get_params() (wildboar.transform.shapelettransform method)": [[17, "wildboar.transform.ShapeletTransform.get_params", false]], "get_params() (wildboar.tree.extrashapelettreeclassifier method)": [[18, "wildboar.tree.ExtraShapeletTreeClassifier.get_params", false]], "get_params() (wildboar.tree.extrashapelettreeregressor method)": [[18, "wildboar.tree.ExtraShapeletTreeRegressor.get_params", false]], "get_params() (wildboar.tree.intervaltreeclassifier method)": [[18, "wildboar.tree.IntervalTreeClassifier.get_params", false]], "get_params() (wildboar.tree.intervaltreeregressor method)": [[18, "wildboar.tree.IntervalTreeRegressor.get_params", false]], "get_params() (wildboar.tree.pivottreeclassifier method)": [[18, "wildboar.tree.PivotTreeClassifier.get_params", false]], "get_params() (wildboar.tree.proximitytreeclassifier method)": [[18, "wildboar.tree.ProximityTreeClassifier.get_params", false]], "get_params() (wildboar.tree.rockettreeclassifier method)": [[18, "wildboar.tree.RocketTreeClassifier.get_params", false]], "get_params() (wildboar.tree.rockettreeregressor method)": [[18, "wildboar.tree.RocketTreeRegressor.get_params", false]], "get_params() (wildboar.tree.shapelettreeclassifier method)": [[18, "wildboar.tree.ShapeletTreeClassifier.get_params", false]], "get_params() (wildboar.tree.shapelettreeregressor method)": [[18, "wildboar.tree.ShapeletTreeRegressor.get_params", false]], "get_repository() (in module wildboar.datasets)": [[3, "wildboar.datasets.get_repository", false]], "get_variable_length() (in module wildboar.utils.variable_len)": [[21, "wildboar.utils.variable_len.get_variable_length", false]], "hydraclassifier (class in wildboar.linear_model)": [[13, "wildboar.linear_model.HydraClassifier", false]], "hydratransform (class in wildboar.transform)": [[17, "wildboar.transform.HydraTransform", false]], "install_repository() (in module wildboar.datasets)": [[3, "wildboar.datasets.install_repository", false]], "intervalforestclassifier (class in wildboar.ensemble)": [[9, "wildboar.ensemble.IntervalForestClassifier", false]], "intervalforestregressor (class in wildboar.ensemble)": [[9, "wildboar.ensemble.IntervalForestRegressor", false]], "intervalimportance (class in wildboar.explain)": [[11, "wildboar.explain.IntervalImportance", false]], "intervaltransform (class in wildboar.transform)": [[17, "wildboar.transform.IntervalTransform", false]], "intervaltreeclassifier (class in wildboar.tree)": [[18, "wildboar.tree.IntervalTreeClassifier", false]], "intervaltreeregressor (class in wildboar.tree)": [[18, "wildboar.tree.IntervalTreeRegressor", false]], "inverse_transform() (wildboar.dimension_selection.distancevariancethreshold method)": [[6, "wildboar.dimension_selection.DistanceVarianceThreshold.inverse_transform", false]], "inverse_transform() (wildboar.dimension_selection.selectdimensionpercentile method)": [[6, "wildboar.dimension_selection.SelectDimensionPercentile.inverse_transform", false]], "inverse_transform() (wildboar.dimension_selection.selectdimensionsignificance method)": [[6, "wildboar.dimension_selection.SelectDimensionSignificance.inverse_transform", false]], "inverse_transform() (wildboar.dimension_selection.selectdimensiontopk method)": [[6, "wildboar.dimension_selection.SelectDimensionTopK.inverse_transform", false]], "inverse_transform() (wildboar.dimension_selection.sequentialdimensionselector method)": [[6, "wildboar.dimension_selection.SequentialDimensionSelector.inverse_transform", false]], "is_counterfactual() (in module wildboar.base)": [[2, "wildboar.base.is_counterfactual", false]], "is_end_of_series() (in module wildboar.utils.variable_len)": [[21, "wildboar.utils.variable_len.is_end_of_series", false]], "is_explainer() (in module wildboar.base)": [[2, "wildboar.base.is_explainer", false]], "is_variable_length() (in module wildboar.utils.variable_len)": [[21, "wildboar.utils.variable_len.is_variable_length", false]], "isolationshapeletforest (class in wildboar.ensemble)": [[9, "wildboar.ensemble.IsolationShapeletForest", false]], "jeong_weight() (in module wildboar.distance.dtw)": [[7, "wildboar.distance.dtw.jeong_weight", false]], "jsonrepository (class in wildboar.datasets)": [[3, "wildboar.datasets.JSONRepository", false]], "kmeans (class in wildboar.distance)": [[8, "wildboar.distance.KMeans", false]], "kmeans_outliers() (in module wildboar.datasets.outlier)": [[4, "wildboar.datasets.outlier.kmeans_outliers", false]], "kmedoids (class in wildboar.distance)": [[8, "wildboar.distance.KMedoids", false]], "kneighborsclassifier (class in wildboar.distance)": [[8, "wildboar.distance.KNeighborsClassifier", false]], "kneighborscounterfactual (class in wildboar.explain.counterfactual)": [[10, "wildboar.explain.counterfactual.KNeighborsCounterfactual", false]], "list() (wildboar.datasets.bundle method)": [[3, "wildboar.datasets.Bundle.list", false]], "list() (wildboar.datasets.npbundle method)": [[3, "wildboar.datasets.NpBundle.list", false]], "list_bundles() (in module wildboar.datasets)": [[3, "wildboar.datasets.list_bundles", false]], "list_collections() (in module wildboar.datasets)": [[3, "wildboar.datasets.list_collections", false]], "list_datasets() (in module wildboar.datasets)": [[3, "wildboar.datasets.list_datasets", false]], "list_repositories() (in module wildboar.datasets)": [[3, "wildboar.datasets.list_repositories", false]], "load() (wildboar.datasets.bundle method)": [[3, "wildboar.datasets.Bundle.load", false]], "load() (wildboar.datasets.npbundle method)": [[3, "wildboar.datasets.NpBundle.load", false]], "load_articulary_word_recognition() (in module wildboar.datasets)": [[3, "wildboar.datasets.load_articulary_word_recognition", false]], "load_basic_motions() (in module wildboar.datasets)": [[3, "wildboar.datasets.load_basic_motions", false]], "load_dataset() (in module wildboar.datasets)": [[3, "wildboar.datasets.load_dataset", false]], "load_datasets() (in module wildboar.datasets)": [[3, "wildboar.datasets.load_datasets", false]], "load_ering() (in module wildboar.datasets)": [[3, "wildboar.datasets.load_ering", false]], "load_gun_point() (in module wildboar.datasets)": [[3, "wildboar.datasets.load_gun_point", false]], "load_synthetic_control() (in module wildboar.datasets)": [[3, "wildboar.datasets.load_synthetic_control", false]], "load_two_lead_ecg() (in module wildboar.datasets)": [[3, "wildboar.datasets.load_two_lead_ecg", false]], "majority_outliers() (in module wildboar.datasets.outlier)": [[4, "wildboar.datasets.outlier.majority_outliers", false]], "matrix_profile() (in module wildboar.distance)": [[8, "wildboar.distance.matrix_profile", false]], "matrixprofiletransform (class in wildboar.transform)": [[17, "wildboar.transform.MatrixProfileTransform", false]], "maxabs_scale() (in module wildboar.datasets.preprocess)": [[5, "wildboar.datasets.preprocess.maxabs_scale", false]], "mds (class in wildboar.distance)": [[8, "wildboar.distance.MDS", false]], "minmax_scale() (in module wildboar.datasets.preprocess)": [[5, "wildboar.datasets.preprocess.minmax_scale", false]], "minority_outliers() (in module wildboar.datasets.outlier)": [[4, "wildboar.datasets.outlier.minority_outliers", false]], "module": [[1, "module-wildboar.annotate", false], [2, "module-wildboar.base", false], [3, "module-wildboar.datasets", false], [4, "module-wildboar.datasets.outlier", false], [5, "module-wildboar.datasets.preprocess", false], [6, "module-wildboar.dimension_selection", false], [7, "module-wildboar.distance.dtw", false], [8, "module-wildboar.distance", false], [9, "module-wildboar.ensemble", false], [10, "module-wildboar.explain.counterfactual", false], [11, "module-wildboar.explain", false], [12, "module-wildboar", false], [13, "module-wildboar.linear_model", false], [14, "module-wildboar.metrics", false], [15, "module-wildboar.model_selection", false], [16, "module-wildboar.segment", false], [17, "module-wildboar.transform", false], [18, "module-wildboar.tree", false], [19, "module-wildboar.utils", false], [20, "module-wildboar.utils.plot", false], [21, "module-wildboar.utils.variable_len", false]], "motifs() (in module wildboar.annotate)": [[1, "wildboar.annotate.motifs", false]], "name (wildboar.datasets.jsonrepository property)": [[3, "wildboar.datasets.JSONRepository.name", false]], "name (wildboar.datasets.repository property)": [[3, "wildboar.datasets.Repository.name", false]], "named_preprocess() (in module wildboar.datasets.preprocess)": [[5, "wildboar.datasets.preprocess.named_preprocess", false]], "nativeguidecounterfactual (class in wildboar.explain.counterfactual)": [[10, "wildboar.explain.counterfactual.NativeGuideCounterfactual", false]], "npbundle (class in wildboar.datasets)": [[3, "wildboar.datasets.NpBundle", false]], "outlier_train_test_split() (in module wildboar.model_selection)": [[15, "wildboar.model_selection.outlier_train_test_split", false]], "paa (class in wildboar.transform)": [[17, "wildboar.transform.PAA", false]], "paired_distance() (in module wildboar.distance)": [[8, "wildboar.distance.paired_distance", false]], "paired_matrix_profile() (in module wildboar.distance)": [[8, "wildboar.distance.paired_matrix_profile", false]], "paired_subsequence_distance() (in module wildboar.distance)": [[8, "wildboar.distance.paired_subsequence_distance", false]], "paired_subsequence_match() (in module wildboar.distance)": [[8, "wildboar.distance.paired_subsequence_match", false]], "pairwise_distance() (in module wildboar.distance)": [[8, "wildboar.distance.pairwise_distance", false]], "pairwise_subsequence_distance() (in module wildboar.distance)": [[8, "wildboar.distance.pairwise_subsequence_distance", false]], "piecewice_aggregate_approximation() (in module wildboar.transform)": [[17, "wildboar.transform.piecewice_aggregate_approximation", false]], "pivotforestclassifier (class in wildboar.ensemble)": [[9, "wildboar.ensemble.PivotForestClassifier", false]], "pivottransform (class in wildboar.transform)": [[17, "wildboar.transform.PivotTransform", false]], "pivottreeclassifier (class in wildboar.tree)": [[18, "wildboar.tree.PivotTreeClassifier", false]], "plausability_score() (in module wildboar.metrics)": [[14, "wildboar.metrics.plausability_score", false]], "plot() (wildboar.base.explainermixin method)": [[2, "wildboar.base.ExplainerMixin.plot", false]], "plot() (wildboar.explain.amplitudeimportance method)": [[11, "wildboar.explain.AmplitudeImportance.plot", false]], "plot() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[10, "wildboar.explain.counterfactual.KNeighborsCounterfactual.plot", false]], "plot() (wildboar.explain.counterfactual.nativeguidecounterfactual method)": [[10, "wildboar.explain.counterfactual.NativeGuideCounterfactual.plot", false]], "plot() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[10, "wildboar.explain.counterfactual.PrototypeCounterfactual.plot", false]], "plot() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[10, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.plot", false]], "plot() (wildboar.explain.frequencyimportance method)": [[11, "wildboar.explain.FrequencyImportance.plot", false]], "plot() (wildboar.explain.intervalimportance method)": [[11, "wildboar.explain.IntervalImportance.plot", false]], "plot() (wildboar.explain.shapeletimportance method)": [[11, "wildboar.explain.ShapeletImportance.plot", false]], "plot_frequency_domain() (in module wildboar.utils.plot)": [[20, "wildboar.utils.plot.plot_frequency_domain", false]], "plot_importances() (in module wildboar.explain)": [[11, "wildboar.explain.plot_importances", false]], "plot_time_domain() (in module wildboar.utils.plot)": [[20, "wildboar.utils.plot.plot_time_domain", false]], "plot_tree() (in module wildboar.tree)": [[18, "wildboar.tree.plot_tree", false]], "predict() (wildboar.distance.kmeans method)": [[8, "wildboar.distance.KMeans.predict", false]], "predict() (wildboar.distance.kmedoids method)": [[8, "wildboar.distance.KMedoids.predict", false]], "predict() (wildboar.distance.kneighborsclassifier method)": [[8, "wildboar.distance.KNeighborsClassifier.predict", false]], "predict() (wildboar.ensemble.baggingclassifier method)": [[9, "wildboar.ensemble.BaggingClassifier.predict", false]], "predict() (wildboar.ensemble.baggingregressor method)": [[9, "wildboar.ensemble.BaggingRegressor.predict", false]], "predict() (wildboar.ensemble.elasticensembleclassifier method)": [[9, "wildboar.ensemble.ElasticEnsembleClassifier.predict", false]], "predict() (wildboar.ensemble.extrashapelettreesclassifier method)": [[9, "wildboar.ensemble.ExtraShapeletTreesClassifier.predict", false]], "predict() (wildboar.ensemble.extrashapelettreesregressor method)": [[9, "wildboar.ensemble.ExtraShapeletTreesRegressor.predict", false]], "predict() (wildboar.ensemble.intervalforestclassifier method)": [[9, "wildboar.ensemble.IntervalForestClassifier.predict", false]], "predict() (wildboar.ensemble.intervalforestregressor method)": [[9, "wildboar.ensemble.IntervalForestRegressor.predict", false]], "predict() (wildboar.ensemble.pivotforestclassifier method)": [[9, "wildboar.ensemble.PivotForestClassifier.predict", false]], "predict() (wildboar.ensemble.proximityforestclassifier method)": [[9, "wildboar.ensemble.ProximityForestClassifier.predict", false]], "predict() (wildboar.ensemble.rocketforestclassifier method)": [[9, "wildboar.ensemble.RocketForestClassifier.predict", false]], "predict() (wildboar.ensemble.rocketforestregressor method)": [[9, "wildboar.ensemble.RocketForestRegressor.predict", false]], "predict() (wildboar.ensemble.shapeletforestclassifier method)": [[9, "wildboar.ensemble.ShapeletForestClassifier.predict", false]], "predict() (wildboar.ensemble.shapeletforestembedding method)": [[9, "wildboar.ensemble.ShapeletForestEmbedding.predict", false]], "predict() (wildboar.ensemble.shapeletforestregressor method)": [[9, "wildboar.ensemble.ShapeletForestRegressor.predict", false]], "predict() (wildboar.segment.flusssegmenter method)": [[16, "wildboar.segment.FlussSegmenter.predict", false]], "predict() (wildboar.tree.extrashapelettreeclassifier method)": [[18, "wildboar.tree.ExtraShapeletTreeClassifier.predict", false]], "predict() (wildboar.tree.extrashapelettreeregressor method)": [[18, "wildboar.tree.ExtraShapeletTreeRegressor.predict", false]], "predict() (wildboar.tree.intervaltreeclassifier method)": [[18, "wildboar.tree.IntervalTreeClassifier.predict", false]], "predict() (wildboar.tree.intervaltreeregressor method)": [[18, "wildboar.tree.IntervalTreeRegressor.predict", false]], "predict() (wildboar.tree.pivottreeclassifier method)": [[18, "wildboar.tree.PivotTreeClassifier.predict", false]], "predict() (wildboar.tree.proximitytreeclassifier method)": [[18, "wildboar.tree.ProximityTreeClassifier.predict", false]], "predict() (wildboar.tree.rockettreeclassifier method)": [[18, "wildboar.tree.RocketTreeClassifier.predict", false]], "predict() (wildboar.tree.rockettreeregressor method)": [[18, "wildboar.tree.RocketTreeRegressor.predict", false]], "predict() (wildboar.tree.shapelettreeclassifier method)": [[18, "wildboar.tree.ShapeletTreeClassifier.predict", false]], "predict() (wildboar.tree.shapelettreeregressor method)": [[18, "wildboar.tree.ShapeletTreeRegressor.predict", false]], "predict_log_proba() (wildboar.ensemble.baggingclassifier method)": [[9, "wildboar.ensemble.BaggingClassifier.predict_log_proba", false]], "predict_log_proba() (wildboar.ensemble.extrashapelettreesclassifier method)": [[9, "wildboar.ensemble.ExtraShapeletTreesClassifier.predict_log_proba", false]], "predict_log_proba() (wildboar.ensemble.intervalforestclassifier method)": [[9, "wildboar.ensemble.IntervalForestClassifier.predict_log_proba", false]], "predict_log_proba() (wildboar.ensemble.pivotforestclassifier method)": [[9, "wildboar.ensemble.PivotForestClassifier.predict_log_proba", false]], "predict_log_proba() (wildboar.ensemble.proximityforestclassifier method)": [[9, "wildboar.ensemble.ProximityForestClassifier.predict_log_proba", false]], "predict_log_proba() (wildboar.ensemble.rocketforestclassifier method)": [[9, "wildboar.ensemble.RocketForestClassifier.predict_log_proba", false]], "predict_log_proba() (wildboar.ensemble.shapeletforestclassifier method)": [[9, "wildboar.ensemble.ShapeletForestClassifier.predict_log_proba", false]], "predict_proba() (wildboar.distance.kneighborsclassifier method)": [[8, "wildboar.distance.KNeighborsClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble.baggingclassifier method)": [[9, "wildboar.ensemble.BaggingClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble.elasticensembleclassifier method)": [[9, "wildboar.ensemble.ElasticEnsembleClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble.extrashapelettreesclassifier method)": [[9, "wildboar.ensemble.ExtraShapeletTreesClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble.intervalforestclassifier method)": [[9, "wildboar.ensemble.IntervalForestClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble.pivotforestclassifier method)": [[9, "wildboar.ensemble.PivotForestClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble.proximityforestclassifier method)": [[9, "wildboar.ensemble.ProximityForestClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble.rocketforestclassifier method)": [[9, "wildboar.ensemble.RocketForestClassifier.predict_proba", false]], "predict_proba() (wildboar.ensemble.shapeletforestclassifier method)": [[9, "wildboar.ensemble.ShapeletForestClassifier.predict_proba", false]], "predict_proba() (wildboar.tree.extrashapelettreeclassifier method)": [[18, "wildboar.tree.ExtraShapeletTreeClassifier.predict_proba", false]], "predict_proba() (wildboar.tree.intervaltreeclassifier method)": [[18, "wildboar.tree.IntervalTreeClassifier.predict_proba", false]], "predict_proba() (wildboar.tree.pivottreeclassifier method)": [[18, "wildboar.tree.PivotTreeClassifier.predict_proba", false]], "predict_proba() (wildboar.tree.proximitytreeclassifier method)": [[18, "wildboar.tree.ProximityTreeClassifier.predict_proba", false]], "predict_proba() (wildboar.tree.rockettreeclassifier method)": [[18, "wildboar.tree.RocketTreeClassifier.predict_proba", false]], "predict_proba() (wildboar.tree.shapelettreeclassifier method)": [[18, "wildboar.tree.ShapeletTreeClassifier.predict_proba", false]], "prototypecounterfactual (class in wildboar.explain.counterfactual)": [[10, "wildboar.explain.counterfactual.PrototypeCounterfactual", false]], "proximity() (in module wildboar.explain.counterfactual)": [[10, "wildboar.explain.counterfactual.proximity", false]], "proximity_score() (in module wildboar.metrics)": [[14, "wildboar.metrics.proximity_score", false]], "proximityforestclassifier (class in wildboar.ensemble)": [[9, "wildboar.ensemble.ProximityForestClassifier", false]], "proximitytransform (class in wildboar.transform)": [[17, "wildboar.transform.ProximityTransform", false]], "proximitytreeclassifier (class in wildboar.tree)": [[18, "wildboar.tree.ProximityTreeClassifier", false]], "randomshapeletclassifier (class in wildboar.linear_model)": [[13, "wildboar.linear_model.RandomShapeletClassifier", false]], "randomshapeletregressor (class in wildboar.linear_model)": [[13, "wildboar.linear_model.RandomShapeletRegressor", false]], "randomshapelettransform (class in wildboar.transform)": [[17, "wildboar.transform.RandomShapeletTransform", false]], "redudancy_score() (in module wildboar.metrics)": [[14, "wildboar.metrics.redudancy_score", false]], "refresh() (wildboar.datasets.jsonrepository method)": [[3, "wildboar.datasets.JSONRepository.refresh", false]], "refresh() (wildboar.datasets.repository method)": [[3, "wildboar.datasets.Repository.refresh", false]], "refresh_repositories() (in module wildboar.datasets)": [[3, "wildboar.datasets.refresh_repositories", false]], "relative_proximity_score() (in module wildboar.metrics)": [[14, "wildboar.metrics.relative_proximity_score", false]], "repeatedoutliersplit (class in wildboar.model_selection)": [[15, "wildboar.model_selection.RepeatedOutlierSplit", false]], "repository (class in wildboar.datasets)": [[3, "wildboar.datasets.Repository", false]], "rocketclassifier (class in wildboar.linear_model)": [[13, "wildboar.linear_model.RocketClassifier", false]], "rocketforestclassifier (class in wildboar.ensemble)": [[9, "wildboar.ensemble.RocketForestClassifier", false]], "rocketforestregressor (class in wildboar.ensemble)": [[9, "wildboar.ensemble.RocketForestRegressor", false]], "rocketregressor (class in wildboar.linear_model)": [[13, "wildboar.linear_model.RocketRegressor", false]], "rockettransform (class in wildboar.transform)": [[17, "wildboar.transform.RocketTransform", false]], "rockettreeclassifier (class in wildboar.tree)": [[18, "wildboar.tree.RocketTreeClassifier", false]], "rockettreeregressor (class in wildboar.tree)": [[18, "wildboar.tree.RocketTreeRegressor", false]], "sax (class in wildboar.transform)": [[17, "wildboar.transform.SAX", false]], "score() (wildboar.base.counterfactualmixin method)": [[2, "wildboar.base.CounterfactualMixin.score", false]], "score() (wildboar.distance.kneighborsclassifier method)": [[8, "wildboar.distance.KNeighborsClassifier.score", false]], "score() (wildboar.ensemble.baggingclassifier method)": [[9, "wildboar.ensemble.BaggingClassifier.score", false]], "score() (wildboar.ensemble.baggingregressor method)": [[9, "wildboar.ensemble.BaggingRegressor.score", false]], "score() (wildboar.ensemble.elasticensembleclassifier method)": [[9, "wildboar.ensemble.ElasticEnsembleClassifier.score", false]], "score() (wildboar.ensemble.extrashapelettreesclassifier method)": [[9, "wildboar.ensemble.ExtraShapeletTreesClassifier.score", false]], "score() (wildboar.ensemble.extrashapelettreesregressor method)": [[9, "wildboar.ensemble.ExtraShapeletTreesRegressor.score", false]], "score() (wildboar.ensemble.intervalforestclassifier method)": [[9, "wildboar.ensemble.IntervalForestClassifier.score", false]], "score() (wildboar.ensemble.intervalforestregressor method)": [[9, "wildboar.ensemble.IntervalForestRegressor.score", false]], "score() (wildboar.ensemble.pivotforestclassifier method)": [[9, "wildboar.ensemble.PivotForestClassifier.score", false]], "score() (wildboar.ensemble.proximityforestclassifier method)": [[9, "wildboar.ensemble.ProximityForestClassifier.score", false]], "score() (wildboar.ensemble.rocketforestclassifier method)": [[9, "wildboar.ensemble.RocketForestClassifier.score", false]], "score() (wildboar.ensemble.rocketforestregressor method)": [[9, "wildboar.ensemble.RocketForestRegressor.score", false]], "score() (wildboar.ensemble.shapeletforestclassifier method)": [[9, "wildboar.ensemble.ShapeletForestClassifier.score", false]], "score() (wildboar.ensemble.shapeletforestembedding method)": [[9, "wildboar.ensemble.ShapeletForestEmbedding.score", false]], "score() (wildboar.ensemble.shapeletforestregressor method)": [[9, "wildboar.ensemble.ShapeletForestRegressor.score", false]], "score() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[10, "wildboar.explain.counterfactual.KNeighborsCounterfactual.score", false]], "score() (wildboar.explain.counterfactual.nativeguidecounterfactual method)": [[10, "wildboar.explain.counterfactual.NativeGuideCounterfactual.score", false]], "score() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[10, "wildboar.explain.counterfactual.PrototypeCounterfactual.score", false]], "score() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[10, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.score", false]], "score() (wildboar.linear_model.castorclassifier method)": [[13, "wildboar.linear_model.CastorClassifier.score", false]], "score() (wildboar.linear_model.dilatedshapeletclassifier method)": [[13, "wildboar.linear_model.DilatedShapeletClassifier.score", false]], "score() (wildboar.linear_model.hydraclassifier method)": [[13, "wildboar.linear_model.HydraClassifier.score", false]], "score() (wildboar.linear_model.randomshapeletclassifier method)": [[13, "wildboar.linear_model.RandomShapeletClassifier.score", false]], "score() (wildboar.linear_model.randomshapeletregressor method)": [[13, "wildboar.linear_model.RandomShapeletRegressor.score", false]], "score() (wildboar.linear_model.rocketclassifier method)": [[13, "wildboar.linear_model.RocketClassifier.score", false]], "score() (wildboar.linear_model.rocketregressor method)": [[13, "wildboar.linear_model.RocketRegressor.score", false]], "score() (wildboar.tree.extrashapelettreeclassifier method)": [[18, "wildboar.tree.ExtraShapeletTreeClassifier.score", false]], "score() (wildboar.tree.extrashapelettreeregressor method)": [[18, "wildboar.tree.ExtraShapeletTreeRegressor.score", false]], "score() (wildboar.tree.intervaltreeclassifier method)": [[18, "wildboar.tree.IntervalTreeClassifier.score", false]], "score() (wildboar.tree.intervaltreeregressor method)": [[18, "wildboar.tree.IntervalTreeRegressor.score", false]], "score() (wildboar.tree.pivottreeclassifier method)": [[18, "wildboar.tree.PivotTreeClassifier.score", false]], "score() (wildboar.tree.proximitytreeclassifier method)": [[18, "wildboar.tree.ProximityTreeClassifier.score", false]], "score() (wildboar.tree.rockettreeclassifier method)": [[18, "wildboar.tree.RocketTreeClassifier.score", false]], "score() (wildboar.tree.rockettreeregressor method)": [[18, "wildboar.tree.RocketTreeRegressor.score", false]], "score() (wildboar.tree.shapelettreeclassifier method)": [[18, "wildboar.tree.ShapeletTreeClassifier.score", false]], "score() (wildboar.tree.shapelettreeregressor method)": [[18, "wildboar.tree.ShapeletTreeRegressor.score", false]], "segment() (in module wildboar.annotate)": [[1, "wildboar.annotate.segment", false]], "selectdimensionpercentile (class in wildboar.dimension_selection)": [[6, "wildboar.dimension_selection.SelectDimensionPercentile", false]], "selectdimensionsignificance (class in wildboar.dimension_selection)": [[6, "wildboar.dimension_selection.SelectDimensionSignificance", false]], "selectdimensiontopk (class in wildboar.dimension_selection)": [[6, "wildboar.dimension_selection.SelectDimensionTopK", false]], "sequentialdimensionselector (class in wildboar.dimension_selection)": [[6, "wildboar.dimension_selection.SequentialDimensionSelector", false]], "set_cache_dir() (in module wildboar.datasets)": [[3, "wildboar.datasets.set_cache_dir", false]], "set_output() (wildboar.dimension_selection.distancevariancethreshold method)": [[6, "wildboar.dimension_selection.DistanceVarianceThreshold.set_output", false]], "set_output() (wildboar.dimension_selection.selectdimensionpercentile method)": [[6, "wildboar.dimension_selection.SelectDimensionPercentile.set_output", false]], "set_output() (wildboar.dimension_selection.selectdimensionsignificance method)": [[6, "wildboar.dimension_selection.SelectDimensionSignificance.set_output", false]], "set_output() (wildboar.dimension_selection.selectdimensiontopk method)": [[6, "wildboar.dimension_selection.SelectDimensionTopK.set_output", false]], "set_output() (wildboar.dimension_selection.sequentialdimensionselector method)": [[6, "wildboar.dimension_selection.SequentialDimensionSelector.set_output", false]], "set_output() (wildboar.distance.kmeans method)": [[8, "wildboar.distance.KMeans.set_output", false]], "set_output() (wildboar.distance.kmedoids method)": [[8, "wildboar.distance.KMedoids.set_output", false]], "set_output() (wildboar.segment.flusssegmenter method)": [[16, "wildboar.segment.FlussSegmenter.set_output", false]], "set_output() (wildboar.transform.castortransform method)": [[17, "wildboar.transform.CastorTransform.set_output", false]], "set_output() (wildboar.transform.derivativetransform method)": [[17, "wildboar.transform.DerivativeTransform.set_output", false]], "set_output() (wildboar.transform.difftransform method)": [[17, "wildboar.transform.DiffTransform.set_output", false]], "set_output() (wildboar.transform.dilatedshapelettransform method)": [[17, "wildboar.transform.DilatedShapeletTransform.set_output", false]], "set_output() (wildboar.transform.featuretransform method)": [[17, "wildboar.transform.FeatureTransform.set_output", false]], "set_output() (wildboar.transform.hydratransform method)": [[17, "wildboar.transform.HydraTransform.set_output", false]], "set_output() (wildboar.transform.intervaltransform method)": [[17, "wildboar.transform.IntervalTransform.set_output", false]], "set_output() (wildboar.transform.matrixprofiletransform method)": [[17, "wildboar.transform.MatrixProfileTransform.set_output", false]], "set_output() (wildboar.transform.paa method)": [[17, "wildboar.transform.PAA.set_output", false]], "set_output() (wildboar.transform.pivottransform method)": [[17, "wildboar.transform.PivotTransform.set_output", false]], "set_output() (wildboar.transform.proximitytransform method)": [[17, "wildboar.transform.ProximityTransform.set_output", false]], "set_output() (wildboar.transform.randomshapelettransform method)": [[17, "wildboar.transform.RandomShapeletTransform.set_output", false]], "set_output() (wildboar.transform.rockettransform method)": [[17, "wildboar.transform.RocketTransform.set_output", false]], "set_output() (wildboar.transform.sax method)": [[17, "wildboar.transform.SAX.set_output", false]], "set_output() (wildboar.transform.shapelettransform method)": [[17, "wildboar.transform.ShapeletTransform.set_output", false]], "set_params() (wildboar.base.baseestimator method)": [[2, "wildboar.base.BaseEstimator.set_params", false]], "set_params() (wildboar.dimension_selection.distancevariancethreshold method)": [[6, "wildboar.dimension_selection.DistanceVarianceThreshold.set_params", false]], "set_params() (wildboar.dimension_selection.selectdimensionpercentile method)": [[6, "wildboar.dimension_selection.SelectDimensionPercentile.set_params", false]], "set_params() (wildboar.dimension_selection.selectdimensionsignificance method)": [[6, "wildboar.dimension_selection.SelectDimensionSignificance.set_params", false]], "set_params() (wildboar.dimension_selection.selectdimensiontopk method)": [[6, "wildboar.dimension_selection.SelectDimensionTopK.set_params", false]], "set_params() (wildboar.dimension_selection.sequentialdimensionselector method)": [[6, "wildboar.dimension_selection.SequentialDimensionSelector.set_params", false]], "set_params() (wildboar.distance.kmeans method)": [[8, "wildboar.distance.KMeans.set_params", false]], "set_params() (wildboar.distance.kmedoids method)": [[8, "wildboar.distance.KMedoids.set_params", false]], "set_params() (wildboar.distance.kneighborsclassifier method)": [[8, "wildboar.distance.KNeighborsClassifier.set_params", false]], "set_params() (wildboar.distance.mds method)": [[8, "wildboar.distance.MDS.set_params", false]], "set_params() (wildboar.ensemble.baggingclassifier method)": [[9, "wildboar.ensemble.BaggingClassifier.set_params", false]], "set_params() (wildboar.ensemble.baggingregressor method)": [[9, "wildboar.ensemble.BaggingRegressor.set_params", false]], "set_params() (wildboar.ensemble.basebagging method)": [[9, "wildboar.ensemble.BaseBagging.set_params", false]], "set_params() (wildboar.ensemble.elasticensembleclassifier method)": [[9, "wildboar.ensemble.ElasticEnsembleClassifier.set_params", false]], "set_params() (wildboar.ensemble.extrashapelettreesclassifier method)": [[9, "wildboar.ensemble.ExtraShapeletTreesClassifier.set_params", false]], "set_params() (wildboar.ensemble.extrashapelettreesregressor method)": [[9, "wildboar.ensemble.ExtraShapeletTreesRegressor.set_params", false]], "set_params() (wildboar.ensemble.intervalforestclassifier method)": [[9, "wildboar.ensemble.IntervalForestClassifier.set_params", false]], "set_params() (wildboar.ensemble.intervalforestregressor method)": [[9, "wildboar.ensemble.IntervalForestRegressor.set_params", false]], "set_params() (wildboar.ensemble.isolationshapeletforest method)": [[9, "wildboar.ensemble.IsolationShapeletForest.set_params", false]], "set_params() (wildboar.ensemble.pivotforestclassifier method)": [[9, "wildboar.ensemble.PivotForestClassifier.set_params", false]], "set_params() (wildboar.ensemble.proximityforestclassifier method)": [[9, "wildboar.ensemble.ProximityForestClassifier.set_params", false]], "set_params() (wildboar.ensemble.rocketforestclassifier method)": [[9, "wildboar.ensemble.RocketForestClassifier.set_params", false]], "set_params() (wildboar.ensemble.rocketforestregressor method)": [[9, "wildboar.ensemble.RocketForestRegressor.set_params", false]], "set_params() (wildboar.ensemble.shapeletforestclassifier method)": [[9, "wildboar.ensemble.ShapeletForestClassifier.set_params", false]], "set_params() (wildboar.ensemble.shapeletforestembedding method)": [[9, "wildboar.ensemble.ShapeletForestEmbedding.set_params", false]], "set_params() (wildboar.ensemble.shapeletforestregressor method)": [[9, "wildboar.ensemble.ShapeletForestRegressor.set_params", false]], "set_params() (wildboar.explain.amplitudeimportance method)": [[11, "wildboar.explain.AmplitudeImportance.set_params", false]], "set_params() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[10, "wildboar.explain.counterfactual.KNeighborsCounterfactual.set_params", false]], "set_params() (wildboar.explain.counterfactual.nativeguidecounterfactual method)": [[10, "wildboar.explain.counterfactual.NativeGuideCounterfactual.set_params", false]], "set_params() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[10, "wildboar.explain.counterfactual.PrototypeCounterfactual.set_params", false]], "set_params() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[10, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.set_params", false]], "set_params() (wildboar.explain.frequencyimportance method)": [[11, "wildboar.explain.FrequencyImportance.set_params", false]], "set_params() (wildboar.explain.intervalimportance method)": [[11, "wildboar.explain.IntervalImportance.set_params", false]], "set_params() (wildboar.explain.shapeletimportance method)": [[11, "wildboar.explain.ShapeletImportance.set_params", false]], "set_params() (wildboar.linear_model.castorclassifier method)": [[13, "wildboar.linear_model.CastorClassifier.set_params", false]], "set_params() (wildboar.linear_model.dilatedshapeletclassifier method)": [[13, "wildboar.linear_model.DilatedShapeletClassifier.set_params", false]], "set_params() (wildboar.linear_model.hydraclassifier method)": [[13, "wildboar.linear_model.HydraClassifier.set_params", false]], "set_params() (wildboar.linear_model.randomshapeletclassifier method)": [[13, "wildboar.linear_model.RandomShapeletClassifier.set_params", false]], "set_params() (wildboar.linear_model.randomshapeletregressor method)": [[13, "wildboar.linear_model.RandomShapeletRegressor.set_params", false]], "set_params() (wildboar.linear_model.rocketclassifier method)": [[13, "wildboar.linear_model.RocketClassifier.set_params", false]], "set_params() (wildboar.linear_model.rocketregressor method)": [[13, "wildboar.linear_model.RocketRegressor.set_params", false]], "set_params() (wildboar.segment.flusssegmenter method)": [[16, "wildboar.segment.FlussSegmenter.set_params", false]], "set_params() (wildboar.transform.castortransform method)": [[17, "wildboar.transform.CastorTransform.set_params", false]], "set_params() (wildboar.transform.derivativetransform method)": [[17, "wildboar.transform.DerivativeTransform.set_params", false]], "set_params() (wildboar.transform.difftransform method)": [[17, "wildboar.transform.DiffTransform.set_params", false]], "set_params() (wildboar.transform.dilatedshapelettransform method)": [[17, "wildboar.transform.DilatedShapeletTransform.set_params", false]], "set_params() (wildboar.transform.featuretransform method)": [[17, "wildboar.transform.FeatureTransform.set_params", false]], "set_params() (wildboar.transform.hydratransform method)": [[17, "wildboar.transform.HydraTransform.set_params", false]], "set_params() (wildboar.transform.intervaltransform method)": [[17, "wildboar.transform.IntervalTransform.set_params", false]], "set_params() (wildboar.transform.matrixprofiletransform method)": [[17, "wildboar.transform.MatrixProfileTransform.set_params", false]], "set_params() (wildboar.transform.paa method)": [[17, "wildboar.transform.PAA.set_params", false]], "set_params() (wildboar.transform.pivottransform method)": [[17, "wildboar.transform.PivotTransform.set_params", false]], "set_params() (wildboar.transform.proximitytransform method)": [[17, "wildboar.transform.ProximityTransform.set_params", false]], "set_params() (wildboar.transform.randomshapelettransform method)": [[17, "wildboar.transform.RandomShapeletTransform.set_params", false]], "set_params() (wildboar.transform.rockettransform method)": [[17, "wildboar.transform.RocketTransform.set_params", false]], "set_params() (wildboar.transform.sax method)": [[17, "wildboar.transform.SAX.set_params", false]], "set_params() (wildboar.transform.shapelettransform method)": [[17, "wildboar.transform.ShapeletTransform.set_params", false]], "set_params() (wildboar.tree.extrashapelettreeclassifier method)": [[18, "wildboar.tree.ExtraShapeletTreeClassifier.set_params", false]], "set_params() (wildboar.tree.extrashapelettreeregressor method)": [[18, "wildboar.tree.ExtraShapeletTreeRegressor.set_params", false]], "set_params() (wildboar.tree.intervaltreeclassifier method)": [[18, "wildboar.tree.IntervalTreeClassifier.set_params", false]], "set_params() (wildboar.tree.intervaltreeregressor method)": [[18, "wildboar.tree.IntervalTreeRegressor.set_params", false]], "set_params() (wildboar.tree.pivottreeclassifier method)": [[18, "wildboar.tree.PivotTreeClassifier.set_params", false]], "set_params() (wildboar.tree.proximitytreeclassifier method)": [[18, "wildboar.tree.ProximityTreeClassifier.set_params", false]], "set_params() (wildboar.tree.rockettreeclassifier method)": [[18, "wildboar.tree.RocketTreeClassifier.set_params", false]], "set_params() (wildboar.tree.rockettreeregressor method)": [[18, "wildboar.tree.RocketTreeRegressor.set_params", false]], "set_params() (wildboar.tree.shapelettreeclassifier method)": [[18, "wildboar.tree.ShapeletTreeClassifier.set_params", false]], "set_params() (wildboar.tree.shapelettreeregressor method)": [[18, "wildboar.tree.ShapeletTreeRegressor.set_params", false]], "shapeletforestclassifier (class in wildboar.ensemble)": [[9, "wildboar.ensemble.ShapeletForestClassifier", false]], "shapeletforestcounterfactual (class in wildboar.explain.counterfactual)": [[10, "wildboar.explain.counterfactual.ShapeletForestCounterfactual", false]], "shapeletforestembedding (class in wildboar.ensemble)": [[9, "wildboar.ensemble.ShapeletForestEmbedding", false]], "shapeletforestregressor (class in wildboar.ensemble)": [[9, "wildboar.ensemble.ShapeletForestRegressor", false]], "shapeletimportance (class in wildboar.explain)": [[11, "wildboar.explain.ShapeletImportance", false]], "shapelettransform (class in wildboar.transform)": [[17, "wildboar.transform.ShapeletTransform", false]], "shapelettreeclassifier (class in wildboar.tree)": [[18, "wildboar.tree.ShapeletTreeClassifier", false]], "shapelettreeregressor (class in wildboar.tree)": [[18, "wildboar.tree.ShapeletTreeRegressor", false]], "silhouette_samples() (in module wildboar.metrics)": [[14, "wildboar.metrics.silhouette_samples", false]], "silhouette_score() (in module wildboar.metrics)": [[14, "wildboar.metrics.silhouette_score", false]], "split() (wildboar.model_selection.repeatedoutliersplit method)": [[15, "wildboar.model_selection.RepeatedOutlierSplit.split", false]], "standardize() (in module wildboar.datasets.preprocess)": [[5, "wildboar.datasets.preprocess.standardize", false]], "subsequence_match() (in module wildboar.distance)": [[8, "wildboar.distance.subsequence_match", false]], "symbolic_aggregate_approximation() (in module wildboar.transform)": [[17, "wildboar.transform.symbolic_aggregate_approximation", false]], "transform() (wildboar.dimension_selection.distancevariancethreshold method)": [[6, "wildboar.dimension_selection.DistanceVarianceThreshold.transform", false]], "transform() (wildboar.dimension_selection.selectdimensionpercentile method)": [[6, "wildboar.dimension_selection.SelectDimensionPercentile.transform", false]], "transform() (wildboar.dimension_selection.selectdimensionsignificance method)": [[6, "wildboar.dimension_selection.SelectDimensionSignificance.transform", false]], "transform() (wildboar.dimension_selection.selectdimensiontopk method)": [[6, "wildboar.dimension_selection.SelectDimensionTopK.transform", false]], "transform() (wildboar.dimension_selection.sequentialdimensionselector method)": [[6, "wildboar.dimension_selection.SequentialDimensionSelector.transform", false]], "transform() (wildboar.distance.kmeans method)": [[8, "wildboar.distance.KMeans.transform", false]], "transform() (wildboar.distance.kmedoids method)": [[8, "wildboar.distance.KMedoids.transform", false]], "transform() (wildboar.segment.flusssegmenter method)": [[16, "wildboar.segment.FlussSegmenter.transform", false]], "transform() (wildboar.transform.castortransform method)": [[17, "wildboar.transform.CastorTransform.transform", false]], "transform() (wildboar.transform.dilatedshapelettransform method)": [[17, "wildboar.transform.DilatedShapeletTransform.transform", false]], "transform() (wildboar.transform.featuretransform method)": [[17, "wildboar.transform.FeatureTransform.transform", false]], "transform() (wildboar.transform.hydratransform method)": [[17, "wildboar.transform.HydraTransform.transform", false]], "transform() (wildboar.transform.intervaltransform method)": [[17, "wildboar.transform.IntervalTransform.transform", false]], "transform() (wildboar.transform.matrixprofiletransform method)": [[17, "wildboar.transform.MatrixProfileTransform.transform", false]], "transform() (wildboar.transform.pivottransform method)": [[17, "wildboar.transform.PivotTransform.transform", false]], "transform() (wildboar.transform.randomshapelettransform method)": [[17, "wildboar.transform.RandomShapeletTransform.transform", false]], "transform() (wildboar.transform.rockettransform method)": [[17, "wildboar.transform.RocketTransform.transform", false]], "transform() (wildboar.transform.shapelettransform method)": [[17, "wildboar.transform.ShapeletTransform.transform", false]], "truncate() (in module wildboar.datasets.preprocess)": [[5, "wildboar.datasets.preprocess.truncate", false]], "validity_score() (in module wildboar.metrics)": [[14, "wildboar.metrics.validity_score", false]], "version (wildboar.datasets.jsonrepository property)": [[3, "wildboar.datasets.JSONRepository.version", false]], "version (wildboar.datasets.repository property)": [[3, "wildboar.datasets.Repository.version", false]], "wddtw_distance() (in module wildboar.distance.dtw)": [[7, "wildboar.distance.dtw.wddtw_distance", false]], "wdtw_alignment() (in module wildboar.distance.dtw)": [[7, "wildboar.distance.dtw.wdtw_alignment", false]], "wdtw_distance() (in module wildboar.distance.dtw)": [[7, "wildboar.distance.dtw.wdtw_distance", false]], "wildboar": [[12, "module-wildboar", false]], "wildboar.annotate": [[1, "module-wildboar.annotate", false]], "wildboar.base": [[2, "module-wildboar.base", false]], "wildboar.datasets": [[3, "module-wildboar.datasets", false]], "wildboar.datasets.outlier": [[4, "module-wildboar.datasets.outlier", false]], "wildboar.datasets.preprocess": [[5, "module-wildboar.datasets.preprocess", false]], "wildboar.dimension_selection": [[6, "module-wildboar.dimension_selection", false]], "wildboar.distance": [[8, "module-wildboar.distance", false]], "wildboar.distance.dtw": [[7, "module-wildboar.distance.dtw", false]], "wildboar.ensemble": [[9, "module-wildboar.ensemble", false]], "wildboar.explain": [[11, "module-wildboar.explain", false]], "wildboar.explain.counterfactual": [[10, "module-wildboar.explain.counterfactual", false]], "wildboar.linear_model": [[13, "module-wildboar.linear_model", false]], "wildboar.metrics": [[14, "module-wildboar.metrics", false]], "wildboar.model_selection": [[15, "module-wildboar.model_selection", false]], "wildboar.segment": [[16, "module-wildboar.segment", false]], "wildboar.transform": [[17, "module-wildboar.transform", false]], "wildboar.tree": [[18, "module-wildboar.tree", false]], "wildboar.utils": [[19, "module-wildboar.utils", false]], "wildboar.utils.plot": [[20, "module-wildboar.utils.plot", false]], "wildboar.utils.variable_len": [[21, "module-wildboar.utils.variable_len", false]], "wildboar_requires (wildboar.datasets.jsonrepository property)": [[3, "wildboar.datasets.JSONRepository.wildboar_requires", false]], "wildboar_requires (wildboar.datasets.repository property)": [[3, "wildboar.datasets.Repository.wildboar_requires", false]]}, "objects": {"": [[12, 0, 0, "-", "wildboar"]], "wildboar": [[1, 0, 0, "-", "annotate"], [2, 0, 0, "-", "base"], [3, 0, 0, "-", "datasets"], [6, 0, 0, "-", "dimension_selection"], [8, 0, 0, "-", "distance"], [9, 0, 0, "-", "ensemble"], [11, 0, 0, "-", "explain"], [13, 0, 0, "-", "linear_model"], [14, 0, 0, "-", "metrics"], [15, 0, 0, "-", "model_selection"], [16, 0, 0, "-", "segment"], [17, 0, 0, "-", "transform"], [18, 0, 0, "-", "tree"], [19, 0, 0, "-", "utils"]], "wildboar.annotate": [[1, 1, 1, "", "motifs"], [1, 1, 1, "", "segment"]], "wildboar.base": [[2, 2, 1, "", "BaseEstimator"], [2, 2, 1, "", "CounterfactualMixin"], [2, 2, 1, "", "ExplainerMixin"], [2, 1, 1, "", "is_counterfactual"], [2, 1, 1, "", "is_explainer"]], "wildboar.base.BaseEstimator": [[2, 3, 1, "", "get_metadata_routing"], [2, 3, 1, "", "get_params"], [2, 3, 1, "", "set_params"]], "wildboar.base.CounterfactualMixin": [[2, 3, 1, "", "score"]], "wildboar.base.ExplainerMixin": [[2, 3, 1, "", "fit_explain"], [2, 3, 1, "", "plot"]], "wildboar.datasets": [[3, 2, 1, "", "Bundle"], [3, 2, 1, "", "JSONRepository"], [3, 2, 1, "", "NpBundle"], [3, 2, 1, "", "Repository"], [3, 1, 1, "", "clear_cache"], [3, 1, 1, "", "get_bundles"], [3, 1, 1, "", "get_repository"], [3, 1, 1, "", "install_repository"], [3, 1, 1, "", "list_bundles"], [3, 1, 1, "", "list_collections"], [3, 1, 1, "", "list_datasets"], [3, 1, 1, "", "list_repositories"], [3, 1, 1, "", "load_articulary_word_recognition"], [3, 1, 1, "", "load_basic_motions"], [3, 1, 1, "", "load_dataset"], [3, 1, 1, "", "load_datasets"], [3, 1, 1, "", "load_ering"], [3, 1, 1, "", "load_gun_point"], [3, 1, 1, "", "load_synthetic_control"], [3, 1, 1, "", "load_two_lead_ecg"], [4, 0, 0, "-", "outlier"], [5, 0, 0, "-", "preprocess"], [3, 1, 1, "", "refresh_repositories"], [3, 1, 1, "", "set_cache_dir"]], "wildboar.datasets.Bundle": [[3, 3, 1, "", "get_collection"], [3, 3, 1, "", "get_filename"], [3, 3, 1, "", "list"], [3, 3, 1, "", "load"]], "wildboar.datasets.JSONRepository": [[3, 4, 1, "", "download_url"], [3, 3, 1, "", "get_bundle"], [3, 3, 1, "", "get_bundles"], [3, 4, 1, "", "name"], [3, 3, 1, "", "refresh"], [3, 4, 1, "", "version"], [3, 4, 1, "", "wildboar_requires"]], "wildboar.datasets.NpBundle": [[3, 3, 1, "", "get_collection"], [3, 3, 1, "", "get_filename"], [3, 3, 1, "", "list"], [3, 3, 1, "", "load"]], "wildboar.datasets.Repository": [[3, 4, 1, "", "download_url"], [3, 3, 1, "", "get_bundle"], [3, 3, 1, "", "get_bundles"], [3, 4, 1, "", "name"], [3, 3, 1, "", "refresh"], [3, 4, 1, "", "version"], [3, 4, 1, "", "wildboar_requires"]], "wildboar.datasets.outlier": [[4, 1, 1, "", "density_outliers"], [4, 1, 1, "", "emmott_outliers"], [4, 1, 1, "", "kmeans_outliers"], [4, 1, 1, "", "majority_outliers"], [4, 1, 1, "", "minority_outliers"]], "wildboar.datasets.preprocess": [[5, 1, 1, "", "maxabs_scale"], [5, 1, 1, "", "minmax_scale"], [5, 1, 1, "", "named_preprocess"], [5, 1, 1, "", "standardize"], [5, 1, 1, "", "truncate"]], "wildboar.dimension_selection": [[6, 2, 1, "", "DistanceVarianceThreshold"], [6, 2, 1, "", "SelectDimensionPercentile"], [6, 2, 1, "", "SelectDimensionSignificance"], [6, 2, 1, "", "SelectDimensionTopK"], [6, 2, 1, "", "SequentialDimensionSelector"]], "wildboar.dimension_selection.DistanceVarianceThreshold": [[6, 3, 1, "", "fit"], [6, 3, 1, "", "fit_transform"], [6, 3, 1, "", "get_dimensions"], [6, 3, 1, "", "get_metadata_routing"], [6, 3, 1, "", "get_params"], [6, 3, 1, "", "inverse_transform"], [6, 3, 1, "", "set_output"], [6, 3, 1, "", "set_params"], [6, 3, 1, "", "transform"]], "wildboar.dimension_selection.SelectDimensionPercentile": [[6, 3, 1, "", "fit"], [6, 3, 1, "", "fit_transform"], [6, 3, 1, "", "get_dimensions"], [6, 3, 1, "", "get_metadata_routing"], [6, 3, 1, "", "get_params"], [6, 3, 1, "", "inverse_transform"], [6, 3, 1, "", "set_output"], [6, 3, 1, "", "set_params"], [6, 3, 1, "", "transform"]], "wildboar.dimension_selection.SelectDimensionSignificance": [[6, 3, 1, "", "fit"], [6, 3, 1, "", "fit_transform"], [6, 3, 1, "", "get_dimensions"], [6, 3, 1, "", "get_metadata_routing"], [6, 3, 1, "", "get_params"], [6, 3, 1, "", "inverse_transform"], [6, 3, 1, "", "set_output"], [6, 3, 1, "", "set_params"], [6, 3, 1, "", "transform"]], "wildboar.dimension_selection.SelectDimensionTopK": [[6, 3, 1, "", "fit"], [6, 3, 1, "", "fit_transform"], [6, 3, 1, "", "get_dimensions"], [6, 3, 1, "", "get_metadata_routing"], [6, 3, 1, "", "get_params"], [6, 3, 1, "", "inverse_transform"], [6, 3, 1, "", "set_output"], [6, 3, 1, "", "set_params"], [6, 3, 1, "", "transform"]], "wildboar.dimension_selection.SequentialDimensionSelector": [[6, 3, 1, "", "fit"], [6, 3, 1, "", "fit_transform"], [6, 3, 1, "", "get_dimensions"], [6, 3, 1, "", "get_metadata_routing"], [6, 3, 1, "", "get_params"], [6, 3, 1, "", "inverse_transform"], [6, 3, 1, "", "set_output"], [6, 3, 1, "", "set_params"], [6, 3, 1, "", "transform"]], "wildboar.distance": [[8, 2, 1, "", "KMeans"], [8, 2, 1, "", "KMedoids"], [8, 2, 1, "", "KNeighborsClassifier"], [8, 2, 1, "", "MDS"], [8, 1, 1, "", "argmin_distance"], [8, 1, 1, "", "argmin_subsequence_distance"], [8, 1, 1, "", "distance_profile"], [7, 0, 0, "-", "dtw"], [8, 1, 1, "", "matrix_profile"], [8, 1, 1, "", "paired_distance"], [8, 1, 1, "", "paired_matrix_profile"], [8, 1, 1, "", "paired_subsequence_distance"], [8, 1, 1, "", "paired_subsequence_match"], [8, 1, 1, "", "pairwise_distance"], [8, 1, 1, "", "pairwise_subsequence_distance"], [8, 1, 1, "", "subsequence_match"]], "wildboar.distance.KMeans": [[8, 3, 1, "", "fit"], [8, 3, 1, "", "fit_predict"], [8, 3, 1, "", "fit_transform"], [8, 3, 1, "", "get_metadata_routing"], [8, 3, 1, "", "get_params"], [8, 3, 1, "", "predict"], [8, 3, 1, "", "set_output"], [8, 3, 1, "", "set_params"], [8, 3, 1, "", "transform"]], "wildboar.distance.KMedoids": [[8, 3, 1, "", "fit"], [8, 3, 1, "", "fit_predict"], [8, 3, 1, "", "fit_transform"], [8, 3, 1, "", "get_metadata_routing"], [8, 3, 1, "", "get_params"], [8, 3, 1, "", "predict"], [8, 3, 1, "", "set_output"], [8, 3, 1, "", "set_params"], [8, 3, 1, "", "transform"]], "wildboar.distance.KNeighborsClassifier": [[8, 3, 1, "", "fit"], [8, 3, 1, "", "get_metadata_routing"], [8, 3, 1, "", "get_params"], [8, 3, 1, "", "predict"], [8, 3, 1, "", "predict_proba"], [8, 3, 1, "", "score"], [8, 3, 1, "", "set_params"]], "wildboar.distance.MDS": [[8, 3, 1, "", "get_metadata_routing"], [8, 3, 1, "", "get_params"], [8, 3, 1, "", "set_params"]], "wildboar.distance.dtw": [[7, 1, 1, "", "ddtw_distance"], [7, 1, 1, "", "dtw_alignment"], [7, 1, 1, "", "dtw_average"], [7, 1, 1, "", "dtw_distance"], [7, 1, 1, "", "dtw_envelop"], [7, 1, 1, "", "dtw_lb_keogh"], [7, 1, 1, "", "dtw_mapping"], [7, 1, 1, "", "jeong_weight"], [7, 1, 1, "", "wddtw_distance"], [7, 1, 1, "", "wdtw_alignment"], [7, 1, 1, "", "wdtw_distance"]], "wildboar.ensemble": [[9, 2, 1, "", "BaggingClassifier"], [9, 2, 1, "", "BaggingRegressor"], [9, 2, 1, "", "BaseBagging"], [9, 2, 1, "", "ElasticEnsembleClassifier"], [9, 2, 1, "", "ExtraShapeletTreesClassifier"], [9, 2, 1, "", "ExtraShapeletTreesRegressor"], [9, 2, 1, "", "IntervalForestClassifier"], [9, 2, 1, "", "IntervalForestRegressor"], [9, 2, 1, "", "IsolationShapeletForest"], [9, 2, 1, "", "PivotForestClassifier"], [9, 2, 1, "", "ProximityForestClassifier"], [9, 2, 1, "", "RocketForestClassifier"], [9, 2, 1, "", "RocketForestRegressor"], [9, 2, 1, "", "ShapeletForestClassifier"], [9, 2, 1, "", "ShapeletForestEmbedding"], [9, 2, 1, "", "ShapeletForestRegressor"]], "wildboar.ensemble.BaggingClassifier": [[9, 3, 1, "", "decision_function"], [9, 4, 1, "", "estimators_samples_"], [9, 3, 1, "", "fit"], [9, 3, 1, "", "get_metadata_routing"], [9, 3, 1, "", "get_params"], [9, 3, 1, "", "predict"], [9, 3, 1, "", "predict_log_proba"], [9, 3, 1, "", "predict_proba"], [9, 3, 1, "", "score"], [9, 3, 1, "", "set_params"]], "wildboar.ensemble.BaggingRegressor": [[9, 4, 1, "", "estimators_samples_"], [9, 3, 1, "", "fit"], [9, 3, 1, "", "get_metadata_routing"], [9, 3, 1, "", "get_params"], [9, 3, 1, "", "predict"], [9, 3, 1, "", "score"], [9, 3, 1, "", "set_params"]], "wildboar.ensemble.BaseBagging": [[9, 4, 1, "", "estimators_samples_"], [9, 3, 1, "", "fit"], [9, 3, 1, "", "get_metadata_routing"], [9, 3, 1, "", "get_params"], [9, 3, 1, "", "set_params"]], "wildboar.ensemble.ElasticEnsembleClassifier": [[9, 3, 1, "", "fit"], [9, 3, 1, "", "get_metadata_routing"], [9, 3, 1, "", "get_params"], [9, 3, 1, "", "predict"], [9, 3, 1, "", "predict_proba"], [9, 3, 1, "", "score"], [9, 3, 1, "", "set_params"]], "wildboar.ensemble.ExtraShapeletTreesClassifier": [[9, 3, 1, "", "decision_function"], [9, 4, 1, "", "estimators_samples_"], [9, 3, 1, "", "fit"], [9, 3, 1, "", "get_metadata_routing"], [9, 3, 1, "", "get_params"], [9, 3, 1, "", "predict"], [9, 3, 1, "", "predict_log_proba"], [9, 3, 1, "", "predict_proba"], [9, 3, 1, "", "score"], [9, 3, 1, "", "set_params"]], "wildboar.ensemble.ExtraShapeletTreesRegressor": [[9, 4, 1, "", "estimators_samples_"], [9, 3, 1, "", "fit"], [9, 3, 1, "", "get_metadata_routing"], [9, 3, 1, "", "get_params"], [9, 3, 1, "", "predict"], [9, 3, 1, "", "score"], [9, 3, 1, "", "set_params"]], "wildboar.ensemble.IntervalForestClassifier": [[9, 3, 1, "", "decision_function"], [9, 4, 1, "", "estimators_samples_"], [9, 3, 1, "", "fit"], [9, 3, 1, "", "get_metadata_routing"], [9, 3, 1, "", "get_params"], [9, 3, 1, "", "predict"], [9, 3, 1, "", "predict_log_proba"], [9, 3, 1, "", "predict_proba"], [9, 3, 1, "", "score"], [9, 3, 1, "", "set_params"]], "wildboar.ensemble.IntervalForestRegressor": [[9, 4, 1, "", "estimators_samples_"], [9, 3, 1, "", "fit"], [9, 3, 1, "", "get_metadata_routing"], [9, 3, 1, "", "get_params"], [9, 3, 1, "", "predict"], [9, 3, 1, "", "score"], [9, 3, 1, "", "set_params"]], "wildboar.ensemble.IsolationShapeletForest": [[9, 4, 1, "", "estimators_samples_"], [9, 3, 1, "", "fit"], [9, 3, 1, "", "fit_predict"], [9, 3, 1, "", "get_metadata_routing"], [9, 3, 1, "", "get_params"], [9, 3, 1, "", "set_params"]], "wildboar.ensemble.PivotForestClassifier": [[9, 3, 1, "", "decision_function"], [9, 4, 1, "", "estimators_samples_"], [9, 3, 1, "", "fit"], [9, 3, 1, "", "get_metadata_routing"], [9, 3, 1, "", "get_params"], [9, 3, 1, "", "predict"], [9, 3, 1, "", "predict_log_proba"], [9, 3, 1, "", "predict_proba"], [9, 3, 1, "", "score"], [9, 3, 1, "", "set_params"]], "wildboar.ensemble.ProximityForestClassifier": [[9, 3, 1, "", "decision_function"], [9, 4, 1, "", "estimators_samples_"], [9, 3, 1, "", "fit"], [9, 3, 1, "", "get_metadata_routing"], [9, 3, 1, "", "get_params"], [9, 3, 1, "", "predict"], [9, 3, 1, "", "predict_log_proba"], [9, 3, 1, "", "predict_proba"], [9, 3, 1, "", "score"], [9, 3, 1, "", "set_params"]], "wildboar.ensemble.RocketForestClassifier": [[9, 3, 1, "", "decision_function"], [9, 4, 1, "", "estimators_samples_"], [9, 3, 1, "", "fit"], [9, 3, 1, "", "get_metadata_routing"], [9, 3, 1, "", "get_params"], [9, 3, 1, "", "predict"], [9, 3, 1, "", "predict_log_proba"], [9, 3, 1, "", "predict_proba"], [9, 3, 1, "", "score"], [9, 3, 1, "", "set_params"]], "wildboar.ensemble.RocketForestRegressor": [[9, 4, 1, "", "estimators_samples_"], [9, 3, 1, "", "fit"], [9, 3, 1, "", "get_metadata_routing"], [9, 3, 1, "", "get_params"], [9, 3, 1, "", "predict"], [9, 3, 1, "", "score"], [9, 3, 1, "", "set_params"]], "wildboar.ensemble.ShapeletForestClassifier": [[9, 3, 1, "", "decision_function"], [9, 4, 1, "", "estimators_samples_"], [9, 3, 1, "", "fit"], [9, 3, 1, "", "get_metadata_routing"], [9, 3, 1, "", "get_params"], [9, 3, 1, "", "predict"], [9, 3, 1, "", "predict_log_proba"], [9, 3, 1, "", "predict_proba"], [9, 3, 1, "", "score"], [9, 3, 1, "", "set_params"]], "wildboar.ensemble.ShapeletForestEmbedding": [[9, 4, 1, "", "estimators_samples_"], [9, 3, 1, "", "fit"], [9, 3, 1, "", "get_metadata_routing"], [9, 3, 1, "", "get_params"], [9, 3, 1, "", "predict"], [9, 3, 1, "", "score"], [9, 3, 1, "", "set_params"]], "wildboar.ensemble.ShapeletForestRegressor": [[9, 4, 1, "", "estimators_samples_"], [9, 3, 1, "", "fit"], [9, 3, 1, "", "get_metadata_routing"], [9, 3, 1, "", "get_params"], [9, 3, 1, "", "predict"], [9, 3, 1, "", "score"], [9, 3, 1, "", "set_params"]], "wildboar.explain": [[11, 2, 1, "", "AmplitudeImportance"], [11, 2, 1, "", "FrequencyImportance"], [11, 2, 1, "", "IntervalImportance"], [11, 2, 1, "", "ShapeletImportance"], [10, 0, 0, "-", "counterfactual"], [11, 1, 1, "", "plot_importances"]], "wildboar.explain.AmplitudeImportance": [[11, 3, 1, "", "fit_explain"], [11, 3, 1, "", "get_metadata_routing"], [11, 3, 1, "", "get_params"], [11, 3, 1, "", "plot"], [11, 3, 1, "", "set_params"]], "wildboar.explain.FrequencyImportance": [[11, 3, 1, "", "fit_explain"], [11, 3, 1, "", "get_metadata_routing"], [11, 3, 1, "", "get_params"], [11, 3, 1, "", "plot"], [11, 3, 1, "", "set_params"]], "wildboar.explain.IntervalImportance": [[11, 3, 1, "", "fit_explain"], [11, 3, 1, "", "get_metadata_routing"], [11, 3, 1, "", "get_params"], [11, 3, 1, "", "plot"], [11, 3, 1, "", "set_params"]], "wildboar.explain.ShapeletImportance": [[11, 3, 1, "", "fit_explain"], [11, 3, 1, "", "get_metadata_routing"], [11, 3, 1, "", "get_params"], [11, 3, 1, "", "plot"], [11, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual": [[10, 2, 1, "", "KNeighborsCounterfactual"], [10, 2, 1, "", "NativeGuideCounterfactual"], [10, 2, 1, "", "PrototypeCounterfactual"], [10, 2, 1, "", "ShapeletForestCounterfactual"], [10, 1, 1, "", "counterfactuals"], [10, 1, 1, "", "proximity"]], "wildboar.explain.counterfactual.KNeighborsCounterfactual": [[10, 3, 1, "", "fit_explain"], [10, 3, 1, "", "get_metadata_routing"], [10, 3, 1, "", "get_params"], [10, 3, 1, "", "plot"], [10, 3, 1, "", "score"], [10, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual.NativeGuideCounterfactual": [[10, 3, 1, "", "fit_explain"], [10, 3, 1, "", "get_metadata_routing"], [10, 3, 1, "", "get_params"], [10, 3, 1, "", "plot"], [10, 3, 1, "", "score"], [10, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual.PrototypeCounterfactual": [[10, 3, 1, "", "fit_explain"], [10, 3, 1, "", "get_metadata_routing"], [10, 3, 1, "", "get_params"], [10, 3, 1, "", "plot"], [10, 3, 1, "", "score"], [10, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual.ShapeletForestCounterfactual": [[10, 3, 1, "", "fit_explain"], [10, 3, 1, "", "get_metadata_routing"], [10, 3, 1, "", "get_params"], [10, 3, 1, "", "plot"], [10, 3, 1, "", "score"], [10, 3, 1, "", "set_params"]], "wildboar.linear_model": [[13, 2, 1, "", "CastorClassifier"], [13, 2, 1, "", "DilatedShapeletClassifier"], [13, 2, 1, "", "HydraClassifier"], [13, 2, 1, "", "RandomShapeletClassifier"], [13, 2, 1, "", "RandomShapeletRegressor"], [13, 2, 1, "", "RocketClassifier"], [13, 2, 1, "", "RocketRegressor"]], "wildboar.linear_model.CastorClassifier": [[13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.linear_model.DilatedShapeletClassifier": [[13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.linear_model.HydraClassifier": [[13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.linear_model.RandomShapeletClassifier": [[13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.linear_model.RandomShapeletRegressor": [[13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.linear_model.RocketClassifier": [[13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.linear_model.RocketRegressor": [[13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.metrics": [[14, 1, 1, "", "compactness_score"], [14, 1, 1, "", "plausability_score"], [14, 1, 1, "", "proximity_score"], [14, 1, 1, "", "redudancy_score"], [14, 1, 1, "", "relative_proximity_score"], [14, 1, 1, "", "silhouette_samples"], [14, 1, 1, "", "silhouette_score"], [14, 1, 1, "", "validity_score"]], "wildboar.model_selection": [[15, 2, 1, "", "RepeatedOutlierSplit"], [15, 1, 1, "", "outlier_train_test_split"]], "wildboar.model_selection.RepeatedOutlierSplit": [[15, 3, 1, "", "get_n_splits"], [15, 3, 1, "", "split"]], "wildboar.segment": [[16, 2, 1, "", "FlussSegmenter"]], "wildboar.segment.FlussSegmenter": [[16, 3, 1, "", "fit"], [16, 3, 1, "", "fit_transform"], [16, 3, 1, "", "get_metadata_routing"], [16, 3, 1, "", "get_params"], [16, 3, 1, "", "predict"], [16, 3, 1, "", "set_output"], [16, 3, 1, "", "set_params"], [16, 3, 1, "", "transform"]], "wildboar.transform": [[17, 2, 1, "", "CastorTransform"], [17, 2, 1, "", "DerivativeTransform"], [17, 2, 1, "", "DiffTransform"], [17, 2, 1, "", "DilatedShapeletTransform"], [17, 2, 1, "", "FeatureTransform"], [17, 2, 1, "", "HydraTransform"], [17, 2, 1, "", "IntervalTransform"], [17, 2, 1, "", "MatrixProfileTransform"], [17, 2, 1, "", "PAA"], [17, 2, 1, "", "PivotTransform"], [17, 2, 1, "", "ProximityTransform"], [17, 2, 1, "", "RandomShapeletTransform"], [17, 2, 1, "", "RocketTransform"], [17, 2, 1, "", "SAX"], [17, 2, 1, "", "ShapeletTransform"], [17, 1, 1, "", "convolve"], [17, 1, 1, "", "piecewice_aggregate_approximation"], [17, 1, 1, "", "symbolic_aggregate_approximation"]], "wildboar.transform.CastorTransform": [[17, 3, 1, "", "fit"], [17, 3, 1, "", "fit_transform"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "set_output"], [17, 3, 1, "", "set_params"], [17, 3, 1, "", "transform"]], "wildboar.transform.DerivativeTransform": [[17, 3, 1, "", "fit_transform"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "set_output"], [17, 3, 1, "", "set_params"]], "wildboar.transform.DiffTransform": [[17, 3, 1, "", "fit_transform"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "set_output"], [17, 3, 1, "", "set_params"]], "wildboar.transform.DilatedShapeletTransform": [[17, 3, 1, "", "fit"], [17, 3, 1, "", "fit_transform"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "set_output"], [17, 3, 1, "", "set_params"], [17, 3, 1, "", "transform"]], "wildboar.transform.FeatureTransform": [[17, 3, 1, "", "fit"], [17, 3, 1, "", "fit_transform"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "set_output"], [17, 3, 1, "", "set_params"], [17, 3, 1, "", "transform"]], "wildboar.transform.HydraTransform": [[17, 3, 1, "", "fit"], [17, 3, 1, "", "fit_transform"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "set_output"], [17, 3, 1, "", "set_params"], [17, 3, 1, "", "transform"]], "wildboar.transform.IntervalTransform": [[17, 3, 1, "", "fit"], [17, 3, 1, "", "fit_transform"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "set_output"], [17, 3, 1, "", "set_params"], [17, 3, 1, "", "transform"]], "wildboar.transform.MatrixProfileTransform": [[17, 3, 1, "", "fit"], [17, 3, 1, "", "fit_transform"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "set_output"], [17, 3, 1, "", "set_params"], [17, 3, 1, "", "transform"]], "wildboar.transform.PAA": [[17, 3, 1, "", "fit_transform"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "set_output"], [17, 3, 1, "", "set_params"]], "wildboar.transform.PivotTransform": [[17, 3, 1, "", "fit"], [17, 3, 1, "", "fit_transform"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "set_output"], [17, 3, 1, "", "set_params"], [17, 3, 1, "", "transform"]], "wildboar.transform.ProximityTransform": [[17, 3, 1, "", "fit_transform"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "set_output"], [17, 3, 1, "", "set_params"]], "wildboar.transform.RandomShapeletTransform": [[17, 3, 1, "", "fit"], [17, 3, 1, "", "fit_transform"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "set_output"], [17, 3, 1, "", "set_params"], [17, 3, 1, "", "transform"]], "wildboar.transform.RocketTransform": [[17, 3, 1, "", "fit"], [17, 3, 1, "", "fit_transform"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "set_output"], [17, 3, 1, "", "set_params"], [17, 3, 1, "", "transform"]], "wildboar.transform.SAX": [[17, 3, 1, "", "fit_transform"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "set_output"], [17, 3, 1, "", "set_params"]], "wildboar.transform.ShapeletTransform": [[17, 3, 1, "", "fit"], [17, 3, 1, "", "fit_transform"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "set_output"], [17, 3, 1, "", "set_params"], [17, 3, 1, "", "transform"]], "wildboar.tree": [[18, 2, 1, "", "ExtraShapeletTreeClassifier"], [18, 2, 1, "", "ExtraShapeletTreeRegressor"], [18, 2, 1, "", "IntervalTreeClassifier"], [18, 2, 1, "", "IntervalTreeRegressor"], [18, 2, 1, "", "PivotTreeClassifier"], [18, 2, 1, "", "ProximityTreeClassifier"], [18, 2, 1, "", "RocketTreeClassifier"], [18, 2, 1, "", "RocketTreeRegressor"], [18, 2, 1, "", "ShapeletTreeClassifier"], [18, 2, 1, "", "ShapeletTreeRegressor"], [18, 1, 1, "", "plot_tree"]], "wildboar.tree.ExtraShapeletTreeClassifier": [[18, 3, 1, "", "apply"], [18, 3, 1, "", "decision_path"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "predict"], [18, 3, 1, "", "predict_proba"], [18, 3, 1, "", "score"], [18, 3, 1, "", "set_params"]], "wildboar.tree.ExtraShapeletTreeRegressor": [[18, 3, 1, "", "apply"], [18, 3, 1, "", "decision_path"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "predict"], [18, 3, 1, "", "score"], [18, 3, 1, "", "set_params"]], "wildboar.tree.IntervalTreeClassifier": [[18, 3, 1, "", "apply"], [18, 3, 1, "", "decision_path"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "predict"], [18, 3, 1, "", "predict_proba"], [18, 3, 1, "", "score"], [18, 3, 1, "", "set_params"]], "wildboar.tree.IntervalTreeRegressor": [[18, 3, 1, "", "apply"], [18, 3, 1, "", "decision_path"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "predict"], [18, 3, 1, "", "score"], [18, 3, 1, "", "set_params"]], "wildboar.tree.PivotTreeClassifier": [[18, 3, 1, "", "apply"], [18, 3, 1, "", "decision_path"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "predict"], [18, 3, 1, "", "predict_proba"], [18, 3, 1, "", "score"], [18, 3, 1, "", "set_params"]], "wildboar.tree.ProximityTreeClassifier": [[18, 3, 1, "", "apply"], [18, 3, 1, "", "decision_path"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "predict"], [18, 3, 1, "", "predict_proba"], [18, 3, 1, "", "score"], [18, 3, 1, "", "set_params"]], "wildboar.tree.RocketTreeClassifier": [[18, 3, 1, "", "apply"], [18, 3, 1, "", "decision_path"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "predict"], [18, 3, 1, "", "predict_proba"], [18, 3, 1, "", "score"], [18, 3, 1, "", "set_params"]], "wildboar.tree.RocketTreeRegressor": [[18, 3, 1, "", "apply"], [18, 3, 1, "", "decision_path"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "predict"], [18, 3, 1, "", "score"], [18, 3, 1, "", "set_params"]], "wildboar.tree.ShapeletTreeClassifier": [[18, 3, 1, "", "apply"], [18, 3, 1, "", "decision_path"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "predict"], [18, 3, 1, "", "predict_proba"], [18, 3, 1, "", "score"], [18, 3, 1, "", "set_params"]], "wildboar.tree.ShapeletTreeRegressor": [[18, 3, 1, "", "apply"], [18, 3, 1, "", "decision_path"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "predict"], [18, 3, 1, "", "score"], [18, 3, 1, "", "set_params"]], "wildboar.utils": [[19, 1, 1, "", "check_X_y"], [19, 1, 1, "", "check_array"], [20, 0, 0, "-", "plot"], [21, 0, 0, "-", "variable_len"]], "wildboar.utils.plot": [[20, 1, 1, "", "plot_frequency_domain"], [20, 1, 1, "", "plot_time_domain"]], "wildboar.utils.variable_len": [[21, 1, 1, "", "get_variable_length"], [21, 1, 1, "", "is_end_of_series"], [21, 1, 1, "", "is_variable_length"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property"}, "terms": {"": [2, 4, 6, 8, 9, 10, 11, 13, 16, 17, 18, 22, 29, 31, 32, 35, 37, 40, 41, 43], "0": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 37, 40, 41, 42, 44], "00": [7, 17], "00000000e": 17, "0001": 8, "00019": 32, "00021": 32, "00022": 32, "00028": 32, "00029": 32, "00030": 32, "00032": 32, "00035": 32, "00048": 32, "00052": 32, "00054": 32, "00056": 32, "00061": 32, "00064": 32, "00071": 32, "00074": 32, "00091": 32, "00095": 32, "00096": 32, "00097": 32, "00099": 32, "001": [8, 31], "00100": 32, "00101": 32, "00102": 32, "00103": 32, "00104": 32, "00106": 32, "00107": 32, "00120332": 8, "00136": 32, "00146": 32, "00153": 32, "00181": 32, "00182": 32, "00185": 32, "00189": 32, "00190": 32, "00194": 32, "00195": 32, "00216": 32, "00226": 32, "00278": 32, "00413": 32, "00425122e": 7, "00606825": 32, "0061231459189364": 37, "0061831": 29, "01": [6, 7, 17, 31, 35], "01881424": 8, "01983922": 42, "02": [7, 17], "02389872e": 7, "03": 7, "03608265e": 7, "03658537": 32, "04": 42, "04521294": 29, "04712544": 17, "05": [4, 6, 7, 9, 10, 13, 15, 17, 31, 40], "05018": [13, 17, 36], "05212617": 29, "06099416": 32, "06302199200001724": 32, "06460666": 32, "06653283e": 7, "06851": 32, "06939656": 32, "07092": 32, "08": 14, "08536585": 32, "08588712e": 7, "08999765": 42, "09010828e": 7, "09056v1": 14, "09269015": 29, "0961576": 8, "09710811": 32, "09711063": 29, "09756098": 32, "09806374": 32, "09954847e": 7, "0x7f262ce95d00": 25, "0x7fc3c0153fb0": 37, "1": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 40, 41, 42, 44, 45], "10": [1, 6, 8, 9, 11, 13, 17, 18, 20, 31, 32, 36, 37, 42, 45], "100": [6, 9, 10, 11, 17, 18, 20, 25, 29, 31, 32, 35, 37], "1000": [13, 17, 18], "10000": [13, 41, 42], "101": 32, "1024": 36, "10321": 32, "1053": 18, "1085": 18, "109": 32, "10973127": 32, "11": [8, 9, 13, 17, 32, 36], "111": 32, "11131": 32, "11177626": 32, "11248815e": 7, "11514381": 32, "115143810620726": 32, "11526939": 17, "1162": [3, 25], "11914265": 32, "12": [17, 23, 32], "120": 32, "12069088": 29, "12195122": 32, "12209986": 29, "128": 36, "12877": 10, "12969588500004647": 32, "13": [9, 13, 17], "13076667": 32, "13211v2": 14, "13350353": 32, "13364922": 29, "13414634": 32, "1344171278001063": 37, "13489775": 32, "137": 31, "1374": 23, "13964118e": 7, "14": [8, 32], "14157": 32, "142": 35, "1425": 31, "1438": 31, "1454": [17, 36], "146": 32, "14763103": 29, "1495": [17, 36], "14970562": 42, "15": 17, "150": [3, 17, 25, 29], "1503": [13, 17, 36], "15083281": 8, "15122819": 29, "153": 35, "15611733": 32, "1568": 23, "16": [4, 36, 40, 42], "160": 32, "16256033": 29, "1671": [10, 14, 29], "16754772": 32, "16th": [1, 8, 23], "17": [42, 46], "1700": [10, 14, 29], "17437783e": 7, "17725071": 32, "1821": [17, 35], "18507116": 32, "1852": [17, 35], "18777928": 32, "18811169": 29, "18th": 32, "193": 32, "19633603e": 17, "1977": 31, "19807473e": 7, "1d": [8, 17, 19, 30, 32], "1dyg3rww_zpd": [23, 41], "1e": [7, 14], "2": [1, 4, 6, 7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 41, 42, 43, 44, 46], "20": [18, 32, 35], "200": [3, 23, 25, 41], "20000": [23, 41], "2002": 7, "2004": 31, "2005": 31, "2008": 31, "2009": 14, "20106232": 29, "2011": 7, "2012": 32, "2013": [4, 31, 35, 40], "2015": [9, 13, 17, 35, 36], "2016": [1, 8, 18, 23], "2017": [1, 16], "2018": [10, 29], "2019": [9, 17, 18, 35, 45], "2020": [9, 10, 14, 17, 18, 29, 36], "2021": [7, 10, 14, 36, 46], "2022": [13, 17, 36], "2023": [13, 17, 31, 36], "2024": 36, "2028058": 32, "20372777": 29, "204": 32, "207": 29, "208": 32, "20881199": 32, "21": [4, 40], "2101": 14, "21051": 32, "213": 32, "21476510e": 17, "2155": 23, "216": 29, "21688671": 32, "217": 32, "21757": 32, "21780536": 32, "22": 37, "2231": 7, "2240": 7, "23": [9, 13, 18, 42], "23060212": 32, "2356": 23, "239": 35, "23968406e": 7, "24": 17, "244": 32, "24448961": 42, "24551102": 32, "246": 32, "24606299e": 7, "24621125": 8, "24666667": 17, "24695077": 8, "24823344": 32, "25": [11, 18, 31, 40], "25159669e": 7, "25302505": 29, "25302660e": 7, "25333333": 17, "254": 32, "255": 32, "25609756": 32, "25666948": 8, "26": [17, 26], "262": 32, "26442901e": 7, "26611524": 17, "26666667e": 17, "26677146": 32, "27": [32, 36], "270": 32, "27083874e": 7, "274": 32, "27419835": 32, "27442791e": 7, "276": 32, "27646127": 32, "277": 32, "27919601": 8, "28": 32, "282": 32, "286": [3, 25], "28666866": 29, "28805337e": 7, "28841158": 17, "28th": 7, "29": [9, 35], "29468998": 32, "29476759": 29, "29583168e": 7, "2d": [19, 22, 30, 32], "3": [4, 7, 8, 9, 10, 17, 18, 19, 21, 24, 26, 28, 30, 31, 32, 35, 36, 37, 40], "30": [8, 18, 22, 23, 31, 32, 35], "300": [6, 8, 22, 28, 32], "30000": [23, 41], "30073636": 8, "306": 31, "31": [22, 31], "31570726e": 17, "31634668": 29, "318": 31, "31930140e": 7, "32": [10, 17, 25], "32272574": 29, "32666667": 17, "32964692": 29, "3299048": 32, "33": [17, 35], "33156061": 32, "33281894": 29, "33366128e": 7, "33595675e": 7, "33645889": 29, "33659": 32, "34": [17, 18, 22, 32, 36], "34083722": 32, "34687887e": 7, "34982908": 29, "35": 42, "35333333": 17, "35671953e": 7, "35905618": 32, "35954194e": 7, "35954558": 32, "36": 29, "36613719": 29, "36929508": 42, "37925246": 29, "37941185": 29, "38": 17, "38342948e": 7, "38359833": 29, "38897019": 32, "38965963": 32, "39192971": 42, "39410523e": 7, "3d": [19, 22, 30, 32], "4": [3, 4, 6, 7, 8, 9, 11, 16, 17, 18, 21, 23, 24, 29, 31, 32, 35, 36, 37, 40, 46], "40": 32, "40259039e": 7, "40887": 32, "4096": 42, "41023092e": 7, "41066892": 29, "41709413": 17, "41850936": 29, "41892": 32, "41918778": 29, "41943788": 8, "42492836e": 7, "42761": 32, "42765": 32, "42778": 32, "42857143e": 17, "43": [25, 32], "43290016": 29, "43474": 32, "43553": 32, "43925941e": 7, "44": [7, 42], "444": 42, "44590342e": 7, "45333333": 17, "4545415": 29, "45513015": 32, "47": 10, "470": [3, 25], "47311800e": 17, "47333333": 17, "47433305e": 7, "47560976": 32, "48441896e": 17, "48683192": 32, "48742855": 29, "48856368": 8, "4902": [23, 41], "49048": 32, "49142159": 32, "49453": 32, "4975822": 29, "49988": 32, "5": [4, 6, 7, 8, 9, 10, 11, 13, 14, 17, 18, 20, 23, 29, 31, 32, 36, 40], "50": [6, 7, 25, 29, 32, 37], "50000000e": 17, "50507001": 32, "50583639": 32, "50816474": 32, "50884094": 32, "51": 10, "510": 42, "51047206e": 17, "51158857": 32, "51301643": 29, "51333333": 17, "52170730e": 7, "5265": 41, "52666667": 17, "5286341": 42, "53269314e": 7, "5347352": 29, "53756324": 17, "53921955": 42, "54": [17, 32], "54666287e": 7, "54666667": 17, "55193242": 32, "5536877": 32, "55527": 32, "55538": 32, "55819192e": 7, "56": [3, 25], "56024904": 32, "56196": 32, "56287": 32, "56436416e": 7, "56698045": 32, "56701557e": 7, "56791544": 29, "5716536": 29, "58025": 32, "5807386": 29, "58982": 32, "59627": 32, "59657389e": 7, "59756098": 32, "59786396": 32, "59799892": 29, "6": [6, 7, 8, 17, 22, 24, 31, 32, 35], "60": [3, 25, 32], "600": [3, 25], "60000000e": 17, "60035454": 42, "60041068": 32, "60301954": 32, "60441308e": 7, "60658533": 32, "60786006": 32, "60983434e": 7, "61275": 32, "61924171e": 7, "62": [10, 14, 29], "62554784": 32, "6364614": 29, "64": [13, 17, 25, 36, 42, 45], "64041732": 32, "64184026e": 7, "64275557": 29, "64445581": 32, "64634146": 32, "65": [6, 28], "65083422": 32, "653": 36, "65346307": 8, "65634235": 17, "66": 17, "66077834": 29, "661704": 42, "66240546": 29, "66371456": 32, "66394": 32, "664": 36, "66537309": 29, "668": 25, "67113": 32, "6722228": 42, "67630249": 17, "6790517": 32, "68039739": 42, "68666667": 17, "688": 25, "7": [7, 8, 9, 13, 17, 32, 36, 37], "70000000e": 17, "70155561": 8, "70210329e": 7, "70502518e": 17, "71210092": 17, "71408958e": 7, "71443248e": 7, "71687181e": 7, "72118437e": 7, "72681005": 8, "72938203": 17, "73": 32, "73285": 32, "73293560e": 17, "73352049e": 7, "73408875": 32, "74405634": 29, "74926655": 29, "75": 40, "75114125": 32, "75219094": 8, "75595579": 8, "75622584": 32, "75645164": 32, "75967": 32, "76": [32, 42], "76357782e": 7, "77": 37, "77490053e": 7, "7757554": 29, "77697444e": 7, "78": 37, "78345146e": 7, "7870391": 29, "79102936": 32, "79202": 32, "79583152": 8, "7lcgyel0y2nhtkr2fi0o": [23, 41], "8": [7, 8, 13, 17, 20, 23, 36, 42, 46], "80": [6, 29, 36], "80000000e": 17, "80524683e": 7, "80533684": 17, "81": 32, "81245725": 32, "81260641": 17, "8152728": 29, "81597243": 8, "82": [3, 25], "82203705": 17, "82372": 32, "8250243865539288": 37, "82518334e": 7, "82717462e": 7, "82912261": 17, "83": 37, "83139294": 8, "83210644": 32, "83231": 32, "8380654": 17, "84": [29, 42], "84227457": 32, "85": 32, "8533333333333334": 35, "85367621": 32, "85497117": 32, "85575661": 17, "85832342e": 7, "85972633": 32, "86093158": 29, "86658733": 32, "8674": 9, "86957415": 32, "87686": 32, "87851584": 29, "88": 32, "89": 37, "89974643e": 17, "9": [6, 7, 8, 13, 17, 27, 28, 36], "90000000e": 17, "90476179": 29, "90873852e": 17, "90920635": 32, "91": 37, "9142979223080065": 37, "92": 28, "92207": 32, "93690730e": 7, "94": 37, "94631": 32, "9466666666666667": 35, "94724793": 17, "949": 18, "95": 37, "954": 42, "95506": 32, "96": 29, "96041": 32, "96086309": 32, "96522188": 29, "9666666666666667": 35, "9733333333333334": 35, "97539989e": 7, "97686": 32, "979": 18, "98": 28, "98047216": 17, "98268": 32, "98282": 32, "98368": 32, "98654485e": 7, "9866666666666667": [9, 35], "990342405618964": 36, "99043671": 32, "9920983318700615": 36, "99355168e": 7, "99489626": 32, "9991220368744512": 36, "99915956e": 7, "A": [2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 40, 41, 46], "And": 28, "As": [17, 22, 25, 27, 31, 32, 42], "At": [6, 28, 35], "But": 35, "By": [4, 9, 11, 13, 17, 18, 19, 20, 22, 24, 27, 28, 32, 35, 36, 40, 41, 42, 46], "For": [4, 6, 8, 9, 13, 17, 18, 22, 23, 25, 26, 27, 30, 31, 32, 35, 36, 37, 42, 44, 45], "If": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 23, 25, 27, 32, 36, 37, 40, 44, 46], "In": [1, 4, 7, 8, 9, 10, 13, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 37, 40, 41, 42, 46], "It": [22, 23, 29, 35, 36, 41, 43], "Not": [8, 9], "Of": [29, 42], "On": [28, 29, 31, 32, 35, 37, 41, 42], "One": [13, 22, 23, 25, 26, 29, 37], "Or": 32, "That": 27, "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46], "Then": [22, 42], "There": 44, "These": [23, 29, 31, 32, 36, 41], "To": [10, 18, 23, 25, 26, 27, 29, 30, 40, 44, 46], "_": [8, 37], "__": [2, 6, 8, 9, 10, 11, 13, 16, 17, 18], "__init__": 17, "_attr": 18, "_counterfactu": 10, "_elastic_": 31, "_euclidean": 32, "_metric": [8, 10, 13, 14, 16, 17], "_pairs_": 32, "_preprocess": 3, "_subsequence_metr": 8, "_summar": [9, 17, 18], "_test": 27, "_threshold_": 32, "_train": 27, "ab": [8, 9, 18], "abandon": 32, "abl": 37, "abnorm": 29, "about": [6, 8, 9, 10, 13, 14, 16, 17, 18, 19, 22, 32, 35], "abov": [6, 13, 17, 22, 26, 31, 35, 37], "absolut": [5, 14, 18, 26], "abstract": 3, "accept": [9, 13, 17, 19, 22, 25, 26, 27, 31, 32, 46], "access": [22, 44], "accompani": 23, "accomplish": [26, 32], "accord": [4, 8, 9, 13, 17, 18, 20, 27, 40], "accordingli": 41, "account": 42, "accur": [13, 17, 32, 34, 36], "accuraci": [8, 9, 13, 14, 18, 28, 29, 35, 36, 37, 46], "achiev": [22, 35, 42], "acm": [4, 31, 32, 40], "acquir": 22, "across": [8, 32], "activ": [42, 44], "actual": 32, "ad": [3, 6, 8, 9, 10, 16, 17, 18, 28, 46], "add": [6, 9, 10, 18, 20, 28, 46], "addit": [6, 8, 16, 17, 22, 25, 30, 32, 46], "addition": [27, 37], "adjust": [18, 31, 36, 41], "advanc": 25, "advis": [32, 35], "after": [37, 46], "aggreg": [10, 17, 35], "agnost": [1, 10, 16], "ahm": [9, 18, 35], "akin": 36, "al": [1, 4, 7, 8, 9, 16, 17, 18, 23, 29, 35, 36, 40, 42, 46], "alert": 46, "algorithm": [4, 6, 7, 8, 10, 12, 23, 24, 26, 28, 29, 31, 42, 46], "align": [7, 11, 14], "all": [1, 2, 3, 4, 6, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 31, 32, 35, 36, 37, 44, 45, 46], "alloc": 35, "allow": [4, 17, 18, 19, 22, 23, 27, 40, 41], "allow_3d": 19, "allow_eo": 19, "allow_nd": 19, "along": [5, 11, 13, 26], "alongsid": 29, "alpha": [6, 9, 13, 18, 20, 46], "alphanumer": 27, "alreadi": [3, 25, 37, 44], "also": [3, 14, 18, 22, 23, 25, 29, 30, 31, 32, 35, 36, 37, 40, 41, 44, 46], "alter": 29, "altern": [27, 29, 45], "although": 29, "alwai": [9, 10, 13, 15, 18, 31], "amerc": 31, "among": [4, 18, 32, 36], "amount": [8, 23], "amplitud": [11, 20], "amplitudeimport": 11, "an": [2, 4, 6, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 37, 40, 41, 43, 46], "anaconda": 44, "analog": 36, "analysi": [23, 31, 35, 41, 42], "analyt": 23, "analyz": 41, "angu": 17, "angular": [31, 32], "ani": [3, 4, 8, 18, 27, 28, 29, 30, 31], "annot": [0, 8, 11, 16, 18, 41, 46], "anomal": 15, "anomali": [4, 15, 23, 29, 40, 41], "anomalies_train_s": [9, 15], "anoth": [8, 27, 29, 31, 32, 40], "anthoni": [9, 35], "antoin": [13, 17], "anytim": 23, "api": [6, 8, 9, 16, 17, 22, 24, 43, 46], "appear": [9, 29], "appli": [3, 4, 6, 8, 17, 18, 25, 37, 42], "applic": [23, 26, 29, 42], "approach": [10, 13, 17, 22, 23, 25, 28, 29, 36, 40, 44], "appropri": [10, 30], "approxim": [4, 8, 17, 32], "apt": [44, 45], "ar": [2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 34, 35, 36, 37, 40, 41, 42, 44, 46], "arang": 26, "arbitrarili": [9, 13, 18], "arc": [1, 16], "arc_curv": 1, "architectur": 45, "archiv": [3, 42], "area": 41, "argmax": 26, "argmin": [23, 32], "argmin_dist": [8, 32], "argmin_subsequence_dist": 8, "argpartit": 32, "argument": [2, 3, 8, 9, 10, 11, 13, 17, 18, 22, 27, 31, 32, 45, 46], "arithmet": 29, "armi": 18, "around": [1, 8, 14, 16], "arr": 30, "arrai": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 35, 37, 41, 42], "arrow": 18, "arrow_arg": 18, "arrowstyl": 18, "articularywordrecognit": 3, "artifici": [13, 17, 36], "arxiv": [13, 14, 17, 36], "asarrai": 30, "ascend": 41, "ascertain": 36, "asset": 25, "assign": [4, 8, 10, 22, 29, 35, 37, 40, 41, 42], "associ": [9, 13, 18], "assum": [17, 20, 24, 26, 27, 29, 30], "athitso": 31, "atol": 14, "attempt": 19, "attr": 37, "attribut": [3, 8, 9, 10, 11, 13, 16, 17, 18, 22, 25, 27, 35, 37, 42], "august": 32, "author": 10, "auto": [1, 6, 8, 9, 10, 13, 17, 18, 29], "automat": [8, 17, 18, 44], "auxiliari": 45, "avail": [4, 9, 27, 32, 35, 36, 37], "avareg": 14, "averag": [7, 9, 14, 29, 42], "avoid": [32, 44], "ax": [2, 10, 11, 18, 20, 23, 26], "axi": [11, 18, 19, 26, 32], "b": [14, 29, 32, 35], "backward": [6, 28, 46], "bad": 22, "bag": 9, "baggingclassifi": 9, "baggingregressor": 9, "bagnal": [9, 35], "bake": [3, 22], "balanc": [9, 13, 18], "balanced_accuracy_scor": 9, "bar": 3, "bart": [9, 18, 35], "barycent": [7, 8], "base": [0, 3, 4, 6, 7, 9, 10, 13, 14, 16, 17, 18, 23, 27, 28, 31, 35, 44, 45, 46], "base_estim": 9, "baseattributetransform": 17, "basebag": 9, "basecounterfactu": 10, "baseestim": [2, 17], "baselin": [35, 46], "basicmot": 3, "bat": 45, "batch": 10, "batch_siz": 10, "batista": 32, "bbox_arg": 18, "becaus": [9, 13, 18, 23], "beef": [3, 25, 27], "been": [6, 9, 17, 20, 27, 31], "befor": [4, 8, 13, 46], "behavior": [6, 23, 29, 41, 46], "behaviour": [8, 46], "being": [8, 10, 36, 41], "belong": [8, 22, 29, 41], "below": [6, 8, 13, 17, 27, 37, 46], "ben": 17, "benchmark": [4, 25, 29], "benjamin": [9, 18, 35], "benjamini": 6, "best": [6, 8, 9, 10, 13, 17, 18, 28, 32, 46], "better": [14, 23, 46], "between": [1, 5, 6, 7, 8, 9, 10, 14, 17, 18, 22, 23, 26, 28, 29, 31, 32, 37, 40, 41, 46], "beyond": 23, "bia": [9, 13, 17], "bias_prob": [9, 13, 17, 18], "bin": [11, 17, 20, 40, 44], "binari": [3, 4, 9, 29, 40, 44], "bit": [25, 45], "bonferroni": 6, "bool": [1, 2, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21], "boolean": [6, 7, 16, 21, 41], "bootstrap": 9, "bostr\u00f6m": 18, "both": [4, 7, 8, 9, 13, 17, 19, 24, 26, 27, 31, 32, 36, 37, 40, 41, 42], "bound": [7, 9, 13, 15, 17, 18, 32, 36], "boundari": [16, 41], "boundri": 1, "box": 18, "boxplot": 11, "branch": [18, 35, 37], "break": [22, 41], "brew": 44, "broacast": 8, "broadcast": [8, 10, 32], "broadcast_to": 8, "brows": 25, "brute": 23, "build": [9, 18, 22, 32, 37, 44], "buildtool": 45, "built": [37, 44], "bundl": [3, 25, 27, 40], "bundle_url": 27, "bypass": 18, "c": [1, 8, 9, 19, 22, 23, 31, 35, 36, 45], "cach": [3, 25], "cache_dir": [3, 27], "calcul": [6, 8, 13, 14, 29, 31, 32, 36], "call": [3, 8, 9, 13, 18, 27, 32, 35], "callabl": [3, 5, 6, 8, 10, 11, 13, 14, 16, 17, 18, 37], "campana": 32, "can": [3, 4, 6, 9, 13, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46], "candid": [10, 14, 23], "cannot": 19, "canon": [17, 35], "captur": [14, 22], "cardiac": 29, "carl": 17, "carri": 18, "case": [9, 10, 18, 31, 32], "castorclassifi": [13, 36], "castortransform": 17, "catch22": [17, 35, 37], "categori": [22, 31], "ceavet": 44, "ceil": [1, 8, 18], "cell": [28, 29, 31, 35, 37, 41, 42], "center": 8, "centroid": [8, 29], "certain": [29, 32], "cf": 10, "cf_pred": 29, "chain": 25, "cham": [10, 36], "chang": [1, 3, 7, 9, 10, 14, 16, 18, 24, 25, 27, 29, 32, 35, 36, 41], "charact": 27, "character": 36, "characterist": [17, 35, 41], "charlott": [9, 18, 35], "cheaper": 13, "chebyshev": [31, 32], "check": [2, 6, 8, 9, 10, 11, 13, 16, 17, 18, 19, 26, 30, 37, 43], "check_arrai": 19, "check_input": 18, "check_x_i": 19, "chen": 31, "child": 18, "children": 18, "choos": [6, 28, 37], "chosen": 37, "christel": [13, 17], "chronolog": 22, "ci": 32, "clasess_": 10, "class": [0, 4, 22, 27, 29, 35, 37, 40, 41, 43, 46], "class_label": [13, 18], "class_weight": [9, 13, 18, 37], "classes_": [8, 9, 10, 18, 29, 37], "classif": [4, 7, 8, 9, 10, 13, 14, 15, 17, 18, 22, 23, 29, 35, 36, 37, 40], "classifi": [4, 8, 9, 10, 11, 13, 17, 18, 22, 28, 29, 35, 36, 37, 42], "classnameprefixfeaturesoutmixin": 17, "clear": 3, "clear_cach": 3, "clf": [6, 9, 10, 18, 22, 28, 31, 35, 36, 37], "clf_": 22, "clone": [22, 45], "close": [2, 10, 19, 29, 36], "closensess": [2, 10], "closer": [8, 14], "closest": [4, 8, 10, 14, 16, 23, 32, 41, 46], "cluster": [4, 8, 23, 29, 40, 41], "cluster_centers_": 8, "cluter": 4, "cmap": 20, "cmd": 45, "code": [9, 18, 26, 29, 32, 37, 46], "coeffici": [9, 13, 14, 18], "coffe": [3, 25, 27], "collect": [3, 10, 17, 22, 27, 34, 36, 40, 44], "color": 20, "colorbar": 11, "colormap": 20, "column": [9, 19, 23, 27, 30, 36, 37], "com": [23, 41, 45], "combin": [9, 17, 18, 42], "command": 45, "comment": 31, "common": [25, 26, 30, 31, 32, 44], "commun": 22, "compact": 14, "compactness_scor": 14, "companion": 23, "compar": 35, "comparis": 25, "comparison": [3, 25], "compat": [15, 17, 46], "compens": 42, "compet": [13, 17, 36], "competit": 36, "compil": [44, 45], "complex": [32, 35, 41], "compon": [2, 6, 8, 9, 10, 11, 13, 16, 17, 18, 27, 32, 42], "components_": 11, "compos": 27, "compris": [29, 36], "comput": [1, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 23, 28, 29, 31, 32, 37, 41, 46], "computation": [18, 23], "concept": 43, "concern": 22, "concurr": 32, "condit": [17, 29], "confer": [1, 7, 8, 10, 16, 23, 29, 31, 32, 36], "configur": [6, 8, 16, 17, 22, 29, 31, 32, 35, 36, 45], "conflict": 44, "conform": 25, "confus": [4, 40], "confusion_estim": 4, "conjunct": [3, 29], "consecut": 8, "consequ": [32, 36], "consid": [4, 6, 8, 9, 14, 15, 18, 22, 35, 46], "consider": 41, "consist": [8, 9, 10, 13, 17, 18, 32, 35, 36, 42], "consol": 45, "constant": [9, 13, 18], "constraint": [4, 31], "construct": [4, 10, 14, 17, 18, 19, 29, 35, 36, 37, 40, 42, 46], "contain": [2, 3, 4, 6, 8, 9, 10, 11, 13, 16, 17, 18, 19, 21, 24, 27, 28, 29, 31, 32, 37, 42, 43, 46], "contamin": [9, 15], "context": [23, 24], "contigu": [3, 19, 22, 23, 37], "continu": [22, 37], "contrari": 15, "contrast": [26, 29, 42], "contribut": 7, "control": [6, 7, 9, 10, 11, 13, 17, 45, 46], "conveni": [8, 14, 22], "convent": [8, 9, 19, 22, 25, 35, 36], "converg": 8, "convers": [19, 36, 37], "convert": [19, 25, 36, 40], "convolut": [9, 13, 17, 18], "convolv": [13, 17], "copi": [19, 32], "core": [8, 9, 13, 17, 32, 35], "correct": [6, 10, 14, 16, 34], "correctli": [8, 9, 13, 18], "correspond": [8, 9, 13, 14, 18, 23, 29, 32, 35, 37, 41, 42], "correspondingli": 37, "cosin": [10, 31, 32], "cost": [7, 10, 16, 31, 32, 46], "could": [26, 29], "couldn": 46, "count": [13, 17, 36, 37, 41, 42], "counterfact": [2, 10], "counterfactu": [0, 2, 14, 22, 46], "counterfactualmixin": 2, "counterfacut": 14, "counterpart": 32, "cpu": 32, "creat": [3, 4, 9, 18, 24, 27, 29, 32, 44, 45], "create_cache_dir": 3, "criteria": 37, "criterion": [9, 18, 37], "critic": 29, "cross": [6, 9, 13, 15, 28, 35], "crucial": [23, 32], "crude": 26, "csr": 9, "csr_arrai": 16, "cumul": 7, "current": [9, 10, 18, 25, 26, 27, 45, 46], "curv": [1, 16], "custom": [9, 17, 18, 35], "cv": [6, 13], "cython": [17, 32], "d": [10, 13, 14, 17, 25, 31, 32, 35, 36, 37], "da": [4, 31, 40], "daili": 23, "dark2": 20, "data": [1, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 25, 26, 27, 29, 31, 32, 35, 36, 40, 41, 42], "datafram": [6, 8, 16, 17], "dataset": [0, 6, 7, 8, 9, 10, 11, 13, 15, 17, 18, 19, 20, 23, 24, 26, 27, 28, 29, 32, 35, 36, 37, 40, 42, 46], "dataset_nam": 27, "dba": 7, "dbscan": 4, "ddtw": [9, 31, 32, 35], "ddtw_distanc": 7, "deal": 26, "debian": [44, 45], "decai": 7, "decis": [9, 10, 18, 29, 35, 46], "decision_funct": [9, 14], "decision_path": [18, 37], "declar": [8, 27], "decomposit": 13, "decreas": [9, 18], "deep": [2, 6, 8, 9, 10, 11, 13, 16, 17, 18], "def": [17, 29, 32], "default": [2, 3, 4, 6, 8, 9, 10, 11, 13, 16, 17, 18, 19, 20, 22, 25, 26, 27, 31, 32, 35, 36, 40, 42, 46], "defin": [6, 9, 13, 17, 18, 27, 29, 36, 37], "degrad": 37, "degre": 10, "delanei": [10, 14, 46], "deleg": [17, 19, 46], "delet": 3, "delin": [29, 36], "demand": [25, 27], "dempsar": 42, "dempster": [13, 17, 36], "dempster_hydra": 17, "deng": 35, "denot": [4, 15, 26, 31, 32, 37], "dens": 13, "densiti": 4, "densitii": 4, "density_outli": 4, "depend": [3, 4, 6, 8, 13, 17, 18, 22, 24, 32, 37, 42, 44, 45], "deprec": [9, 10, 17, 18, 35, 46], "depth": [9, 18, 37, 45], "deriv": [7, 14, 31], "derivativetransform": 17, "descret": 17, "describ": [4, 7, 9, 10, 16, 17, 23, 25, 27, 29, 32, 35, 36, 42, 43], "descript": [3, 4, 27, 40, 43], "design": [22, 23, 36], "desir": [2, 4, 10, 14, 17, 29, 32, 40], "desired_label": 29, "despit": 22, "detail": [1, 3, 4, 8, 9, 17, 18, 32, 43], "detect": [4, 9, 23, 32, 41], "determin": [8, 9, 10, 13, 14, 15, 17, 18, 27, 35, 36, 37, 40, 46], "dev": 45, "develop": [10, 17, 45, 46], "deviat": [5, 7, 9, 13, 17, 23, 36, 40, 42], "di": 23, "diagnost": 8, "diagon": 7, "dialat": [17, 36], "dict": [2, 3, 6, 8, 9, 10, 11, 13, 14, 16, 17, 18, 25, 27, 31, 35], "dictat": 42, "dictionari": [3, 9, 10, 13, 17, 18, 27, 31, 36], "didn": 46, "dietterich": [4, 40], "differ": [8, 10, 13, 14, 15, 17, 18, 22, 23, 27, 29, 30, 31, 32, 41, 42, 46], "difficult": [4, 40], "difficulti": [4, 40], "difficulty_estim": 4, "difftransform": 17, "digit": 4, "dilat": [8, 13, 17, 42], "dilatedshapeletclassifi": [13, 36], "dilatedshapelettransform": 17, "dim": [8, 18, 26, 32, 37], "dimens": [5, 6, 7, 8, 13, 14, 17, 18, 19, 22, 24, 25, 26, 30, 32, 36, 46], "dimension": 9, "dimension_select": [0, 28, 46], "direct": 6, "directli": [27, 42], "directori": [3, 27, 44], "disabl": [13, 19, 22, 36, 46], "discord": [1, 8, 23], "discov": 23, "discoveri": [6, 9, 13, 17, 18, 32, 35, 36], "discret": [11, 13, 17, 20, 40], "discriminatori": 36, "discuss": 32, "disk": [22, 27], "dispers": [4, 40], "displai": 37, "disregard": [9, 13, 18], "dissimilar": 8, "dissimilarity_param": 8, "dist": [8, 18, 32, 37], "distanc": [0, 1, 4, 6, 9, 10, 11, 13, 14, 16, 17, 18, 23, 28, 29, 31, 35, 36, 37, 41, 46], "distance_profil": 8, "distancevariancethreshold": [6, 28, 46], "distancevariancethresholdifitteddistancevariancethreshold": 28, "distinct": [31, 41], "distinguish": [29, 31], "distribut": [4, 9, 13, 17, 18, 25, 32, 44, 45], "distutils_use_sdk": 45, "divers": 14, "divid": 41, "do": [9, 18, 31, 32, 45, 46], "document": [22, 28, 29, 31, 35, 37, 41, 42, 44, 46], "doe": [3, 4, 15, 17, 22, 31, 32], "domain": [1, 16, 20, 41], "don": [18, 44], "done": 23, "doubl": 36, "down": 41, "download": [3, 23, 25, 27, 29, 37, 41, 42, 45], "download_url": 3, "downstream": 17, "draw": [6, 9, 13, 17], "drawback": 25, "drawn": [9, 37], "drive": [23, 41], "dst": 36, "dtw": [0, 8, 9, 10, 17, 18, 29, 31, 32], "dtw_align": 7, "dtw_averag": 7, "dtw_distanc": 7, "dtw_envelop": 7, "dtw_lb_keogh": 7, "dtw_map": 7, "dtype": [3, 8, 10, 19, 24, 25, 35], "dump": 22, "dure": [8, 10], "dv": 6, "dynam": [7, 9, 18, 29, 31, 32], "e": [4, 7, 8, 9, 10, 14, 18, 19, 22, 23, 24, 25, 26, 27, 31, 32, 35, 36, 37, 40, 44, 45, 46], "each": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 41, 42], "earli": 32, "earlier": 22, "eas": 45, "easi": [4, 25], "easier": 41, "ecg": 29, "ecg200": [8, 29], "edit": [31, 45], "edit_penalti": 31, "edr": [31, 32], "effect": [4, 9, 17, 18, 19, 31, 35, 36, 41, 46], "effici": [18, 23, 32, 41, 43, 46], "eigen": 13, "eigendecomposit": 13, "eigenvalu": 13, "either": [4, 7, 15, 17, 18, 22, 25, 27, 29, 32, 35, 37, 40], "elast": [9, 32], "elasticensembleclassifi": [9, 35], "elasticensembleclassifierifittedelasticensembleclassifi": 35, "eleasticensembl": 31, "electrocardiogram": 29, "element": [3, 8, 9, 13, 17, 18, 21, 23, 32], "elimin": 36, "elloumi": [13, 17, 36], "els": 37, "emb": 17, "embed": 17, "embedding_": 17, "embrac": 30, "emmott": 4, "emmott_label": 40, "emmott_outli": [4, 40], "emploi": [29, 32, 36, 42], "empti": [19, 36], "empty_lik": 29, "enabl": [23, 32, 36, 42, 46], "enable_metadata_rout": 9, "encapsul": [2, 6, 8, 9, 10, 11, 13, 16, 17, 18], "encompass": 32, "end": [11, 18, 19, 24, 26, 30, 41], "endpoint": 27, "enforc": 19, "engin": 31, "enhanc": [36, 46], "ensembl": [0, 22, 29, 37, 40], "ensur": [3, 10, 15, 19, 27, 29, 42], "ensure_2d": 19, "ensure_min_dim": 19, "ensure_min_sampl": 19, "ensure_min_timestep": 19, "ensure_ts_arrai": 19, "entir": 37, "entiti": 41, "entri": 25, "entropi": [9, 18], "enumer": [26, 44], "envelop": 7, "environ": [28, 29, 31, 35, 37, 41, 42, 44, 45], "eo": [19, 21, 24, 26, 30], "ep": [4, 8], "epoch": 7, "epsilon": [10, 31], "equal": [8, 9, 17, 18, 24, 25, 31, 40, 46], "equal_nan": 41, "equi": 11, "equip": 32, "equival": [7, 32, 35], "equvival": 18, "er": 3, "erp": [17, 31, 32], "error": [4, 6, 9, 19, 23, 46], "essenti": [22, 29, 45], "estim": [2, 4, 6, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 22, 25, 28, 29, 30, 31, 32, 34, 40], "estimator_": 10, "estimators_samples_": 9, "et": [1, 4, 7, 8, 9, 16, 17, 18, 23, 29, 35, 36, 40, 42, 46], "etc": 23, "euclidean": [4, 6, 8, 9, 10, 11, 13, 14, 16, 17, 18, 23, 29, 31, 32, 35, 36], "evalu": [6, 9, 10, 14, 18, 22, 25, 32, 42], "even": [22, 23], "event": 23, "everi": [8, 18, 19, 32, 46], "evid": 32, "exact": [1, 7, 8, 9, 11, 13, 16, 17, 18, 32], "exactli": [8, 10, 25, 30], "examin": 32, "exampl": [1, 3, 4, 6, 7, 8, 9, 10, 13, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 29, 31, 32, 36, 37, 42, 43], "example1": 27, "exce": [10, 37], "excel": 35, "except": [9, 13, 18, 27, 40], "exception": [17, 36], "exclud": [1, 8, 16, 17], "exclus": [1, 8, 16, 17, 29], "execut": 10, "exemplifi": [23, 27], "exhibit": 42, "exist": [3, 15, 22, 25, 31, 46], "exp": [7, 9, 18], "expand": [9, 18, 36], "expect": [9, 13, 17, 18, 22, 26, 29, 40], "experi": 25, "experiment": 22, "expertis": 41, "explain": [0, 2, 14, 22, 29, 42, 46], "explainer_": 10, "explainermixin": 2, "explan": [2, 10, 11, 14], "explanatori": 25, "exponenti": 42, "export": [23, 41], "expos": 41, "express": [1, 4, 8, 9, 14, 16, 17, 18, 25, 27], "ext": 3, "extens": [3, 27, 42], "extra": [2, 3, 10, 11, 18, 27, 32], "extract": [18, 35], "extraordinari": 23, "extrashapelettreeclassifi": [18, 37], "extrashapelettreeregressor": [18, 37], "extrashapelettreesclassifi": 9, "extrashapelettreesregressor": 9, "extrem": [9, 23, 32], "extrins": 22, "f": [3, 4, 9, 10, 13, 17, 18, 19, 22, 26, 31, 36, 37, 40], "f_classif": 6, "facil": 4, "facilit": 29, "factual": 14, "fail": [4, 10], "failur": 19, "fall": [9, 22, 31], "fallback": 27, "fals": [1, 3, 6, 7, 8, 9, 10, 11, 13, 14, 17, 18, 19, 20, 22, 24, 25, 27, 28, 35, 36, 37], "famili": 6, "familiar": 43, "far": 32, "farther": 4, "fashion": 37, "fast": [8, 13, 16, 17, 31, 36], "faster": 32, "fastest": 44, "fdr": 6, "featur": [9, 13, 17, 18, 23, 25, 26, 28, 35, 36, 37, 42, 45, 46], "featuretransform": 17, "fern": [4, 40], "fetch": [9, 45], "few": [4, 14, 28, 44], "fewer": [4, 14], "field": 36, "fig": [23, 26], "figsiz": 23, "figur": 26, "file": [3, 27, 45], "filenam": 3, "fill_valu": 17, "filter": [3, 9, 13, 17, 22, 28, 36], "final": [4, 8, 9], "find": [1, 8, 23, 25, 32, 45, 46], "find_counterfactu": 29, "finit": 19, "first": [7, 8, 9, 13, 17, 18, 19, 23, 27, 29, 30, 32, 35, 37, 40, 41, 42, 45, 46], "fit": [2, 4, 6, 8, 9, 10, 11, 13, 14, 16, 17, 18, 22, 25, 28, 29, 35, 36, 37, 41, 42], "fit_explain": [2, 10, 11], "fit_intercept": 13, "fit_param": [6, 8, 9, 16, 17], "fit_predict": [8, 9], "fit_transform": [6, 8, 16, 17], "fittedproximitytreeclassifi": 31, "five": 29, "fix": [9, 17, 18, 35, 42, 46], "flag": 13, "flatten": 8, "flip": 29, "float": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 31, 35, 46], "float32": [10, 35], "floodmodeling1": 22, "floor": 17, "fluss": 16, "flusssegment": [16, 41], "flusssegmenterifittedflusssegment": 41, "focu": [22, 40], "fold": 15, "folder": 44, "follow": [9, 13, 17, 18, 22, 25, 26, 27, 31, 32, 35, 37, 45], "font": 18, "fontsiz": 18, "footprint": 9, "forc": [3, 13, 19, 23, 25], "force_all_finit": 19, "forecast": [22, 23, 41], "forest": [4, 9, 10, 18, 22], "form": [2, 6, 8, 9, 10, 11, 13, 16, 17, 18, 22, 28], "format": [3, 6, 8, 16, 17, 27, 36, 37], "former": [8, 29], "formul": 35, "forthcom": 36, "fortran": 19, "forward": [6, 28], "found": 8, "four": [37, 40, 46], "fpr": 6, "frac": [9, 13, 18], "fraction": [1, 4, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 40, 46], "framework": 22, "fran\u00e7oi": [9, 17, 18, 35], "freqenc": 20, "frequenc": [9, 18, 20, 42], "frequencyimport": 11, "frequent": 23, "from": [1, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 35, 36, 37, 40, 41, 42, 44], "fulcher": [17, 35], "full": [8, 14, 17, 22, 25, 32, 35, 41], "func": 27, "function": [0, 6, 9, 22, 23, 25, 26, 27, 28, 29, 31, 32, 35, 37, 41, 42, 46], "further": 41, "furthermor": [36, 42], "futur": [17, 25, 46], "fwe": 6, "fwer": 6, "g": [4, 7, 8, 10, 13, 17, 22, 25, 26, 31, 32, 35, 36, 37, 40, 44, 45], "gain": 32, "gap": [9, 18, 31, 46], "gcv_mode": 13, "gener": [3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 22, 23, 25, 29, 31, 32, 36, 40, 42], "geoffrei": [9, 17, 18, 31, 35], "get": [2, 3, 5, 6, 8, 9, 10, 11, 13, 16, 17, 18, 22, 26, 35, 41, 43], "get_bundl": 3, "get_collect": 3, "get_dimens": [6, 28], "get_feature_names_out": 17, "get_filenam": 3, "get_metadata_rout": [2, 6, 8, 9, 10, 11, 13, 16, 17, 18], "get_n_split": 15, "get_param": [2, 6, 8, 9, 10, 11, 13, 16, 17, 18], "get_repositori": 3, "get_variable_length": 21, "gharghabi": [1, 16], "gil": 17, "gini": [9, 18], "gioni": [10, 14, 29], "git": 45, "github": [28, 29, 31, 32, 35, 37, 41, 42, 45], "give": [9, 11, 13, 17, 18, 35], "given": [1, 4, 7, 8, 9, 11, 13, 17, 18, 30, 32, 34, 35, 37], "global": [3, 10, 14, 17, 27, 29, 37], "gnu": [27, 44, 45], "goal": [22, 29, 34, 41], "goe": 37, "goethal": [9, 18, 35], "good": [8, 10, 14, 40], "googl": [23, 41], "grabocka": [13, 17, 36], "gradcam": 10, "greater": [25, 28, 37], "greatest": 18, "greedili": [6, 28, 46], "green": [10, 14], "grid": [9, 13, 17, 18, 35], "group": [13, 15, 17, 36, 42], "grow": 10, "gt": [31, 37], "guarante": [4, 22], "guid": [1, 2, 3, 4, 6, 8, 9, 10, 11, 13, 14, 16, 17, 18, 36, 43, 46], "guillaum": [13, 17, 36], "gunpoint": [3, 17, 18, 25, 26, 27], "h": [17, 18, 35], "ha": [4, 8, 9, 14, 17, 18, 19, 20, 23, 24, 27, 28, 29, 31, 32, 35, 36, 37, 42, 46], "had": 42, "half": [6, 13, 32], "halv": 32, "handl": [3, 25, 41], "hard": 27, "hardest": [4, 40], "harsh": [8, 9, 13, 18], "hash": [23, 27], "have": [2, 5, 6, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 22, 23, 24, 25, 26, 28, 29, 30, 31, 36, 37, 41, 44, 46], "haystack": 8, "heart": 29, "heartbeat": 29, "help": [17, 23, 29, 41], "here": [27, 29, 32, 35, 36, 42, 44], "herrmann": 31, "high": 9, "higher": 8, "highest": [6, 9, 42, 46], "highli": 35, "highlight": [29, 41], "hirschberg": 31, "hochberg": 6, "hold": [22, 31], "homebrew": 44, "homogen": 41, "hope": 25, "how": [2, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 22, 29, 36, 46], "howev": [24, 25, 27, 32, 36, 41], "html": [28, 29, 31, 35, 37, 41, 42], "http": [23, 27, 41, 45], "human": 3, "hydra": [13, 17], "hydraclassifi": [13, 17], "hydratransform": [17, 42], "hydratransformhydratransform": 42, "hyper": 46, "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 40, 41, 42, 44, 45, 46], "icdm": [1, 8, 10, 23, 29], "id": [23, 37, 41], "identifi": [1, 9, 13, 17, 18, 19, 22, 23, 24, 27, 29, 32, 41, 42], "idx": 32, "ieee": [1, 8, 10, 23, 29, 31], "ieee754": 24, "ignor": [1, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 24], "ignore_i": 17, "imag": 32, "immers": 8, "impact": 14, "implement": [7, 8, 9, 10, 11, 14, 17, 22, 23, 26, 27, 28, 29, 31, 32, 35, 36, 37, 40, 42], "implic": 8, "implicit": 17, "import": [3, 6, 7, 8, 9, 10, 11, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 37, 40, 41, 42, 46], "importance_": [10, 22], "importances_": 11, "improv": [23, 25, 32, 46], "impur": [9, 18, 37, 46], "impurity_equality_toler": [9, 18, 37, 46], "incic": 14, "includ": [1, 4, 8, 10, 12, 19, 22, 23, 35, 36, 42], "inclus": 31, "incorpor": [29, 36], "increas": [6, 9, 18, 32, 36, 37, 46], "increment": 36, "independ": 18, "independeth": 9, "index": [1, 6, 7, 8, 9, 11, 16, 17, 18, 23, 24, 30, 32, 36, 37, 41], "indic": [3, 6, 7, 8, 9, 10, 13, 14, 18, 21, 23, 29, 30, 36, 37, 41], "indici": [1, 8, 15], "individu": [14, 26, 41], "indptr": 37, "induc": 42, "inequ": [31, 37], "inf": [4, 19], "infer": 10, "infinit": 19, "influenc": [7, 9, 13, 18], "influenti": 36, "inform": [2, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 22, 23, 29, 35, 36], "init": [7, 8], "initi": [7, 8, 18, 27, 29, 37, 42], "inlier": [4, 9, 15, 40], "input": [2, 4, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 29, 30, 32, 36, 42], "input_nam": 19, "insert": [6, 15, 36], "insight": 23, "inspect": [18, 42], "inspir": 28, "instal": [3, 25, 40, 43, 45], "install_repositori": [3, 27], "instanc": [2, 4, 6, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 27, 29, 31, 36, 42], "instanti": 31, "instead": [6, 7, 8, 9, 13, 15, 18, 22, 28, 32, 46], "int": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 25, 32, 40], "int64": [8, 32, 41], "integ": [6, 8, 9, 13, 17, 32, 40], "integr": [12, 27], "intellig": [13, 17, 31, 36], "intend": 13, "intens": 18, "interact": 29, "intercept": 13, "interdimension": 32, "interest": 32, "interfac": [22, 27], "intern": [1, 7, 8, 9, 10, 16, 18, 23, 29, 31, 32, 36], "interoper": 22, "interpret": [10, 14, 17, 37], "interv": [4, 9, 10, 11, 14, 17, 18, 22, 23, 36, 40, 46], "intervalforestclassifi": [9, 35], "intervalforestclassifierifittedintervalforestclassifi": 35, "intervalforestregressor": 9, "intervalimport": [10, 11, 22], "intervaltransform": [4, 17, 40], "intervaltreeclassifi": [18, 37], "intervaltreeclassifierifittedintervaltreeclassifi": 37, "intervaltreeregressor": 18, "introduc": [6, 8, 9, 16, 17, 18, 23, 35, 46], "introduct": 43, "intuit": 31, "invers": [9, 18, 29], "inverse_transform": 6, "involv": [22, 23, 32], "irrespect": 22, "irrevers": [10, 29], "is_counterfactu": 2, "is_end_of_seri": [21, 24, 26, 30], "is_explain": 2, "is_variable_length": 21, "isak": 10, "isaksamsten": 45, "iseo": 26, "isnan": [24, 30], "isol": [9, 45], "isolationshapeletforest": 9, "issu": [44, 46], "iter": [6, 8, 10, 13, 15, 25, 28, 36], "its": [5, 8, 9, 17, 18, 19, 20, 23, 25, 31, 37, 41, 44], "itself": [6, 23, 31], "j": [10, 14, 29, 32, 36, 37], "jacm": 31, "jag": 32, "jason": [9, 35], "jeong": 7, "jeong_weight": 7, "jitter": 20, "job": [6, 8, 9, 10, 13, 16, 17], "join": [1, 8, 17, 18, 23], "jone": [17, 35], "josif": [13, 17], "journal": 31, "json": 3, "jsonrepositori": [3, 27], "june": [23, 36], "jupyt": [28, 29, 31, 35, 37, 41, 42], "just": [9, 24, 45], "k": [4, 6, 8, 9, 10, 11, 18, 29, 32, 35, 40, 46], "karlsson": [10, 14, 18, 29], "kb": 25, "kean": [10, 14], "keep": [3, 9, 13, 18, 46], "keep_last_vers": 3, "kei": [3, 8, 9, 10, 13, 14, 16, 17, 18, 27, 31], "keogh": [7, 32], "kept": 19, "kernel": [4, 6, 9, 13, 17, 18, 36, 40, 42], "kernel_s": [9, 13, 17, 18], "kernel_scal": 11, "kind": [8, 23, 46], "kmean": 8, "kmeans_outli": 4, "kmedoid": 8, "knaut": [17, 35], "kneighborclassifi": 8, "kneighborsclassifi": [6, 8, 9, 10, 28, 29], "kneighborsclassifierifittedkneighborsclassifi": 29, "kneighborsclassifierkneighborsclassifi": 28, "kneighborscounterfactu": [10, 29], "knife": 18, "know": 18, "knowledg": [9, 10, 13, 14, 17, 18, 29, 31, 32, 35, 36], "known": [8, 10], "kwarg": [2, 3, 8, 9, 10, 11], "l": [31, 36], "label": [2, 3, 4, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 27, 29, 34, 41, 42], "labels_": [8, 16], "labl": 4, "lachlan": [9, 18, 35], "lambda": 31, "laptop": 32, "lar": [13, 17], "larg": [7, 18, 23, 25, 31, 35, 36, 41, 42], "large_multiclass": 25, "large_multivari": 25, "larger": [6, 9, 14, 18, 20, 22, 30, 31], "largest": [6, 8], "last": [3, 22, 26, 27, 32], "latest": [3, 44, 45], "latter": [2, 6, 8, 9, 10, 11, 13, 16, 17, 18, 29, 32], "layout": 19, "lb_keogh": 7, "lcss": [31, 32], "le": 32, "lead": [9, 29, 36], "leaf": [9, 18, 37], "leaf_id": 37, "learn": [6, 7, 12, 17, 19, 28, 30, 42, 43, 46], "learning_r": 7, "least": [11, 19], "leav": [9, 13, 18, 35], "led": 29, "lee": 36, "left": 37, "leftmost": 37, "legend": 20, "len": [4, 8, 11, 17], "lenght": 21, "length": [8, 9, 13, 16, 17, 18, 19, 21, 26, 30, 31, 36], "less": [8, 9, 18, 22, 25, 26, 32, 37], "letter": 27, "level": [1, 8, 10, 16, 36, 37, 46], "lib": 8, "librari": 12, "librarycach": 27, "like": [1, 2, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 30], "likelihood": 36, "limit": 36, "limits_": 32, "line": [9, 18, 20, 35, 45], "linear": [13, 36], "linear_model": [0, 22, 28, 36, 46], "linewidth": 20, "linux": [27, 44, 45], "list": [1, 3, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 25, 27, 32, 35, 37, 40], "list_bundl": [3, 27], "list_collect": 3, "list_dataset": [3, 27], "list_repositori": [3, 27], "load": [3, 23, 27, 28, 29, 31, 35, 37, 41, 42], "load_articulary_word_recognit": 3, "load_basic_mot": [3, 6], "load_dataset": [3, 8, 17, 18, 22, 25, 26, 27, 29, 42], "load_er": [3, 6, 28], "load_gun_point": [3, 9, 10, 17, 18, 20, 25, 35, 37], "load_gunpoint": 17, "load_synthetic_control": [3, 9, 22], "load_two_lead_ecg": [3, 7, 9, 15, 17, 22, 32, 36], "loadtxt": [23, 41], "local": [10, 14, 29], "localappdata": 27, "localoutlierfactor": 14, "locat": [4, 23, 27, 32, 44], "lock": [17, 37], "log": [9, 17, 18], "log2": [9, 11, 13, 14, 17, 18], "logic": 22, "logist": [4, 40], "logisticregress": 22, "long": [6, 27], "longer": [23, 26], "longest": 31, "loos": 31, "loss": 26, "low": [6, 16, 28, 37], "lower": [4, 7, 8, 9, 13, 14, 17, 18, 20, 32, 36], "lowest": [6, 7, 8, 32, 42], "lp": 31, "lt": [31, 37], "lubba": [17, 35], "luca": [9, 18, 35], "m": [1, 7, 8, 10, 14, 23, 31, 32, 35, 36, 44], "m2": 32, "m_sampl": 14, "m_timestep": [7, 8], "macbook": 32, "machin": [12, 22, 31, 43], "maco": [27, 44, 45], "magnitud": 32, "mai": [4, 9, 13, 18, 32, 41, 42, 46], "main": [1, 22, 25, 43], "major": [4, 7], "majority_label": 40, "majority_outli": 4, "make": [19, 29, 31], "make_pipelin": [17, 22, 28, 42], "make_union": 17, "manag": 31, "mandatori": [9, 13, 17, 18], "manhattan": [10, 31, 32, 36], "mani": [8, 9, 19, 23, 26, 41], "manifold": 8, "manner": [23, 42], "map": [2, 6, 8, 9, 10, 11, 13, 16, 17, 18, 34], "mappabl": 11, "marker": 26, "marriag": 31, "marteau": 31, "martin": [13, 17], "mask": 6, "mass": [8, 31, 32], "match": [1, 8, 23, 27, 29, 31, 32, 46], "math": [1, 8], "mathcal": 32, "matplotlib": [20, 23, 26, 41], "matric": [9, 36], "matrix": [1, 7, 8, 9, 10, 13, 16, 17, 18, 22, 23, 32, 41, 46], "matrix_profil": [1, 8, 23, 46], "matrixprofil": [16, 17], "matrixprofiletransform": 17, "matthieu": 31, "max": [5, 7, 18, 31, 32], "max_": 31, "max_c": [18, 31, 35], "max_depth": [9, 18, 29, 37], "max_dist": [1, 23], "max_ep": 4, "max_epoch": 7, "max_g": 17, "max_it": [8, 10], "max_match": 8, "max_motif": [1, 23], "max_neighbor": 1, "max_path": 10, "max_r": [9, 13, 17, 18, 31, 35], "max_sampl": 9, "max_shapelet_s": [9, 10, 11, 13, 17, 18, 36, 37], "max_siz": [9, 13, 17, 18, 35], "max_stabl": 7, "maxabs_scal": [5, 26], "maxim": [4, 9, 13, 17, 18, 36, 37], "maximum": [1, 5, 7, 8, 9, 10, 11, 13, 15, 17, 18, 20, 23, 26, 30, 32, 42], "md": 8, "mean": [3, 4, 5, 7, 8, 9, 10, 13, 14, 17, 18, 22, 26, 29, 31, 32, 35, 36, 37, 42, 46], "mean_var_slop": [9, 17, 18, 37], "measu": 8, "measur": [4, 8, 9, 13, 14, 17, 18, 23, 31, 32, 35], "mechan": [2, 6, 8, 9, 10, 11, 13, 16, 17, 18], "medoid": [8, 10, 29], "medoid_indices_": 8, "member": 9, "memori": [3, 9, 19, 22, 32, 46], "mention": 35, "merg": [3, 18, 27, 31], "merge_train_test": [3, 9, 10, 22, 25, 27, 28, 35, 36, 37], "messag": [8, 19, 46], "met": 29, "meta": 9, "metadata": [2, 6, 8, 9, 10, 11, 13, 16, 17, 18], "metadatarequest": [2, 6, 8, 9, 10, 11, 13, 16, 17, 18], "method": [2, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 22, 23, 29, 35, 36, 37, 41, 42, 43], "method_arg": 10, "metric": [0, 4, 6, 8, 9, 10, 11, 13, 16, 17, 18, 29, 35, 36, 37], "metric_factori": [9, 18], "metric_param": [6, 8, 9, 10, 11, 13, 14, 16, 17, 18, 29, 31, 32], "metric_sampl": [9, 17, 18], "metric_specif": 36, "metrix": 8, "microsoft": 45, "might": [19, 23, 29], "millisecond": 32, "min": [3, 5, 7, 8, 18, 32], "min_": 31, "min_c": [18, 31, 35], "min_dist": 7, "min_g": 17, "min_impurity_decreas": [9, 18], "min_neighbor": 1, "min_r": [9, 13, 17, 18, 31, 35], "min_sampl": 4, "min_samples_leaf": [9, 18], "min_samples_split": [9, 18], "min_shapelet_s": [9, 10, 11, 13, 17, 18, 36], "min_siz": [9, 13, 17, 18, 35], "mine": [1, 8, 9, 10, 13, 16, 17, 18, 23, 29, 32, 35, 36], "miniconda": 44, "minim": [7, 13, 17, 32, 36], "minimum": [1, 3, 5, 7, 8, 9, 11, 13, 17, 18, 19, 23, 27, 29, 31, 36], "minkowski": [29, 31, 32], "minmax_scal": [5, 17, 25, 26], "minmum": [7, 18], "minor": [4, 46], "minority_label": 40, "minority_outli": [4, 40], "minumum": 8, "mirror": 32, "miscellan": 46, "miss": [3, 8, 24, 30], "mix": 4, "mixin": [2, 11, 17], "mm": 7, "mode": [13, 45], "model": [4, 6, 9, 10, 13, 15, 18, 29, 35, 37, 40], "model_select": [0, 9, 22, 29, 42], "modifi": [29, 36], "modul": [7, 8, 10, 22, 26, 28, 29, 40, 46], "monthli": 23, "more": [1, 3, 4, 6, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 22, 23, 27, 31, 32, 35, 36, 37, 40, 41], "moreov": 31, "most": [10, 17, 23, 24, 28, 29, 30, 32, 36, 40, 42, 44, 46], "motestrain": 42, "motif": [1, 8], "motif_dist": 1, "motif_indic": 23, "motif_indici": 1, "move": [18, 31], "mp": [1, 8, 23], "mpi": [1, 8, 23], "mpi_sampl": 8, "mpi_start": 8, "mse": [9, 18], "msm": [18, 31, 32, 35], "much": [7, 14, 46], "mueen": 32, "mult": 46, "multi": [8, 9, 13, 17, 18, 19, 28, 40], "multi_output": 19, "multiclass": [4, 40], "multidimension": 8, "multioutput": [9, 13, 18], "multioutputregressor": [9, 13, 18], "multipl": [4, 8, 9, 11, 13, 17, 18, 22, 24, 27, 31, 32, 36, 40, 41], "multitud": 32, "multivarait": 8, "multivaret": 24, "multivari": [3, 8, 10, 14, 22, 24, 26, 30], "must": [1, 4, 7, 10, 11, 14, 27, 31, 40, 44], "my": 32, "mytransform": 17, "n": [7, 22, 32, 35, 36, 37, 40], "n_alpha": 13, "n_bin": [11, 14, 17], "n_class": [4, 8, 9, 18], "n_classes_": 18, "n_cluster": [4, 8], "n_compon": 8, "n_counterfactu": 14, "n_dim": [5, 6, 8, 9, 14, 15, 17, 18, 22, 24, 25, 26, 28, 30, 32], "n_dimens": [17, 19], "n_estim": [9, 29], "n_featur": [6, 8, 9, 13, 16, 17, 18], "n_features_new": [6, 8, 16, 17], "n_group": [13, 17, 36, 42], "n_init": 8, "n_inlier": [4, 15], "n_interv": [9, 11, 14, 17, 18, 35], "n_iter_": 8, "n_job": [6, 8, 9, 10, 13, 16, 17, 32, 35], "n_kernel": [9, 13, 17, 18, 42], "n_label": [25, 37], "n_match": 8, "n_nativ": 14, "n_neighbor": [8, 9, 10, 29], "n_node": 18, "n_node_sampl": [18, 37], "n_outlier": [4, 15, 40], "n_output": [6, 8, 9, 13, 16, 17, 18], "n_pivot": [9, 17, 18], "n_prototyp": 10, "n_repeat": 11, "n_sampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 30, 32], "n_samples_fit": [9, 13, 18], "n_segment": [1, 16, 41], "n_selected_dim": 6, "n_shapelet": [9, 11, 13, 17, 18, 36, 37], "n_shortest": 5, "n_split": 15, "n_subsequ": [8, 32], "n_timestep": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 30, 32, 35, 36], "n_timetep": 14, "n_training_sampl": 3, "na": 19, "naiv": 32, "name": [2, 3, 5, 6, 8, 9, 10, 11, 13, 16, 17, 18, 19, 22, 25, 26, 27, 31, 32], "named_preprocess": 5, "nan": [19, 24, 30], "nativ": [10, 14, 17, 46], "nativeguidecounterfactu": [10, 46], "natur": 29, "nayyar": [9, 18, 35], "nbsp": [28, 29, 31, 35, 37, 41, 42], "nbviewer": [28, 29, 31, 35, 37, 41, 42], "ndarrai": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 21, 22, 26], "ndim": [8, 19, 22], "ne": 31, "nearest": [8, 10, 23, 35, 41], "necessit": 41, "need": [29, 31, 32, 45, 46], "needl": 8, "neg": [6, 9, 13, 18, 46], "neighbor": [8, 9, 10, 23, 29, 35, 41], "neighbour": 1, "neill": [9, 18, 35], "neither": 19, "nest": [2, 6, 8, 9, 10, 11, 13, 16, 17, 18], "net": 18, "networkx": [4, 40], "never": [9, 18, 19, 31, 32, 42], "new": [8, 9, 13, 15, 17, 22, 26, 29, 36, 37, 43, 45], "newer": 22, "newli": 3, "next": [29, 37, 41], "nfc": 10, "ng": 31, "ngc": 10, "nick": 17, "nn": 29, "node": [9, 13, 17, 18, 35, 37], "node_count": [18, 37], "node_id": 37, "node_ind": 37, "node_index": 37, "node_label": 18, "nomin": 22, "non": [8, 9, 14, 17, 18, 19, 23, 32, 35, 36, 46], "non_elast": 9, "none": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 27, 31, 36, 37, 46], "nonmetr": 8, "nonzero": [18, 41], "norm": [8, 23, 31], "normal": [9, 11, 13, 15, 17, 18, 23, 26, 29, 31, 36, 42], "normal_class": 15, "normalize_prob": [9, 13, 17, 18, 36], "normalized_euclidean": [10, 14, 31, 32], "normalized_stress": 8, "notabl": [32, 36], "notat": 31, "note": [4, 7, 8, 9, 10, 13, 14, 15, 17, 18, 26, 31, 32, 41, 42], "notebook": [28, 29, 31, 35, 37, 41, 42], "noth": 19, "novel": 23, "novemb": 29, "now": [29, 46], "np": [3, 4, 7, 8, 9, 10, 11, 14, 17, 18, 19, 21, 23, 24, 26, 29, 32, 37, 41], "npbundl": 3, "npy": 27, "npz": 27, "nrow": [23, 26], "nu": 31, "num_": 31, "num_c": 18, "num_r": [9, 13, 17, 18], "number": [1, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 28, 30, 32, 35, 36, 37, 41, 42], "numer": [10, 12, 19, 22, 32, 42], "numpi": [3, 6, 8, 9, 11, 13, 17, 18, 22, 23, 24, 26, 27, 30, 32, 37, 41, 46], "o": [7, 9, 18, 32, 35], "obei": 31, "object": [2, 4, 6, 8, 9, 10, 11, 13, 15, 16, 17, 18, 19, 20, 22, 25, 31, 32], "observ": [23, 32, 37], "obtain": 37, "occur": 23, "occurr": [8, 36, 42], "odd": 36, "off": [3, 22, 46], "offer": [25, 42], "offici": 44, "offlin": 27, "offset": 9, "offset_": 9, "often": [22, 23, 28, 36, 41], "older": 22, "omitaomu": 7, "onc": 41, "one": [9, 11, 13, 17, 18, 22, 25, 27, 29, 31, 32, 35, 36, 37, 41, 42], "ones": 9, "onetoonefeaturemixin": 17, "onli": [3, 6, 7, 8, 9, 10, 11, 17, 18, 19, 22, 25, 26, 27, 28, 31, 32, 35, 36, 42, 45, 46], "onlin": [1, 16], "oob_scor": 9, "opac": 20, "oper": [22, 25, 26, 27, 44, 45], "oppos": 40, "opt": 22, "optic": 4, "optim": [7, 9, 32, 35, 37, 45], "option": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 27, 31, 32, 40, 44, 45], "order": [8, 9, 13, 14, 17, 18, 19, 20, 22, 23, 24, 29, 32, 41, 46], "org": [27, 28, 29, 31, 35, 37, 41, 42], "oria": 31, "origin": [3, 9, 10, 11, 13, 14, 17, 19, 22, 23, 29, 35], "other": [4, 8, 10, 15, 18, 22, 23, 25, 27, 32, 35, 37, 40], "othervis": 8, "otherwis": [4, 6, 8, 9, 10, 13, 14, 17, 19], "our": 26, "out": [7, 9, 13, 22, 28, 35, 43], "outcom": 29, "outlier": [0, 9, 14, 15, 27], "outlier_train_test_split": [9, 15], "output": [6, 8, 9, 16, 17, 19, 22, 32, 37], "output_s": [8, 17], "outsid": 44, "over": [9, 11, 13, 14, 17, 18, 22, 23, 31, 35], "overal": 32, "overlai": 41, "overlap": [8, 9, 14, 17, 18, 23, 35, 36], "own": [10, 17, 41], "p": [6, 9, 10, 14, 18, 29, 31, 32, 35, 46], "paa": 17, "packag": [4, 40, 44, 45], "pad": [8, 9, 13, 17, 42], "padding_prob": [9, 13, 17, 18], "page": [28, 29, 31, 35, 37, 41, 42], "pair": [1, 3, 8, 9, 13, 14, 17, 18, 23, 46], "paired_dist": [8, 32], "paired_matrix_profil": [8, 46], "paired_subsequence_dist": [8, 32], "paired_subsequence_match": 8, "pairwis": [6, 8, 28, 46], "pairwise_dist": [8, 31, 32], "pairwise_sd_ful": 32, "pairwise_subsequence_dist": [8, 31, 32, 37], "pam": 8, "panda": [6, 8, 16, 17], "papapetr": [10, 14, 18, 29], "paper": 35, "paralel": 9, "parallel": [6, 8, 9, 10, 13, 16, 17, 37], "param": [2, 6, 8, 9, 10, 11, 13, 16, 17, 18], "paramet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 29, 31, 32, 35, 36, 40, 41, 42, 43, 46], "parameter": [9, 18, 31], "parameter_nam": 31, "part": [3, 10, 25, 26, 27, 29, 30, 32, 42], "particular": [22, 29], "particularli": 23, "partit": [3, 8, 18, 22, 37, 42], "partitions_": 10, "pass": [8, 9, 19, 32, 35, 37, 40], "path": [7, 10, 18, 27, 29, 37, 45], "paths_": 10, "pattern": [7, 13, 17, 23, 31, 32, 36, 40], "pca": 42, "pd": 19, "peicewis": 17, "pelleti": [9, 18, 35], "penal": 7, "penalti": [7, 8, 31], "pend": 3, "per": [4, 10, 11, 13, 17, 18, 35, 37, 46], "percent": [6, 36, 42], "percentil": [4, 6, 9, 13, 17, 40], "perf_count": 32, "perform": [1, 6, 8, 9, 13, 14, 16, 17, 19, 23, 25, 26, 28, 32, 37, 42], "perhap": 40, "permut": 11, "petitjean": [9, 17, 18, 35, 36], "phase": 31, "philip": 17, "pick": 13, "pickl": 22, "piec": 41, "piecewice_aggregate_approxim": 17, "pip": [40, 44, 45], "pipelin": [2, 6, 8, 9, 10, 11, 13, 16, 17, 18, 22, 28, 42], "pipelineifittedpipelin": [28, 42], "pivot": [4, 9, 17, 18, 35], "pivot_sampl": [9, 18], "pivotforestclassifi": 9, "pivottransform": 17, "pivottreeclassifi": 18, "platform": 44, "plausability_scor": 14, "plausabl": 14, "plausibl": 14, "pleas": [2, 6, 8, 9, 10, 11, 13, 16, 17, 18, 28, 29, 31, 35, 37, 41, 42], "plot": [0, 2, 10, 11, 18, 22, 23, 26, 29, 42, 46], "plot_frequency_domain": 20, "plot_import": 11, "plot_time_domain": [20, 23], "plot_tre": [18, 37, 46], "plt": [23, 26, 41], "point": [4, 7, 8, 10, 16, 18, 22, 23, 25, 27, 29, 31, 40, 41], "polar": [6, 8, 16, 17], "poor": 37, "portion": 23, "posit": [6, 8, 9, 10, 11, 13, 16, 17, 31, 32, 42], "possibl": [2, 6, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 34, 35, 44], "possibli": [9, 17, 18, 35], "potenti": 41, "power": 23, "pp": [4, 10, 18, 29, 32, 35, 36, 40], "practic": 22, "precomput": [7, 9, 13, 18], "pred": 37, "predefin": [23, 26], "predict": [6, 8, 9, 10, 13, 14, 16, 18, 23, 28, 29, 35, 37, 41, 42], "predict_log_proba": 9, "predict_proba": [4, 8, 9, 18, 35], "prefer": 22, "preprint": [13, 17, 36], "preprocess": [0, 3, 11, 13, 17, 22, 25, 26, 42], "preprocessor": [5, 26], "present": [8, 9, 27, 29, 37], "preserv": [3, 19, 22], "previou": [9, 26], "previous": [22, 25, 29, 34, 41, 46], "price": 23, "primari": [23, 29, 40, 41], "princip": [36, 42], "print": [3, 8, 10, 22, 25, 37], "probabl": [2, 4, 8, 9, 10, 11, 13, 17, 18], "problem": [22, 23, 31, 40], "procedur": [4, 6], "proceed": [1, 4, 16, 31, 32, 40], "process": [23, 41, 42, 45], "processor": [9, 17, 32, 35, 45], "produc": [30, 34], "profil": [1, 8, 16, 17, 18, 23, 41, 46], "profile_s": [1, 8], "program": 45, "progress": 3, "project": [17, 45], "promis": 17, "proper": 22, "properli": 41, "properti": [3, 9, 37, 41], "proport": [9, 18], "propos": [29, 46], "prototypecounterfactu": 10, "prototypesampl": 10, "provid": [7, 10, 22, 23, 27, 29, 31, 37, 41, 44], "proxim": [9, 10, 14, 18], "proximity_scor": 14, "proximityforestclassifi": [9, 31, 35], "proximityforestclassifierifittedproximityforestclassifi": 35, "proximitytransform": 17, "proximitytreeclassifi": [18, 31], "proximitytreeclassifierinot": 31, "pseudo": [7, 10], "psudo": 15, "publish": [10, 36, 40], "pull": 45, "pure": [9, 18], "purpos": [22, 29, 32, 37, 42], "pylab": [23, 41], "pypi": 44, "pyplot": 26, "python": [22, 25, 27, 31, 32, 43, 44, 45, 46], "python3": [44, 45], "q": 32, "quantil": 40, "quantiz": [4, 40], "queri": 32, "question": 23, "r": [7, 8, 9, 10, 13, 17, 18, 29, 31, 35, 45], "r2_score": [9, 13, 18], "rainfal": 23, "rais": [4, 19, 46], "rakthanmanon": 32, "random": [4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 22, 29, 35, 37, 42, 46], "random_st": [4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 28, 29, 35, 36, 37, 42], "randomforestclassifi": 40, "randomli": [8, 9, 17, 18, 35, 37, 42], "randomshapeletclassifi": [13, 36], "randomshapeletregressor": 13, "randomshapelettransform": [17, 46], "randomst": [4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18], "rang": [4, 9, 13, 17, 18, 26, 31, 32, 36, 40], "rank": 30, "rate": [6, 7], "rather": 36, "ravel": 19, "ravel_1d": 19, "raw": [8, 17], "rbf": [4, 40], "re": [3, 8, 9, 25], "reach": [18, 37], "read": [3, 6, 8, 9, 10, 13, 14, 16, 17, 18, 22, 23, 32, 35], "readabl": 3, "real": [4, 9, 24, 31, 40], "reason": [10, 22], "reban": [10, 14, 29], "recal": 23, "recent": 36, "recept": 36, "recognit": [7, 13, 17, 31, 36], "recommend": [10, 36, 44], "recomput": 23, "record": [29, 37, 42], "recur": 23, "reduc": [6, 9, 17, 25, 28], "redud": 14, "redudancy_scor": 14, "redund": 14, "reevalu": 22, "refer": [1, 4, 7, 8, 9, 10, 13, 14, 16, 17, 18, 32, 37, 41, 43], "reflect": 32, "refresh": [3, 27, 46], "refresh_repositori": [3, 27, 46], "regim": [1, 41], "region": [1, 10, 16, 22, 41], "regress": [4, 9, 13, 18, 22, 37, 40], "regressor": [9, 11, 13, 18, 28, 35, 36], "regular": 27, "reject": 19, "rel": [8, 14, 23, 32], "relat": 31, "relative_proximity_scor": 14, "releas": [17, 37], "reliabl": [4, 22], "relianc": 22, "remain": 28, "remot": 27, "remov": [6, 9, 10, 18, 27, 28, 35, 46], "renam": [9, 10, 17, 46], "render": [28, 29, 31, 35, 37, 41, 42], "repeat": [11, 15, 23], "repeatedli": [15, 22, 23, 25], "repeatedoutliersplit": 15, "repetit": 23, "replac": [9, 10, 14, 27, 44, 45], "replic": 10, "repo": 27, "report": [19, 32], "repositori": [3, 22, 25, 46], "repr": 22, "repres": [9, 23, 24, 29, 30, 31, 37, 41], "represent": [9, 17, 18, 22, 28, 29, 31, 35, 36, 37, 40, 41, 42], "reproduc": 8, "request": [3, 4, 23, 27, 32, 40, 45], "requir": [3, 4, 7, 8, 9, 10, 13, 17, 18, 19, 27, 29, 32, 40, 41, 45, 46], "rerun": [28, 29, 31, 35, 37, 41, 42], "resampl": [9, 11, 13, 17], "research": 10, "resembl": 36, "reset": [3, 27], "reshap": [8, 32, 41], "residu": [9, 13, 18], "resort": 9, "respect": [8, 25, 27, 29, 35], "respons": 22, "rest": 23, "result": [5, 8, 9, 10, 13, 15, 17, 18, 19, 21, 26, 28, 29, 31, 32, 35, 36, 37, 40, 42], "retain": [6, 46], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 32, 40, 41], "return_arc_curv": 1, "return_cost": 7, "return_count": 41, "return_dist": [1, 8], "return_extra": 3, "return_index": [7, 8, 23, 32, 41], "reus": [9, 22, 26, 29], "revers": [6, 10, 29, 46], "rewritten": 26, "ridg": 42, "ridgeclassifiercv": 36, "right": 37, "robust": [22, 31], "rocket": [9, 13, 17, 22, 28], "rocketclassifi": [13, 28], "rocketclassifierifittedrocketclassifi": 28, "rocketclassifierrocketclassifi": 28, "rocketforestclassifi": 9, "rocketforestregressor": 9, "rocketregressor": 13, "rockettransform": [17, 22, 42], "rockettransformrockettransform": 42, "rockettreeclassifi": 18, "rockettreeregressor": 18, "root": [3, 11, 13, 17, 18, 37], "roughli": 32, "rout": [2, 6, 8, 9, 10, 11, 13, 16, 17, 18], "row": [19, 30, 36, 37], "rsf": 29, "rule": [6, 37], "run": [8, 9, 10, 13, 17, 25, 26, 45], "runger": 35, "runtim": 7, "sai": 31, "same": [7, 8, 9, 10, 11, 14, 17, 18, 22, 26, 27, 29, 31, 32, 37, 41, 46], "sampl": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 29, 30, 32, 35, 36, 37, 40, 41, 42, 46], "sample_id": 37, "sample_s": [9, 14, 17, 18, 35, 46], "sample_spac": 20, "sample_weight": [7, 8, 9, 13, 14, 18, 37], "sampler": [13, 17], "sampling_param": [9, 13, 17, 18], "samsten": [10, 36], "sarab": 17, "satisfi": [4, 31], "save": 27, "savez": 27, "sax": [11, 14, 17], "scalabl": [9, 18, 23, 35], "scalar": [8, 32], "scalarmapp": 11, "scale": [4, 5, 8, 9, 13, 17, 26, 31, 40], "scaled_dtw": [18, 31, 32], "scaled_euclidean": [9, 18, 31, 32, 37], "scaled_manhattan": 36, "scaler": 42, "scatter": 26, "schmidt": [13, 17, 36], "schultz": [17, 35], "scienc": [10, 35], "scikit": [12, 17, 19, 22, 28, 30, 42, 46], "scipi": 46, "scope": 44, "score": [2, 4, 6, 8, 9, 10, 11, 13, 14, 18, 22, 28, 35, 36, 40, 46], "score_func": 6, "scorer": [11, 13], "screen": 22, "scrimp": 23, "sd": 6, "sdp": 6, "sdt": 6, "seamlessli": [12, 22], "search": [8, 18, 23, 31], "second": [7, 8, 9, 13, 17, 18, 27, 32, 41], "section": [1, 3, 11, 35, 36, 41], "secur": 22, "see": [1, 3, 4, 6, 8, 9, 10, 13, 14, 16, 17, 32, 36], "seed": [4, 6, 9, 10, 11, 13, 17, 18, 22], "segment": [0, 1, 23], "select": [4, 6, 8, 9, 10, 14, 15, 17, 18, 22, 23, 25, 26, 29, 32, 35, 37, 40, 45], "selectdimensionpercentil": [6, 46], "selectdimensionsignific": 6, "selectdimensiontopk": [6, 46], "selector": [6, 46], "self": [1, 2, 6, 8, 9, 10, 11, 13, 16, 17, 18, 25], "semant": [1, 16], "separ": [8, 9, 18, 27, 40, 41, 46], "sequenc": [5, 19, 23, 24, 26, 31, 41], "sequenti": [6, 23, 46], "sequentialdimensionselector": [6, 28, 46], "sequentialdimensionselectorifittedsequentialdimensionselector": 28, "sequentialdimensionselectorsequentialdimensionselector": 28, "seri": [1, 2, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 40, 41, 46], "server": 32, "session": 27, "set": [2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 22, 23, 25, 27, 28, 29, 31, 32, 35, 36, 37, 41, 42, 44, 45, 46], "set_cache_dir": [3, 27], "set_config": 9, "set_output": [6, 8, 16, 17], "set_param": [2, 6, 8, 9, 10, 11, 13, 16, 17, 18], "set_ylabel": 26, "sethi": [17, 35], "sever": [7, 18, 22, 31, 36, 37, 46], "sha": 27, "sha1": 27, "shaghayegh": [1, 16], "shape": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 26, 28, 30, 31, 32, 37], "shapel": 8, "shapelet": [1, 8, 9, 10, 11, 13, 17, 18, 22, 23, 46], "shapelet_s": [13, 17, 18, 36, 46], "shapeletforestclassifi": [9, 22, 29, 35], "shapeletforestclassifierifittedshapeletforestclassifi": [29, 35], "shapeletforestcounterfactu": [10, 29], "shapeletforestembed": 9, "shapeletforestregressor": [9, 35], "shapeletimport": 11, "shapelettransform": [17, 46], "shapelettreeclassifi": [18, 37], "shapelettreeclassifierifittedshapelettreeclassifi": 37, "shapelettreeregressor": [9, 18, 37], "shaplet": [13, 17, 18], "sharex": 23, "shifaz": [9, 18, 35], "shift": 31, "short": 32, "shortcut": 31, "shorter": [30, 31], "shortest": [5, 26], "should": [4, 8, 14, 15, 22, 26, 27, 31], "show": [3, 7, 18, 20, 28, 29, 31, 35, 37, 41, 42], "show_bin": 11, "show_grid": 11, "show_legend": 20, "shown": [3, 11], "shuffl": [15, 22], "side": 17, "sigkdd": [4, 32, 40], "signal": 29, "signatur": 13, "signifi": 37, "signific": [8, 18, 23], "significantli": [23, 41], "silhouett": 14, "silhouette_sampl": 14, "silhouette_scor": 14, "similar": [1, 8, 10, 17, 22, 23, 26, 29, 31, 32, 35], "similarli": [32, 37, 41], "simon": 17, "simpl": [2, 6, 8, 9, 10, 11, 13, 16, 17, 18, 37, 40, 43, 45], "simpler": 4, "simplest": [4, 25, 28, 36, 40], "simplifi": [22, 26, 41], "sinc": [6, 8, 9, 10, 13, 17, 18, 22, 26, 29, 32, 37, 40, 41], "singl": [8, 9, 10, 13, 14, 17, 18, 24, 27, 30, 32, 35, 36, 37, 42], "singular": [13, 36], "size": [1, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 22, 25, 36, 37, 41, 42, 46], "sklearn": [8, 9, 14, 17, 19, 22, 28, 29, 40, 42], "slice": 32, "slide": 31, "sliding_window_view": 8, "slightli": [9, 29], "sligtli": 42, "slope": [9, 17, 18, 35, 37], "slower": 9, "smacof": 8, "small": [25, 32, 37, 40, 46], "smaller": [9, 35], "smallest": [8, 36], "smart": 32, "smyth": 14, "snippet": [22, 26], "so": [2, 6, 8, 9, 10, 11, 13, 16, 17, 18, 22, 25, 31], "soft_max": [13, 17], "soft_min": [13, 17], "soft_threshold": [13, 17], "softdtw": 8, "solut": [9, 23, 32], "solv": [22, 23], "some": [9, 13, 18, 19, 24, 25, 30, 31, 37, 44], "someth": 46, "sometim": 32, "sophist": [23, 40], "sort": [3, 8, 9], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 37, 41, 42, 44], "space": [8, 17, 20, 23, 32, 36], "spars": [9, 13, 18, 19, 41, 42], "sparse_output": 9, "sparsescal": [13, 42], "sparsescalersparsescal": 42, "sparsiti": 42, "spec": 3, "special": [9, 22], "specici": 11, "specif": [3, 9, 13, 17, 18, 19, 25, 26, 27, 29, 35, 36, 44], "specifi": [3, 6, 9, 11, 13, 14, 17, 18, 22, 25, 26, 27, 29, 31, 32, 35, 36, 37, 40, 41, 44, 46], "specifii": [9, 17, 18], "split": [3, 6, 9, 13, 15, 18, 22, 27, 31, 35, 37, 42], "spokenarabicdigit": 26, "springer": [10, 36], "sqrt": [9, 11, 13, 14, 17, 18, 35], "squar": [9, 11, 13, 17, 18], "squared_error": [9, 18], "squeez": 8, "ssg": 7, "stabl": [10, 15, 24], "stack": 32, "stage": 42, "stamp": 23, "standard": [5, 9, 13, 17, 22, 26, 36, 42], "standardscal": [13, 42], "standardscalerstandardscal": 42, "start": [1, 8, 11, 16, 22, 32, 41, 43], "state": [15, 17, 26], "std": [17, 31], "stdout": 10, "stefan": 31, "step": [7, 10, 13, 17, 22, 25, 26, 28, 29, 32, 41, 42], "step_siz": 10, "stiff": [31, 32], "still": [3, 44], "stochast": 7, "stock": 23, "stomp": 23, "store": [7, 9, 23, 25, 29, 37], "str": [1, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 25], "strategi": [6, 9, 13, 15, 17, 18, 28, 46], "stress": 8, "stride": 17, "stride_trick": 8, "string": [3, 9, 13, 17, 18, 25, 26, 27], "strongli": 44, "structur": 18, "studio": 45, "style": 19, "sub": [9, 18, 23, 46], "subgradi": 7, "subobject": [2, 6, 8, 9, 10, 11, 13, 16, 17, 18], "subplot": [23, 26], "subsampl": 10, "subsequ": [1, 8, 9, 13, 17, 23, 29, 36, 42, 46], "subsequence_match": [1, 8, 32], "subsequenec": 8, "subsequnc": 8, "subset": [6, 8, 9, 13, 14, 18, 28, 46], "success": [10, 23, 36], "suddenli": 41, "suffici": 4, "suggest": [9, 18, 35], "suit": [17, 32], "suitabl": [6, 36, 37], "sum": [9, 13, 17, 18], "summar": [9, 17, 18, 35, 37], "summari": 23, "superhuman": [1, 16], "superset": 35, "supervis": [17, 22], "suppli": [4, 10, 11], "support": [4, 8, 9, 10, 13, 14, 16, 17, 18, 22, 24, 25, 26, 27, 28, 31, 36, 40, 46], "sure": [18, 19], "svd": 13, "swap": 46, "swiss": 18, "symbol": 17, "symbolic_aggregate_approxim": 17, "symmetr": 31, "synthet": [4, 40], "synthetic_control": [3, 22], "syntheticcontrol": [3, 25, 27], "system": [10, 14, 23, 25, 27, 29, 44, 45], "systemat": [4, 32, 40], "t": [4, 8, 9, 10, 13, 14, 17, 18, 19, 28, 31, 32, 40, 44, 46], "t1": 24, "t2": 24, "t3": 24, "tabluar_x": 22, "tabular": 17, "tag": [3, 27], "take": [3, 6, 17, 18, 27, 31, 32], "taken": 37, "target": [6, 8, 9, 10, 16, 17, 18, 29, 44], "target_": 10, "targetevalu": 10, "task": [22, 23, 29, 32, 35, 37, 40, 41], "techniqu": [23, 36], "temperatur": 23, "templat": 3, "tempor": [10, 12, 22, 24, 29, 43], "ten": 18, "term": [2, 9, 10, 13, 17, 30, 31], "termin": 37, "test": [3, 6, 8, 9, 13, 14, 15, 18, 21, 22, 25, 26, 27, 32, 35], "test_idx": 15, "test_siz": [9, 15, 22], "text": 32, "th": [8, 9, 14, 36, 37], "than": [3, 4, 6, 8, 9, 10, 18, 20, 22, 25, 28, 30, 31, 32, 36, 37, 41], "thei": [4, 9, 17, 18, 23, 27, 29], "them": [4, 12, 24, 26, 27], "theoret": 32, "therebi": 36, "thi": [2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 22, 23, 25, 26, 28, 29, 31, 32, 35, 36, 37, 41, 42, 44], "thiem": [13, 17, 36], "thing": 18, "third": [28, 32], "thirtieth": 31, "those": [3, 23, 28, 29], "thought": 41, "thread": 32, "three": [17, 28, 29, 31, 32, 37], "threshold": [6, 8, 9, 10, 11, 13, 17, 18, 23, 35, 36, 37, 46], "threshold_sign": 37, "through": [31, 35, 36, 37, 44], "thu": [9, 32, 41], "tight": [4, 40], "time": [1, 2, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 40, 41, 46], "timeout": [3, 27, 46], "timepoint": 17, "timestep": [8, 13, 14, 17, 18, 19, 22, 24, 25, 26, 30, 32], "tini": [3, 25, 27], "togeth": [23, 27, 37], "tol": [6, 7, 8], "toler": [6, 8, 9, 14, 18, 31], "tool": [23, 45], "top": [6, 8, 11, 18, 46], "total": [9, 13, 17, 18, 37], "total_n_outli": 15, "toward": [9, 18], "trade": 46, "tradit": [8, 26, 28, 31, 36, 40, 41], "train": [3, 6, 8, 9, 10, 13, 14, 15, 16, 17, 18, 22, 25, 26, 27, 37], "train_i": 10, "train_idx": 15, "train_test_split": [15, 22, 29, 42], "train_x": 10, "trajectori": 31, "tranform": 17, "transact": 31, "transform": [0, 4, 5, 6, 8, 9, 10, 11, 13, 14, 16, 18, 28, 29, 40, 41, 46], "transformermixin": 17, "travers": [18, 29, 37], "treat": [24, 41, 46], "tree": [0, 9, 29, 31, 35, 46], "tree_": [18, 37], "trend": [23, 41], "treshold": 8, "tri": 32, "triad": 36, "triangl": [31, 32], "trigger": 19, "trillion": 32, "trivial": [8, 23], "true": [2, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 28, 30, 31, 32, 41], "truncat": [5, 26], "trust": [22, 28, 29, 31, 35, 37, 41, 42], "try": [13, 28, 29, 31, 35, 37, 41, 42], "tsereg": 22, "tunabl": 36, "tune": [8, 36, 41, 46], "tupl": [3, 7, 9, 13, 17, 18, 37], "tuv": 35, "twe": [31, 32], "tweak": [10, 14, 29], "two": [6, 7, 8, 9, 13, 17, 18, 22, 27, 29, 31, 32, 36, 37, 41, 42, 46], "twoleadecg": [3, 22, 25, 27, 36], "txt": 45, "type": [3, 17, 19, 22, 29, 37], "typic": [14, 22, 23, 32, 36, 41], "u": [9, 13, 18], "ubuntu": 45, "uc": [23, 41], "ucr": [3, 22, 25, 27, 32, 42], "ucrmt": 26, "uea": 22, "ultim": 42, "ultra": [13, 17, 36], "unabl": [28, 29, 31, 35, 37, 41, 42], "unchang": [6, 7, 8, 16, 17], "uncov": 23, "undefin": [31, 37], "under": [32, 45], "undergo": 36, "underli": [9, 17, 23], "understand": [23, 29, 41], "unequ": [24, 26, 31], "unfamiliar": 22, "unfit": 6, "unfortun": 10, "unifi": [1, 8, 23], "uniform": [9, 13, 17, 18, 23, 26, 32], "uniform_averag": [9, 13, 18], "uniformli": [17, 18], "unipot": 16, "uniqu": [3, 14, 16, 27, 41], "unit": [5, 13, 17, 22, 26, 31], "univari": [8, 14, 22, 24, 30, 32], "unlabel": 22, "unless": [1, 9, 13, 17, 18, 19, 27, 31, 37], "unpickl": 22, "unseen": [22, 34, 41], "unset": 27, "unsupervis": [6, 8, 9, 16, 17], "until": [9, 18, 46], "unusu": 23, "unwant": 32, "up": [18, 44], "updat": [2, 6, 8, 9, 10, 11, 13, 16, 17, 18], "upon": [32, 37, 46], "upper": [7, 9, 13, 15, 17, 18, 32, 36], "url": [3, 27], "us": [3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46], "user": [1, 2, 3, 4, 6, 8, 9, 10, 11, 13, 14, 16, 17, 18, 27, 29, 32, 40, 43, 44, 46], "util": [0, 3, 4, 5, 9, 18, 23, 26, 29, 30, 32, 35, 36, 37, 41, 42], "v": [9, 13, 18, 27, 31], "v1": [9, 18, 25, 27], "valid": [3, 6, 9, 10, 13, 14, 15, 18, 19, 24, 25, 27, 28, 35, 46], "valid_scor": 10, "validity_scor": 14, "valu": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 42, 46], "valuabl": 23, "variabl": [21, 30, 45], "variable_len": [19, 26, 30], "varial": 19, "varianc": [6, 9, 17, 18, 22, 26, 31, 35, 37, 42, 46], "variant": 37, "variat": [4, 28, 40, 46], "varieti": 35, "variou": [23, 32, 37], "vc": 45, "vcvarsal": 45, "vector": [7, 19, 23], "venv": 44, "verbos": [7, 8, 9, 10, 45], "veri": [7, 23, 26, 31], "versa": [22, 29], "version": [3, 6, 8, 9, 10, 13, 16, 17, 18, 22, 27, 35, 40, 44, 45], "via": [10, 13, 29], "vice": [22, 29], "vicin": 8, "view": [1, 8, 23], "viii": [1, 16], "virtual": [44, 45], "visual": [22, 37, 45], "vladimir": 35, "vol": 10, "volum": 31, "vote": 9, "vrain": [13, 17, 36], "vstack": 24, "w": [4, 7, 8, 9, 13, 18, 25, 27, 36, 40], "wa": [6, 8, 9, 10, 16, 17, 18, 23, 29, 35], "wael": [13, 17], "wai": 26, "want": [32, 45], "warm_start": 9, "warn": [8, 18, 19, 46], "warp": [7, 8, 18, 29, 31, 32], "wb": 24, "wddtw": [31, 32], "wddtw_distanc": 7, "wdtw": [10, 31, 32], "wdtw_align": 7, "wdtw_distanc": 7, "we": [3, 6, 8, 9, 13, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 37, 40, 41, 42, 44, 46], "webb": [9, 13, 17, 18, 31, 35, 36], "weight": [7, 8, 9, 13, 14, 17, 18, 31], "weighted_n_node_sampl": 37, "well": [2, 6, 8, 9, 10, 11, 13, 16, 17, 18], "were": [11, 30], "westov": 32, "what": [18, 40, 43], "wheight": 37, "when": [4, 8, 9, 10, 11, 13, 14, 17, 18, 19, 22, 25, 27, 29, 31, 32, 41, 46], "where": [3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 17, 18, 20, 22, 24, 27, 28, 29, 31, 32, 35, 37, 41, 42, 44, 46], "wherea": [24, 35, 37, 41], "wherein": 42, "whether": [8, 13, 19, 20, 29], "which": [3, 4, 7, 8, 9, 10, 13, 14, 17, 18, 22, 23, 25, 27, 29, 30, 31, 32, 35, 36, 37, 40, 41, 42, 43, 45, 46], "while": [3, 9, 18, 22, 25, 27, 29, 32, 37, 44], "whole": 9, "whose": 42, "width": 20, "wildboar": [0, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 40, 41, 42, 43, 45, 46], "wildboar_build": 45, "wildboar_cach": 3, "wildboar_requir": [3, 27], "wildoar": 8, "window": [1, 7, 8, 10, 11, 14, 16, 17, 23, 27, 31, 41, 44, 45], "window_shap": 8, "wise": [6, 21, 22, 23, 26], "wistuba": [13, 17, 36], "within": [8, 18, 23, 28, 29, 32, 36, 41], "without": [3, 8, 24, 27, 31, 36], "wlcss": 32, "wong": [4, 40], "work": [2, 6, 8, 9, 10, 11, 13, 16, 17, 18, 22, 32, 44, 45, 46], "workflow": [25, 32], "workshop": [4, 40], "wors": [9, 13, 18], "would": [4, 6, 9, 13, 17, 18, 26, 29, 32], "wrap": 17, "wrapper": [8, 14], "write": 44, "written": 27, "www": 27, "x": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 40, 41, 42, 46], "x27": [28, 29, 31, 35, 37, 42], "x64": 45, "x86": 45, "x_cf": 29, "x_counterfactu": [10, 14], "x_factual": 14, "x_indic": 7, "x_nativ": 14, "x_new": [6, 8, 16, 17], "x_outlier": [4, 40], "x_plausibl": 14, "x_sampl": [8, 32], "x_t": 17, "x_test": [3, 9, 10, 15, 22, 25, 27, 28, 29, 35, 36, 37, 42], "x_test_transform": 42, "x_timestep": [7, 8, 32], "x_train": [3, 9, 10, 15, 22, 25, 27, 28, 29, 35, 36, 37, 42], "x_true": 10, "xcode": 45, "xdg_cache_hom": 27, "xt": 41, "y": [2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 31, 32, 37, 40, 42, 46], "y_contigu": 19, "y_counterfactu": 14, "y_desir": 29, "y_hat": 9, "y_indic": 7, "y_nativ": 14, "y_numer": 19, "y_outlier": [4, 40], "y_plausibl": 14, "y_pred": [9, 13, 18, 29], "y_predict": 14, "y_sampl": [8, 32], "y_test": [3, 9, 10, 15, 22, 25, 27, 28, 29, 35, 36, 37, 42], "y_timestep": [7, 8, 32], "y_train": [3, 9, 10, 15, 22, 25, 27, 28, 29, 35, 36, 37, 42], "y_true": [9, 13, 18], "year": 23, "yearli": 23, "yeh": [1, 8, 23], "yield": [3, 15, 26, 36], "yn_timestep": 8, "you": [8, 9, 10, 13, 18, 22, 23, 35, 44, 45, 46], "your": [10, 18, 44, 45, 46], "z": [23, 27, 31, 36], "z0": 27, "za": 27, "zaidi": [9, 18, 35], "zakaria": 32, "zero": [5, 6, 9, 13, 17, 18, 22, 26, 31, 36, 42], "zhu": [18, 32], "zip": [3, 25, 27, 41], "zipfil": 3, "zone": [1, 8, 16, 17], "zorder": 20, "\u00f6zsu": 31}, "titles": ["API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.annotate</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets.outlier</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets.preprocess</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.dimension_selection</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance.dtw</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.ensemble</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain.counterfactual</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.linear_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.model_selection</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.segment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.tree</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils.plot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils.variable_len</span></code>", "User Guide", "Annotate", "Time series", "Datasets", "Pre-processing", "Repositories", "Dimension selection", "Counterfactual explanations", "Glossary", "Metrics", "Distance", "Elastic metrics", "Supervised learning", "Ensemble estimators", "Transform-based estimators", "Tree-based estimators", "Unsupervised learning", "Outlier detection", "Outlier detection benchmarks", "Segmentation", "Time series transform", "&lt;no title&gt;", "Install wildboar", "Build from source", "What\u2019s new"], "titleterms": {"": 46, "0": 46, "1": 46, "3": 46, "an": 22, "annot": [1, 23], "api": 0, "base": [2, 36, 37], "benchmark": [32, 40], "build": 45, "cach": 27, "castor": 36, "chang": 46, "class": [2, 3, 6, 8, 9, 10, 11, 13, 15, 16, 17, 18], "common": 33, "convolut": [36, 42], "counterfactu": [10, 29], "data": [22, 23], "dataset": [3, 4, 5, 22, 25], "decis": 37, "definit": 27, "depend": 46, "detect": [39, 40], "dilat": 36, "dimens": 28, "dimension_select": 6, "discoveri": 23, "distanc": [7, 8, 32, 33], "dtw": 7, "dynam": 33, "edit": 33, "elast": [31, 33, 35], "emmott": 40, "ensembl": [9, 35], "estim": [35, 36, 37], "exampl": 22, "explain": [10, 11], "explan": 29, "explor": 22, "filter": 25, "forest": [29, 35], "from": 45, "function": [1, 2, 3, 4, 5, 7, 8, 10, 11, 14, 15, 17, 18, 19, 20, 21], "glossari": 30, "guid": 22, "hydra": [36, 42], "instal": [27, 44], "interv": [35, 37], "json": 27, "label": 40, "learn": [22, 34, 38], "length": 24, "linear_model": 13, "load": [22, 25], "local": 27, "longest": 33, "major": 40, "matrixprofil": 23, "merg": 33, "metric": [14, 31, 32, 33], "minimum": 32, "minor": 40, "model": [22, 46], "model_select": 15, "motif": 23, "move": 33, "multipl": 25, "multivari": 32, "nearest": 29, "neighbour": 29, "new": 46, "non": 31, "outlier": [4, 39, 40], "pair": 32, "pairwis": 32, "parallel": 32, "penalti": 33, "perform": 22, "persist": 22, "plot": [20, 37], "pre": 26, "predict": 22, "preprocess": 5, "process": 26, "proxim": 35, "random": 36, "real": 33, "refer": [0, 23, 29, 35, 36], "repositori": 27, "rocket": [36, 42], "search": 32, "segment": [16, 41], "select": 28, "selector": 28, "sequenc": 33, "sequenti": 28, "seri": [22, 24, 42], "shapelet": [29, 35, 36, 37], "singl": 25, "sourc": 45, "specif": 31, "split": 33, "structur": [23, 37], "subsequ": [31, 32, 33], "supervis": 34, "support": 32, "tabular": 22, "threshold": 28, "time": [22, 24, 33, 42], "transform": [17, 22, 36, 42], "tree": [18, 37], "unsupervis": 38, "user": 22, "util": [19, 20, 21], "variabl": 24, "variable_len": 21, "varianc": 28, "version": 46, "warp": 33, "what": 46, "wildboar": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 44]}})