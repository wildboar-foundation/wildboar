Search.setIndex({"docnames": ["api/index", "api/wildboar/annotate/_motifs/index", "api/wildboar/annotate/_segment/index", "api/wildboar/annotate/index", "api/wildboar/base/index", "api/wildboar/datasets/_filter/index", "api/wildboar/datasets/_repository/index", "api/wildboar/datasets/index", "api/wildboar/datasets/outlier/index", "api/wildboar/datasets/preprocess/index", "api/wildboar/distance/_distance/index", "api/wildboar/distance/_matrix_profile/index", "api/wildboar/distance/_multi_metric/index", "api/wildboar/distance/_neighbour/index", "api/wildboar/distance/dtw/index", "api/wildboar/distance/index", "api/wildboar/ensemble/_ensemble/index", "api/wildboar/ensemble/index", "api/wildboar/explain/_importance/index", "api/wildboar/explain/counterfactual/_helper/index", "api/wildboar/explain/counterfactual/_nn/index", "api/wildboar/explain/counterfactual/_proto/index", "api/wildboar/explain/counterfactual/_sf/index", "api/wildboar/explain/counterfactual/index", "api/wildboar/explain/index", "api/wildboar/index", "api/wildboar/linear_model/_hydra/index", "api/wildboar/linear_model/_rocket/index", "api/wildboar/linear_model/_shapelet/index", "api/wildboar/linear_model/_transform/index", "api/wildboar/linear_model/index", "api/wildboar/metrics/_cluster/index", "api/wildboar/metrics/_counterfactual/index", "api/wildboar/metrics/index", "api/wildboar/model_selection/_cv/index", "api/wildboar/model_selection/_outlier/index", "api/wildboar/model_selection/index", "api/wildboar/transform/_base/index", "api/wildboar/transform/_conv/index", "api/wildboar/transform/_diff/index", "api/wildboar/transform/_hydra/index", "api/wildboar/transform/_interval/index", "api/wildboar/transform/_matrix_profile/index", "api/wildboar/transform/_pivot/index", "api/wildboar/transform/_rocket/index", "api/wildboar/transform/_sax/index", "api/wildboar/transform/_shapelet/index", "api/wildboar/transform/index", "api/wildboar/tree/_base/index", "api/wildboar/tree/_ptree/index", "api/wildboar/tree/_tree/index", "api/wildboar/tree/index", "api/wildboar/utils/_parallel/index", "api/wildboar/utils/_testing/index", "api/wildboar/utils/decorators/index", "api/wildboar/utils/estimator_checks/index", "api/wildboar/utils/index", "api/wildboar/utils/plot/index", "api/wildboar/utils/validation/index", "api/wildboar/utils/variable_len/index", "api/wildboar/version/index", "guide", "guide/annotate", "guide/basics", "guide/datasets", "guide/datasets/preprocess", "guide/datasets/repositories", "guide/glossary", "guide/metrics", "guide/metrics/distance", "guide/metrics/elastic", "guide/supervised", "guide/supervised/ensemble", "guide/supervised/transform", "guide/supervised/trees", "guide/unsupervised", "guide/unsupervised/outlier", "guide/unsupervised/outlier/generation", "index", "more/whatsnew", "quickstart", "quickstart/getting-started", "quickstart/install"], "filenames": ["api/index.rst", "api/wildboar/annotate/_motifs/index.rst", "api/wildboar/annotate/_segment/index.rst", "api/wildboar/annotate/index.rst", "api/wildboar/base/index.rst", "api/wildboar/datasets/_filter/index.rst", "api/wildboar/datasets/_repository/index.rst", "api/wildboar/datasets/index.rst", "api/wildboar/datasets/outlier/index.rst", "api/wildboar/datasets/preprocess/index.rst", "api/wildboar/distance/_distance/index.rst", "api/wildboar/distance/_matrix_profile/index.rst", "api/wildboar/distance/_multi_metric/index.rst", "api/wildboar/distance/_neighbour/index.rst", "api/wildboar/distance/dtw/index.rst", "api/wildboar/distance/index.rst", "api/wildboar/ensemble/_ensemble/index.rst", "api/wildboar/ensemble/index.rst", "api/wildboar/explain/_importance/index.rst", "api/wildboar/explain/counterfactual/_helper/index.rst", "api/wildboar/explain/counterfactual/_nn/index.rst", "api/wildboar/explain/counterfactual/_proto/index.rst", "api/wildboar/explain/counterfactual/_sf/index.rst", "api/wildboar/explain/counterfactual/index.rst", "api/wildboar/explain/index.rst", "api/wildboar/index.rst", "api/wildboar/linear_model/_hydra/index.rst", "api/wildboar/linear_model/_rocket/index.rst", "api/wildboar/linear_model/_shapelet/index.rst", "api/wildboar/linear_model/_transform/index.rst", "api/wildboar/linear_model/index.rst", "api/wildboar/metrics/_cluster/index.rst", "api/wildboar/metrics/_counterfactual/index.rst", "api/wildboar/metrics/index.rst", "api/wildboar/model_selection/_cv/index.rst", "api/wildboar/model_selection/_outlier/index.rst", "api/wildboar/model_selection/index.rst", "api/wildboar/transform/_base/index.rst", "api/wildboar/transform/_conv/index.rst", "api/wildboar/transform/_diff/index.rst", "api/wildboar/transform/_hydra/index.rst", "api/wildboar/transform/_interval/index.rst", "api/wildboar/transform/_matrix_profile/index.rst", "api/wildboar/transform/_pivot/index.rst", "api/wildboar/transform/_rocket/index.rst", "api/wildboar/transform/_sax/index.rst", "api/wildboar/transform/_shapelet/index.rst", "api/wildboar/transform/index.rst", "api/wildboar/tree/_base/index.rst", "api/wildboar/tree/_ptree/index.rst", "api/wildboar/tree/_tree/index.rst", "api/wildboar/tree/index.rst", "api/wildboar/utils/_parallel/index.rst", "api/wildboar/utils/_testing/index.rst", "api/wildboar/utils/decorators/index.rst", "api/wildboar/utils/estimator_checks/index.rst", "api/wildboar/utils/index.rst", "api/wildboar/utils/plot/index.rst", "api/wildboar/utils/validation/index.rst", "api/wildboar/utils/variable_len/index.rst", "api/wildboar/version/index.rst", "guide.rst", "guide/annotate.rst", "guide/basics.rst", "guide/datasets.rst", "guide/datasets/preprocess.rst", "guide/datasets/repositories.rst", "guide/glossary.rst", "guide/metrics.rst", "guide/metrics/distance.rst", "guide/metrics/elastic.rst", "guide/supervised.rst", "guide/supervised/ensemble.rst", "guide/supervised/transform.rst", "guide/supervised/trees.rst", "guide/unsupervised.rst", "guide/unsupervised/outlier.rst", "guide/unsupervised/outlier/generation.rst", "index.rst", "more/whatsnew.rst", "quickstart.rst", "quickstart/getting-started.rst", "quickstart/install.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.annotate._motifs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.annotate._segment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.annotate</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets._filter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets._repository</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets.outlier</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets.preprocess</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance._distance</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance._matrix_profile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance._multi_metric</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance._neighbour</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance.dtw</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.ensemble._ensemble</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.ensemble</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain._importance</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain.counterfactual._helper</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain.counterfactual._nn</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain.counterfactual._proto</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain.counterfactual._sf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain.counterfactual</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.linear_model._hydra</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.linear_model._rocket</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.linear_model._shapelet</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.linear_model._transform</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.linear_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.metrics._cluster</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.metrics._counterfactual</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.model_selection._cv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.model_selection._outlier</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.model_selection</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._conv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._diff</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._hydra</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._interval</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._matrix_profile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._pivot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._rocket</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._sax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._shapelet</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.tree._base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.tree._ptree</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.tree._tree</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.tree</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils._parallel</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils._testing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils.decorators</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils.estimator_checks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils.plot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils.validation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils.variable_len</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.version</span></code>", "User guide", "Annotate", "Time series", "Datasets", "Pre-processing", "Repositories", "Glossary", "Metrics", "Distance", "Elastic metrics", "Supervised learning", "Ensemble estimators", "Transform-based estimators", "Tree-based estimators", "Unsupervised learning", "Outlier detection", "Outlier detection benchmarks", "Wildboar", "What\u2019s new", "Quickstart", "Getting started", "Install wildboar"], "terms": {"librari": [0, 25, 78], "tempor": [0, 22, 23, 25, 63, 78, 81], "machin": [0, 25, 68, 78], "learn": [0, 8, 14, 25, 29, 39, 40, 47, 48, 50, 55, 56, 58, 67, 77, 78, 79], "includ": [0, 1, 3, 8, 11, 15, 23, 25, 56, 58, 69, 74, 78, 79, 81], "numer": [0, 23, 25, 56, 58, 78, 81], "algorithm": [0, 8, 13, 14, 15, 22, 23, 25, 63, 65, 68, 78, 79], "seamlessli": [0, 25, 78, 81], "integr": [0, 25, 66, 69, 78], "them": [0, 8, 25, 57, 63, 65, 66, 78], "scikit": [0, 8, 25, 29, 39, 40, 47, 48, 50, 55, 56, 58, 67, 77, 78, 79, 81], "iseo": [0, 25, 63, 65, 78], "boolean": [0, 14, 25, 59, 78], "indic": [0, 7, 10, 14, 15, 16, 17, 19, 23, 25, 32, 33, 48, 49, 50, 51, 59, 67, 78], "valu": [0, 4, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 63, 64, 65, 66, 67, 69, 72, 78, 79, 81], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 69, 71, 72, 77, 78, 79, 81, 82], "end": [0, 18, 24, 25, 48, 49, 50, 51, 56, 58, 63, 65, 67, 78], "sequenc": [0, 9, 25, 56, 57, 58, 63, 65, 68, 78], "time": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 30, 31, 32, 33, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 57, 58, 59, 64, 65, 66, 67, 68, 69, 71, 72, 73, 77, 78], "seri": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 30, 31, 32, 33, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 58, 59, 64, 65, 66, 67, 68, 69, 71, 72, 73, 77, 78], "see": [0, 3, 7, 8, 10, 13, 15, 19, 23, 32, 33, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 69, 78, 79], "section": [0, 3, 7, 18, 24, 78], "user": [0, 3, 4, 7, 8, 10, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 66, 69, 77, 78, 81, 82], "guid": [0, 3, 4, 7, 8, 10, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 78], "more": [0, 3, 7, 8, 10, 13, 15, 16, 17, 18, 23, 24, 31, 32, 33, 43, 46, 47, 49, 50, 51, 56, 58, 66, 68, 69, 77, 78, 81], "detail": [0, 3, 7, 8, 15, 39, 47, 69, 78, 79], "exampl": [0, 3, 7, 8, 13, 14, 15, 16, 17, 19, 21, 23, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 57, 59, 63, 64, 65, 66, 69, 78], "motif": [0, 1, 3, 11, 15, 78], "find": [0, 1, 2, 3, 10, 15, 64, 78, 82], "segment": [0, 2, 3, 78], "chang": [0, 2, 3, 7, 14, 16, 17, 19, 22, 23, 32, 33, 50, 51, 63, 64, 66, 69, 78], "regim": [0, 2, 3, 78], "all": [0, 1, 3, 4, 6, 7, 8, 10, 11, 13, 15, 16, 17, 18, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 44, 46, 47, 48, 50, 51, 53, 55, 56, 57, 58, 64, 65, 66, 68, 69, 78, 79, 81, 82], "estim": [0, 4, 8, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 58, 61, 64, 67, 69, 71, 77, 78, 79, 81], "baseestim": [0, 4, 39, 47, 53, 78], "counterfactualmixin": [0, 4, 78], "mixin": [0, 4, 16, 29, 39, 41, 43, 44, 46, 47, 48, 50, 78], "explainermixin": [0, 4, 78], "is_counterfactu": [0, 4, 21, 78], "check": [0, 4, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 58, 65, 67, 78], "is_explain": [0, 4, 78], "an": [0, 4, 8, 10, 13, 15, 16, 17, 21, 26, 30, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 56, 58, 63, 64, 66, 67, 69, 71, 72, 77, 78, 79, 82], "load": [0, 6, 7, 66, 78], "from": [0, 1, 3, 6, 7, 8, 14, 16, 17, 19, 21, 22, 23, 26, 27, 28, 29, 30, 32, 33, 35, 36, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 57, 59, 64, 65, 66, 68, 69, 77, 78, 79, 81], "import": [0, 7, 14, 16, 17, 18, 24, 35, 36, 40, 41, 42, 44, 46, 47, 48, 49, 50, 51, 57, 59, 63, 64, 65, 66, 69, 77, 78, 81], "load_dataset": [0, 7, 41, 47, 49, 51, 64, 65, 66, 69, 78, 81], "x": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 59, 63, 64, 65, 66, 68, 69, 77, 78, 81], "y": [0, 4, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 64, 65, 66, 68, 69, 77, 78, 81], "gunpoint": [0, 7, 41, 47, 49, 51, 64, 65, 66, 78], "shape": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 57, 63, 64, 65, 67, 68, 69, 78, 81], "200": [0, 7, 64, 78], "60": [0, 7, 64, 69, 78], "bundl": [0, 6, 7, 64, 66, 77, 78], "handl": [0, 6, 7, 64, 78], "jsonrepositori": [0, 6, 7, 66, 78], "A": [0, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 57, 63, 64, 65, 66, 67, 68, 69, 77, 78, 81], "repositori": [0, 6, 7, 64, 78, 81], "collect": [0, 6, 7, 19, 23, 41, 47, 66, 71, 77, 78, 81, 82], "npbundl": [0, 6, 7, 78], "numpi": [0, 6, 7, 16, 17, 18, 24, 26, 30, 37, 40, 41, 44, 47, 50, 51, 63, 65, 66, 67, 69, 78, 79, 81, 82], "binari": [0, 6, 7, 8, 16, 17, 58, 77, 78, 82], "file": [0, 6, 7, 66, 78, 82], "clear_cach": [0, 7, 78], "clear": [0, 7, 78], "cach": [0, 6, 7, 64, 78], "delet": [0, 7, 78], "get_bundl": [0, 6, 7, 78], "get": [0, 4, 6, 7, 9, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 65, 78], "get_repositori": [0, 7, 78], "name": [0, 4, 6, 7, 9, 10, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 58, 64, 65, 66, 68, 69, 78, 81], "install_repositori": [0, 7, 66, 78], "instal": [0, 7, 64, 77, 78], "list_bundl": [0, 7, 66, 78], "list": [0, 1, 3, 5, 6, 7, 10, 15, 16, 17, 18, 19, 23, 24, 27, 28, 29, 30, 32, 33, 41, 43, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 64, 66, 69, 77, 78, 79], "specifi": [0, 6, 7, 16, 17, 18, 24, 32, 33, 43, 46, 47, 50, 51, 57, 64, 65, 66, 68, 69, 77, 78, 81, 82], "list_collect": [0, 7, 78], "list_dataset": [0, 7, 66, 78], "list_repositori": [0, 7, 66, 78], "kei": [0, 6, 7, 10, 15, 16, 17, 19, 23, 32, 33, 41, 43, 46, 47, 49, 50, 51, 58, 66, 78], "gener": [0, 7, 8, 13, 14, 15, 16, 17, 18, 19, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 44, 46, 47, 48, 49, 50, 51, 55, 64, 77, 78, 81], "load_gun_point": [0, 7, 40, 41, 44, 47, 48, 49, 50, 51, 57, 64, 78], "load_synthetic_control": [0, 7, 16, 17, 78, 81], "synthetic_control": [0, 7, 78, 81], "load_two_lead_ecg": [0, 7, 14, 16, 17, 35, 36, 42, 47, 69, 78, 81], "twoleadecg": [0, 7, 64, 66, 69, 78, 81], "refresh_repositori": [0, 7, 66, 78], "refresh": [0, 6, 7, 66, 78], "set_cache_dir": [0, 7, 66, 78], "global": [0, 7, 20, 22, 23, 32, 33, 41, 47, 66, 78], "directori": [0, 7, 66, 78, 82], "synthet": [0, 8, 77, 78], "us": [0, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 64, 65, 66, 67, 68, 69, 73, 77, 78, 79, 81, 82], "density_outli": [0, 8, 78], "densitii": [0, 8, 78], "emmott_outli": [0, 8, 77, 78], "difficulti": [0, 8, 77, 78], "kmeans_outli": [0, 8, 78], "k": [0, 8, 13, 15, 16, 17, 18, 20, 23, 24, 49, 51, 72, 77, 78, 79], "mean": [0, 7, 8, 9, 10, 13, 14, 15, 16, 17, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 41, 44, 46, 47, 48, 49, 50, 51, 65, 68, 69, 78, 79, 81], "majority_outli": [0, 8, 78], "label": [0, 4, 6, 7, 8, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 47, 48, 49, 50, 51, 56, 57, 58, 64, 66, 71, 76, 78, 81], "major": [0, 8, 14, 66, 76, 78], "inlier": [0, 8, 16, 17, 34, 36, 77, 78], "minority_outli": [0, 8, 77, 78], "fraction": [0, 1, 2, 3, 8, 11, 14, 15, 16, 17, 18, 22, 23, 24, 32, 33, 34, 36, 42, 47, 48, 49, 50, 51, 77, 78], "minor": [0, 8, 66, 76, 78, 79], "maxabs_scal": [0, 9, 65, 78], "scale": [0, 8, 9, 16, 17, 26, 30, 40, 44, 45, 47, 57, 65, 68, 77, 78], "each": [0, 2, 3, 4, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 59, 63, 65, 66, 67, 68, 69, 78, 81], "its": [0, 9, 11, 15, 41, 42, 47, 56, 57, 58, 64, 78, 82], "maximum": [0, 1, 3, 9, 13, 14, 15, 16, 17, 18, 24, 34, 36, 41, 44, 46, 47, 49, 50, 51, 57, 65, 67, 69, 78], "absolut": [0, 9, 32, 33, 65, 78], "minmax_scal": [0, 9, 45, 47, 64, 65, 78], "along": [0, 9, 18, 24, 26, 30, 65, 78], "dimens": [0, 9, 14, 26, 30, 32, 33, 42, 47, 56, 58, 63, 64, 65, 67, 69, 78, 79, 81], "named_preprocess": [0, 9, 78], "preprocessor": [0, 9, 65, 78], "standard": [0, 9, 16, 17, 21, 26, 30, 40, 41, 47, 65, 78, 81], "truncat": [0, 9, 65, 78], "shortest": [0, 9, 65, 78], "fast": [0, 13, 15, 26, 30, 40, 44, 46, 47, 68, 78], "comput": [0, 1, 2, 3, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 31, 32, 33, 42, 43, 47, 48, 49, 50, 51, 68, 69, 73, 78, 79], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 77, 78, 79, 81, 82], "modul": [0, 15, 23, 64, 65, 77, 78, 79, 81], "pair": [0, 1, 3, 7, 11, 15, 16, 17, 32, 33, 43, 46, 47, 49, 50, 51, 58, 78], "pairwis": [0, 15, 78], "between": [0, 1, 3, 9, 10, 13, 14, 15, 19, 22, 23, 31, 32, 33, 38, 46, 47, 65, 68, 69, 77, 78, 81], "subsequ": [0, 1, 3, 10, 11, 15, 16, 17, 42, 44, 47, 78, 79], "kmean": [0, 13, 15, 78, 79], "cluster": [0, 8, 13, 15, 77, 78, 79], "support": [0, 8, 10, 13, 15, 16, 17, 22, 23, 32, 33, 41, 44, 50, 51, 63, 64, 65, 66, 68, 77, 78, 79, 81], "weight": [0, 13, 14, 15, 16, 17, 26, 27, 28, 29, 30, 32, 33, 40, 43, 47, 48, 49, 50, 51, 68, 78], "kmedoid": [0, 13, 15, 78, 79], "kneighbourclassifi": [0, 13, 15, 78], "classifi": [0, 8, 13, 15, 16, 17, 20, 22, 23, 24, 27, 28, 29, 30, 40, 47, 49, 50, 51, 55, 72, 78, 79, 81], "implement": [0, 13, 14, 15, 16, 17, 18, 22, 23, 24, 27, 30, 32, 33, 40, 41, 44, 47, 65, 66, 68, 69, 72, 77, 78, 79, 81], "nearest": [0, 11, 13, 15, 20, 21, 23, 78], "neighbour": [0, 1, 3, 13, 15, 78, 79], "matrix_profil": [0, 1, 2, 3, 11, 15, 78], "matrix": [0, 1, 2, 3, 11, 14, 15, 16, 17, 19, 21, 23, 27, 28, 29, 30, 42, 47, 48, 49, 50, 51, 69, 78, 81], "profil": [0, 1, 2, 3, 11, 15, 42, 47, 78], "paired_dist": [0, 10, 15, 69, 78, 79], "th": [0, 10, 15, 16, 17, 32, 33, 78], "paired_subsequence_dist": [0, 10, 15, 69, 78], "minimum": [0, 1, 3, 6, 7, 9, 10, 14, 15, 16, 17, 18, 24, 41, 44, 46, 47, 49, 50, 51, 56, 58, 66, 68, 69, 78], "paired_subsequence_match": [0, 10, 15, 78], "match": [0, 1, 3, 10, 11, 15, 21, 66, 68, 69, 78, 79], "subsequnc": [0, 10, 15, 78], "pairwise_dist": [0, 10, 15, 68, 69, 78, 79], "pairwise_subsequence_dist": [0, 10, 15, 68, 69, 78], "subsequence_match": [0, 1, 3, 10, 15, 69, 78], "align": [0, 14, 18, 21, 24, 32, 33, 78], "sever": [0, 14, 48, 49, 50, 51, 68, 78, 79, 81], "ddtw_distanc": [0, 14, 78], "deriv": [0, 14, 16, 32, 33, 68, 78], "dynam": [0, 14, 16, 17, 49, 50, 51, 68, 69, 78], "warp": [0, 13, 14, 15, 49, 51, 68, 69, 78], "dtw_align": [0, 14, 78], "dtw_averag": [0, 14, 78], "barycent": [0, 13, 14, 15, 78], "averag": [0, 14, 16, 17, 32, 33, 78], "dba": [0, 14, 78], "dtw_distanc": [0, 14, 78], "dtw_envelop": [0, 14, 78], "envelop": [0, 14, 78], "lb_keogh": [0, 14, 78], "dtw_lb_keogh": [0, 14, 78], "lower": [0, 8, 10, 14, 15, 16, 17, 32, 33, 43, 44, 46, 47, 49, 50, 51, 57, 69, 78], "bound": [0, 14, 16, 17, 34, 36, 43, 46, 47, 49, 50, 51, 69, 78], "dtw_map": [0, 14, 78], "optim": [0, 14, 69, 78, 79, 82], "path": [0, 14, 22, 23, 48, 49, 50, 51, 66, 78, 82], "two": [0, 13, 14, 15, 16, 17, 26, 30, 40, 41, 43, 46, 47, 49, 50, 51, 57, 66, 68, 69, 74, 78, 79, 81], "given": [0, 2, 3, 8, 10, 11, 13, 14, 15, 16, 17, 18, 24, 26, 27, 28, 29, 30, 38, 45, 47, 48, 49, 50, 51, 67, 71, 78], "jeong_weight": [0, 14, 78], "describ": [0, 8, 14, 22, 23, 40, 47, 64, 66, 69, 78, 79], "jeong": [0, 14, 78], "et": [0, 1, 2, 3, 8, 11, 14, 15, 16, 17, 40, 47, 49, 51, 77, 78, 79], "al": [0, 1, 2, 3, 8, 11, 14, 15, 16, 17, 40, 47, 49, 51, 77, 78, 79], "2011": [0, 14, 78], "r4bf7d056babf": [0, 14, 78], "1": [0, 1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 69, 77, 78, 81, 82], "_": [0, 14, 78], "wddtw_distanc": [0, 14, 78], "wdtw_align": [0, 14, 78], "wdtw_distanc": [0, 14, 78], "method": [0, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 61, 72, 78, 79, 81], "classif": [0, 8, 13, 14, 15, 16, 17, 26, 27, 28, 29, 30, 32, 33, 35, 36, 40, 44, 46, 47, 48, 49, 50, 51, 58, 74, 77, 78, 81], "regress": [0, 8, 16, 17, 29, 30, 48, 49, 50, 51, 73, 77, 78, 81], "detect": [0, 8, 17, 69, 78], "baggingclassifi": [0, 16, 17, 78, 79], "bag": [0, 16, 17, 78], "baggingregressor": [0, 16, 17, 78, 79], "regressor": [0, 16, 17, 24, 27, 28, 29, 30, 48, 50, 51, 55, 72, 78], "basebag": [0, 16, 17, 78], "extrashapelettreesclassifi": [0, 16, 17, 78], "extrem": [0, 16, 17, 78], "random": [0, 8, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 28, 30, 31, 33, 34, 35, 36, 37, 40, 41, 43, 44, 46, 47, 49, 50, 51, 72, 73, 78, 81], "shapelet": [0, 1, 3, 10, 11, 15, 16, 17, 18, 21, 22, 23, 24, 28, 30, 44, 46, 47, 50, 51, 74, 78, 81], "extrashapelettreesregressor": [0, 16, 17, 78, 79], "intervalforestclassifi": [0, 16, 17, 78], "interv": [0, 8, 16, 17, 18, 24, 32, 33, 41, 45, 47, 50, 51, 77, 78, 81], "intervalforestregressor": [0, 16, 17, 78], "isolationshapeletforest": [0, 16, 17, 78], "isol": [0, 16, 17, 78, 82], "forest": [0, 8, 16, 17, 22, 23, 49, 51, 78, 81], "pivotforestclassifi": [0, 16, 17, 78], "proximityforestclassifi": [0, 16, 17, 72, 78], "proxim": [0, 16, 17, 19, 23, 32, 33, 49, 51, 78], "rocketforestclassifi": [0, 16, 17, 78, 79], "rocket": [0, 16, 17, 27, 30, 44, 47, 78, 81], "rocketforestregressor": [0, 16, 17, 78, 79], "shapeletforestclassifi": [0, 16, 17, 72, 78, 79, 81], "shapeletforestembed": [0, 16, 17, 78], "shapeletforestregressor": [0, 16, 17, 72, 78, 79], "explan": [0, 4, 18, 19, 20, 21, 22, 23, 24, 32, 33, 78], "amplitudeimport": [0, 18, 24, 78], "equi": [0, 18, 24, 78], "probabl": [0, 4, 8, 13, 15, 16, 17, 18, 21, 24, 43, 44, 47, 48, 49, 50, 51, 78], "amplitud": [0, 18, 24, 57, 78], "intervalimport": [0, 18, 24, 78, 81], "shapeletimport": [0, 18, 24, 78], "plot_import": [0, 18, 24, 78], "plot": [0, 4, 18, 20, 21, 22, 23, 24, 65, 78, 81], "boxplot": [0, 18, 24, 78], "kneighborscounterfactu": [0, 20, 23, 78], "fit": [0, 4, 8, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 73, 78, 81], "neighbor": [0, 11, 15, 20, 21, 23, 78], "prototypecounterfactu": [0, 21, 23, 78], "model": [0, 8, 16, 17, 21, 23, 26, 27, 28, 29, 30, 36, 48, 50, 51, 73, 77, 78], "agnost": [0, 2, 3, 21, 23, 78], "approach": [0, 21, 23, 26, 30, 40, 47, 64, 77, 78, 81, 82], "construct": [0, 8, 21, 23, 32, 33, 45, 47, 50, 51, 56, 58, 72, 77, 78], "shapeletforestcounterfactu": [0, 22, 23, 78], "singl": [0, 13, 15, 16, 17, 19, 23, 26, 30, 32, 33, 37, 40, 44, 47, 48, 49, 50, 51, 54, 63, 66, 67, 69, 78, 79], "sampl": [0, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 56, 57, 58, 63, 64, 65, 66, 67, 69, 74, 77, 78, 79, 81], "linear": [0, 30, 78], "both": [0, 8, 10, 11, 14, 15, 30, 38, 47, 56, 58, 63, 65, 66, 68, 69, 74, 77, 78], "hydraclassifi": [0, 26, 30, 40, 47, 73, 78, 79], "dictionari": [0, 6, 7, 16, 17, 21, 22, 23, 26, 30, 40, 43, 46, 47, 49, 50, 51, 58, 66, 78, 79], "convolut": [0, 16, 17, 26, 30, 38, 40, 44, 47, 50, 51, 73, 78, 79], "kernel": [0, 8, 16, 17, 26, 27, 28, 29, 30, 38, 40, 44, 47, 48, 50, 51, 73, 77, 78], "randomshapeletclassifi": [0, 28, 30, 78], "randomshapeletregressor": [0, 28, 30, 78], "rocketclassifi": [0, 27, 30, 73, 78, 79], "rocketregressor": [0, 27, 30, 73, 78, 79], "evalu": [0, 16, 17, 21, 22, 23, 32, 33, 50, 51, 55, 64, 78, 81], "compactness_scor": [0, 32, 33, 78], "compact": [0, 32, 33, 78], "score": [0, 4, 8, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 48, 49, 50, 51, 77, 78, 81], "plausability_scor": [0, 32, 33, 78], "plausibl": [0, 32, 33, 78], "proximity_scor": [0, 32, 33, 78], "redudancy_scor": [0, 32, 33, 78], "redud": [0, 32, 33, 78], "relative_proximity_scor": [0, 32, 33, 78], "rel": [0, 13, 15, 32, 33, 69, 78], "silhouette_sampl": [0, 31, 33, 78], "silhouett": [0, 31, 33, 78], "coeffici": [0, 16, 17, 27, 28, 29, 30, 31, 33, 48, 50, 51, 78], "silhouette_scor": [0, 31, 33, 78], "validity_scor": [0, 32, 33, 78], "valid": [0, 7, 19, 23, 26, 30, 32, 33, 34, 36, 48, 49, 50, 51, 56, 63, 64, 66, 78, 79], "select": [0, 8, 10, 13, 15, 19, 23, 31, 33, 36, 41, 46, 47, 64, 65, 77, 78, 81, 82], "repeatedoutliersplit": [0, 34, 36, 78], "repeat": [0, 18, 24, 34, 36, 78], "cross": [0, 26, 30, 34, 36, 78], "outlier_train_test_split": [0, 16, 17, 35, 36, 78], "train": [0, 6, 7, 13, 15, 16, 17, 32, 33, 34, 35, 36, 44, 47, 48, 49, 50, 51, 64, 65, 66, 78, 81], "test": [0, 7, 13, 15, 16, 17, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 48, 49, 50, 51, 53, 55, 59, 64, 65, 66, 69, 72, 78, 81], "split": [0, 7, 16, 17, 26, 30, 34, 35, 36, 48, 49, 50, 51, 66, 68, 78, 81], "raw": [0, 47, 78], "tabular": [0, 47, 78], "represent": [0, 16, 17, 47, 50, 51, 73, 77, 78, 81], "difftransform": [0, 39, 40, 47, 78], "featuretransform": [0, 41, 47, 78], "number": [0, 1, 2, 3, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 64, 67, 69, 78, 81], "featur": [0, 16, 17, 27, 28, 29, 30, 37, 41, 44, 47, 48, 50, 51, 54, 64, 65, 73, 78, 79, 82], "hydratransform": [0, 40, 47, 78, 79], "intervaltransform": [0, 8, 41, 47, 77, 78, 79], "emb": [0, 41, 47, 78], "per": [0, 8, 18, 22, 23, 24, 26, 30, 40, 41, 43, 47, 78], "matrixprofiletransform": [0, 42, 47, 78], "paa": [0, 45, 47, 78], "peicewis": [0, 45, 47, 78], "aggreg": [0, 22, 23, 45, 47, 78], "approxim": [0, 8, 45, 47, 78], "pivottransform": [0, 43, 47, 78, 79], "pivot": [0, 8, 16, 17, 43, 47, 49, 50, 51, 72, 78], "proximitytransform": [0, 43, 47, 78], "condit": [0, 43, 47, 78], "randomshapelettransform": [0, 46, 47, 78, 79], "tranform": [0, 46, 47, 78], "rockettransform": [0, 44, 47, 78, 79, 81], "sax": [0, 18, 24, 32, 33, 45, 47, 78], "symbol": [0, 45, 47, 78], "convolv": [0, 26, 30, 38, 47, 78], "appli": [0, 7, 8, 38, 47, 48, 49, 50, 51, 64, 78], "1d": [0, 38, 47, 56, 58, 67, 69, 78], "over": [0, 16, 17, 18, 24, 32, 33, 38, 43, 46, 47, 49, 50, 51, 68, 78, 79, 81], "piecewice_aggregate_approxim": [0, 45, 47, 78], "symbolic_aggregate_approxim": [0, 45, 47, 78], "extrashapelettreeclassifi": [0, 50, 51, 74, 78], "extra": [0, 4, 6, 7, 8, 18, 20, 21, 22, 23, 24, 50, 51, 66, 69, 77, 78], "extrashapelettreeregressor": [0, 50, 51, 74, 78, 79], "intervaltreeclassifi": [0, 50, 51, 78], "intervaltreeregressor": [0, 50, 51, 78], "pivottreeclassifi": [0, 50, 51, 78], "proximitytreeclassifi": [0, 49, 51, 78, 79], "branch": [0, 49, 51, 72, 78], "rockettreeclassifi": [0, 50, 51, 78, 79], "rockettreeregressor": [0, 50, 51, 78, 79], "shapelettreeclassifi": [0, 48, 49, 50, 51, 74, 78, 79], "shapelettreeregressor": [0, 16, 17, 50, 51, 74, 78, 79], "check_arrai": [0, 56, 58, 78], "input": [0, 4, 8, 10, 11, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 33, 35, 36, 38, 39, 42, 43, 45, 47, 48, 49, 50, 51, 56, 57, 58, 59, 67, 69, 78, 81], "check_x_i": [0, 56, 58, 78], "mp": [1, 3, 11, 15], "none": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 66, 69], "window": [1, 2, 3, 11, 13, 14, 15, 18, 24, 32, 33, 42, 45, 47, 66, 68, 82], "auto": [1, 3, 13, 15, 16, 17, 21, 23, 43, 47, 49, 51], "exclud": [1, 2, 3, 10, 11, 15, 42, 47], "0": [1, 2, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 34, 35, 36, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 63, 64, 65, 66, 68, 69, 77, 81, 82], "2": [1, 2, 3, 8, 11, 14, 15, 16, 17, 18, 19, 23, 24, 27, 28, 29, 30, 34, 35, 36, 38, 41, 42, 44, 47, 48, 49, 50, 51, 56, 58, 59, 63, 64, 66, 67, 68, 69, 81], "max_dist": [1, 3], "best": [1, 3, 10, 15, 16, 17, 19, 21, 23, 27, 28, 29, 30, 46, 47, 48, 50, 51, 69], "max_neighbour": [1, 3], "10": [1, 3, 10, 15, 16, 17, 18, 24, 26, 27, 28, 29, 30, 41, 43, 44, 46, 47, 49, 50, 51, 57, 69, 82], "min_neighbour": [1, 3], "max_motif": [1, 3], "return_dist": [1, 3, 10, 15], "fals": [1, 2, 3, 7, 10, 11, 14, 15, 16, 17, 18, 21, 22, 23, 24, 28, 30, 32, 33, 45, 47, 55, 56, 57, 58, 63, 64, 66, 81], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 81], "paramet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 66, 68, 69, 77, 79, 81], "arrai": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 59, 63, 65, 66, 67, 69, 81], "like": [1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 67], "n_sampl": [1, 2, 3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 63, 64, 65, 67, 69, 79, 81], "n_timestep": [1, 2, 3, 4, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 63, 64, 65, 67, 69, 81], "ndarrai": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 56, 58, 59, 65, 81], "profile_s": [1, 2, 3, 11, 15], "option": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 64, 66, 69, 77, 81, 82], "int": [1, 2, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 56, 57, 58, 64, 69, 77], "float": [1, 2, 3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 59, 63, 64, 68], "size": [1, 2, 3, 9, 10, 11, 13, 14, 15, 16, 17, 18, 22, 23, 24, 26, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 44, 45, 46, 47, 64, 81], "math": [1, 3, 10, 15, 69], "ceil": [1, 3, 10, 15, 50, 51], "exact": [1, 2, 3, 10, 11, 13, 14, 15, 16, 17, 18, 24, 26, 30, 37, 40, 42, 44, 47], "exclus": [1, 2, 3, 10, 11, 15, 42, 47], "zone": [1, 3, 10, 11, 15, 42, 47], "str": [1, 3, 5, 6, 7, 8, 9, 10, 13, 15, 16, 17, 18, 19, 23, 24, 26, 30, 31, 32, 33, 41, 43, 45, 46, 47, 49, 50, 51, 54, 56, 57, 58, 64], "distanc": [1, 2, 3, 8, 16, 17, 18, 22, 23, 24, 25, 31, 32, 33, 43, 46, 47, 49, 50, 51, 68, 72, 74, 79], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 64, 65, 66, 67, 69, 77, 79, 81], "bool": [1, 2, 3, 4, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59], "main": [1, 3, 64, 81], "motif_indici": [1, 3], "indici": [1, 3, 10, 15, 34, 36], "motif_dist": [1, 3], "refer": [1, 2, 3, 8, 11, 14, 15, 16, 17, 20, 21, 22, 23, 26, 30, 32, 33, 40, 41, 44, 46, 47, 49, 51, 69, 78], "yeh": [1, 3, 11, 15], "c": [1, 3, 11, 15, 16, 17, 56, 58, 68, 81, 82], "m": [1, 3, 11, 14, 15, 32, 33, 68, 69, 82], "2016": [1, 3, 11, 15], "similar": [1, 3, 11, 15, 19, 23, 42, 47, 65, 68, 69, 73, 81], "join": [1, 2, 3, 11, 15, 42, 47], "unifi": [1, 3, 11, 15], "view": [1, 3, 11, 15], "discord": [1, 3, 11, 15], "In": [1, 2, 3, 8, 11, 13, 14, 15, 16, 17, 22, 23, 26, 27, 28, 29, 30, 41, 47, 48, 49, 50, 51, 63, 64, 65, 66, 68, 69, 71, 77, 79, 81], "ieee": [1, 3, 11, 15, 22, 23, 68], "16th": [1, 3, 11, 15], "intern": [1, 2, 3, 11, 14, 15, 16, 17, 22, 23, 50, 51, 68, 69], "confer": [1, 2, 3, 11, 14, 15, 22, 23, 68, 69], "data": [1, 2, 3, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 19, 22, 23, 26, 27, 28, 29, 30, 31, 33, 35, 36, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 56, 58, 64, 65, 66, 68, 69, 77], "mine": [1, 2, 3, 11, 15, 16, 17, 22, 23, 26, 30, 40, 41, 44, 47, 49, 51, 69], "icdm": [1, 3, 11, 15, 22, 23], "mpi": [2, 3, 11, 15], "n_segment": [2, 3], "boundri": [2, 3], "return_arc_curv": [2, 3], "If": [2, 3, 4, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 64, 66, 69, 77, 82], "index": [2, 3, 10, 11, 13, 14, 15, 16, 17, 18, 21, 24, 48, 49, 50, 51, 63, 67, 69], "must": [2, 3, 8, 14, 18, 24, 32, 33, 41, 44, 66, 68, 77, 82], "unless": [2, 3, 16, 17, 43, 46, 47, 48, 49, 50, 51, 56, 58, 66, 68], "identifi": [2, 3, 16, 17, 46, 47, 50, 51, 56, 58, 63, 66, 69, 81], "ignor": [2, 3, 10, 13, 14, 15, 16, 17, 18, 24, 32, 33, 34, 36, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 63], "self": [2, 3, 4, 11, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64], "region": [2, 3, 81], "around": [2, 3, 13, 15, 31, 33], "express": [2, 3, 8, 11, 15, 16, 17, 32, 33, 42, 47, 50, 51, 64, 66], "arc": [2, 3], "curv": [2, 3], "start": [2, 3, 10, 15, 18, 24], "arc_curv": [2, 3], "gharghabi": [2, 3], "shaghayegh": [2, 3], "2017": [2, 3], "viii": [2, 3], "domain": [2, 3, 57], "onlin": [2, 3], "semant": [2, 3], "superhuman": [2, 3], "perform": [2, 3, 13, 15, 16, 17, 32, 33, 41, 44, 47, 55, 56, 58, 64, 65, 69, 73], "level": [2, 3], "proceed": [2, 3, 8, 68, 69, 77], "get_metadata_rout": [4, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "metadata": [4, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "rout": [4, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "thi": [4, 6, 7, 8, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 58, 64, 65, 69, 73, 78, 79, 81, 82], "object": [4, 8, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 57, 58, 64, 68, 69, 81], "pleas": [4, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "how": [4, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 81], "mechan": [4, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "work": [4, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 69, 79, 81, 82], "metadatarequest": [4, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "encapsul": [4, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "inform": [4, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 81], "get_param": [4, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "deep": [4, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "true": [4, 7, 10, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 59, 63, 64, 67, 68, 69], "default": [4, 7, 8, 10, 11, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 64, 65, 66, 68, 69, 77, 79, 81], "contain": [4, 7, 8, 10, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 58, 59, 63, 66, 69], "subobject": [4, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "ar": [4, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 57, 58, 63, 64, 65, 66, 68, 69, 71, 72, 74, 77, 79, 81, 82], "param": [4, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "dict": [4, 5, 6, 7, 10, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 64, 66], "map": [4, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 71], "set_param": [4, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "set": [4, 7, 8, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 64, 66, 69, 79, 81, 82], "simpl": [4, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 77, 82], "well": [4, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "nest": [4, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "pipelin": [4, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 81], "latter": [4, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "have": [4, 9, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 58, 63, 64, 65, 67, 68, 79, 81, 82], "form": [4, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 81], "compon": [4, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 66], "__": [4, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "so": [4, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 64, 81], "": [4, 8, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 68, 69, 77, 81], "possibl": [4, 11, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 71, 82], "updat": [4, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "instanc": [4, 8, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 58, 66], "counterfactu": [4, 24, 25, 32, 33, 81], "explain": [4, 25, 32, 33, 81], "term": [4, 16, 17, 20, 21, 22, 23, 44, 47, 67, 68], "close": [4, 20, 21, 22, 23, 56, 58], "desir": [4, 8, 19, 20, 21, 22, 23, 32, 33, 40, 47, 69, 77], "counterfact": [4, 20, 21, 22, 23], "closensess": [4, 20, 21, 22, 23], "fit_explain": [4, 18, 20, 21, 22, 23, 24], "kwarg": [4, 7, 18, 20, 21, 22, 23, 24], "argument": [4, 7, 16, 17, 18, 19, 20, 21, 22, 23, 24, 43, 46, 47, 49, 50, 51, 54, 66, 68, 69, 79, 81, 82], "ax": [4, 18, 20, 21, 22, 23, 24, 57, 65], "make_dict_filt": 5, "filter": [5, 7, 16, 17, 44, 47, 81], "make": [5, 56, 58, 68], "new": [5, 7, 13, 15, 16, 17, 19, 21, 22, 23, 34, 36, 55, 65, 81, 82], "subject": 5, "op": 5, "verb": 5, "callabl": [5, 7, 9, 10, 15, 18, 19, 22, 23, 24, 26, 30, 31, 32, 33, 54], "make_filt": 5, "creat": [5, 7, 8, 16, 17, 21, 48, 49, 50, 51, 63, 66, 82], "make_list_filt": 5, "base": [5, 6, 7, 8, 14, 16, 17, 18, 19, 23, 25, 26, 29, 30, 32, 33, 37, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 66, 68, 79, 82], "string": [5, 7, 16, 17, 26, 30, 43, 46, 47, 49, 50, 51, 64, 65, 66], "make_str_filt": 5, "version": [6, 7, 13, 15, 16, 17, 19, 22, 23, 27, 28, 29, 30, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 66, 77, 81, 82], "tag": [6, 7, 55, 66], "descript": [6, 7, 8, 54, 66, 77], "uniqu": [6, 7, 32, 33, 66], "human": [6, 7], "readabl": [6, 7], "get_collect": [6, 7], "get_filenam": [6, 7], "ext": [6, 7], "extens": [6, 7, 66], "filenam": [6, 7], "archiv": [6, 7], "zipfil": [6, 7], "sort": [6, 7, 16, 17], "zip": [6, 7, 64, 66], "n_training_sampl": [6, 7], "url": [6, 7, 66], "properti": [6, 7, 16, 17, 41, 44], "download_url": [6, 7], "templat": [6, 7], "download": [6, 7, 64, 66, 82], "wildboar_requir": [6, 7, 66], "requir": [6, 7, 8, 13, 14, 15, 16, 17, 26, 27, 28, 29, 30, 48, 49, 50, 51, 56, 58, 64, 66, 69, 77, 79, 82], "min": [6, 7, 9, 13, 14, 15, 50, 51, 57, 63, 69], "timeout": [6, 7, 66], "abstract": [6, 7, 21, 45], "util": [7, 8, 9, 16, 17, 25, 50, 51, 67, 69], "outlier": [7, 16, 17, 25, 32, 33, 34, 35, 36, 66], "preprocess": [7, 18, 24, 25, 45, 47, 64, 65, 81], "cache_dir": [7, 66], "keep_last_vers": 7, "keep": [7, 16, 17, 27, 28, 29, 30, 48, 50, 51], "latest": [7, 66], "json": 7, "request": [7, 8, 64, 66, 69, 77, 82], "ucr": [7, 64, 66, 69, 81], "tini": [7, 64, 66], "format": [7, 13, 15, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 66], "bake": [7, 81], "off": [7, 81], "create_cache_dir": 7, "progress": 7, "forc": [7, 56, 58, 64], "where": [7, 8, 10, 14, 15, 16, 17, 27, 28, 29, 30, 32, 33, 35, 36, 38, 41, 43, 46, 47, 48, 49, 50, 51, 57, 63, 66, 68, 69, 79, 81, 82], "wildboar_cach": 7, "miss": [7, 63, 67], "show": [7, 14, 57], "bar": 7, "while": [7, 16, 17, 48, 49, 50, 51, 64, 66, 81, 82], "re": [7, 13, 15, 16, 17, 64], "we": [7, 16, 17, 32, 33, 41, 43, 46, 47, 49, 50, 51, 55, 56, 57, 58, 63, 64, 65, 66, 68, 69, 71, 77, 79, 81, 82], "can": [7, 8, 16, 17, 27, 28, 29, 30, 40, 47, 48, 49, 50, 51, 54, 57, 63, 64, 65, 66, 67, 68, 69, 71, 77, 81, 82], "also": [7, 32, 33, 48, 49, 50, 51, 55, 64, 67, 68, 69, 74, 77, 79, 81, 82], "ani": [7, 8, 48, 49, 50, 51, 66, 67, 68], "newli": 7, "ad": [7, 16, 17, 50, 51], "still": [7, 82], "pend": 7, "dtype": [7, 13, 15, 56, 57, 58, 63, 64], "contigu": [7, 56, 58, 81], "merge_train_test": [7, 64, 66, 81], "return_extra": 7, "read": [7, 10, 13, 15, 16, 17, 23, 31, 32, 33, 43, 46, 47, 49, 50, 51, 69, 81], "type": [7, 56, 57, 58, 74, 81], "_preprocess": 7, "take": [7, 41, 47, 48, 49, 50, 51, 66, 68], "np": [7, 8, 13, 14, 15, 16, 17, 18, 24, 32, 33, 41, 43, 46, 47, 49, 50, 51, 56, 57, 58, 59, 63, 65, 69], "ensur": [7, 19, 23, 34, 36, 56, 58, 66], "memori": [7, 16, 17, 56, 58, 69, 79, 81], "merg": [7, 49, 51, 66, 68], "exist": [7, 34, 36, 64, 79, 81], "partit": [7, 13, 15, 81], "alreadi": [7, 64, 82], "4": [7, 8, 14, 16, 17, 18, 24, 40, 41, 44, 45, 47, 59, 63, 68, 69, 77, 79], "x_train": [7, 16, 17, 35, 36, 64, 66, 81], "x_test": [7, 16, 17, 35, 36, 64, 66, 81], "y_train": [7, 16, 17, 35, 36, 64, 66, 81], "y_test": [7, 16, 17, 35, 36, 64, 66, 81], "syntheticcontrol": [7, 64, 66], "600": [7, 64], "origin": [7, 16, 17, 18, 19, 23, 24, 26, 30, 32, 33, 37, 44, 47, 56, 58, 79, 81], "preserv": [7, 56, 57, 58, 81], "specif": [7, 16, 17, 43, 46, 47, 49, 50, 51, 55, 56, 58, 64, 65, 66, 79, 82], "doe": [7, 8, 34, 36, 40, 47, 69, 81], "shown": [7, 18, 24], "onli": [7, 11, 14, 15, 16, 17, 18, 19, 22, 23, 24, 48, 49, 50, 51, 56, 58, 64, 65, 66, 68, 69, 79, 81, 82], "yield": [7, 34, 36, 55, 65], "those": 7, "which": [7, 8, 13, 14, 15, 16, 17, 21, 23, 26, 27, 28, 29, 30, 32, 33, 41, 47, 48, 49, 50, 51, 64, 66, 67, 68, 69, 77, 79, 81, 82], "f": [7, 8, 16, 17, 26, 30, 40, 41, 47, 49, 51, 54, 56, 58, 65, 68, 77, 81], "attribut": [7, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 37, 40, 44, 46, 47, 48, 49, 50, 51, 53, 64, 66, 72, 81], "comparison": [7, 64], "spec": 7, "conjunct": 7, "part": [7, 64, 65, 66, 67, 69], "depend": [7, 8, 10, 11, 15, 41, 47, 63, 69, 81, 82], "tupl": [7, 14, 16, 17, 43, 46, 47, 49, 50, 51, 55, 58, 79], "last": [7, 65, 66, 69, 81], "element": [7, 16, 17, 38, 43, 46, 47, 49, 50, 51, 54, 59], "print": [7, 13, 15, 22, 23, 64, 81], "beef": [7, 64, 66], "470": [7, 64], "coffe": [7, 64, 66], "56": [7, 64], "286": [7, 64], "150": [7, 41, 47, 64], "1162": [7, 64], "82": [7, 64], "than": [7, 8, 10, 15, 16, 17, 50, 51, 57, 64, 67, 68, 69, 81], "call": [7, 16, 17, 27, 28, 29, 30, 48, 50, 51, 55, 66], "without": [7, 54, 63, 66, 68], "reset": [7, 66], "root": [7, 18, 24], "n_outlier": [8, 34, 36, 77], "05": [8, 14, 16, 17, 21, 23, 34, 35, 36, 41, 47, 68, 77], "dbscan": 8, "ep": 8, "min_sampl": 8, "5": [8, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 27, 30, 32, 33, 41, 44, 47, 50, 51, 57, 68, 69, 77], "metric": [8, 10, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 43, 46, 47, 48, 49, 50, 51, 79], "euclidean": [8, 10, 13, 15, 16, 17, 18, 21, 22, 23, 24, 28, 30, 31, 32, 33, 46, 47, 50, 51, 68, 69], "max_ep": 8, "inf": [8, 56, 58], "random_st": [8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 43, 44, 46, 47, 49, 50, 51], "densiti": 8, "fail": 8, "assign": [8, 13, 15, 77, 81], "By": [8, 16, 17, 18, 24, 26, 30, 40, 43, 45, 47, 49, 51, 56, 57, 58, 63, 66, 69, 77, 79, 81], "class": [8, 35, 66, 77, 81], "consid": [8, 10, 15, 16, 17, 32, 33, 35, 36, 49, 51, 81], "optic": 8, "when": [8, 11, 13, 15, 16, 17, 18, 22, 23, 24, 27, 28, 29, 30, 31, 33, 42, 45, 47, 48, 50, 51, 55, 56, 57, 58, 64, 66, 68, 69, 79, 81], "cluter": 8, "randomst": [8, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 26, 30, 31, 33, 34, 35, 36, 37, 40, 41, 43, 44, 46, 47, 49, 50, 51], "seed": [8, 16, 17, 18, 24, 26, 30, 37, 40, 41, 44, 46, 47, 49, 50, 51, 81], "x_outlier": [8, 77], "n_inlier": [8, 34, 36], "y_outlier": [8, 77], "labl": 8, "confusion_estim": 8, "difficulty_estim": 8, "transform": [8, 9, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 32, 33, 50, 51, 55, 77, 79], "simplest": [8, 64, 77], "variat": [8, 77], "tight": [8, 77], "emmott": [8, 76], "2013": [8, 68, 77], "reliabl": [8, 81], "multiclass": [8, 58, 77], "For": [8, 10, 15, 16, 17, 27, 28, 29, 30, 37, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 64, 65, 66, 67, 69, 72, 73, 74, 79, 81, 82], "maxim": 8, "confus": [8, 77], "measur": [8, 16, 17, 32, 33, 43, 46, 47, 49, 50, 51, 68, 79], "digit": 8, "rang": [8, 16, 17, 43, 46, 47, 48, 49, 50, 51, 65, 69, 77], "accord": [8, 10, 11, 15, 16, 17, 44, 45, 47, 50, 51, 57, 66, 77], "final": [8, 16, 17, 55], "either": [8, 14, 35, 36, 46, 47, 48, 49, 50, 51, 58, 64, 66, 69, 77, 81], "dispers": [8, 77], "guarante": [8, 81], "error": [8, 16, 17, 56, 58], "rais": [8, 56, 58], "ha": [8, 16, 17, 32, 33, 41, 45, 47, 49, 50, 51, 54, 56, 57, 58, 61, 63, 66, 68, 69, 79], "few": [8, 32, 33, 82], "n_class": [8, 13, 15, 16, 17, 48, 49, 50, 51], "predict_proba": [8, 13, 15, 16, 17, 48, 49, 50, 51], "logist": [8, 77], "rbf": [8, 77], "befor": [8, 13, 15, 26, 30, 79, 82], "otherwis": [8, 16, 17, 32, 33, 56, 58], "suppli": [8, 18, 19, 23, 24], "hardest": [8, 77], "point": [8, 14, 48, 50, 51, 64, 66, 68, 77, 81], "quantiz": [8, 77], "should": [8, 16, 32, 33, 35, 36, 65, 66, 68, 81], "len": [8, 10, 13, 15, 18, 24], "denot": [8, 35, 36, 65, 68, 69], "simpler": 8, "multipl": [8, 16, 17, 18, 24, 43, 46, 47, 50, 51, 63, 66, 69, 77, 79, 81], "e": [8, 14, 16, 17, 22, 23, 32, 33, 50, 51, 56, 58, 63, 64, 65, 66, 68, 69, 77, 81, 82], "g": [8, 13, 14, 15, 21, 23, 26, 30, 40, 46, 47, 64, 65, 68, 69, 77, 81, 82], "would": [8, 16, 17, 27, 28, 29, 30, 43, 46, 47, 48, 49, 50, 51, 65], "mix": 8, "easi": [8, 57, 64], "difficult": [8, 77], "16": [8, 77], "3": [8, 14, 16, 17, 41, 44, 47, 56, 58, 59, 63, 65, 67, 68, 69, 77, 79], "percentil": [8, 16, 17, 77], "procedur": 8, "effect": [8, 16, 17, 45, 47, 49, 51, 56, 58, 79], "closest": [8, 13, 15, 21, 32, 33], "facil": 8, "locat": [8, 66, 69, 82], "thei": [8, 16, 17, 43, 47, 48, 49, 50, 51, 66, 69], "distribut": [8, 16, 17, 26, 30, 40, 44, 45, 47, 48, 49, 50, 51, 64, 82], "among": [8, 21], "avail": [8, 66, 74], "suffici": 8, "fewer": [8, 32, 33], "mai": [8, 16, 17, 27, 28, 29, 30, 48, 50, 51, 79], "note": [8, 11, 14, 15, 16, 17, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 40, 41, 47, 48, 50, 51, 57, 65, 69], "packag": [8, 64, 77, 82], "networkx": [8, 77], "da": [8, 68, 77], "dietterich": [8, 77], "t": [8, 13, 15, 16, 17, 26, 27, 28, 29, 30, 32, 33, 40, 41, 42, 44, 46, 47, 48, 49, 50, 51, 56, 58, 68, 69, 77, 79, 82], "fern": [8, 77], "wong": [8, 77], "w": [8, 13, 14, 15, 16, 17, 26, 27, 28, 29, 30, 48, 49, 50, 51, 64, 66, 77], "systemat": [8, 77], "anomali": [8, 35, 36, 77], "benchmark": [8, 64, 73, 76], "real": [8, 16, 17, 63, 68, 77], "acm": [8, 68, 69, 77], "sigkdd": [8, 69, 77], "workshop": [8, 77], "pp": [8, 69, 77], "21": [8, 77], "n_cluster": [8, 13, 15], "farther": 8, "other": [8, 13, 15, 34, 36, 64, 66, 69, 77, 81], "satisfi": [8, 68], "constraint": [8, 53], "allow": [8, 41, 47, 48, 49, 50, 51, 55, 56, 58, 66, 77, 81], "n_dim": [9, 10, 11, 15, 32, 33, 35, 36, 42, 47, 48, 49, 50, 51, 63, 64, 65, 67, 69, 79, 81], "max": [9, 14, 50, 51, 57, 68, 69], "result": [9, 16, 17, 19, 21, 23, 35, 36, 38, 46, 47, 48, 49, 50, 51, 56, 57, 58, 59, 65, 68, 77], "zero": [9, 16, 17, 26, 30, 40, 44, 47, 48, 49, 50, 51, 65, 68, 81], "unit": [9, 26, 30, 40, 47, 65, 68, 81], "deviat": [9, 14, 26, 30, 40, 41, 47, 77], "n_shortest": 9, "dim": [10, 11, 15, 65, 69, 79], "warn": [10, 15, 56, 58, 79], "metric_param": [10, 13, 15, 16, 17, 18, 23, 24, 28, 30, 31, 32, 33, 43, 46, 47, 49, 50, 51, 68, 69, 79], "n_job": [10, 11, 13, 15, 16, 17, 26, 27, 28, 29, 30, 37, 40, 41, 42, 43, 44, 46, 47, 52], "broadcast": [10, 11, 15, 19, 23, 69], "full": [10, 15, 32, 33, 41, 47, 64, 69, 79, 81], "_metric": [10, 15, 23, 32, 33], "about": [10, 13, 15, 16, 17, 23, 31, 32, 33, 41, 43, 44, 46, 47, 49, 50, 51, 56, 58, 69, 81], "parallel": [10, 13, 15, 16, 17, 26, 30, 37, 40, 44, 46, 47, 52], "job": [10, 11, 13, 15, 16, 17, 26, 30, 37, 40, 42, 44, 46, 47, 52], "ndim": [10, 15, 56, 58, 81], "scalar": [10, 15, 54, 57, 69], "return_index": [10, 11, 14, 15, 69], "m_timestep": [10, 14, 15], "search": [10, 15, 48, 49, 50, 51, 68], "_subsequence_metr": [10, 15], "mani": [10, 15, 16, 17, 56, 58, 65, 69], "equal": [10, 15, 16, 17, 43, 47, 48, 49, 50, 51, 63, 64, 68, 77], "good": [10, 15, 22, 23, 32, 33, 77], "first": [10, 11, 14, 15, 16, 17, 40, 43, 46, 47, 49, 50, 51, 56, 58, 66, 67, 69, 77, 82], "run": [10, 13, 15, 16, 17, 22, 23, 26, 30, 37, 40, 44, 46, 47, 55, 64, 65, 82], "dist": [10, 15, 50, 51, 69], "minumum": [10, 15, 57], "posit": [10, 13, 15, 16, 17, 18, 22, 23, 24, 26, 30, 37, 40, 44, 47, 68], "threshold": [10, 15, 16, 17, 18, 21, 22, 23, 24, 45, 50, 51, 72, 74, 79], "max_match": [10, 15], "less": [10, 15, 16, 17, 50, 51, 64, 65, 81], "behaviour": [10, 15], "order": [10, 15, 16, 17, 26, 30, 32, 33, 39, 40, 47, 48, 49, 50, 51, 56, 57, 58, 63, 69, 81], "occurr": [10, 15], "top": [10, 15, 18, 24], "length": [10, 15, 16, 17, 50, 51, 54, 56, 58, 59, 65, 67, 68], "below": [10, 15, 66], "n_match": [10, 15], "x_sampl": [10, 15, 69], "y_sampl": [10, 15, 69], "n_subsequ": [10, 15, 69], "yn_timestep": [10, 11, 15], "closer": [10, 15, 21, 32, 33], "treshold": [10, 15], "trivial": [10, 11, 15], "vicin": [10, 15], "within": [10, 15, 69], "timestep": [10, 15, 32, 33, 44, 47, 56, 58, 63, 64, 65, 67, 69, 81], "anoth": [10, 15, 66, 77], "higher": [10, 15], "everi": [11, 15, 48, 49, 50, 51, 56, 58, 69], "subsequenec": [11, 15], "xn_timestep": [11, 15], "second": [11, 14, 15, 16, 17, 43, 46, 47, 49, 50, 51, 66, 69], "8": [13, 14, 15, 26, 30, 40, 41, 47, 57, 79], "r": [13, 14, 15, 16, 17, 21, 23, 26, 27, 28, 29, 30, 41, 43, 46, 47, 48, 49, 50, 51, 68, 82], "init": [13, 14, 15], "n_init": [13, 15], "max_it": [13, 15, 21, 23], "300": [13, 15, 81], "tol": [13, 14, 15], "001": [13, 15, 68], "verbos": [13, 14, 15, 16, 17, 21, 22, 23, 82], "dtw": [13, 15, 21, 25, 46, 47, 49, 50, 51, 68, 69, 79], "softdtw": [13, 15], "penalti": [13, 14, 15, 68], "tradit": [13, 15, 65, 68, 77, 79], "initi": [13, 14, 15, 21, 66], "randomli": [13, 15, 41, 46, 47, 74], "centroid": [13, 15], "iter": [13, 15, 26, 30, 34, 36, 64], "toler": [13, 15, 32, 33, 68], "declar": [13, 15, 66], "converg": [13, 15], "consecut": [13, 15], "diagnost": [13, 15], "messag": [13, 15, 56, 58], "dure": [13, 15, 22, 23], "determin": [13, 15, 16, 17, 19, 22, 23, 26, 27, 28, 29, 30, 31, 33, 34, 36, 41, 47, 48, 50, 51, 66, 77], "n_iter_": [13, 15], "cluster_centers_": [13, 15], "center": [13, 15], "labels_": [13, 15], "univari": [13, 15, 31, 33, 63, 67, 69, 81], "Not": [13, 15, 16, 17], "fit_predict": [13, 15, 16, 17], "n_featur": [13, 15, 16, 17, 26, 27, 28, 29, 30, 39, 42, 43, 45, 47, 48, 49, 50, 51], "present": [13, 15, 16, 17, 66], "api": [13, 15, 16, 17, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 63, 78, 79, 81], "consist": [13, 15, 16, 17, 22, 23, 27, 28, 29, 30, 48, 50, 51, 69], "convent": [13, 15, 16, 17, 55, 56, 58, 64, 72, 81], "int64": [13, 15], "fit_transform": [13, 15, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47], "fit_param": [13, 15, 39, 42, 43, 45, 47], "n_output": [13, 15, 16, 17, 26, 27, 28, 29, 30, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "target": [13, 15, 16, 17, 21, 23, 39, 42, 43, 45, 47, 48, 49, 50, 51, 58, 82], "unsupervis": [13, 15, 16, 17, 39, 42, 43, 45, 47], "addit": [13, 15, 39, 42, 43, 45, 47, 64, 67, 69, 81], "x_new": [13, 15, 39, 42, 43, 45, 47], "n_features_new": [13, 15, 39, 42, 43, 45, 47], "predict": [13, 15, 16, 17, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 48, 49, 50, 51, 73], "belong": [13, 15, 81], "set_output": [13, 15, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47], "output": [13, 15, 16, 17, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 56, 58, 69, 81], "introduc": [13, 15, 16, 17, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 61, 79], "panda": [13, 15, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47], "configur": [13, 15, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 69, 73, 81, 82], "datafram": [13, 15, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47], "unchang": [13, 14, 15, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47], "space": [13, 15, 21, 38, 47, 57, 69], "30": [13, 15, 68, 69, 81], "0001": [13, 15], "smallest": [13, 15], "pam": [13, 15], "medoid": [13, 15, 79], "core": [13, 15, 16, 17, 26, 30, 37, 40, 41, 43, 44, 47], "integ": [13, 15, 16, 17, 26, 30, 37, 40, 44, 47, 57, 77], "n_neighbour": [13, 15], "classes_": [13, 15, 16, 17, 21, 23, 48, 49, 50, 51], "shapel": [13, 15], "known": [13, 15], "multivarait": [13, 15], "multivari": [13, 15, 22, 23, 31, 33, 63, 65, 67, 81], "sample_weight": [13, 14, 15, 16, 17, 26, 27, 28, 29, 30, 32, 33, 48, 49, 50, 51], "accuraci": [13, 15, 16, 17, 26, 27, 28, 29, 30, 32, 33, 48, 49, 50, 51], "multi": [13, 15, 16, 17, 26, 27, 28, 29, 30, 41, 47, 48, 49, 50, 51, 56, 58, 77], "subset": [13, 15, 16, 17, 26, 27, 28, 29, 30, 31, 33, 48, 49, 50, 51], "harsh": [13, 15, 16, 17, 26, 27, 28, 29, 30, 48, 49, 50, 51], "sinc": [13, 15, 16, 17, 19, 23, 26, 27, 28, 29, 30, 41, 47, 48, 49, 50, 51, 65, 69, 77, 81], "you": [13, 15, 16, 17, 26, 27, 28, 29, 30, 48, 49, 50, 51, 79, 81, 82], "correctli": [13, 15, 16, 17, 26, 27, 28, 29, 30, 48, 49, 50, 51, 79], "x_timestep": [14, 69], "y_timestep": [14, 69], "out": [14, 16, 17, 81], "vector": [14, 56, 58], "penal": 14, "store": [14, 16, 17, 64], "instead": [14, 16, 17, 27, 28, 29, 30, 34, 36, 48, 50, 51, 69, 73, 81], "mm": 14, "max_stabl": 14, "learning_r": 14, "decai": 14, "9": [14, 26, 30, 40, 41, 47, 66], "1e": [14, 32, 33], "max_epoch": 14, "50": [14, 64, 69], "return_cost": 14, "control": [14, 16, 17, 18, 22, 23, 24, 26, 30, 37, 40, 43, 44, 47, 82], "exp": [14, 16, 17, 50, 51], "influenc": [14, 16, 17, 27, 28, 29, 30, 48, 50, 51], "much": [14, 32, 33, 79], "contribut": 14, "ssg": 14, "minim": 14, "equival": 14, "stochast": 14, "subgradi": 14, "epoch": 14, "lowest": 14, "cost": [14, 22, 23, 68, 69], "rate": 14, "minmum": 14, "runtim": 14, "pseudo": [14, 19, 22, 23], "dataset": [14, 16, 17, 18, 24, 25, 26, 30, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 63, 65, 66, 69, 77], "27442791e": 14, "01": [14, 41, 47], "19807473e": 14, "02": [14, 41, 47], "77490053e": 14, "60441308e": 14, "31930140e": 14, "17437783e": 14, "43925941e": 14, "60983434e": 14, "72118437e": 14, "7": [14, 16, 17, 41, 44, 47, 69], "73352049e": 14, "56701557e": 14, "53269314e": 14, "33366128e": 14, "09010828e": 14, "97539989e": 14, "71443248e": 14, "42492836e": 14, "71408958e": 14, "82518334e": 14, "35671953e": 14, "26442901e": 14, "38342948e": 14, "11248815e": 14, "99355168e": 14, "00": [14, 41, 47], "08588712e": 14, "35954194e": 14, "78345146e": 14, "41023092e": 14, "99915956e": 14, "82717462e": 14, "71687181e": 14, "55819192e": 14, "28805337e": 14, "06653283e": 14, "25159669e": 14, "02389872e": 14, "39410523e": 14, "34687887e": 14, "03": 14, "98654485e": 14, "85832342e": 14, "6": [14, 41, 47, 63, 68, 69, 81], "56436416e": 14, "25302660e": 14, "77697444e": 14, "24606299e": 14, "76357782e": 14, "27083874e": 14, "44590342e": 14, "64184026e": 14, "03608265e": 14, "13964118e": 14, "33595675e": 14, "09954847e": 14, "61924171e": 14, "47433305e": 14, "29583168e": 14, "00425122e": 14, "80524683e": 14, "70210329e": 14, "40259039e": 14, "59657389e": 14, "52170730e": 14, "54666287e": 14, "93690730e": 14, "23968406e": 14, "upper": [14, 16, 17, 34, 36, 43, 44, 46, 47, 49, 50, 51, 69], "keogh": [14, 69], "2002": 14, "28th": 14, "veri": [14, 65, 68], "larg": [14, 57, 64, 68, 72], "same": [14, 16, 17, 18, 24, 32, 33, 48, 49, 50, 51, 57, 65, 66, 68, 69, 79, 81], "min_dist": 14, "cumul": 14, "step": [14, 64, 65, 81], "precomput": [14, 16, 17, 27, 28, 29, 30, 48, 50, 51], "x_indic": 14, "y_indic": 14, "provid": [14, 21, 41, 44, 66, 68, 81, 82], "n": [14, 69, 77, 81], "omitaomu": 14, "o": [14, 16, 17, 21, 49, 51, 69], "2021": [14, 32, 33], "pattern": [14, 68, 77], "recognit": 14, "44": 14, "2231": 14, "2240": 14, "diagon": 14, "raec1aca773": 14, "n_estim": [16, 17], "max_sampl": [16, 17], "bootstrap": [16, 17], "oob_scor": [16, 17], "class_weight": [16, 17, 26, 27, 28, 29, 30, 49, 50, 51], "warm_start": [16, 17], "base_estim": [16, 17, 79], "deprec": [16, 17, 19, 23, 41, 47, 49, 50, 51, 79], "meta": [16, 17], "draw": [16, 17], "drawn": [16, 17], "replac": [16, 17, 32, 33, 66, 82], "balanc": [16, 17, 26, 30, 49, 50, 51], "associ": [16, 17, 26, 30, 49, 50, 51], "invers": [16, 17, 49, 50, 51], "proport": [16, 17, 49, 50, 51], "frequenc": [16, 17, 49, 50, 51, 57], "reus": [16, 17, 65, 81], "solut": [16, 17], "previou": [16, 17, 65], "add": [16, 17, 22, 23, 55, 57, 79], "just": [16, 17, 63, 82], "whole": [16, 17], "resampl": [16, 17, 18, 24, 26, 30, 37, 44, 47], "been": [16, 17, 41, 47, 57, 68, 79], "remov": [16, 17, 19, 23, 50, 51, 54, 79], "base_estimator_": [16, 17], "grow": [16, 17], "estimators_samples_": [16, 17], "member": [16, 17], "reduc": [16, 17, 41, 47, 64], "footprint": [16, 17], "thu": [16, 17], "fetch": [16, 17, 82], "slower": [16, 17, 69], "expect": [16, 17, 27, 28, 29, 30, 42, 47, 48, 50, 51, 65, 77, 81], "decision_funct": [16, 17, 32, 33], "decis": [16, 17, 22, 23, 48, 49, 50, 51, 72], "function": [16, 17, 22, 40, 41, 64, 65, 66, 68, 69, 81], "spars": [16, 17, 48, 49, 50, 51, 56, 58], "matric": [16, 17], "accept": [16, 17, 26, 30, 40, 47, 56, 58, 64, 65, 66, 69, 81], "column": [16, 17, 56, 58, 66, 67], "correspond": [16, 17, 26, 30, 32, 33, 48, 49, 50, 51], "appear": [16, 17], "special": [16, 17, 81], "case": [16, 17, 68], "build": [16, 17, 49, 51, 81], "highest": [16, 17], "do": [16, 17, 48, 49, 50, 51, 68, 69, 79, 82], "resort": [16, 17], "vote": [16, 17], "predict_log_proba": [16, 17], "log": [16, 17, 41, 47, 79], "p": [16, 17, 20, 21, 22, 23, 32, 33, 68, 69], "repres": [16, 17, 63, 67, 68, 73], "100": [16, 17, 18, 21, 23, 24, 43, 47, 49, 51, 57, 64], "defin": [16, 17, 27, 28, 29, 30, 39, 43, 45, 46, 47, 48, 49, 50, 51, 66], "frac": [16, 17, 27, 28, 29, 30, 48, 50, 51], "u": [16, 17, 27, 28, 29, 30, 48, 50, 51], "v": [16, 17, 27, 28, 29, 30, 48, 50, 51, 66, 68], "residu": [16, 17, 27, 28, 29, 30, 48, 50, 51], "sum": [16, 17, 27, 28, 29, 30, 48, 50, 51], "squar": [16, 17, 18, 24, 27, 28, 29, 30, 48, 50, 51], "y_true": [16, 17, 27, 28, 29, 30, 48, 50, 51], "y_pred": [16, 17, 27, 28, 29, 30, 48, 50, 51], "total": [16, 17, 27, 28, 29, 30, 48, 50, 51], "neg": [16, 17, 27, 28, 29, 30, 48, 49, 50, 51], "becaus": [16, 17, 27, 28, 29, 30, 48, 50, 51], "arbitrarili": [16, 17, 27, 28, 29, 30, 48, 50, 51], "wors": [16, 17, 27, 28, 29, 30, 48, 50, 51], "constant": [16, 17, 27, 28, 29, 30, 48, 50, 51], "alwai": [16, 17, 27, 28, 29, 30, 34, 36, 48, 50, 51, 68], "disregard": [16, 17, 27, 28, 29, 30, 48, 50, 51], "some": [16, 17, 27, 28, 29, 30, 48, 50, 51, 55, 56, 58, 63, 64, 67, 82], "n_samples_fit": [16, 17, 27, 28, 29, 30, 48, 50, 51], "multioutput": [16, 17, 27, 28, 29, 30, 48, 50, 51], "uniform_averag": [16, 17, 27, 28, 29, 30, 48, 50, 51], "23": [16, 17, 27, 28, 29, 30, 48, 50, 51], "r2_score": [16, 17, 27, 28, 29, 30, 48, 50, 51], "except": [16, 17, 27, 28, 29, 30, 48, 50, 51, 66, 77], "multioutputregressor": [16, 17, 27, 28, 29, 30, 48, 50, 51], "baseforestclassifi": 16, "estimator_param": 16, "max_depth": [16, 17, 48, 49, 50, 51], "min_samples_split": [16, 17, 48, 49, 50, 51], "min_samples_leaf": [16, 17, 48, 49, 50, 51, 79], "min_impurity_decreas": [16, 17, 48, 49, 50, 51], "criterion": [16, 17, 49, 50, 51, 79], "entropi": [16, 17, 49, 50, 51], "tree": [16, 17, 25, 72, 79], "baseforestregressor": 16, "squared_error": [16, 17, 50, 51], "baseshapeletforestclassifi": 16, "n_shapelet": [16, 17, 18, 24, 28, 30, 46, 47, 50, 51, 79], "log2": [16, 17, 18, 24, 32, 33, 41, 45, 47, 50, 51, 79], "min_shapelet_s": [16, 17, 18, 21, 23, 24, 28, 30, 46, 47, 50, 51], "max_shapelet_s": [16, 17, 18, 21, 23, 24, 28, 30, 46, 47, 50, 51], "directli": [16, 66], "baseshapeletforestregressor": 16, "depth": [16, 17, 49, 50, 51, 82], "expand": [16, 17, 50, 51], "until": [16, 17, 50, 51], "leav": [16, 17, 48, 49, 50, 51], "pure": [16, 17, 50, 51], "node": [16, 17, 44, 47, 48, 49, 50, 51], "leaf": [16, 17, 48, 49, 50, 51], "impur": [16, 17, 49, 50, 51], "decreas": [16, 17, 49, 50, 51], "larger": [16, 17, 32, 33, 50, 51, 57, 67, 81], "grid": [16, 17, 43, 46, 47, 49, 50, 51], "mandatori": [16, 17, 43, 46, 47, 49, 50, 51], "one": [16, 17, 18, 24, 40, 43, 46, 47, 49, 50, 51, 54, 64, 69, 72, 81], "specifii": [16, 17, 43, 46, 47, 49, 50, 51], "give": [16, 17, 18, 24, 43, 46, 47, 49, 50, 51, 73], "follow": [16, 17, 39, 41, 43, 44, 46, 47, 49, 50, 51, 64, 65, 66, 68, 69, 81, 82], "min_r": [16, 17, 43, 46, 47, 49, 50, 51], "max_r": [16, 17, 43, 46, 47, 49, 50, 51], "num_r": [16, 17, 43, 46, 47, 49, 50, 51], "gini": [16, 17, 49, 50, 51], "scaled_euclidean": [16, 17, 50, 51, 68, 69], "y_hat": [16, 17], "mse": [16, 17, 50, 51, 79], "wa": [16, 17, 19, 23, 50, 51, 79], "v1": [16, 17, 50, 51, 64, 66], "forestmixin": 16, "n_interv": [16, 17, 18, 24, 32, 33, 41, 45, 47, 50, 51, 79], "sqrt": [16, 17, 18, 24, 32, 33, 41, 45, 47, 50, 51], "fix": [16, 17, 41, 47, 50, 51, 79], "summar": [16, 17, 41, 47, 50, 51], "mean_var_std": [16, 17], "sample_s": [16, 17, 31, 33, 41, 47, 50, 51], "min_siz": [16, 17, 41, 44, 47, 50, 51, 79], "max_siz": [16, 17, 41, 44, 47, 50, 51, 79], "contamin": [16, 17, 35, 36], "strategi": [16, 17, 26, 30, 34, 36, 40, 44, 45, 47], "offset": [16, 17], "offset_": [16, 17], "model_select": [16, 17, 25, 81], "sklearn": [16, 17, 31, 33, 40, 47, 56, 58, 77, 81], "balanced_accuracy_scor": [16, 17], "test_siz": [16, 17, 34, 35, 36, 81], "anomalies_train_s": [16, 17, 35, 36], "8674": [16, 17], "n_pivot": [16, 17, 43, 47, 49, 50, 51], "pivot_sampl": [16, 17, 49, 51], "metric_sampl": [16, 17, 43, 47, 49, 51], "metric_factori": [16, 17, 49, 51, 79], "uniform": [16, 17, 43, 44, 45, 47, 49, 51, 65, 69], "parameter": [16, 17, 49, 51], "suggest": [16, 17, 49, 51], "luca": [16, 17, 49, 51], "2019": [16, 17, 41, 47, 49, 51, 82], "2020": [16, 17, 20, 21, 22, 23, 32, 33, 44, 47, 49, 51], "custom": [16, 17, 41, 47, 49, 51], "combin": [16, 17, 21, 41, 47, 49, 51], "sub": [16, 17, 49, 51], "benjamin": [16, 17, 49, 51], "ahm": [16, 17, 49, 51], "shifaz": [16, 17, 49, 51], "charlott": [16, 17, 49, 51], "pelleti": [16, 17, 49, 51], "lachlan": [16, 17, 49, 51], "neill": [16, 17, 49, 51], "nayyar": [16, 17, 49, 51], "zaidi": [16, 17, 49, 51], "bart": [16, 17, 49, 51], "goethal": [16, 17, 49, 51], "fran\u00e7oi": [16, 17, 44, 47, 49, 51], "petitjean": [16, 17, 44, 47, 49, 51], "geoffrei": [16, 17, 44, 47, 49, 51], "webb": [16, 17, 26, 30, 40, 44, 47, 49, 51], "scalabl": [16, 17, 49, 51], "knowledg": [16, 17, 20, 22, 23, 26, 30, 32, 33, 40, 41, 44, 47, 49, 51, 68, 69], "discoveri": [16, 17, 26, 30, 40, 41, 44, 47, 49, 51, 69], "n_kernel": [16, 17, 26, 27, 30, 40, 44, 47, 50, 51], "normal": [16, 17, 18, 24, 26, 27, 28, 29, 30, 35, 36, 40, 44, 45, 47, 50, 51, 57, 65, 68, 79], "sampling_param": [16, 17, 26, 27, 30, 40, 44, 47, 50, 51], "kernel_s": [16, 17, 26, 27, 30, 38, 40, 44, 47, 50, 51, 79], "bias_prob": [16, 17, 27, 30, 44, 47, 50, 51], "normalize_prob": [16, 17, 27, 30, 44, 47, 50, 51], "padding_prob": [16, 17, 27, 30, 44, 47, 50, 51], "11": [16, 17, 44, 47], "13": [16, 17, 44, 47], "bia": [16, 17, 38, 44, 47], "pad": [16, 17, 38, 44, 47], "processor": [16, 17, 46, 47, 82], "alpha": [16, 17, 26, 27, 28, 29, 30, 50, 51, 57], "current": [16, 17, 21, 50, 51, 64, 65, 66, 79, 82], "ab": [16, 17, 50, 51], "toward": [16, 17, 21, 50, 51, 55], "increas": [16, 17, 50, 51], "independeth": [16, 17, 50, 51], "sparse_output": [16, 17], "high": [16, 17], "dimension": [16, 17], "fall": [16, 17, 68, 81], "lead": [16, 17, 79], "code": [16, 17, 65, 69, 79], "ones": [16, 17], "csr": [16, 17], "bin": [18, 24, 45, 47, 57, 77, 82], "n_bin": [18, 24, 32, 33, 45, 47], "n_repeat": [18, 24], "discret": [18, 24, 26, 30, 57, 77], "permut": [18, 24], "show_bin": [18, 24], "show_grid": [18, 24], "scorer": [18, 24, 26, 30], "were": [18, 24, 67], "annot": [18, 24, 25], "axi": [18, 24, 48, 49, 50, 51, 54, 56, 58, 65, 69], "mappabl": [18, 24], "scalarmapp": [18, 24], "colorbar": [18, 24], "specici": [18, 24], "least": [18, 24, 56, 58], "importances_": [18, 24], "components_": [18, 24], "permuteimport": 18, "kernel_scal": [18, 24], "25": [18, 24, 49, 51, 68, 77], "train_x": [19, 23], "train_i": [19, 23], "valid_scor": [19, 23], "method_arg": [19, 23], "basecounterfactu": [19, 23], "infer": [19, 23], "most": [19, 23, 63, 67, 77, 82], "appropri": [19, 23, 67], "_counterfactu": [19, 23], "renam": [19, 23, 41, 47, 79], "success": [19, 23], "stabl": [19, 23, 35, 36, 63], "x_counterfactu": [19, 23, 32, 33], "karlsson": [20, 22, 23, 32, 33], "reban": [20, 22, 23, 32, 33], "j": [20, 22, 23, 32, 33, 69], "papapetr": [20, 22, 23, 32, 33], "gioni": [20, 22, 23, 32, 33], "local": [20, 22, 23, 32, 33], "tweak": [20, 22, 23, 32, 33], "system": [20, 22, 23, 32, 33, 64, 66, 82], "62": [20, 22, 23, 32, 33], "1671": [20, 22, 23, 32, 33], "1700": [20, 22, 23, 32, 33], "explainer_": [20, 23], "dynamictimewarptransform": 21, "gamma": 21, "move": [21, 49, 51, 68], "euclideantransform": 21, "knearestprototypesampl": 21, "prototype_indici": 21, "metric_transform": 21, "prototyp": 21, "new_counterfactu": 21, "nearest_index": 21, "sample_mov": 21, "sampla": 21, "knearestshapeletprototypesampl": 21, "shapeletprototypesampl": 21, "metrictransform": 21, "predictevalu": 21, "probabilityevalu": 21, "step_siz": [21, 23], "n_prototyp": [21, 23], "samsten": [21, 23], "isak": [21, 23], "estimator_": [21, 23], "partitions_": [21, 23], "prototypesampl": [21, 23], "target_": [21, 23], "targetevalu": [21, 23], "prototype_indic": 21, "helper": 21, "wai": [21, 65], "abc": 21, "inherit": 21, "_o": 21, "sample_shapelet": 21, "uniformprototypesampl": 21, "uniformli": [21, 45, 47, 50, 51], "weighteddynamictimewarptransform": 21, "epsilon": [22, 23, 68, 79], "batch_siz": [22, 23], "max_path": [22, 23], "cosin": [22, 23, 68, 69], "manhattan": [22, 23, 68, 69], "degre": [22, 23], "batch": [22, 23, 52], "candid": [22, 23, 32, 33], "subsampl": [22, 23], "stdout": [22, 23], "execut": [22, 23, 52], "differ": [22, 23, 26, 30, 32, 33, 34, 36, 40, 47, 66, 67, 68, 69, 81], "revers": [22, 23], "2018": [22, 23], "via": [22, 23], "irrevers": [22, 23], "paths_": [22, 23], "x_true": 23, "normalized_euclidean": [23, 32, 33, 68, 69], "ensembl": [25, 77, 79, 81], "linear_model": [25, 73, 79, 81], "variable_len": [25, 56, 58, 67], "n_group": [26, 30, 40, 47], "64": [26, 30, 40, 47, 64, 82], "fit_intercept": [26, 27, 28, 29, 30], "cv": [26, 27, 28, 29, 30], "group": [26, 30, 34, 36, 40, 47, 73], "sampler": [26, 30, 40, 47], "half": [26, 30, 69], "n_alpha": [26, 30], "try": [26, 30, 54, 82], "whether": [26, 30, 56, 57, 58], "calcul": [26, 30, 31, 33, 45], "intercept": [26, 30], "signatur": [26, 30], "class_label": [26, 30], "dempster": [26, 30, 40, 44, 47, 79], "schmidt": [26, 30, 40, 46, 47], "d": [26, 30, 32, 33, 40, 41, 47, 64, 66, 68, 69], "2023": [26, 30, 40, 47, 79], "hydra": [26, 30, 40, 47], "compet": [26, 30, 40, 47], "accur": [26, 30, 40, 44, 47, 71], "10000": [27, 30], "gcv_mode": [27, 28, 29, 30], "1000": [28, 30, 44, 46, 47], "basetransformclassifi": 29, "basetransformestim": 29, "basetransformregressor": 29, "transformridgecv": 29, "transformridgeclassifiercv": 29, "conveni": [31, 33, 81], "wrapper": [31, 33, 54], "nativ": [31, 32, 33, 40, 47, 79], "x_factual": [32, 33], "atol": [32, 33], "08": [32, 33], "n_timetep": [32, 33], "overlap": [32, 33, 41, 47], "counterfacut": [32, 33], "factual": [32, 33], "x_plausibl": [32, 33], "y_plausibl": [32, 33], "y_counterfactu": [32, 33], "typic": [32, 33, 69, 81], "m_sampl": [32, 33], "localoutlierfactor": [32, 33], "individu": [32, 33, 65], "plausabl": [32, 33], "incic": [32, 33], "better": [32, 33], "delanei": [32, 33], "green": [32, 33], "kean": [32, 33], "arxiv": [32, 33, 46, 47], "2009": [32, 33], "13211v2": [32, 33], "redund": [32, 33], "impact": [32, 33], "non": [32, 33, 41, 47, 56, 58, 69], "x_nativ": [32, 33], "y_nativ": [32, 33], "captur": [32, 33, 81], "n_nativ": [32, 33], "n_counterfactu": [32, 33], "avareg": [32, 33], "smyth": [32, 33], "b": [32, 33, 69], "interpret": [32, 33, 41, 47], "divers": [32, 33], "2101": [32, 33], "09056v1": [32, 33], "y_predict": [32, 33], "correct": [32, 33, 53, 71], "n_split": [34, 36], "shuffl": [34, 36, 81], "total_n_outli": [34, 36], "psudo": [34, 35, 36], "contrari": [34, 36], "fold": [34, 36], "insert": [34, 36], "repeatedli": [34, 36, 64, 81], "get_n_split": [34, 36], "compat": [34, 36, 37, 40, 41, 43, 44, 46, 47], "train_idx": [34, 36], "test_idx": [34, 36], "normal_class": [35, 36], "state": [35, 36, 43, 47, 65, 73], "anomal": [35, 36], "train_test_split": [35, 36, 81], "baseattributetransform": [37, 40, 41, 43, 44, 46, 47], "engin": [37, 68], "embedding_": [37, 40, 44, 46, 47], "embed": [37, 40, 41, 43, 44, 46, 47, 73], "underli": [37, 40, 44, 46, 47], "n_dimens": [37, 40, 41, 43, 44, 46, 47, 56, 58], "dilat": [38, 47], "stride": [38, 47], "implicit": [38, 47], "side": [38, 47], "output_s": [38, 47], "floor": [38, 47], "get_feature_names_out": [39, 47], "automat": [39, 47, 82], "wrap": [39, 47, 54], "develop": [39, 47, 79, 82], "onetoonefeaturemixin": [39, 47], "classnameprefixfeaturesoutmixin": [39, 47], "help": [39, 47], "descret": [40, 47], "make_pipelin": [40, 47, 81], "make_union": [40, 47], "dempster_hydra": [40, 47], "32": [40, 47, 64], "catch22": [41, 47], "_summar": [41, 47], "x_t": [41, 47], "19633603e": [41, 47], "51047206e": [41, 47], "90000000e": [41, 47], "80000000e": [41, 47], "48441896e": [41, 47], "73293560e": [41, 47], "21476510e": [41, 47], "70000000e": [41, 47], "00000000e": [41, 47], "70502518e": [41, 47], "60000000e": [41, 47], "42857143e": [41, 47], "26666667e": [41, 47], "89974643e": [41, 47], "31570726e": [41, 47], "50000000e": [41, 47], "90873852e": [41, 47], "47311800e": [41, 47], "intervalmixin": 41, "It": [41, 81], "_get_gener": [41, 44], "mean_var_slop": [41, 47, 50, 51], "possibli": [41, 47], "slope": [41, 47], "paralel": [41, 47], "releas": [41, 47], "lock": [41, 47], "gil": [41, 47], "As": [41, 47, 64, 66, 68, 69, 81], "varianc": [41, 47, 65, 68, 81], "suit": [41, 47, 55, 69, 79], "futur": [41, 47, 64, 79], "downstream": [41, 47], "project": [41, 47, 82], "own": [41, 47], "cython": [41, 47, 69], "lubba": [41, 47], "carl": [41, 47], "h": [41, 47], "sarab": [41, 47], "sethi": [41, 47], "philip": [41, 47], "knaut": [41, 47], "simon": [41, 47], "schultz": [41, 47], "ben": [41, 47], "fulcher": [41, 47], "nick": [41, 47], "jone": [41, 47], "canon": [41, 47], "characterist": [41, 47], "33": [41, 47], "1821": [41, 47], "1852": [41, 47], "15": [41, 47], "timepoint": [41, 47], "std": [41, 47, 68], "12": [41, 47, 69, 82], "matrixprofil": [42, 47], "pivotmixin": 43, "rocketmixin": 44, "angu": [44, 47], "exception": [44, 47], "34": [44, 47, 69, 81], "1454": [44, 47], "1495": [44, 47], "51333333": [44, 47], "11526939": [44, 47], "47333333": [44, 47], "04712544": [44, 47], "24": [44, 47], "82912261": [44, 47], "52666667": [44, 47], "26611524": [44, 47], "54": [44, 47, 69], "98047216": [44, 47], "81260641": [44, 47], "54666667": [44, 47], "71210092": [44, 47], "35333333": [44, 47], "28841158": [44, 47], "25333333": [44, 47], "82203705": [44, 47], "72938203": [44, 47], "45333333": [44, 47], "53756324": [44, 47], "24666667": [44, 47], "8380654": [44, 47], "68666667": [44, 47], "80533684": [44, 47], "26": [44, 47, 65], "41709413": [44, 47], "65634235": [44, 47], "66": [44, 47], "94724793": [44, 47], "32666667": [44, 47], "85575661": [44, 47], "67630249": [44, 47], "piecewic": 45, "get_threshold": 45, "suitabl": 45, "normalbin": 45, "assum": [45, 47, 57, 63, 65, 66, 67], "uniformbin": 45, "wistuba": [46, 47], "martin": [46, 47], "josif": [46, 47], "grabocka": [46, 47], "lar": [46, 47], "thiem": [46, 47], "ultra": [46, 47], "preprint": [46, 47], "1503": [46, 47], "05018": [46, 47], "2015": [46, 47], "load_gunpoint": [46, 47], "erp": [46, 47, 68, 69, 79], "min_g": [46, 47], "max_g": [46, 47], "shapeletmixin": [46, 79], "estiom": 46, "basetre": 48, "check_input": [48, 49, 50, 51], "bypass": [48, 49, 50, 51], "sure": [48, 49, 50, 51, 56, 58], "your": [48, 49, 50, 51, 79, 82], "up": [48, 49, 50, 51, 82], "node_count": [48, 49, 50, 51], "tree_": [48, 49, 50, 51], "equvival": [48, 49, 50, 51], "decision_path": [48, 49, 50, 51], "n_node": [48, 49, 50, 51], "nonzero": [48, 49, 50, 51, 63], "travers": [48, 49, 50, 51], "basetreeclassifi": 48, "child": [48, 49, 50, 51], "net": [48, 49, 50, 51], "carri": [48, 49, 50, 51], "don": [48, 49, 50, 51, 82], "know": [48, 49, 50, 51], "what": [48, 49, 50, 51, 77], "basetreeregressor": 48, "msm": [49, 51, 68, 69, 79], "min_c": [49, 51], "max_c": [49, 51], "num_c": [49, 51], "20": [49, 51, 69], "basefeaturetreeclassifi": 50, "basefeaturetreeregressor": 50, "scaled_dtw": [50, 51, 68, 69], "structur": [50, 51], "n_classes_": [50, 51], "run_in_parallel": 52, "parallel_arg": 52, "assert_exhaustive_parameter_check": 53, "assert": 53, "ok": 53, "assert_parameter_check": 53, "skip": [53, 55], "extend": 53, "array_or_scalar": 54, "optional_f": 54, "squeez": 54, "item": 54, "singleton": 54, "recursivlei": 54, "unwrap": 54, "Such": 54, "unstabl": 54, "stabil": 54, "beta": 54, "unsat": 54, "check_estim": 55, "generate_onli": 55, "skip_scikit": 55, "adher": 55, "deleg": [55, 56, 58], "monkei": 55, "patch": 55, "relat": [55, 68], "silent": 55, "tailor": 55, "copi": [56, 58, 69], "ensure_2d": [56, 58], "ensure_ts_arrai": [56, 58], "allow_3d": [56, 58], "allow_nd": [56, 58], "force_all_finit": [56, 58], "multi_output": [56, 58], "ensure_min_sampl": [56, 58], "ensure_min_timestep": [56, 58], "ensure_min_dim": [56, 58], "allow_eo": [56, 58], "y_numer": [56, 58], "y_contigu": [56, 58], "2d": [56, 58, 67, 69, 81], "3d": [56, 58, 67, 69, 81], "finit": [56, 58], "varial": [56, 58], "report": [56, 58, 69], "ravel_1d": [56, 58], "input_nam": [56, 58], "convert": [56, 57, 58, 64, 77], "never": [56, 58, 68], "empti": [56, 58], "attempt": [56, 58], "failur": [56, 58], "convers": [56, 58], "fortran": [56, 58], "style": [56, 58], "noth": [56, 58], "layout": [56, 58], "kept": [56, 58], "trigger": [56, 58], "might": [56, 58], "ravel": [56, 58], "neither": [56, 58], "eo": [56, 58, 59, 63, 65, 67], "nan": [56, 58, 63, 67, 79], "pd": [56, 58], "na": [56, 58], "cannot": [56, 58], "infinit": [56, 58], "row": [56, 58, 67], "disabl": [56, 58, 81], "reject": [56, 58], "enforc": [56, 58], "pass": [56, 58, 69, 77, 79], "midpointnorm": 57, "vmin": 57, "vmax": 57, "midpoint": 57, "normalis": 57, "autoscal": 57, "autoscale_non": 57, "static": 57, "process_valu": 57, "homogen": 57, "effici": [57, 79], "mask": 57, "is_scalar": 57, "byte": 57, "smaller": 57, "float32": 57, "float64": 57, "place": 57, "oper": [57, 64, 65, 66, 81, 82], "greatli": 57, "improv": [57, 64], "speed": 57, "plot_frequency_domain": 57, "jitter": 57, "sample_spac": 57, "cmap": 57, "dark2": 57, "freqenc": 57, "matplotlib": [57, 65], "line": [57, 82], "colormap": 57, "plot_time_domain": 57, "linewidth": 57, "zorder": 57, "show_legend": 57, "opac": 57, "width": 57, "color": 57, "legend": 57, "check_classification_target": 58, "valueerror": 58, "check_opt": 58, "option_valu": 58, "check_typ": 58, "target_typ": 58, "variabl": [59, 67, 82], "get_variable_length": 59, "lenght": 59, "is_end_of_seri": [59, 67], "wise": [59, 65, 81], "is_variable_length": 59, "intend": 61, "wildboar": [61, 63, 64, 65, 66, 67, 68, 69, 74, 77, 79, 81], "offer": [61, 64], "wherea": [63, 72], "context": 63, "multivaret": 63, "howev": [63, 64, 66, 69], "unequ": [63, 65, 68], "ieee754": 63, "treat": 63, "isnan": [63, 67], "wb": 63, "t1": 63, "t2": 63, "t3": 63, "vstack": 63, "pip": [64, 77, 82], "conda": 64, "advanc": 64, "previous": [64, 71, 79, 81], "entri": 64, "hope": 64, "One": [64, 65, 81], "drawback": 64, "asset": 64, "demand": [64, 66], "small": [64, 77], "experi": 64, "brows": 64, "688": 64, "43": 64, "kb": 64, "668": 64, "python": [64, 66, 69, 79, 81, 82], "To": [64, 65, 66, 67, 77, 82], "bit": [64, 82], "conform": 64, "common": [64, 65, 67, 68, 82], "workflow": [64, 69], "comparis": 64, "explanatori": 64, "n_label": 64, "greater": 64, "exactli": [64, 67], "respect": [64, 66, 72], "chain": 64, "large_multivari": 64, "large_multiclass": 64, "0x7f262ce95d00": 64, "predefin": 65, "contrast": 65, "our": 65, "simplifi": [65, 81], "applic": 65, "enumer": [65, 82], "abov": [65, 68, 81], "snippet": [65, 81], "could": 65, "rewritten": 65, "crude": 65, "deal": 65, "longer": 65, "accomplish": [65, 69], "argmax": 65, "pyplot": 65, "plt": 65, "fig": 65, "subplot": 65, "nrow": 65, "scatter": 65, "arang": 65, "marker": 65, "set_ylabel": 65, "spokenarabicdigit": 65, "ucrmt": 65, "figur": 65, "loss": 65, "togeth": 66, "compos": 66, "written": 66, "letter": 66, "regular": 66, "alphanumer": 66, "charact": 66, "za": 66, "z0": 66, "revis": 66, "z": [66, 68], "exemplifi": 66, "hard": 66, "interfac": [66, 81], "endpoint": 66, "http": [66, 82], "www": 66, "org": [66, 82], "repo": 66, "addition": 66, "offlin": 66, "disk": [66, 81], "localappdata": 66, "gnu": [66, 82], "linux": [66, 82], "xdg_cache_hom": 66, "unset": 66, "maco": [66, 82], "librarycach": 66, "fallback": 66, "long": 66, "session": 66, "here": [66, 82], "func": [66, 69], "bundle_url": 66, "example1": 66, "altern": [66, 82], "remot": 66, "sha": 66, "sha1": 66, "hash": 66, "npy": 66, "npz": 66, "save": 66, "savez": 66, "dataset_nam": 66, "_train": 66, "_test": 66, "That": 66, "separ": [66, 77], "embrac": 67, "asarrai": 67, "produc": [67, 71], "rank": 67, "arr": 67, "shorter": [67, 68], "These": 68, "loos": 68, "obei": 68, "inequ": 68, "itself": 68, "distinct": 68, "gt": 68, "ne": 68, "symmetr": 68, "sai": 68, "triangl": [68, 69], "hold": [68, 81], "lt": 68, "shortcut": 68, "through": [68, 82], "three": [68, 69], "categori": [68, 81], "lp": 68, "norm": 68, "shift": 68, "distinguish": 68, "min_": 68, "notat": 68, "_elastic_": 68, "slide": 68, "need": [68, 69, 79, 82], "moreov": 68, "comment": 68, "undefin": 68, "mass": [68, 69], "minkowski": [68, 69], "chebyshev": [68, 69], "angular": [68, 69, 79], "wdtw": [68, 69, 79], "phase": 68, "ddtw": [68, 69], "wddtw": [68, 69], "longest": 68, "lcss": [68, 69, 79], "edit": [68, 82], "gap": 68, "edr": [68, 69, 79], "twe": [68, 69, 79], "edit_penalti": 68, "stiff": [68, 69], "lambda": 68, "nu": 68, "hirschberg": 68, "1977": 68, "problem": [68, 77, 81], "journal": 68, "jacm": 68, "chen": 68, "l": 68, "ng": 68, "2004": 68, "On": 68, "marriag": 68, "thirtieth": 68, "\u00f6zsu": 68, "oria": 68, "2005": 68, "robust": [68, 81], "trajectori": 68, "manag": 68, "stefan": 68, "athitso": 68, "transact": 68, "1425": 68, "1438": 68, "marteau": 68, "2008": 68, "adjust": 68, "analysi": 68, "intellig": 68, "31": [68, 81], "306": 68, "318": 68, "involv": [69, 81], "_euclidean": 69, "51158857": 69, "11514381": 69, "35905618": 69, "mirror": 69, "imag": 69, "halv": 69, "advis": 69, "tri": 69, "smart": 69, "85497117": 69, "96086309": 69, "18777928": 69, "00606825": 69, "23060212": 69, "27419835": 69, "64445581": 69, "38965963": 69, "79102936": 69, "59756098": 69, "47560976": 69, "64634146": 69, "08536585": 69, "03658537": 69, "13414634": 69, "09756098": 69, "25609756": 69, "12195122": 69, "76": 69, "20881199": 69, "73": 69, "62554784": 69, "88": 69, "5536877": 69, "27": 69, "49142159": 69, "56024904": 69, "24551102": 69, "45513015": 69, "81": 69, "60658533": 69, "06099416": 69, "multitud": 69, "reshap": 69, "48683192": 69, "60301954": 69, "34083722": 69, "35954558": 69, "sometim": 69, "_pairs_": 69, "purpos": [69, 81], "elast": [69, 79], "50816474": 69, "3299048": 69, "55193242": 69, "interdimension": 69, "50507001": 69, "90920635": 69, "27646127": 69, "60041068": 69, "60786006": 69, "75645164": 69, "26677146": 69, "24823344": 69, "similarli": 69, "interest": 69, "slice": 69, "want": [69, 82], "avoid": [69, 82], "unwant": 69, "limits_": 69, "queri": 69, "le": 69, "counterpart": 69, "_threshold_": 69, "jag": 69, "66371456": 69, "11914265": 69, "13076667": 69, "99043671": 69, "73408875": 69, "84227457": 69, "2028058": 69, "85972633": 69, "85367621": 69, "86957415": 69, "64041732": 69, "33156061": 69, "56698045": 69, "99489626": 69, "6790517": 69, "16754772": 69, "10973127": 69, "50583639": 69, "def": 69, "pairwise_sd_ful": 69, "stack": 69, "14": 69, "21688671": 69, "83210644": 69, "50884094": 69, "18507116": 69, "11177626": 69, "15611733": 69, "21780536": 69, "13350353": 69, "09710811": 69, "75114125": 69, "13489775": 69, "09806374": 69, "idx": 69, "28": 69, "third": 69, "continu": [69, 81], "investig": 69, "particular": [69, 81], "task": [69, 72, 73, 77, 81], "cpu": 69, "inspect": 69, "theoret": 69, "complex": 69, "magnitud": 69, "97686": 69, "87686": 69, "98368": 69, "98282": 69, "11131": 69, "98268": 69, "95506": 69, "14157": 69, "96041": 69, "94631": 69, "83231": 69, "92207": 69, "55527": 69, "73285": 69, "55538": 69, "41892": 69, "40887": 69, "42778": 69, "00061": 69, "00104": 69, "00064": 69, "wlcss": 69, "00054": 69, "00091": 69, "00056": 69, "00030": 69, "00052": 69, "00032": 69, "00028": 69, "00048": 69, "00029": 69, "00021": 69, "00035": 69, "00022": 69, "00019": 69, "82372": 69, "49048": 69, "79202": 69, "66394": 69, "75967": 69, "67113": 69, "56287": 69, "61275": 69, "56196": 69, "text": 69, "49453": 69, "59627": 69, "49988": 69, "42765": 69, "58025": 69, "43553": 69, "42761": 69, "58982": 69, "43474": 69, "21051": 69, "33659": 69, "21757": 69, "06851": 69, "10321": 69, "07092": 69, "00216": 69, "00413": 69, "00226": 69, "00146": 69, "00278": 69, "00153": 69, "00102": 69, "00195": 69, "00107": 69, "00194": 69, "00106": 69, "00099": 69, "00190": 69, "00189": 69, "00103": 69, "00097": 69, "00185": 69, "00101": 69, "00096": 69, "00182": 69, "00100": 69, "00095": 69, "00181": 69, "00071": 69, "00136": 69, "00074": 69, "rakthanmanon": 69, "campana": 69, "mueen": 69, "batista": 69, "westov": 69, "zhu": 69, "q": 69, "zakaria": 69, "2012": 69, "august": 69, "trillion": 69, "under": [69, 82], "18th": 69, "262": 69, "270": 69, "goal": [71, 81], "unseen": [71, 81], "varieti": 72, "excel": 72, "baselin": 72, "highli": 72, "ridg": 73, "often": [73, 81], "art": 73, "emmott_label": 77, "varitaion": 77, "primari": 77, "focu": [77, 81], "oppos": 77, "perhap": 77, "minority_label": 77, "majority_label": 77, "sophist": 77, "publish": 77, "randomforestclassifi": 77, "four": 77, "75": 77, "quantil": 77, "manual": [78, 82], "enhanc": 79, "someth": 79, "couldn": 79, "now": 79, "miscellan": 79, "didn": 79, "document": [79, 81, 82], "17": 79, "scipi": 79, "kneighboursclassifi": 79, "compar": 79, "3darrai": 79, "issu": [79, 82], "bug": 79, "incorrect": 79, "_distanc": 79, "distancemeasur": 79, "subsequencedistancemeasur": 79, "subsequencemetr": 79, "affect": 79, "cimport": 79, "constructor": 79, "incorrectli": 79, "drop": 79, "undeprec": 79, "old": 79, "migrat": 79, "framework": [79, 81], "forecast": 81, "unfamiliar": 81, "chronolog": 81, "logic": 81, "solv": 81, "concern": 81, "supervis": 81, "nomin": 81, "unlabel": 81, "essenti": [81, 82], "acquir": 81, "commun": 81, "access": [81, 82], "achiev": 81, "opt": 81, "prefer": 81, "irrespect": 81, "floodmodeling1": 81, "uea": 81, "extrins": 81, "tsereg": 81, "clf": 81, "experiment": 81, "clone": [81, 82], "Then": 81, "screen": 81, "despit": 81, "even": 81, "tabluar_x": 81, "design": 81, "interoper": 81, "logisticregress": 81, "bad": 81, "practic": 81, "proper": 81, "reason": 81, "respons": 81, "break": 81, "reevalu": 81, "relianc": 81, "visual": [81, 82], "importance_": 81, "pickl": 81, "repr": 81, "dump": 81, "earlier": 81, "clf_": 81, "older": 81, "newer": 81, "vice": 81, "versa": 81, "secur": 81, "unpickl": 81, "trust": 81, "There": 82, "offici": 82, "pypi": 82, "recommend": 82, "fastest": 82, "platform": 82, "built": 82, "write": 82, "due": 82, "mistak": 82, "incompat": 82, "19": 82, "conflict": 82, "strongli": 82, "virtual": 82, "environ": 82, "venv": 82, "python3": 82, "folder": 82, "activ": 82, "ceavet": 82, "outsid": 82, "scope": 82, "debian": 82, "apt": 82, "homebrew": 82, "brew": 82, "anaconda": 82, "miniconda": 82, "pull": 82, "process": 82, "git": 82, "github": 82, "com": 82, "isaksamsten": 82, "tool": 82, "studio": 82, "command": 82, "cmd": 82, "consol": 82, "distutils_use_sdk": 82, "program": 82, "x86": 82, "microsoft": 82, "buildtool": 82, "vc": 82, "auxiliari": 82, "vcvarsal": 82, "bat": 82, "x64": 82, "xcode": 82, "ubuntu": 82, "dev": 82, "txt": 82, "mode": 82, "eas": 82, "wildboar_build": 82, "architectur": 82}, "objects": {"": [[25, 0, 0, "-", "wildboar"]], "wildboar": [[3, 0, 0, "-", "annotate"], [4, 0, 0, "-", "base"], [7, 0, 0, "-", "datasets"], [15, 0, 0, "-", "distance"], [17, 0, 0, "-", "ensemble"], [24, 0, 0, "-", "explain"], [25, 1, 1, "", "iseos"], [30, 0, 0, "-", "linear_model"], [33, 0, 0, "-", "metrics"], [36, 0, 0, "-", "model_selection"], [47, 0, 0, "-", "transform"], [51, 0, 0, "-", "tree"], [56, 0, 0, "-", "utils"], [60, 0, 0, "-", "version"]], "wildboar.annotate": [[1, 0, 0, "-", "_motifs"], [2, 0, 0, "-", "_segment"], [3, 1, 1, "", "motifs"], [3, 1, 1, "", "segment"]], "wildboar.annotate._motifs": [[1, 1, 1, "", "motifs"]], "wildboar.annotate._segment": [[2, 1, 1, "", "segment"]], "wildboar.base": [[4, 2, 1, "", "BaseEstimator"], [4, 2, 1, "", "CounterfactualMixin"], [4, 2, 1, "", "ExplainerMixin"], [4, 1, 1, "", "is_counterfactual"], [4, 1, 1, "", "is_explainer"]], "wildboar.base.BaseEstimator": [[4, 3, 1, "", "get_metadata_routing"], [4, 3, 1, "", "get_params"], [4, 3, 1, "", "set_params"]], "wildboar.base.CounterfactualMixin": [[4, 3, 1, "", "score"]], "wildboar.base.ExplainerMixin": [[4, 3, 1, "", "fit_explain"], [4, 3, 1, "", "plot"]], "wildboar.datasets": [[7, 2, 1, "", "Bundle"], [7, 2, 1, "", "JSONRepository"], [7, 2, 1, "", "NpBundle"], [7, 2, 1, "", "Repository"], [5, 0, 0, "-", "_filter"], [6, 0, 0, "-", "_repository"], [7, 1, 1, "", "clear_cache"], [7, 1, 1, "", "get_bundles"], [7, 1, 1, "", "get_repository"], [7, 1, 1, "", "install_repository"], [7, 1, 1, "", "list_bundles"], [7, 1, 1, "", "list_collections"], [7, 1, 1, "", "list_datasets"], [7, 1, 1, "", "list_repositories"], [7, 1, 1, "", "load_dataset"], [7, 1, 1, "", "load_datasets"], [7, 1, 1, "", "load_gun_point"], [7, 1, 1, "", "load_synthetic_control"], [7, 1, 1, "", "load_two_lead_ecg"], [8, 0, 0, "-", "outlier"], [9, 0, 0, "-", "preprocess"], [7, 1, 1, "", "refresh_repositories"], [7, 1, 1, "", "set_cache_dir"]], "wildboar.datasets.Bundle": [[7, 3, 1, "", "get_collection"], [7, 3, 1, "", "get_filename"], [7, 3, 1, "", "list"], [7, 3, 1, "", "load"]], "wildboar.datasets.JSONRepository": [[7, 4, 1, "", "download_url"], [7, 3, 1, "", "get_bundle"], [7, 3, 1, "", "get_bundles"], [7, 4, 1, "", "name"], [7, 3, 1, "", "refresh"], [7, 4, 1, "", "version"], [7, 4, 1, "", "wildboar_requires"]], "wildboar.datasets.NpBundle": [[7, 3, 1, "", "get_collection"], [7, 3, 1, "", "get_filename"], [7, 3, 1, "", "list"], [7, 3, 1, "", "load"]], "wildboar.datasets.Repository": [[7, 4, 1, "", "download_url"], [7, 3, 1, "", "get_bundle"], [7, 3, 1, "", "get_bundles"], [7, 4, 1, "", "name"], [7, 3, 1, "", "refresh"], [7, 4, 1, "", "version"], [7, 4, 1, "", "wildboar_requires"]], "wildboar.datasets._filter": [[5, 1, 1, "", "make_dict_filter"], [5, 1, 1, "", "make_filter"], [5, 1, 1, "", "make_list_filter"], [5, 1, 1, "", "make_str_filter"]], "wildboar.datasets._repository": [[6, 2, 1, "", "Bundle"], [6, 2, 1, "", "JSONRepository"], [6, 2, 1, "", "NpBundle"], [6, 2, 1, "", "Repository"]], "wildboar.datasets._repository.Bundle": [[6, 3, 1, "", "get_collection"], [6, 3, 1, "", "get_filename"], [6, 3, 1, "", "list"], [6, 3, 1, "", "load"]], "wildboar.datasets._repository.JSONRepository": [[6, 4, 1, "", "download_url"], [6, 3, 1, "", "get_bundle"], [6, 3, 1, "", "get_bundles"], [6, 4, 1, "", "name"], [6, 3, 1, "", "refresh"], [6, 4, 1, "", "version"], [6, 4, 1, "", "wildboar_requires"]], "wildboar.datasets._repository.NpBundle": [[6, 3, 1, "", "get_collection"], [6, 3, 1, "", "get_filename"], [6, 3, 1, "", "list"], [6, 3, 1, "", "load"]], "wildboar.datasets._repository.Repository": [[6, 4, 1, "", "download_url"], [6, 3, 1, "", "get_bundle"], [6, 3, 1, "", "get_bundles"], [6, 4, 1, "", "name"], [6, 3, 1, "", "refresh"], [6, 4, 1, "", "version"], [6, 4, 1, "", "wildboar_requires"]], "wildboar.datasets.outlier": [[8, 1, 1, "", "density_outliers"], [8, 1, 1, "", "emmott_outliers"], [8, 1, 1, "", "kmeans_outliers"], [8, 1, 1, "", "majority_outliers"], [8, 1, 1, "", "minority_outliers"]], "wildboar.datasets.preprocess": [[9, 1, 1, "", "maxabs_scale"], [9, 1, 1, "", "minmax_scale"], [9, 1, 1, "", "named_preprocess"], [9, 1, 1, "", "standardize"], [9, 1, 1, "", "truncate"]], "wildboar.distance": [[15, 2, 1, "", "KMeans"], [15, 2, 1, "", "KMedoids"], [15, 2, 1, "", "KNeighbourClassifier"], [10, 0, 0, "-", "_distance"], [11, 0, 0, "-", "_matrix_profile"], [12, 0, 0, "-", "_multi_metric"], [13, 0, 0, "-", "_neighbour"], [14, 0, 0, "-", "dtw"], [15, 1, 1, "", "matrix_profile"], [15, 1, 1, "", "paired_distance"], [15, 1, 1, "", "paired_subsequence_distance"], [15, 1, 1, "", "paired_subsequence_match"], [15, 1, 1, "", "pairwise_distance"], [15, 1, 1, "", "pairwise_subsequence_distance"], [15, 1, 1, "", "subsequence_match"]], "wildboar.distance.KMeans": [[15, 3, 1, "", "fit"], [15, 3, 1, "", "fit_predict"], [15, 3, 1, "", "fit_transform"], [15, 3, 1, "", "get_metadata_routing"], [15, 3, 1, "", "get_params"], [15, 3, 1, "", "predict"], [15, 3, 1, "", "set_output"], [15, 3, 1, "", "set_params"], [15, 3, 1, "", "transform"]], "wildboar.distance.KMedoids": [[15, 3, 1, "", "fit"], [15, 3, 1, "", "fit_predict"], [15, 3, 1, "", "fit_transform"], [15, 3, 1, "", "get_metadata_routing"], [15, 3, 1, "", "get_params"], [15, 3, 1, "", "predict"], [15, 3, 1, "", "set_output"], [15, 3, 1, "", "set_params"], [15, 3, 1, "", "transform"]], "wildboar.distance.KNeighbourClassifier": [[15, 3, 1, "", "fit"], [15, 3, 1, "", "get_metadata_routing"], [15, 3, 1, "", "get_params"], [15, 3, 1, "", "predict"], [15, 3, 1, "", "predict_proba"], [15, 3, 1, "", "score"], [15, 3, 1, "", "set_params"]], "wildboar.distance._distance": [[10, 1, 1, "", "paired_distance"], [10, 1, 1, "", "paired_subsequence_distance"], [10, 1, 1, "", "paired_subsequence_match"], [10, 1, 1, "", "pairwise_distance"], [10, 1, 1, "", "pairwise_subsequence_distance"], [10, 1, 1, "", "subsequence_match"]], "wildboar.distance._matrix_profile": [[11, 1, 1, "", "matrix_profile"]], "wildboar.distance._neighbour": [[13, 2, 1, "", "KMeans"], [13, 2, 1, "", "KMedoids"], [13, 2, 1, "", "KNeighbourClassifier"]], "wildboar.distance._neighbour.KMeans": [[13, 3, 1, "", "fit"], [13, 3, 1, "", "fit_predict"], [13, 3, 1, "", "fit_transform"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "set_output"], [13, 3, 1, "", "set_params"], [13, 3, 1, "", "transform"]], "wildboar.distance._neighbour.KMedoids": [[13, 3, 1, "", "fit"], [13, 3, 1, "", "fit_predict"], [13, 3, 1, "", "fit_transform"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "set_output"], [13, 3, 1, "", "set_params"], [13, 3, 1, "", "transform"]], "wildboar.distance._neighbour.KNeighbourClassifier": [[13, 3, 1, "", "fit"], [13, 3, 1, "", "get_metadata_routing"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "predict_proba"], [13, 3, 1, "", "score"], [13, 3, 1, "", "set_params"]], "wildboar.distance.dtw": [[14, 1, 1, "", "ddtw_distance"], [14, 1, 1, "", "dtw_alignment"], [14, 1, 1, "", "dtw_average"], [14, 1, 1, "", "dtw_distance"], [14, 1, 1, "", "dtw_envelop"], [14, 1, 1, "", "dtw_lb_keogh"], [14, 1, 1, "", "dtw_mapping"], [14, 1, 1, "", "jeong_weight"], [14, 1, 1, "", "wddtw_distance"], [14, 1, 1, "", "wdtw_alignment"], [14, 1, 1, "", "wdtw_distance"]], "wildboar.ensemble": [[17, 2, 1, "", "BaggingClassifier"], [17, 2, 1, "", "BaggingRegressor"], [17, 2, 1, "", "BaseBagging"], [17, 2, 1, "", "ExtraShapeletTreesClassifier"], [17, 2, 1, "", "ExtraShapeletTreesRegressor"], [17, 2, 1, "", "IntervalForestClassifier"], [17, 2, 1, "", "IntervalForestRegressor"], [17, 2, 1, "", "IsolationShapeletForest"], [17, 2, 1, "", "PivotForestClassifier"], [17, 2, 1, "", "ProximityForestClassifier"], [17, 2, 1, "", "RocketForestClassifier"], [17, 2, 1, "", "RocketForestRegressor"], [17, 2, 1, "", "ShapeletForestClassifier"], [17, 2, 1, "", "ShapeletForestEmbedding"], [17, 2, 1, "", "ShapeletForestRegressor"], [16, 0, 0, "-", "_ensemble"]], "wildboar.ensemble.BaggingClassifier": [[17, 4, 1, "", "base_estimator_"], [17, 3, 1, "", "decision_function"], [17, 4, 1, "", "estimators_samples_"], [17, 3, 1, "", "fit"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "predict"], [17, 3, 1, "", "predict_log_proba"], [17, 3, 1, "", "predict_proba"], [17, 3, 1, "", "score"], [17, 3, 1, "", "set_params"]], "wildboar.ensemble.BaggingRegressor": [[17, 4, 1, "", "base_estimator_"], [17, 4, 1, "", "estimators_samples_"], [17, 3, 1, "", "fit"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "predict"], [17, 3, 1, "", "score"], [17, 3, 1, "", "set_params"]], "wildboar.ensemble.BaseBagging": [[17, 4, 1, "", "base_estimator_"], [17, 4, 1, "", "estimators_samples_"], [17, 3, 1, "", "fit"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "set_params"]], "wildboar.ensemble.ExtraShapeletTreesClassifier": [[17, 4, 1, "", "base_estimator_"], [17, 3, 1, "", "decision_function"], [17, 4, 1, "", "estimators_samples_"], [17, 3, 1, "", "fit"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "predict"], [17, 3, 1, "", "predict_log_proba"], [17, 3, 1, "", "predict_proba"], [17, 3, 1, "", "score"], [17, 3, 1, "", "set_params"]], "wildboar.ensemble.ExtraShapeletTreesRegressor": [[17, 4, 1, "", "base_estimator_"], [17, 4, 1, "", "estimators_samples_"], [17, 3, 1, "", "fit"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "predict"], [17, 3, 1, "", "score"], [17, 3, 1, "", "set_params"]], "wildboar.ensemble.IntervalForestClassifier": [[17, 4, 1, "", "base_estimator_"], [17, 3, 1, "", "decision_function"], [17, 4, 1, "", "estimators_samples_"], [17, 3, 1, "", "fit"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "predict"], [17, 3, 1, "", "predict_log_proba"], [17, 3, 1, "", "predict_proba"], [17, 3, 1, "", "score"], [17, 3, 1, "", "set_params"]], "wildboar.ensemble.IntervalForestRegressor": [[17, 4, 1, "", "base_estimator_"], [17, 4, 1, "", "estimators_samples_"], [17, 3, 1, "", "fit"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "predict"], [17, 3, 1, "", "score"], [17, 3, 1, "", "set_params"]], "wildboar.ensemble.IsolationShapeletForest": [[17, 4, 1, "", "base_estimator_"], [17, 4, 1, "", "estimators_samples_"], [17, 3, 1, "", "fit"], [17, 3, 1, "", "fit_predict"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "set_params"]], "wildboar.ensemble.PivotForestClassifier": [[17, 4, 1, "", "base_estimator_"], [17, 3, 1, "", "decision_function"], [17, 4, 1, "", "estimators_samples_"], [17, 3, 1, "", "fit"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "predict"], [17, 3, 1, "", "predict_log_proba"], [17, 3, 1, "", "predict_proba"], [17, 3, 1, "", "score"], [17, 3, 1, "", "set_params"]], "wildboar.ensemble.ProximityForestClassifier": [[17, 4, 1, "", "base_estimator_"], [17, 3, 1, "", "decision_function"], [17, 4, 1, "", "estimators_samples_"], [17, 3, 1, "", "fit"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "predict"], [17, 3, 1, "", "predict_log_proba"], [17, 3, 1, "", "predict_proba"], [17, 3, 1, "", "score"], [17, 3, 1, "", "set_params"]], "wildboar.ensemble.RocketForestClassifier": [[17, 4, 1, "", "base_estimator_"], [17, 3, 1, "", "decision_function"], [17, 4, 1, "", "estimators_samples_"], [17, 3, 1, "", "fit"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "predict"], [17, 3, 1, "", "predict_log_proba"], [17, 3, 1, "", "predict_proba"], [17, 3, 1, "", "score"], [17, 3, 1, "", "set_params"]], "wildboar.ensemble.RocketForestRegressor": [[17, 4, 1, "", "base_estimator_"], [17, 4, 1, "", "estimators_samples_"], [17, 3, 1, "", "fit"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "predict"], [17, 3, 1, "", "score"], [17, 3, 1, "", "set_params"]], "wildboar.ensemble.ShapeletForestClassifier": [[17, 4, 1, "", "base_estimator_"], [17, 3, 1, "", "decision_function"], [17, 4, 1, "", "estimators_samples_"], [17, 3, 1, "", "fit"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "predict"], [17, 3, 1, "", "predict_log_proba"], [17, 3, 1, "", "predict_proba"], [17, 3, 1, "", "score"], [17, 3, 1, "", "set_params"]], "wildboar.ensemble.ShapeletForestEmbedding": [[17, 4, 1, "", "base_estimator_"], [17, 4, 1, "", "estimators_samples_"], [17, 3, 1, "", "fit"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "predict"], [17, 3, 1, "", "score"], [17, 3, 1, "", "set_params"]], "wildboar.ensemble.ShapeletForestRegressor": [[17, 4, 1, "", "base_estimator_"], [17, 4, 1, "", "estimators_samples_"], [17, 3, 1, "", "fit"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "predict"], [17, 3, 1, "", "score"], [17, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble": [[16, 2, 1, "", "BaggingClassifier"], [16, 2, 1, "", "BaggingRegressor"], [16, 2, 1, "", "BaseBagging"], [16, 2, 1, "", "BaseForestClassifier"], [16, 2, 1, "", "BaseForestRegressor"], [16, 2, 1, "", "BaseShapeletForestClassifier"], [16, 2, 1, "", "BaseShapeletForestRegressor"], [16, 2, 1, "", "ExtraShapeletTreesClassifier"], [16, 2, 1, "", "ExtraShapeletTreesRegressor"], [16, 2, 1, "", "ForestMixin"], [16, 2, 1, "", "IntervalForestClassifier"], [16, 2, 1, "", "IntervalForestRegressor"], [16, 2, 1, "", "IsolationShapeletForest"], [16, 2, 1, "", "PivotForestClassifier"], [16, 2, 1, "", "ProximityForestClassifier"], [16, 2, 1, "", "RocketForestClassifier"], [16, 2, 1, "", "RocketForestRegressor"], [16, 2, 1, "", "ShapeletForestClassifier"], [16, 2, 1, "", "ShapeletForestEmbedding"], [16, 2, 1, "", "ShapeletForestRegressor"]], "wildboar.ensemble._ensemble.BaggingClassifier": [[16, 4, 1, "", "base_estimator_"], [16, 3, 1, "", "decision_function"], [16, 4, 1, "", "estimators_samples_"], [16, 3, 1, "", "fit"], [16, 3, 1, "", "get_metadata_routing"], [16, 3, 1, "", "get_params"], [16, 3, 1, "", "predict"], [16, 3, 1, "", "predict_log_proba"], [16, 3, 1, "", "predict_proba"], [16, 3, 1, "", "score"], [16, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaggingRegressor": [[16, 4, 1, "", "base_estimator_"], [16, 4, 1, "", "estimators_samples_"], [16, 3, 1, "", "fit"], [16, 3, 1, "", "get_metadata_routing"], [16, 3, 1, "", "get_params"], [16, 3, 1, "", "predict"], [16, 3, 1, "", "score"], [16, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaseBagging": [[16, 4, 1, "", "base_estimator_"], [16, 4, 1, "", "estimators_samples_"], [16, 3, 1, "", "fit"], [16, 3, 1, "", "get_metadata_routing"], [16, 3, 1, "", "get_params"], [16, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaseForestClassifier": [[16, 4, 1, "", "base_estimator_"], [16, 3, 1, "", "decision_function"], [16, 4, 1, "", "estimators_samples_"], [16, 3, 1, "", "fit"], [16, 3, 1, "", "get_metadata_routing"], [16, 3, 1, "", "get_params"], [16, 3, 1, "", "predict"], [16, 3, 1, "", "predict_log_proba"], [16, 3, 1, "", "predict_proba"], [16, 3, 1, "", "score"], [16, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaseForestRegressor": [[16, 4, 1, "", "base_estimator_"], [16, 4, 1, "", "estimators_samples_"], [16, 3, 1, "", "fit"], [16, 3, 1, "", "get_metadata_routing"], [16, 3, 1, "", "get_params"], [16, 3, 1, "", "predict"], [16, 3, 1, "", "score"], [16, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaseShapeletForestClassifier": [[16, 4, 1, "", "base_estimator_"], [16, 3, 1, "", "decision_function"], [16, 4, 1, "", "estimators_samples_"], [16, 3, 1, "", "fit"], [16, 3, 1, "", "get_metadata_routing"], [16, 3, 1, "", "get_params"], [16, 3, 1, "", "predict"], [16, 3, 1, "", "predict_log_proba"], [16, 3, 1, "", "predict_proba"], [16, 3, 1, "", "score"], [16, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaseShapeletForestRegressor": [[16, 4, 1, "", "base_estimator_"], [16, 4, 1, "", "estimators_samples_"], [16, 3, 1, "", "fit"], [16, 3, 1, "", "get_metadata_routing"], [16, 3, 1, "", "get_params"], [16, 3, 1, "", "predict"], [16, 3, 1, "", "score"], [16, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier": [[16, 4, 1, "", "base_estimator_"], [16, 3, 1, "", "decision_function"], [16, 4, 1, "", "estimators_samples_"], [16, 3, 1, "", "fit"], [16, 3, 1, "", "get_metadata_routing"], [16, 3, 1, "", "get_params"], [16, 3, 1, "", "predict"], [16, 3, 1, "", "predict_log_proba"], [16, 3, 1, "", "predict_proba"], [16, 3, 1, "", "score"], [16, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor": [[16, 4, 1, "", "base_estimator_"], [16, 4, 1, "", "estimators_samples_"], [16, 3, 1, "", "fit"], [16, 3, 1, "", "get_metadata_routing"], [16, 3, 1, "", "get_params"], [16, 3, 1, "", "predict"], [16, 3, 1, "", "score"], [16, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.IntervalForestClassifier": [[16, 4, 1, "", "base_estimator_"], [16, 3, 1, "", "decision_function"], [16, 4, 1, "", "estimators_samples_"], [16, 3, 1, "", "fit"], [16, 3, 1, "", "get_metadata_routing"], [16, 3, 1, "", "get_params"], [16, 3, 1, "", "predict"], [16, 3, 1, "", "predict_log_proba"], [16, 3, 1, "", "predict_proba"], [16, 3, 1, "", "score"], [16, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.IntervalForestRegressor": [[16, 4, 1, "", "base_estimator_"], [16, 4, 1, "", "estimators_samples_"], [16, 3, 1, "", "fit"], [16, 3, 1, "", "get_metadata_routing"], [16, 3, 1, "", "get_params"], [16, 3, 1, "", "predict"], [16, 3, 1, "", "score"], [16, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.IsolationShapeletForest": [[16, 4, 1, "", "base_estimator_"], [16, 4, 1, "", "estimators_samples_"], [16, 3, 1, "", "fit"], [16, 3, 1, "", "fit_predict"], [16, 3, 1, "", "get_metadata_routing"], [16, 3, 1, "", "get_params"], [16, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.PivotForestClassifier": [[16, 4, 1, "", "base_estimator_"], [16, 3, 1, "", "decision_function"], [16, 4, 1, "", "estimators_samples_"], [16, 3, 1, "", "fit"], [16, 3, 1, "", "get_metadata_routing"], [16, 3, 1, "", "get_params"], [16, 3, 1, "", "predict"], [16, 3, 1, "", "predict_log_proba"], [16, 3, 1, "", "predict_proba"], [16, 3, 1, "", "score"], [16, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ProximityForestClassifier": [[16, 4, 1, "", "base_estimator_"], [16, 3, 1, "", "decision_function"], [16, 4, 1, "", "estimators_samples_"], [16, 3, 1, "", "fit"], [16, 3, 1, "", "get_metadata_routing"], [16, 3, 1, "", "get_params"], [16, 3, 1, "", "predict"], [16, 3, 1, "", "predict_log_proba"], [16, 3, 1, "", "predict_proba"], [16, 3, 1, "", "score"], [16, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.RocketForestClassifier": [[16, 4, 1, "", "base_estimator_"], [16, 3, 1, "", "decision_function"], [16, 4, 1, "", "estimators_samples_"], [16, 3, 1, "", "fit"], [16, 3, 1, "", "get_metadata_routing"], [16, 3, 1, "", "get_params"], [16, 3, 1, "", "predict"], [16, 3, 1, "", "predict_log_proba"], [16, 3, 1, "", "predict_proba"], [16, 3, 1, "", "score"], [16, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.RocketForestRegressor": [[16, 4, 1, "", "base_estimator_"], [16, 4, 1, "", "estimators_samples_"], [16, 3, 1, "", "fit"], [16, 3, 1, "", "get_metadata_routing"], [16, 3, 1, "", "get_params"], [16, 3, 1, "", "predict"], [16, 3, 1, "", "score"], [16, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ShapeletForestClassifier": [[16, 4, 1, "", "base_estimator_"], [16, 3, 1, "", "decision_function"], [16, 4, 1, "", "estimators_samples_"], [16, 3, 1, "", "fit"], [16, 3, 1, "", "get_metadata_routing"], [16, 3, 1, "", "get_params"], [16, 3, 1, "", "predict"], [16, 3, 1, "", "predict_log_proba"], [16, 3, 1, "", "predict_proba"], [16, 3, 1, "", "score"], [16, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ShapeletForestEmbedding": [[16, 4, 1, "", "base_estimator_"], [16, 4, 1, "", "estimators_samples_"], [16, 3, 1, "", "fit"], [16, 3, 1, "", "get_metadata_routing"], [16, 3, 1, "", "get_params"], [16, 3, 1, "", "predict"], [16, 3, 1, "", "score"], [16, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ShapeletForestRegressor": [[16, 4, 1, "", "base_estimator_"], [16, 4, 1, "", "estimators_samples_"], [16, 3, 1, "", "fit"], [16, 3, 1, "", "get_metadata_routing"], [16, 3, 1, "", "get_params"], [16, 3, 1, "", "predict"], [16, 3, 1, "", "score"], [16, 3, 1, "", "set_params"]], "wildboar.explain": [[24, 2, 1, "", "AmplitudeImportance"], [24, 2, 1, "", "IntervalImportance"], [24, 2, 1, "", "ShapeletImportance"], [18, 0, 0, "-", "_importance"], [23, 0, 0, "-", "counterfactual"], [24, 1, 1, "", "plot_importances"]], "wildboar.explain.AmplitudeImportance": [[24, 3, 1, "", "fit_explain"], [24, 3, 1, "", "get_metadata_routing"], [24, 3, 1, "", "get_params"], [24, 3, 1, "", "plot"], [24, 3, 1, "", "set_params"]], "wildboar.explain.IntervalImportance": [[24, 3, 1, "", "fit_explain"], [24, 3, 1, "", "get_metadata_routing"], [24, 3, 1, "", "get_params"], [24, 3, 1, "", "plot"], [24, 3, 1, "", "set_params"]], "wildboar.explain.ShapeletImportance": [[24, 3, 1, "", "fit_explain"], [24, 3, 1, "", "get_metadata_routing"], [24, 3, 1, "", "get_params"], [24, 3, 1, "", "plot"], [24, 3, 1, "", "set_params"]], "wildboar.explain._importance": [[18, 2, 1, "", "AmplitudeImportance"], [18, 2, 1, "", "IntervalImportance"], [18, 2, 1, "", "PermuteImportance"], [18, 2, 1, "", "ShapeletImportance"], [18, 1, 1, "", "plot_importances"]], "wildboar.explain._importance.AmplitudeImportance": [[18, 3, 1, "", "fit_explain"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "plot"], [18, 3, 1, "", "set_params"]], "wildboar.explain._importance.IntervalImportance": [[18, 3, 1, "", "fit_explain"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "plot"], [18, 3, 1, "", "set_params"]], "wildboar.explain._importance.PermuteImportance": [[18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "set_params"]], "wildboar.explain._importance.ShapeletImportance": [[18, 3, 1, "", "fit_explain"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "plot"], [18, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual": [[23, 2, 1, "", "KNeighborsCounterfactual"], [23, 2, 1, "", "PrototypeCounterfactual"], [23, 2, 1, "", "ShapeletForestCounterfactual"], [19, 0, 0, "-", "_helper"], [20, 0, 0, "-", "_nn"], [21, 0, 0, "-", "_proto"], [22, 0, 0, "-", "_sf"], [23, 1, 1, "", "counterfactuals"], [23, 1, 1, "", "proximity"]], "wildboar.explain.counterfactual.KNeighborsCounterfactual": [[23, 3, 1, "", "fit_explain"], [23, 3, 1, "", "get_metadata_routing"], [23, 3, 1, "", "get_params"], [23, 3, 1, "", "plot"], [23, 3, 1, "", "score"], [23, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual.PrototypeCounterfactual": [[23, 3, 1, "", "fit_explain"], [23, 3, 1, "", "get_metadata_routing"], [23, 3, 1, "", "get_params"], [23, 3, 1, "", "plot"], [23, 3, 1, "", "score"], [23, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual.ShapeletForestCounterfactual": [[23, 3, 1, "", "fit_explain"], [23, 3, 1, "", "get_metadata_routing"], [23, 3, 1, "", "get_params"], [23, 3, 1, "", "plot"], [23, 3, 1, "", "score"], [23, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual._helper": [[19, 1, 1, "", "counterfactuals"]], "wildboar.explain.counterfactual._nn": [[20, 2, 1, "", "KNeighborsCounterfactual"]], "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual": [[20, 3, 1, "", "fit_explain"], [20, 3, 1, "", "get_metadata_routing"], [20, 3, 1, "", "get_params"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "score"], [20, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual._proto": [[21, 2, 1, "", "DynamicTimeWarpTransform"], [21, 2, 1, "", "EuclideanTransform"], [21, 2, 1, "", "KNearestPrototypeSampler"], [21, 2, 1, "", "KNearestShapeletPrototypeSampler"], [21, 2, 1, "", "MetricTransform"], [21, 2, 1, "", "PredictEvaluator"], [21, 2, 1, "", "ProbabilityEvaluator"], [21, 2, 1, "", "PrototypeCounterfactual"], [21, 2, 1, "", "PrototypeSampler"], [21, 2, 1, "", "ShapeletPrototypeSampler"], [21, 2, 1, "", "TargetEvaluator"], [21, 2, 1, "", "UniformPrototypeSampler"], [21, 2, 1, "", "WeightedDynamicTimeWarpTransform"]], "wildboar.explain.counterfactual._proto.DynamicTimeWarpTransform": [[21, 3, 1, "", "move"]], "wildboar.explain.counterfactual._proto.EuclideanTransform": [[21, 3, 1, "", "move"]], "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler": [[21, 3, 1, "", "move"], [21, 3, 1, "", "nearest_index"], [21, 3, 1, "", "sample"], [21, 3, 1, "", "sample_move"]], "wildboar.explain.counterfactual._proto.KNearestShapeletPrototypeSampler": [[21, 3, 1, "", "move"], [21, 3, 1, "", "sample"], [21, 3, 1, "", "sample_move"]], "wildboar.explain.counterfactual._proto.MetricTransform": [[21, 3, 1, "", "move"]], "wildboar.explain.counterfactual._proto.PredictEvaluator": [[21, 3, 1, "", "is_counterfactual"]], "wildboar.explain.counterfactual._proto.ProbabilityEvaluator": [[21, 3, 1, "", "is_counterfactual"]], "wildboar.explain.counterfactual._proto.PrototypeCounterfactual": [[21, 3, 1, "", "fit_explain"], [21, 3, 1, "", "get_metadata_routing"], [21, 3, 1, "", "get_params"], [21, 3, 1, "", "plot"], [21, 3, 1, "", "score"], [21, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual._proto.PrototypeSampler": [[21, 3, 1, "", "move"], [21, 3, 1, "", "sample"], [21, 3, 1, "", "sample_move"]], "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler": [[21, 3, 1, "", "move"], [21, 3, 1, "", "sample"], [21, 3, 1, "", "sample_move"], [21, 3, 1, "", "sample_shapelet"]], "wildboar.explain.counterfactual._proto.TargetEvaluator": [[21, 3, 1, "", "is_counterfactual"]], "wildboar.explain.counterfactual._proto.UniformPrototypeSampler": [[21, 3, 1, "", "move"], [21, 3, 1, "", "sample"], [21, 3, 1, "", "sample_move"]], "wildboar.explain.counterfactual._proto.WeightedDynamicTimeWarpTransform": [[21, 3, 1, "", "move"]], "wildboar.explain.counterfactual._sf": [[22, 2, 1, "", "ShapeletForestCounterfactual"]], "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual": [[22, 3, 1, "", "fit_explain"], [22, 3, 1, "", "get_metadata_routing"], [22, 3, 1, "", "get_params"], [22, 3, 1, "", "plot"], [22, 3, 1, "", "score"], [22, 3, 1, "", "set_params"]], "wildboar.linear_model": [[30, 2, 1, "", "HydraClassifier"], [30, 2, 1, "", "RandomShapeletClassifier"], [30, 2, 1, "", "RandomShapeletRegressor"], [30, 2, 1, "", "RocketClassifier"], [30, 2, 1, "", "RocketRegressor"], [26, 0, 0, "-", "_hydra"], [27, 0, 0, "-", "_rocket"], [28, 0, 0, "-", "_shapelet"], [29, 0, 0, "-", "_transform"]], "wildboar.linear_model.HydraClassifier": [[30, 3, 1, "", "get_metadata_routing"], [30, 3, 1, "", "get_params"], [30, 3, 1, "", "score"], [30, 3, 1, "", "set_params"]], "wildboar.linear_model.RandomShapeletClassifier": [[30, 3, 1, "", "get_metadata_routing"], [30, 3, 1, "", "get_params"], [30, 3, 1, "", "score"], [30, 3, 1, "", "set_params"]], "wildboar.linear_model.RandomShapeletRegressor": [[30, 3, 1, "", "get_metadata_routing"], [30, 3, 1, "", "get_params"], [30, 3, 1, "", "score"], [30, 3, 1, "", "set_params"]], "wildboar.linear_model.RocketClassifier": [[30, 3, 1, "", "get_metadata_routing"], [30, 3, 1, "", "get_params"], [30, 3, 1, "", "score"], [30, 3, 1, "", "set_params"]], "wildboar.linear_model.RocketRegressor": [[30, 3, 1, "", "get_metadata_routing"], [30, 3, 1, "", "get_params"], [30, 3, 1, "", "score"], [30, 3, 1, "", "set_params"]], "wildboar.linear_model._hydra": [[26, 2, 1, "", "HydraClassifier"]], "wildboar.linear_model._hydra.HydraClassifier": [[26, 3, 1, "", "get_metadata_routing"], [26, 3, 1, "", "get_params"], [26, 3, 1, "", "score"], [26, 3, 1, "", "set_params"]], "wildboar.linear_model._rocket": [[27, 2, 1, "", "RocketClassifier"], [27, 2, 1, "", "RocketRegressor"]], "wildboar.linear_model._rocket.RocketClassifier": [[27, 3, 1, "", "get_metadata_routing"], [27, 3, 1, "", "get_params"], [27, 3, 1, "", "score"], [27, 3, 1, "", "set_params"]], "wildboar.linear_model._rocket.RocketRegressor": [[27, 3, 1, "", "get_metadata_routing"], [27, 3, 1, "", "get_params"], [27, 3, 1, "", "score"], [27, 3, 1, "", "set_params"]], "wildboar.linear_model._shapelet": [[28, 2, 1, "", "RandomShapeletClassifier"], [28, 2, 1, "", "RandomShapeletRegressor"]], "wildboar.linear_model._shapelet.RandomShapeletClassifier": [[28, 3, 1, "", "get_metadata_routing"], [28, 3, 1, "", "get_params"], [28, 3, 1, "", "score"], [28, 3, 1, "", "set_params"]], "wildboar.linear_model._shapelet.RandomShapeletRegressor": [[28, 3, 1, "", "get_metadata_routing"], [28, 3, 1, "", "get_params"], [28, 3, 1, "", "score"], [28, 3, 1, "", "set_params"]], "wildboar.linear_model._transform": [[29, 2, 1, "", "BaseTransformClassifier"], [29, 2, 1, "", "BaseTransformEstimator"], [29, 2, 1, "", "BaseTransformRegressor"], [29, 2, 1, "", "TransformRidgeCV"], [29, 2, 1, "", "TransformRidgeClassifierCV"]], "wildboar.linear_model._transform.BaseTransformClassifier": [[29, 3, 1, "", "get_metadata_routing"], [29, 3, 1, "", "get_params"], [29, 3, 1, "", "score"], [29, 3, 1, "", "set_params"]], "wildboar.linear_model._transform.BaseTransformEstimator": [[29, 3, 1, "", "get_metadata_routing"], [29, 3, 1, "", "get_params"], [29, 3, 1, "", "set_params"]], "wildboar.linear_model._transform.BaseTransformRegressor": [[29, 3, 1, "", "get_metadata_routing"], [29, 3, 1, "", "get_params"], [29, 3, 1, "", "score"], [29, 3, 1, "", "set_params"]], "wildboar.linear_model._transform.TransformRidgeCV": [[29, 3, 1, "", "get_metadata_routing"], [29, 3, 1, "", "get_params"], [29, 3, 1, "", "score"], [29, 3, 1, "", "set_params"]], "wildboar.linear_model._transform.TransformRidgeClassifierCV": [[29, 3, 1, "", "get_metadata_routing"], [29, 3, 1, "", "get_params"], [29, 3, 1, "", "score"], [29, 3, 1, "", "set_params"]], "wildboar.metrics": [[31, 0, 0, "-", "_cluster"], [32, 0, 0, "-", "_counterfactual"], [33, 1, 1, "", "compactness_score"], [33, 1, 1, "", "plausability_score"], [33, 1, 1, "", "proximity_score"], [33, 1, 1, "", "redudancy_score"], [33, 1, 1, "", "relative_proximity_score"], [33, 1, 1, "", "silhouette_samples"], [33, 1, 1, "", "silhouette_score"], [33, 1, 1, "", "validity_score"]], "wildboar.metrics._cluster": [[31, 1, 1, "", "silhouette_samples"], [31, 1, 1, "", "silhouette_score"]], "wildboar.metrics._counterfactual": [[32, 1, 1, "", "compactness_score"], [32, 1, 1, "", "plausability_score"], [32, 1, 1, "", "proximity_score"], [32, 1, 1, "", "redudancy_score"], [32, 1, 1, "", "relative_proximity_score"], [32, 1, 1, "", "validity_score"]], "wildboar.model_selection": [[36, 2, 1, "", "RepeatedOutlierSplit"], [34, 0, 0, "-", "_cv"], [35, 0, 0, "-", "_outlier"], [36, 1, 1, "", "outlier_train_test_split"]], "wildboar.model_selection.RepeatedOutlierSplit": [[36, 3, 1, "", "get_n_splits"], [36, 3, 1, "", "split"]], "wildboar.model_selection._cv": [[34, 2, 1, "", "RepeatedOutlierSplit"]], "wildboar.model_selection._cv.RepeatedOutlierSplit": [[34, 3, 1, "", "get_n_splits"], [34, 3, 1, "", "split"]], "wildboar.model_selection._outlier": [[35, 1, 1, "", "outlier_train_test_split"]], "wildboar.transform": [[47, 2, 1, "", "DiffTransform"], [47, 2, 1, "", "FeatureTransform"], [47, 2, 1, "", "HydraTransform"], [47, 2, 1, "", "IntervalTransform"], [47, 2, 1, "", "MatrixProfileTransform"], [47, 2, 1, "", "PAA"], [47, 2, 1, "", "PivotTransform"], [47, 2, 1, "", "ProximityTransform"], [47, 2, 1, "", "RandomShapeletTransform"], [47, 2, 1, "", "RocketTransform"], [47, 2, 1, "", "SAX"], [37, 0, 0, "-", "_base"], [38, 0, 0, "-", "_conv"], [39, 0, 0, "-", "_diff"], [40, 0, 0, "-", "_hydra"], [41, 0, 0, "-", "_interval"], [42, 0, 0, "-", "_matrix_profile"], [43, 0, 0, "-", "_pivot"], [44, 0, 0, "-", "_rocket"], [45, 0, 0, "-", "_sax"], [46, 0, 0, "-", "_shapelet"], [47, 1, 1, "", "convolve"], [47, 1, 1, "", "piecewice_aggregate_approximation"], [47, 1, 1, "", "symbolic_aggregate_approximation"]], "wildboar.transform.DiffTransform": [[47, 3, 1, "", "fit_transform"], [47, 3, 1, "", "get_metadata_routing"], [47, 3, 1, "", "get_params"], [47, 3, 1, "", "set_output"], [47, 3, 1, "", "set_params"]], "wildboar.transform.FeatureTransform": [[47, 3, 1, "", "fit"], [47, 3, 1, "", "fit_transform"], [47, 3, 1, "", "get_metadata_routing"], [47, 3, 1, "", "get_params"], [47, 3, 1, "", "set_output"], [47, 3, 1, "", "set_params"], [47, 3, 1, "", "transform"]], "wildboar.transform.HydraTransform": [[47, 3, 1, "", "fit"], [47, 3, 1, "", "fit_transform"], [47, 3, 1, "", "get_metadata_routing"], [47, 3, 1, "", "get_params"], [47, 3, 1, "", "set_output"], [47, 3, 1, "", "set_params"], [47, 3, 1, "", "transform"]], "wildboar.transform.IntervalTransform": [[47, 3, 1, "", "fit"], [47, 3, 1, "", "fit_transform"], [47, 3, 1, "", "get_metadata_routing"], [47, 3, 1, "", "get_params"], [47, 3, 1, "", "set_output"], [47, 3, 1, "", "set_params"], [47, 3, 1, "", "transform"]], "wildboar.transform.MatrixProfileTransform": [[47, 3, 1, "", "fit"], [47, 3, 1, "", "fit_transform"], [47, 3, 1, "", "get_metadata_routing"], [47, 3, 1, "", "get_params"], [47, 3, 1, "", "set_output"], [47, 3, 1, "", "set_params"], [47, 3, 1, "", "transform"]], "wildboar.transform.PAA": [[47, 3, 1, "", "fit_transform"], [47, 3, 1, "", "get_metadata_routing"], [47, 3, 1, "", "get_params"], [47, 3, 1, "", "set_output"], [47, 3, 1, "", "set_params"]], "wildboar.transform.PivotTransform": [[47, 3, 1, "", "fit"], [47, 3, 1, "", "fit_transform"], [47, 3, 1, "", "get_metadata_routing"], [47, 3, 1, "", "get_params"], [47, 3, 1, "", "set_output"], [47, 3, 1, "", "set_params"], [47, 3, 1, "", "transform"]], "wildboar.transform.ProximityTransform": [[47, 3, 1, "", "fit_transform"], [47, 3, 1, "", "get_metadata_routing"], [47, 3, 1, "", "get_params"], [47, 3, 1, "", "set_output"], [47, 3, 1, "", "set_params"]], "wildboar.transform.RandomShapeletTransform": [[47, 3, 1, "", "fit"], [47, 3, 1, "", "fit_transform"], [47, 3, 1, "", "get_metadata_routing"], [47, 3, 1, "", "get_params"], [47, 3, 1, "", "set_output"], [47, 3, 1, "", "set_params"], [47, 3, 1, "", "transform"]], "wildboar.transform.RocketTransform": [[47, 3, 1, "", "fit"], [47, 3, 1, "", "fit_transform"], [47, 3, 1, "", "get_metadata_routing"], [47, 3, 1, "", "get_params"], [47, 3, 1, "", "set_output"], [47, 3, 1, "", "set_params"], [47, 3, 1, "", "transform"]], "wildboar.transform.SAX": [[47, 3, 1, "", "fit_transform"], [47, 3, 1, "", "get_metadata_routing"], [47, 3, 1, "", "get_params"], [47, 3, 1, "", "set_output"], [47, 3, 1, "", "set_params"]], "wildboar.transform._base": [[37, 2, 1, "", "BaseAttributeTransform"]], "wildboar.transform._base.BaseAttributeTransform": [[37, 3, 1, "", "fit"], [37, 3, 1, "", "fit_transform"], [37, 3, 1, "", "get_metadata_routing"], [37, 3, 1, "", "get_params"], [37, 3, 1, "", "set_output"], [37, 3, 1, "", "set_params"], [37, 3, 1, "", "transform"]], "wildboar.transform._conv": [[38, 1, 1, "", "convolve"]], "wildboar.transform._diff": [[39, 2, 1, "", "DiffTransform"]], "wildboar.transform._diff.DiffTransform": [[39, 3, 1, "", "fit_transform"], [39, 3, 1, "", "get_metadata_routing"], [39, 3, 1, "", "get_params"], [39, 3, 1, "", "set_output"], [39, 3, 1, "", "set_params"]], "wildboar.transform._hydra": [[40, 2, 1, "", "HydraTransform"]], "wildboar.transform._hydra.HydraTransform": [[40, 3, 1, "", "fit"], [40, 3, 1, "", "fit_transform"], [40, 3, 1, "", "get_metadata_routing"], [40, 3, 1, "", "get_params"], [40, 3, 1, "", "set_output"], [40, 3, 1, "", "set_params"], [40, 3, 1, "", "transform"]], "wildboar.transform._interval": [[41, 2, 1, "", "FeatureTransform"], [41, 2, 1, "", "IntervalMixin"], [41, 2, 1, "", "IntervalTransform"]], "wildboar.transform._interval.FeatureTransform": [[41, 3, 1, "", "fit"], [41, 3, 1, "", "fit_transform"], [41, 3, 1, "", "get_metadata_routing"], [41, 3, 1, "", "get_params"], [41, 3, 1, "", "set_output"], [41, 3, 1, "", "set_params"], [41, 3, 1, "", "transform"]], "wildboar.transform._interval.IntervalTransform": [[41, 3, 1, "", "fit"], [41, 3, 1, "", "fit_transform"], [41, 3, 1, "", "get_metadata_routing"], [41, 3, 1, "", "get_params"], [41, 3, 1, "", "set_output"], [41, 3, 1, "", "set_params"], [41, 3, 1, "", "transform"]], "wildboar.transform._matrix_profile": [[42, 2, 1, "", "MatrixProfileTransform"]], "wildboar.transform._matrix_profile.MatrixProfileTransform": [[42, 3, 1, "", "fit"], [42, 3, 1, "", "fit_transform"], [42, 3, 1, "", "get_metadata_routing"], [42, 3, 1, "", "get_params"], [42, 3, 1, "", "set_output"], [42, 3, 1, "", "set_params"], [42, 3, 1, "", "transform"]], "wildboar.transform._pivot": [[43, 2, 1, "", "PivotMixin"], [43, 2, 1, "", "PivotTransform"], [43, 2, 1, "", "ProximityTransform"]], "wildboar.transform._pivot.PivotTransform": [[43, 3, 1, "", "fit"], [43, 3, 1, "", "fit_transform"], [43, 3, 1, "", "get_metadata_routing"], [43, 3, 1, "", "get_params"], [43, 3, 1, "", "set_output"], [43, 3, 1, "", "set_params"], [43, 3, 1, "", "transform"]], "wildboar.transform._pivot.ProximityTransform": [[43, 3, 1, "", "fit_transform"], [43, 3, 1, "", "get_metadata_routing"], [43, 3, 1, "", "get_params"], [43, 3, 1, "", "set_output"], [43, 3, 1, "", "set_params"]], "wildboar.transform._rocket": [[44, 2, 1, "", "RocketMixin"], [44, 2, 1, "", "RocketTransform"]], "wildboar.transform._rocket.RocketTransform": [[44, 3, 1, "", "fit"], [44, 3, 1, "", "fit_transform"], [44, 3, 1, "", "get_metadata_routing"], [44, 3, 1, "", "get_params"], [44, 3, 1, "", "set_output"], [44, 3, 1, "", "set_params"], [44, 3, 1, "", "transform"]], "wildboar.transform._sax": [[45, 2, 1, "", "Binning"], [45, 2, 1, "", "NormalBinning"], [45, 2, 1, "", "PAA"], [45, 2, 1, "", "SAX"], [45, 2, 1, "", "UniformBinning"], [45, 1, 1, "", "piecewice_aggregate_approximation"], [45, 1, 1, "", "symbolic_aggregate_approximation"]], "wildboar.transform._sax.Binning": [[45, 3, 1, "", "get_thresholds"], [45, 3, 1, "", "scale"]], "wildboar.transform._sax.NormalBinning": [[45, 3, 1, "", "get_thresholds"], [45, 3, 1, "", "scale"]], "wildboar.transform._sax.PAA": [[45, 3, 1, "", "fit_transform"], [45, 3, 1, "", "get_metadata_routing"], [45, 3, 1, "", "get_params"], [45, 3, 1, "", "set_output"], [45, 3, 1, "", "set_params"]], "wildboar.transform._sax.SAX": [[45, 3, 1, "", "fit_transform"], [45, 3, 1, "", "get_metadata_routing"], [45, 3, 1, "", "get_params"], [45, 3, 1, "", "set_output"], [45, 3, 1, "", "set_params"]], "wildboar.transform._sax.UniformBinning": [[45, 3, 1, "", "get_thresholds"], [45, 3, 1, "", "scale"]], "wildboar.transform._shapelet": [[46, 2, 1, "", "RandomShapeletTransform"], [46, 2, 1, "", "ShapeletMixin"]], "wildboar.transform._shapelet.RandomShapeletTransform": [[46, 3, 1, "", "fit"], [46, 3, 1, "", "fit_transform"], [46, 3, 1, "", "get_metadata_routing"], [46, 3, 1, "", "get_params"], [46, 3, 1, "", "set_output"], [46, 3, 1, "", "set_params"], [46, 3, 1, "", "transform"]], "wildboar.tree": [[51, 2, 1, "", "ExtraShapeletTreeClassifier"], [51, 2, 1, "", "ExtraShapeletTreeRegressor"], [51, 2, 1, "", "IntervalTreeClassifier"], [51, 2, 1, "", "IntervalTreeRegressor"], [51, 2, 1, "", "PivotTreeClassifier"], [51, 2, 1, "", "ProximityTreeClassifier"], [51, 2, 1, "", "RocketTreeClassifier"], [51, 2, 1, "", "RocketTreeRegressor"], [51, 2, 1, "", "ShapeletTreeClassifier"], [51, 2, 1, "", "ShapeletTreeRegressor"], [48, 0, 0, "-", "_base"], [49, 0, 0, "-", "_ptree"], [50, 0, 0, "-", "_tree"]], "wildboar.tree.ExtraShapeletTreeClassifier": [[51, 3, 1, "", "apply"], [51, 3, 1, "", "decision_path"], [51, 3, 1, "", "fit"], [51, 3, 1, "", "get_metadata_routing"], [51, 3, 1, "", "get_params"], [51, 3, 1, "", "predict"], [51, 3, 1, "", "predict_proba"], [51, 3, 1, "", "score"], [51, 3, 1, "", "set_params"]], "wildboar.tree.ExtraShapeletTreeRegressor": [[51, 3, 1, "", "apply"], [51, 3, 1, "", "decision_path"], [51, 3, 1, "", "fit"], [51, 3, 1, "", "get_metadata_routing"], [51, 3, 1, "", "get_params"], [51, 3, 1, "", "predict"], [51, 3, 1, "", "score"], [51, 3, 1, "", "set_params"]], "wildboar.tree.IntervalTreeClassifier": [[51, 3, 1, "", "apply"], [51, 3, 1, "", "decision_path"], [51, 3, 1, "", "fit"], [51, 3, 1, "", "get_metadata_routing"], [51, 3, 1, "", "get_params"], [51, 3, 1, "", "predict"], [51, 3, 1, "", "predict_proba"], [51, 3, 1, "", "score"], [51, 3, 1, "", "set_params"]], "wildboar.tree.IntervalTreeRegressor": [[51, 3, 1, "", "apply"], [51, 3, 1, "", "decision_path"], [51, 3, 1, "", "fit"], [51, 3, 1, "", "get_metadata_routing"], [51, 3, 1, "", "get_params"], [51, 3, 1, "", "predict"], [51, 3, 1, "", "score"], [51, 3, 1, "", "set_params"]], "wildboar.tree.PivotTreeClassifier": [[51, 3, 1, "", "apply"], [51, 3, 1, "", "decision_path"], [51, 3, 1, "", "fit"], [51, 3, 1, "", "get_metadata_routing"], [51, 3, 1, "", "get_params"], [51, 3, 1, "", "predict"], [51, 3, 1, "", "predict_proba"], [51, 3, 1, "", "score"], [51, 3, 1, "", "set_params"]], "wildboar.tree.ProximityTreeClassifier": [[51, 3, 1, "", "apply"], [51, 3, 1, "", "decision_path"], [51, 3, 1, "", "fit"], [51, 3, 1, "", "get_metadata_routing"], [51, 3, 1, "", "get_params"], [51, 3, 1, "", "predict"], [51, 3, 1, "", "predict_proba"], [51, 3, 1, "", "score"], [51, 3, 1, "", "set_params"]], "wildboar.tree.RocketTreeClassifier": [[51, 3, 1, "", "apply"], [51, 3, 1, "", "decision_path"], [51, 3, 1, "", "fit"], [51, 3, 1, "", "get_metadata_routing"], [51, 3, 1, "", "get_params"], [51, 3, 1, "", "predict"], [51, 3, 1, "", "predict_proba"], [51, 3, 1, "", "score"], [51, 3, 1, "", "set_params"]], "wildboar.tree.RocketTreeRegressor": [[51, 3, 1, "", "apply"], [51, 3, 1, "", "decision_path"], [51, 3, 1, "", "fit"], [51, 3, 1, "", "get_metadata_routing"], [51, 3, 1, "", "get_params"], [51, 3, 1, "", "predict"], [51, 3, 1, "", "score"], [51, 3, 1, "", "set_params"]], "wildboar.tree.ShapeletTreeClassifier": [[51, 3, 1, "", "apply"], [51, 3, 1, "", "decision_path"], [51, 3, 1, "", "fit"], [51, 3, 1, "", "get_metadata_routing"], [51, 3, 1, "", "get_params"], [51, 3, 1, "", "predict"], [51, 3, 1, "", "predict_proba"], [51, 3, 1, "", "score"], [51, 3, 1, "", "set_params"]], "wildboar.tree.ShapeletTreeRegressor": [[51, 3, 1, "", "apply"], [51, 3, 1, "", "decision_path"], [51, 3, 1, "", "fit"], [51, 3, 1, "", "get_metadata_routing"], [51, 3, 1, "", "get_params"], [51, 3, 1, "", "predict"], [51, 3, 1, "", "score"], [51, 3, 1, "", "set_params"]], "wildboar.tree._base": [[48, 2, 1, "", "BaseTree"], [48, 2, 1, "", "BaseTreeClassifier"], [48, 2, 1, "", "BaseTreeRegressor"]], "wildboar.tree._base.BaseTree": [[48, 3, 1, "", "apply"], [48, 3, 1, "", "decision_path"], [48, 3, 1, "", "get_metadata_routing"], [48, 3, 1, "", "get_params"], [48, 3, 1, "", "set_params"]], "wildboar.tree._base.BaseTreeClassifier": [[48, 3, 1, "", "apply"], [48, 3, 1, "", "decision_path"], [48, 3, 1, "", "fit"], [48, 3, 1, "", "get_metadata_routing"], [48, 3, 1, "", "get_params"], [48, 3, 1, "", "predict"], [48, 3, 1, "", "predict_proba"], [48, 3, 1, "", "score"], [48, 3, 1, "", "set_params"]], "wildboar.tree._base.BaseTreeRegressor": [[48, 3, 1, "", "apply"], [48, 3, 1, "", "decision_path"], [48, 3, 1, "", "fit"], [48, 3, 1, "", "get_metadata_routing"], [48, 3, 1, "", "get_params"], [48, 3, 1, "", "predict"], [48, 3, 1, "", "score"], [48, 3, 1, "", "set_params"]], "wildboar.tree._ptree": [[49, 2, 1, "", "ProximityTreeClassifier"]], "wildboar.tree._ptree.ProximityTreeClassifier": [[49, 3, 1, "", "apply"], [49, 3, 1, "", "decision_path"], [49, 3, 1, "", "fit"], [49, 3, 1, "", "get_metadata_routing"], [49, 3, 1, "", "get_params"], [49, 3, 1, "", "predict"], [49, 3, 1, "", "predict_proba"], [49, 3, 1, "", "score"], [49, 3, 1, "", "set_params"]], "wildboar.tree._tree": [[50, 2, 1, "", "BaseFeatureTreeClassifier"], [50, 2, 1, "", "BaseFeatureTreeRegressor"], [50, 2, 1, "", "ExtraShapeletTreeClassifier"], [50, 2, 1, "", "ExtraShapeletTreeRegressor"], [50, 2, 1, "", "IntervalTreeClassifier"], [50, 2, 1, "", "IntervalTreeRegressor"], [50, 2, 1, "", "PivotTreeClassifier"], [50, 2, 1, "", "RocketTreeClassifier"], [50, 2, 1, "", "RocketTreeRegressor"], [50, 2, 1, "", "ShapeletTreeClassifier"], [50, 2, 1, "", "ShapeletTreeRegressor"]], "wildboar.tree._tree.BaseFeatureTreeClassifier": [[50, 3, 1, "", "apply"], [50, 3, 1, "", "decision_path"], [50, 3, 1, "", "fit"], [50, 3, 1, "", "get_metadata_routing"], [50, 3, 1, "", "get_params"], [50, 3, 1, "", "predict"], [50, 3, 1, "", "predict_proba"], [50, 3, 1, "", "score"], [50, 3, 1, "", "set_params"]], "wildboar.tree._tree.BaseFeatureTreeRegressor": [[50, 3, 1, "", "apply"], [50, 3, 1, "", "decision_path"], [50, 3, 1, "", "fit"], [50, 3, 1, "", "get_metadata_routing"], [50, 3, 1, "", "get_params"], [50, 3, 1, "", "predict"], [50, 3, 1, "", "score"], [50, 3, 1, "", "set_params"]], "wildboar.tree._tree.ExtraShapeletTreeClassifier": [[50, 3, 1, "", "apply"], [50, 3, 1, "", "decision_path"], [50, 3, 1, "", "fit"], [50, 3, 1, "", "get_metadata_routing"], [50, 3, 1, "", "get_params"], [50, 3, 1, "", "predict"], [50, 3, 1, "", "predict_proba"], [50, 3, 1, "", "score"], [50, 3, 1, "", "set_params"]], "wildboar.tree._tree.ExtraShapeletTreeRegressor": [[50, 3, 1, "", "apply"], [50, 3, 1, "", "decision_path"], [50, 3, 1, "", "fit"], [50, 3, 1, "", "get_metadata_routing"], [50, 3, 1, "", "get_params"], [50, 3, 1, "", "predict"], [50, 3, 1, "", "score"], [50, 3, 1, "", "set_params"]], "wildboar.tree._tree.IntervalTreeClassifier": [[50, 3, 1, "", "apply"], [50, 3, 1, "", "decision_path"], [50, 3, 1, "", "fit"], [50, 3, 1, "", "get_metadata_routing"], [50, 3, 1, "", "get_params"], [50, 3, 1, "", "predict"], [50, 3, 1, "", "predict_proba"], [50, 3, 1, "", "score"], [50, 3, 1, "", "set_params"]], "wildboar.tree._tree.IntervalTreeRegressor": [[50, 3, 1, "", "apply"], [50, 3, 1, "", "decision_path"], [50, 3, 1, "", "fit"], [50, 3, 1, "", "get_metadata_routing"], [50, 3, 1, "", "get_params"], [50, 3, 1, "", "predict"], [50, 3, 1, "", "score"], [50, 3, 1, "", "set_params"]], "wildboar.tree._tree.PivotTreeClassifier": [[50, 3, 1, "", "apply"], [50, 3, 1, "", "decision_path"], [50, 3, 1, "", "fit"], [50, 3, 1, "", "get_metadata_routing"], [50, 3, 1, "", "get_params"], [50, 3, 1, "", "predict"], [50, 3, 1, "", "predict_proba"], [50, 3, 1, "", "score"], [50, 3, 1, "", "set_params"]], "wildboar.tree._tree.RocketTreeClassifier": [[50, 3, 1, "", "apply"], [50, 3, 1, "", "decision_path"], [50, 3, 1, "", "fit"], [50, 3, 1, "", "get_metadata_routing"], [50, 3, 1, "", "get_params"], [50, 3, 1, "", "predict"], [50, 3, 1, "", "predict_proba"], [50, 3, 1, "", "score"], [50, 3, 1, "", "set_params"]], "wildboar.tree._tree.RocketTreeRegressor": [[50, 3, 1, "", "apply"], [50, 3, 1, "", "decision_path"], [50, 3, 1, "", "fit"], [50, 3, 1, "", "get_metadata_routing"], [50, 3, 1, "", "get_params"], [50, 3, 1, "", "predict"], [50, 3, 1, "", "score"], [50, 3, 1, "", "set_params"]], "wildboar.tree._tree.ShapeletTreeClassifier": [[50, 3, 1, "", "apply"], [50, 3, 1, "", "decision_path"], [50, 3, 1, "", "fit"], [50, 3, 1, "", "get_metadata_routing"], [50, 3, 1, "", "get_params"], [50, 3, 1, "", "predict"], [50, 3, 1, "", "predict_proba"], [50, 3, 1, "", "score"], [50, 3, 1, "", "set_params"]], "wildboar.tree._tree.ShapeletTreeRegressor": [[50, 3, 1, "", "apply"], [50, 3, 1, "", "decision_path"], [50, 3, 1, "", "fit"], [50, 3, 1, "", "get_metadata_routing"], [50, 3, 1, "", "get_params"], [50, 3, 1, "", "predict"], [50, 3, 1, "", "score"], [50, 3, 1, "", "set_params"]], "wildboar.utils": [[52, 0, 0, "-", "_parallel"], [53, 0, 0, "-", "_testing"], [56, 1, 1, "", "check_X_y"], [56, 1, 1, "", "check_array"], [54, 0, 0, "-", "decorators"], [55, 0, 0, "-", "estimator_checks"], [57, 0, 0, "-", "plot"], [58, 0, 0, "-", "validation"], [59, 0, 0, "-", "variable_len"]], "wildboar.utils._parallel": [[52, 1, 1, "", "run_in_parallel"]], "wildboar.utils._testing": [[53, 1, 1, "", "assert_exhaustive_parameter_checks"], [53, 1, 1, "", "assert_parameter_checks"]], "wildboar.utils.decorators": [[54, 1, 1, "", "array_or_scalar"], [54, 1, 1, "", "singleton"], [54, 1, 1, "", "unstable"]], "wildboar.utils.estimator_checks": [[55, 1, 1, "", "check_estimator"]], "wildboar.utils.plot": [[57, 2, 1, "", "MidpointNormalize"], [57, 1, 1, "", "plot_frequency_domain"], [57, 1, 1, "", "plot_time_domain"]], "wildboar.utils.plot.MidpointNormalize": [[57, 3, 1, "", "autoscale"], [57, 3, 1, "", "autoscale_None"], [57, 3, 1, "", "process_value"], [57, 3, 1, "", "scaled"]], "wildboar.utils.validation": [[58, 1, 1, "", "check_X_y"], [58, 1, 1, "", "check_array"], [58, 1, 1, "", "check_classification_targets"], [58, 1, 1, "", "check_option"], [58, 1, 1, "", "check_type"]], "wildboar.utils.variable_len": [[59, 1, 1, "", "get_variable_length"], [59, 1, 1, "", "is_end_of_series"], [59, 1, 1, "", "is_variable_length"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"wildboar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 78, 82], "function": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 14, 15, 18, 19, 23, 24, 25, 31, 32, 33, 35, 36, 38, 45, 47, 52, 53, 54, 55, 56, 57, 58, 59, 78], "annot": [0, 1, 2, 3, 62, 78], "base": [0, 4, 73, 74, 78], "class": [0, 4, 6, 7, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 57, 78], "dataset": [0, 5, 6, 7, 8, 9, 64, 78, 81], "outlier": [0, 8, 76, 77, 78], "preprocess": [0, 9, 78], "distanc": [0, 10, 11, 12, 13, 14, 15, 69, 70, 78], "dtw": [0, 14, 78], "ensembl": [0, 16, 17, 72, 78], "explain": [0, 18, 19, 20, 21, 22, 23, 24, 78], "counterfactu": [0, 19, 20, 21, 22, 23, 78], "linear_model": [0, 26, 27, 28, 29, 30, 78], "metric": [0, 31, 32, 33, 68, 69, 70, 78], "model_select": [0, 34, 35, 36, 78], "transform": [0, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 73, 78, 81], "tree": [0, 48, 49, 50, 51, 74, 78], "util": [0, 52, 53, 54, 55, 56, 57, 58, 59, 78], "_motif": 1, "modul": [1, 2, 4, 5, 6, 8, 9, 10, 11, 13, 14, 16, 18, 19, 20, 21, 22, 26, 27, 28, 29, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59], "content": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "_segment": 2, "packag": [3, 7, 15, 17, 23, 24, 25, 30, 33, 36, 47, 51, 56], "_filter": 5, "_repositori": 6, "submodul": [7, 15, 25, 56], "_distanc": 10, "_matrix_profil": [11, 42], "_multi_metr": 12, "_neighbour": 13, "_ensembl": 16, "_import": 18, "_helper": 19, "_nn": 20, "_proto": 21, "_sf": 22, "subpackag": [24, 25], "attribut": 25, "_hydra": [26, 40], "_rocket": [27, 44], "_shapelet": [28, 46], "_transform": 29, "_cluster": 31, "_counterfactu": 32, "_cv": 34, "_outlier": 35, "_base": [37, 48], "_conv": 38, "_diff": 39, "_interv": 41, "_pivot": 43, "_sax": 45, "_ptree": 49, "_tree": 50, "_parallel": 52, "_test": 53, "decor": 54, "estimator_check": 55, "plot": 57, "valid": 58, "variable_len": 59, "version": [60, 79], "user": 61, "guid": 61, "time": [63, 70, 81], "seri": [63, 81], "variabl": 63, "length": 63, "load": [64, 81], "singl": 64, "multipl": 64, "filter": 64, "pre": 65, "process": 65, "repositori": 66, "definit": 66, "instal": [66, 82], "local": 66, "cach": 66, "json": 66, "glossari": 67, "subsequ": [68, 69, 70], "elast": [68, 70], "non": 68, "pairwis": 69, "pair": 69, "multivari": 69, "support": 69, "search": 69, "benchmark": [69, 77], "dynam": 70, "warp": 70, "longest": 70, "common": 70, "edit": 70, "real": 70, "penalti": 70, "sequenc": 70, "move": 70, "split": 70, "merg": 70, "supervis": 71, "learn": [71, 75, 81], "estim": [72, 73, 74], "shapelet": 72, "forest": 72, "proxim": 72, "unsupervis": 75, "detect": [76, 77], "minor": 77, "label": 77, "major": 77, "emmott": 77, "what": 79, "": 79, "new": 79, "depend": 79, "1": 79, "2": 79, "0": 79, "chang": 79, "model": [79, 81], "changelog": 79, "other": 79, "improv": 79, "quickstart": 80, "get": 81, "start": 81, "machin": 81, "an": 81, "exampl": 81, "predict": 81, "tabular": 81, "data": 81, "explor": 81, "perform": 81, "persist": 81, "latest": 82, "releas": 82, "build": 82, "compil": 82, "from": 82, "sourc": 82}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"wildboar": [[0, "wildboar"], [25, "module-wildboar"], [78, "id1"]], "Functions": [[0, "id1"], [0, "id2"], [0, "id4"], [0, "id6"], [0, "id7"], [0, "id8"], [0, "id10"], [0, "id11"], [0, "id14"], [0, "id16"], [0, "id18"], [0, "id20"], [0, "id22"], [0, "id24"], [1, "functions"], [2, "functions"], [3, "functions"], [4, "functions"], [5, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [11, "functions"], [14, "functions"], [15, "functions"], [18, "functions"], [19, "functions"], [23, "functions"], [24, "functions"], [25, "functions"], [31, "functions"], [32, "functions"], [33, "functions"], [35, "functions"], [36, "functions"], [38, "functions"], [45, "functions"], [47, "functions"], [52, "functions"], [53, "functions"], [54, "functions"], [55, "functions"], [56, "functions"], [57, "functions"], [58, "functions"], [59, "functions"], [78, "id2"], [78, "id3"], [78, "id5"], [78, "id7"], [78, "id8"], [78, "id9"], [78, "id11"], [78, "id12"], [78, "id15"], [78, "id17"], [78, "id19"], [78, "id21"], [78, "id23"], [78, "id25"]], "wildboar.annotate": [[0, "wildboar-annotate"], [3, "module-wildboar.annotate"], [78, "wildboar-annotate"]], "wildboar.base": [[0, "wildboar-base"], [4, "module-wildboar.base"], [78, "wildboar-base"]], "Classes": [[0, "id3"], [0, "id5"], [0, "id9"], [0, "id12"], [0, "id13"], [0, "id15"], [0, "id17"], [0, "id19"], [0, "id21"], [0, "id23"], [4, "classes"], [6, "classes"], [7, "classes"], [13, "classes"], [15, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [34, "classes"], [36, "classes"], [37, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [44, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [51, "classes"], [57, "classes"], [78, "id4"], [78, "id6"], [78, "id10"], [78, "id13"], [78, "id14"], [78, "id16"], [78, "id18"], [78, "id20"], [78, "id22"], [78, "id24"]], "wildboar.datasets": [[0, "wildboar-datasets"], [7, "module-wildboar.datasets"], [78, "wildboar-datasets"]], "wildboar.datasets.outlier": [[0, "wildboar-datasets-outlier"], [8, "module-wildboar.datasets.outlier"], [78, "wildboar-datasets-outlier"]], "wildboar.datasets.preprocess": [[0, "wildboar-datasets-preprocess"], [9, "module-wildboar.datasets.preprocess"], [78, "wildboar-datasets-preprocess"]], "wildboar.distance": [[0, "wildboar-distance"], [15, "module-wildboar.distance"], [78, "wildboar-distance"]], "wildboar.distance.dtw": [[0, "wildboar-distance-dtw"], [14, "module-wildboar.distance.dtw"], [78, "wildboar-distance-dtw"]], "wildboar.ensemble": [[0, "wildboar-ensemble"], [17, "module-wildboar.ensemble"], [78, "wildboar-ensemble"]], "wildboar.explain": [[0, "wildboar-explain"], [24, "module-wildboar.explain"], [78, "wildboar-explain"]], "wildboar.explain.counterfactual": [[0, "wildboar-explain-counterfactual"], [23, "module-wildboar.explain.counterfactual"], [78, "wildboar-explain-counterfactual"]], "wildboar.linear_model": [[0, "wildboar-linear-model"], [30, "module-wildboar.linear_model"], [78, "wildboar-linear-model"]], "wildboar.metrics": [[0, "wildboar-metrics"], [33, "module-wildboar.metrics"], [78, "wildboar-metrics"]], "wildboar.model_selection": [[0, "wildboar-model-selection"], [36, "module-wildboar.model_selection"], [78, "wildboar-model-selection"]], "wildboar.transform": [[0, "wildboar-transform"], [47, "module-wildboar.transform"], [78, "wildboar-transform"]], "wildboar.tree": [[0, "wildboar-tree"], [51, "module-wildboar.tree"], [78, "wildboar-tree"]], "wildboar.utils": [[0, "wildboar-utils"], [56, "module-wildboar.utils"], [78, "wildboar-utils"]], "wildboar.annotate._motifs": [[1, "module-wildboar.annotate._motifs"]], "Module Contents": [[1, "module-contents"], [2, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [13, "module-contents"], [14, "module-contents"], [16, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [31, "module-contents"], [32, "module-contents"], [34, "module-contents"], [35, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [55, "module-contents"], [57, "module-contents"], [58, "module-contents"], [59, "module-contents"]], "wildboar.annotate._segment": [[2, "module-wildboar.annotate._segment"]], "Package Contents": [[3, "package-contents"], [7, "package-contents"], [15, "package-contents"], [17, "package-contents"], [23, "package-contents"], [24, "package-contents"], [25, "package-contents"], [30, "package-contents"], [33, "package-contents"], [36, "package-contents"], [47, "package-contents"], [51, "package-contents"], [56, "package-contents"]], "wildboar.datasets._filter": [[5, "module-wildboar.datasets._filter"]], "wildboar.datasets._repository": [[6, "module-wildboar.datasets._repository"]], "Submodules": [[7, "submodules"], [15, "submodules"], [25, "submodules"], [56, "submodules"]], "wildboar.distance._distance": [[10, "module-wildboar.distance._distance"]], "wildboar.distance._matrix_profile": [[11, "module-wildboar.distance._matrix_profile"]], "wildboar.distance._multi_metric": [[12, "module-wildboar.distance._multi_metric"]], "wildboar.distance._neighbour": [[13, "module-wildboar.distance._neighbour"]], "wildboar.ensemble._ensemble": [[16, "module-wildboar.ensemble._ensemble"]], "wildboar.explain._importance": [[18, "module-wildboar.explain._importance"]], "wildboar.explain.counterfactual._helper": [[19, "module-wildboar.explain.counterfactual._helper"]], "wildboar.explain.counterfactual._nn": [[20, "module-wildboar.explain.counterfactual._nn"]], "wildboar.explain.counterfactual._proto": [[21, "module-wildboar.explain.counterfactual._proto"]], "wildboar.explain.counterfactual._sf": [[22, "module-wildboar.explain.counterfactual._sf"]], "Subpackages": [[24, "subpackages"], [25, "subpackages"]], "Attributes": [[25, "attributes"]], "wildboar.linear_model._hydra": [[26, "module-wildboar.linear_model._hydra"]], "wildboar.linear_model._rocket": [[27, "module-wildboar.linear_model._rocket"]], "wildboar.linear_model._shapelet": [[28, "module-wildboar.linear_model._shapelet"]], "wildboar.linear_model._transform": [[29, "module-wildboar.linear_model._transform"]], "wildboar.metrics._cluster": [[31, "module-wildboar.metrics._cluster"]], "wildboar.metrics._counterfactual": [[32, "module-wildboar.metrics._counterfactual"]], "wildboar.model_selection._cv": [[34, "module-wildboar.model_selection._cv"]], "wildboar.model_selection._outlier": [[35, "module-wildboar.model_selection._outlier"]], "wildboar.transform._base": [[37, "module-wildboar.transform._base"]], "wildboar.transform._conv": [[38, "module-wildboar.transform._conv"]], "wildboar.transform._diff": [[39, "module-wildboar.transform._diff"]], "wildboar.transform._hydra": [[40, "module-wildboar.transform._hydra"]], "wildboar.transform._interval": [[41, "module-wildboar.transform._interval"]], "wildboar.transform._matrix_profile": [[42, "module-wildboar.transform._matrix_profile"]], "wildboar.transform._pivot": [[43, "module-wildboar.transform._pivot"]], "wildboar.transform._rocket": [[44, "module-wildboar.transform._rocket"]], "wildboar.transform._sax": [[45, "module-wildboar.transform._sax"]], "wildboar.transform._shapelet": [[46, "module-wildboar.transform._shapelet"]], "wildboar.tree._base": [[48, "module-wildboar.tree._base"]], "wildboar.tree._ptree": [[49, "module-wildboar.tree._ptree"]], "wildboar.tree._tree": [[50, "module-wildboar.tree._tree"]], "wildboar.utils._parallel": [[52, "module-wildboar.utils._parallel"]], "wildboar.utils._testing": [[53, "module-wildboar.utils._testing"]], "wildboar.utils.decorators": [[54, "module-wildboar.utils.decorators"]], "wildboar.utils.estimator_checks": [[55, "module-wildboar.utils.estimator_checks"]], "wildboar.utils.plot": [[57, "module-wildboar.utils.plot"]], "wildboar.utils.validation": [[58, "module-wildboar.utils.validation"]], "wildboar.utils.variable_len": [[59, "module-wildboar.utils.variable_len"]], "wildboar.version": [[60, "module-wildboar.version"]], "User guide": [[61, "user-guide"]], "Annotate": [[62, "annotate"]], "Time series": [[63, "time-series"]], "Variable length time series": [[63, "variable-length-time-series"]], "Datasets": [[64, "datasets"]], "Loading datasets": [[64, "loading-datasets"]], "Loading a single dataset": [[64, "loading-a-single-dataset"]], "Loading multiple datasets": [[64, "loading-multiple-datasets"]], "Filters": [[64, "filters"]], "Pre-processing": [[65, "pre-processing"]], "Repositories": [[66, "repositories"]], "Repository definitions": [[66, "repository-definitions"]], "Installing repositories": [[66, "installing-repositories"]], "Local cache": [[66, "local-cache"]], "JSON repositories": [[66, "json-repositories"]], "Glossary": [[67, "glossary"]], "Metrics": [[68, "metrics"], [69, "metrics"]], "Subsequence metrics": [[68, "subsequence-metrics"], [69, "subsequence-metrics"]], "Elastic and non-elastic metrics": [[68, "elastic-and-non-elastic-metrics"]], "Distance": [[69, "distance"]], "Pairwise distance": [[69, "pairwise-distance"]], "Paired distance": [[69, "paired-distance"]], "Multivariate support": [[69, "multivariate-support"]], "Subsequence search": [[69, "subsequence-search"]], "Pairwise subsequence distance": [[69, "pairwise-subsequence-distance"]], "Benchmark": [[69, "benchmark"]], "Elastic metrics": [[70, "elastic-metrics"]], "Dynamic time warping": [[70, "dynamic-time-warping"]], "Longest common subsequence": [[70, "longest-common-subsequence"]], "Edit-distance with real penalty": [[70, "edit-distance-with-real-penalty"]], "Edit-distance for real sequence": [[70, "edit-distance-for-real-sequence"]], "Time-warp edit distance": [[70, "time-warp-edit-distance"]], "Move-split-merge": [[70, "move-split-merge"]], "Supervised learning": [[71, "supervised-learning"]], "Ensemble estimators": [[72, "ensemble-estimators"]], "Shapelet forests": [[72, "shapelet-forests"]], "Proximity forests": [[72, "proximity-forests"]], "Transform-based estimators": [[73, "transform-based-estimators"]], "Tree-based estimators": [[74, "tree-based-estimators"]], "Unsupervised learning": [[75, "unsupervised-learning"]], "Outlier detection": [[76, "outlier-detection"]], "Outlier detection benchmarks": [[77, "outlier-detection-benchmarks"]], "Minority labeler": [[77, "minority-labeler"]], "Majority labeler": [[77, "majority-labeler"]], "Emmott labeler": [[77, "emmott-labeler"]], "Wildboar": [[78, "wildboar"]], "What\u2019s new": [[79, "what-s-new"]], "Dependencies": [[79, "dependencies"]], "Version 1.2.0": [[79, "version-1-2-0"]], "New and changed models": [[79, "new-and-changed-models"]], "Changelog": [[79, "changelog"]], "Other improvements": [[79, "other-improvements"]], "Quickstart": [[80, "quickstart"]], "Getting started": [[81, "getting-started"]], "Machine learning": [[81, "machine-learning"]], "Loading an example dataset": [[81, "loading-an-example-dataset"]], "Learning and predicting": [[81, "learning-and-predicting"]], "Transforming time series to tabular data": [[81, "transforming-time-series-to-tabular-data"]], "Exploring model performance": [[81, "exploring-model-performance"]], "Model persistence": [[81, "model-persistence"]], "Install wildboar": [[82, "install-wildboar"]], "Install the latest release": [[82, "install-the-latest-release"]], "Build and compile from source": [[82, "build-and-compile-from-source"]]}, "indexentries": {"module": [[1, "module-wildboar.annotate._motifs"], [2, "module-wildboar.annotate._segment"], [3, "module-wildboar.annotate"], [4, "module-wildboar.base"], [5, "module-wildboar.datasets._filter"], [6, "module-wildboar.datasets._repository"], [7, "module-wildboar.datasets"], [8, "module-wildboar.datasets.outlier"], [9, "module-wildboar.datasets.preprocess"], [10, "module-wildboar.distance._distance"], [11, "module-wildboar.distance._matrix_profile"], [12, "module-wildboar.distance._multi_metric"], [13, "module-wildboar.distance._neighbour"], [14, "module-wildboar.distance.dtw"], [15, "module-wildboar.distance"], [16, "module-wildboar.ensemble._ensemble"], [17, "module-wildboar.ensemble"], [18, "module-wildboar.explain._importance"], [19, "module-wildboar.explain.counterfactual._helper"], [20, "module-wildboar.explain.counterfactual._nn"], [21, "module-wildboar.explain.counterfactual._proto"], [22, "module-wildboar.explain.counterfactual._sf"], [23, "module-wildboar.explain.counterfactual"], [24, "module-wildboar.explain"], [25, "module-wildboar"], [26, "module-wildboar.linear_model._hydra"], [27, "module-wildboar.linear_model._rocket"], [28, "module-wildboar.linear_model._shapelet"], [29, "module-wildboar.linear_model._transform"], [30, "module-wildboar.linear_model"], [31, "module-wildboar.metrics._cluster"], [32, "module-wildboar.metrics._counterfactual"], [33, "module-wildboar.metrics"], [34, "module-wildboar.model_selection._cv"], [35, "module-wildboar.model_selection._outlier"], [36, "module-wildboar.model_selection"], [37, "module-wildboar.transform._base"], [38, "module-wildboar.transform._conv"], [39, "module-wildboar.transform._diff"], [40, "module-wildboar.transform._hydra"], [41, "module-wildboar.transform._interval"], [42, "module-wildboar.transform._matrix_profile"], [43, "module-wildboar.transform._pivot"], [44, "module-wildboar.transform._rocket"], [45, "module-wildboar.transform._sax"], [46, "module-wildboar.transform._shapelet"], [47, "module-wildboar.transform"], [48, "module-wildboar.tree._base"], [49, "module-wildboar.tree._ptree"], [50, "module-wildboar.tree._tree"], [51, "module-wildboar.tree"], [52, "module-wildboar.utils._parallel"], [53, "module-wildboar.utils._testing"], [54, "module-wildboar.utils.decorators"], [55, "module-wildboar.utils.estimator_checks"], [56, "module-wildboar.utils"], [57, "module-wildboar.utils.plot"], [58, "module-wildboar.utils.validation"], [59, "module-wildboar.utils.variable_len"], [60, "module-wildboar.version"]], "motifs() (in module wildboar.annotate._motifs)": [[1, "wildboar.annotate._motifs.motifs"]], "wildboar.annotate._motifs": [[1, "module-wildboar.annotate._motifs"]], "segment() (in module wildboar.annotate._segment)": [[2, "wildboar.annotate._segment.segment"]], "wildboar.annotate._segment": [[2, "module-wildboar.annotate._segment"]], "motifs() (in module wildboar.annotate)": [[3, "wildboar.annotate.motifs"]], "segment() (in module wildboar.annotate)": [[3, "wildboar.annotate.segment"]], "wildboar.annotate": [[3, "module-wildboar.annotate"]], "baseestimator (class in wildboar.base)": [[4, "wildboar.base.BaseEstimator"]], "counterfactualmixin (class in wildboar.base)": [[4, "wildboar.base.CounterfactualMixin"]], "explainermixin (class in wildboar.base)": [[4, "wildboar.base.ExplainerMixin"]], "fit_explain() (wildboar.base.explainermixin method)": [[4, "wildboar.base.ExplainerMixin.fit_explain"]], "get_metadata_routing() (wildboar.base.baseestimator method)": [[4, "wildboar.base.BaseEstimator.get_metadata_routing"]], "get_params() (wildboar.base.baseestimator method)": [[4, "wildboar.base.BaseEstimator.get_params"]], "is_counterfactual() (in module wildboar.base)": [[4, "wildboar.base.is_counterfactual"]], "is_explainer() (in module wildboar.base)": [[4, "wildboar.base.is_explainer"]], "plot() (wildboar.base.explainermixin method)": [[4, "wildboar.base.ExplainerMixin.plot"]], "score() (wildboar.base.counterfactualmixin method)": [[4, "wildboar.base.CounterfactualMixin.score"]], "set_params() (wildboar.base.baseestimator method)": [[4, "wildboar.base.BaseEstimator.set_params"]], "wildboar.base": [[4, "module-wildboar.base"]], "make_dict_filter() (in module wildboar.datasets._filter)": [[5, "wildboar.datasets._filter.make_dict_filter"]], "make_filter() (in module wildboar.datasets._filter)": [[5, "wildboar.datasets._filter.make_filter"]], "make_list_filter() (in module wildboar.datasets._filter)": [[5, "wildboar.datasets._filter.make_list_filter"]], "make_str_filter() (in module wildboar.datasets._filter)": [[5, "wildboar.datasets._filter.make_str_filter"]], "wildboar.datasets._filter": [[5, "module-wildboar.datasets._filter"]], "bundle (class in wildboar.datasets._repository)": [[6, "wildboar.datasets._repository.Bundle"]], "jsonrepository (class in wildboar.datasets._repository)": [[6, "wildboar.datasets._repository.JSONRepository"]], "npbundle (class in wildboar.datasets._repository)": [[6, "wildboar.datasets._repository.NpBundle"]], "repository (class in wildboar.datasets._repository)": [[6, "wildboar.datasets._repository.Repository"]], "download_url (wildboar.datasets._repository.jsonrepository property)": [[6, "wildboar.datasets._repository.JSONRepository.download_url"]], "download_url (wildboar.datasets._repository.repository property)": [[6, "wildboar.datasets._repository.Repository.download_url"]], "get_bundle() (wildboar.datasets._repository.jsonrepository method)": [[6, "wildboar.datasets._repository.JSONRepository.get_bundle"]], "get_bundle() (wildboar.datasets._repository.repository method)": [[6, "wildboar.datasets._repository.Repository.get_bundle"]], "get_bundles() (wildboar.datasets._repository.jsonrepository method)": [[6, "wildboar.datasets._repository.JSONRepository.get_bundles"]], "get_bundles() (wildboar.datasets._repository.repository method)": [[6, "wildboar.datasets._repository.Repository.get_bundles"]], "get_collection() (wildboar.datasets._repository.bundle method)": [[6, "wildboar.datasets._repository.Bundle.get_collection"]], "get_collection() (wildboar.datasets._repository.npbundle method)": [[6, "wildboar.datasets._repository.NpBundle.get_collection"]], "get_filename() (wildboar.datasets._repository.bundle method)": [[6, "wildboar.datasets._repository.Bundle.get_filename"]], "get_filename() (wildboar.datasets._repository.npbundle method)": [[6, "wildboar.datasets._repository.NpBundle.get_filename"]], "list() (wildboar.datasets._repository.bundle method)": [[6, "wildboar.datasets._repository.Bundle.list"]], "list() (wildboar.datasets._repository.npbundle method)": [[6, "wildboar.datasets._repository.NpBundle.list"]], "load() (wildboar.datasets._repository.bundle method)": [[6, "wildboar.datasets._repository.Bundle.load"]], "load() (wildboar.datasets._repository.npbundle method)": [[6, "wildboar.datasets._repository.NpBundle.load"]], "name (wildboar.datasets._repository.jsonrepository property)": [[6, "wildboar.datasets._repository.JSONRepository.name"]], "name (wildboar.datasets._repository.repository property)": [[6, "wildboar.datasets._repository.Repository.name"]], "refresh() (wildboar.datasets._repository.jsonrepository method)": [[6, "wildboar.datasets._repository.JSONRepository.refresh"]], "refresh() (wildboar.datasets._repository.repository method)": [[6, "wildboar.datasets._repository.Repository.refresh"]], "version (wildboar.datasets._repository.jsonrepository property)": [[6, "wildboar.datasets._repository.JSONRepository.version"]], "version (wildboar.datasets._repository.repository property)": [[6, "wildboar.datasets._repository.Repository.version"]], "wildboar.datasets._repository": [[6, "module-wildboar.datasets._repository"]], "wildboar_requires (wildboar.datasets._repository.jsonrepository property)": [[6, "wildboar.datasets._repository.JSONRepository.wildboar_requires"]], "wildboar_requires (wildboar.datasets._repository.repository property)": [[6, "wildboar.datasets._repository.Repository.wildboar_requires"]], "bundle (class in wildboar.datasets)": [[7, "wildboar.datasets.Bundle"]], "jsonrepository (class in wildboar.datasets)": [[7, "wildboar.datasets.JSONRepository"]], "npbundle (class in wildboar.datasets)": [[7, "wildboar.datasets.NpBundle"]], "repository (class in wildboar.datasets)": [[7, "wildboar.datasets.Repository"]], "clear_cache() (in module wildboar.datasets)": [[7, "wildboar.datasets.clear_cache"]], "download_url (wildboar.datasets.jsonrepository property)": [[7, "wildboar.datasets.JSONRepository.download_url"]], "download_url (wildboar.datasets.repository property)": [[7, "wildboar.datasets.Repository.download_url"]], "get_bundle() (wildboar.datasets.jsonrepository method)": [[7, "wildboar.datasets.JSONRepository.get_bundle"]], "get_bundle() (wildboar.datasets.repository method)": [[7, "wildboar.datasets.Repository.get_bundle"]], "get_bundles() (in module wildboar.datasets)": [[7, "wildboar.datasets.get_bundles"]], "get_bundles() (wildboar.datasets.jsonrepository method)": [[7, "wildboar.datasets.JSONRepository.get_bundles"]], "get_bundles() (wildboar.datasets.repository method)": [[7, "wildboar.datasets.Repository.get_bundles"]], "get_collection() (wildboar.datasets.bundle method)": [[7, "wildboar.datasets.Bundle.get_collection"]], "get_collection() (wildboar.datasets.npbundle method)": [[7, "wildboar.datasets.NpBundle.get_collection"]], "get_filename() (wildboar.datasets.bundle method)": [[7, "wildboar.datasets.Bundle.get_filename"]], "get_filename() (wildboar.datasets.npbundle method)": [[7, "wildboar.datasets.NpBundle.get_filename"]], "get_repository() (in module wildboar.datasets)": [[7, "wildboar.datasets.get_repository"]], "install_repository() (in module wildboar.datasets)": [[7, "wildboar.datasets.install_repository"]], "list() (wildboar.datasets.bundle method)": [[7, "wildboar.datasets.Bundle.list"]], "list() (wildboar.datasets.npbundle method)": [[7, "wildboar.datasets.NpBundle.list"]], "list_bundles() (in module wildboar.datasets)": [[7, "wildboar.datasets.list_bundles"]], "list_collections() (in module wildboar.datasets)": [[7, "wildboar.datasets.list_collections"]], "list_datasets() (in module wildboar.datasets)": [[7, "wildboar.datasets.list_datasets"]], "list_repositories() (in module wildboar.datasets)": [[7, "wildboar.datasets.list_repositories"]], "load() (wildboar.datasets.bundle method)": [[7, "wildboar.datasets.Bundle.load"]], "load() (wildboar.datasets.npbundle method)": [[7, "wildboar.datasets.NpBundle.load"]], "load_dataset() (in module wildboar.datasets)": [[7, "wildboar.datasets.load_dataset"]], "load_datasets() (in module wildboar.datasets)": [[7, "wildboar.datasets.load_datasets"]], "load_gun_point() (in module wildboar.datasets)": [[7, "wildboar.datasets.load_gun_point"]], "load_synthetic_control() (in module wildboar.datasets)": [[7, "wildboar.datasets.load_synthetic_control"]], "load_two_lead_ecg() (in module wildboar.datasets)": [[7, "wildboar.datasets.load_two_lead_ecg"]], "name (wildboar.datasets.jsonrepository property)": [[7, "wildboar.datasets.JSONRepository.name"]], "name (wildboar.datasets.repository property)": [[7, "wildboar.datasets.Repository.name"]], "refresh() (wildboar.datasets.jsonrepository method)": [[7, "wildboar.datasets.JSONRepository.refresh"]], "refresh() (wildboar.datasets.repository method)": [[7, "wildboar.datasets.Repository.refresh"]], "refresh_repositories() (in module wildboar.datasets)": [[7, "wildboar.datasets.refresh_repositories"]], "set_cache_dir() (in module wildboar.datasets)": [[7, "wildboar.datasets.set_cache_dir"]], "version (wildboar.datasets.jsonrepository property)": [[7, "wildboar.datasets.JSONRepository.version"]], "version (wildboar.datasets.repository property)": [[7, "wildboar.datasets.Repository.version"]], "wildboar.datasets": [[7, "module-wildboar.datasets"]], "wildboar_requires (wildboar.datasets.jsonrepository property)": [[7, "wildboar.datasets.JSONRepository.wildboar_requires"]], "wildboar_requires (wildboar.datasets.repository property)": [[7, "wildboar.datasets.Repository.wildboar_requires"]], "density_outliers() (in module wildboar.datasets.outlier)": [[8, "wildboar.datasets.outlier.density_outliers"]], "emmott_outliers() (in module wildboar.datasets.outlier)": [[8, "wildboar.datasets.outlier.emmott_outliers"]], "kmeans_outliers() (in module wildboar.datasets.outlier)": [[8, "wildboar.datasets.outlier.kmeans_outliers"]], "majority_outliers() (in module wildboar.datasets.outlier)": [[8, "wildboar.datasets.outlier.majority_outliers"]], "minority_outliers() (in module wildboar.datasets.outlier)": [[8, "wildboar.datasets.outlier.minority_outliers"]], "wildboar.datasets.outlier": [[8, "module-wildboar.datasets.outlier"]], "maxabs_scale() (in module wildboar.datasets.preprocess)": [[9, "wildboar.datasets.preprocess.maxabs_scale"]], "minmax_scale() (in module wildboar.datasets.preprocess)": [[9, "wildboar.datasets.preprocess.minmax_scale"]], "named_preprocess() (in module wildboar.datasets.preprocess)": [[9, "wildboar.datasets.preprocess.named_preprocess"]], "standardize() (in module wildboar.datasets.preprocess)": [[9, "wildboar.datasets.preprocess.standardize"]], "truncate() (in module wildboar.datasets.preprocess)": [[9, "wildboar.datasets.preprocess.truncate"]], "wildboar.datasets.preprocess": [[9, "module-wildboar.datasets.preprocess"]], "paired_distance() (in module wildboar.distance._distance)": [[10, "wildboar.distance._distance.paired_distance"]], "paired_subsequence_distance() (in module wildboar.distance._distance)": [[10, "wildboar.distance._distance.paired_subsequence_distance"]], "paired_subsequence_match() (in module wildboar.distance._distance)": [[10, "wildboar.distance._distance.paired_subsequence_match"]], "pairwise_distance() (in module wildboar.distance._distance)": [[10, "wildboar.distance._distance.pairwise_distance"]], "pairwise_subsequence_distance() (in module wildboar.distance._distance)": [[10, "wildboar.distance._distance.pairwise_subsequence_distance"]], "subsequence_match() (in module wildboar.distance._distance)": [[10, "wildboar.distance._distance.subsequence_match"]], "wildboar.distance._distance": [[10, "module-wildboar.distance._distance"]], "matrix_profile() (in module wildboar.distance._matrix_profile)": [[11, "wildboar.distance._matrix_profile.matrix_profile"]], "wildboar.distance._matrix_profile": [[11, "module-wildboar.distance._matrix_profile"]], "wildboar.distance._multi_metric": [[12, "module-wildboar.distance._multi_metric"]], "kmeans (class in wildboar.distance._neighbour)": [[13, "wildboar.distance._neighbour.KMeans"]], "kmedoids (class in wildboar.distance._neighbour)": [[13, "wildboar.distance._neighbour.KMedoids"]], "kneighbourclassifier (class in wildboar.distance._neighbour)": [[13, "wildboar.distance._neighbour.KNeighbourClassifier"]], "fit() (wildboar.distance._neighbour.kmeans method)": [[13, "wildboar.distance._neighbour.KMeans.fit"]], "fit() (wildboar.distance._neighbour.kmedoids method)": [[13, "wildboar.distance._neighbour.KMedoids.fit"]], "fit() (wildboar.distance._neighbour.kneighbourclassifier method)": [[13, "wildboar.distance._neighbour.KNeighbourClassifier.fit"]], "fit_predict() (wildboar.distance._neighbour.kmeans method)": [[13, "wildboar.distance._neighbour.KMeans.fit_predict"]], "fit_predict() (wildboar.distance._neighbour.kmedoids method)": [[13, "wildboar.distance._neighbour.KMedoids.fit_predict"]], "fit_transform() (wildboar.distance._neighbour.kmeans method)": [[13, "wildboar.distance._neighbour.KMeans.fit_transform"]], "fit_transform() (wildboar.distance._neighbour.kmedoids method)": [[13, "wildboar.distance._neighbour.KMedoids.fit_transform"]], "get_metadata_routing() (wildboar.distance._neighbour.kmeans method)": [[13, "wildboar.distance._neighbour.KMeans.get_metadata_routing"]], "get_metadata_routing() (wildboar.distance._neighbour.kmedoids method)": [[13, "wildboar.distance._neighbour.KMedoids.get_metadata_routing"]], "get_metadata_routing() (wildboar.distance._neighbour.kneighbourclassifier method)": [[13, "wildboar.distance._neighbour.KNeighbourClassifier.get_metadata_routing"]], "get_params() (wildboar.distance._neighbour.kmeans method)": [[13, "wildboar.distance._neighbour.KMeans.get_params"]], "get_params() (wildboar.distance._neighbour.kmedoids method)": [[13, "wildboar.distance._neighbour.KMedoids.get_params"]], "get_params() (wildboar.distance._neighbour.kneighbourclassifier method)": [[13, "wildboar.distance._neighbour.KNeighbourClassifier.get_params"]], "predict() (wildboar.distance._neighbour.kmeans method)": [[13, "wildboar.distance._neighbour.KMeans.predict"]], "predict() (wildboar.distance._neighbour.kmedoids method)": [[13, "wildboar.distance._neighbour.KMedoids.predict"]], "predict() (wildboar.distance._neighbour.kneighbourclassifier method)": [[13, "wildboar.distance._neighbour.KNeighbourClassifier.predict"]], "predict_proba() (wildboar.distance._neighbour.kneighbourclassifier method)": [[13, "wildboar.distance._neighbour.KNeighbourClassifier.predict_proba"]], "score() (wildboar.distance._neighbour.kneighbourclassifier method)": [[13, "wildboar.distance._neighbour.KNeighbourClassifier.score"]], "set_output() (wildboar.distance._neighbour.kmeans method)": [[13, "wildboar.distance._neighbour.KMeans.set_output"]], "set_output() (wildboar.distance._neighbour.kmedoids method)": [[13, "wildboar.distance._neighbour.KMedoids.set_output"]], "set_params() (wildboar.distance._neighbour.kmeans method)": [[13, "wildboar.distance._neighbour.KMeans.set_params"]], "set_params() (wildboar.distance._neighbour.kmedoids method)": [[13, "wildboar.distance._neighbour.KMedoids.set_params"]], "set_params() (wildboar.distance._neighbour.kneighbourclassifier method)": [[13, "wildboar.distance._neighbour.KNeighbourClassifier.set_params"]], "transform() (wildboar.distance._neighbour.kmeans method)": [[13, "wildboar.distance._neighbour.KMeans.transform"]], "transform() (wildboar.distance._neighbour.kmedoids method)": [[13, "wildboar.distance._neighbour.KMedoids.transform"]], "wildboar.distance._neighbour": [[13, "module-wildboar.distance._neighbour"]], "ddtw_distance() (in module wildboar.distance.dtw)": [[14, "wildboar.distance.dtw.ddtw_distance"]], "dtw_alignment() (in module wildboar.distance.dtw)": [[14, "wildboar.distance.dtw.dtw_alignment"]], "dtw_average() (in module wildboar.distance.dtw)": [[14, "wildboar.distance.dtw.dtw_average"]], "dtw_distance() (in module wildboar.distance.dtw)": [[14, "wildboar.distance.dtw.dtw_distance"]], "dtw_envelop() (in module wildboar.distance.dtw)": [[14, "wildboar.distance.dtw.dtw_envelop"]], "dtw_lb_keogh() (in module wildboar.distance.dtw)": [[14, "wildboar.distance.dtw.dtw_lb_keogh"]], "dtw_mapping() (in module wildboar.distance.dtw)": [[14, "wildboar.distance.dtw.dtw_mapping"]], "jeong_weight() (in module wildboar.distance.dtw)": [[14, "wildboar.distance.dtw.jeong_weight"]], "wddtw_distance() (in module wildboar.distance.dtw)": [[14, "wildboar.distance.dtw.wddtw_distance"]], "wdtw_alignment() (in module wildboar.distance.dtw)": [[14, "wildboar.distance.dtw.wdtw_alignment"]], "wdtw_distance() (in module wildboar.distance.dtw)": [[14, "wildboar.distance.dtw.wdtw_distance"]], "wildboar.distance.dtw": [[14, "module-wildboar.distance.dtw"]], "kmeans (class in wildboar.distance)": [[15, "wildboar.distance.KMeans"]], "kmedoids (class in wildboar.distance)": [[15, "wildboar.distance.KMedoids"]], "kneighbourclassifier (class in wildboar.distance)": [[15, "wildboar.distance.KNeighbourClassifier"]], "fit() (wildboar.distance.kmeans method)": [[15, "wildboar.distance.KMeans.fit"]], "fit() (wildboar.distance.kmedoids method)": [[15, "wildboar.distance.KMedoids.fit"]], "fit() (wildboar.distance.kneighbourclassifier method)": [[15, "wildboar.distance.KNeighbourClassifier.fit"]], "fit_predict() (wildboar.distance.kmeans method)": [[15, "wildboar.distance.KMeans.fit_predict"]], "fit_predict() (wildboar.distance.kmedoids method)": [[15, "wildboar.distance.KMedoids.fit_predict"]], "fit_transform() (wildboar.distance.kmeans method)": [[15, "wildboar.distance.KMeans.fit_transform"]], "fit_transform() (wildboar.distance.kmedoids method)": [[15, "wildboar.distance.KMedoids.fit_transform"]], "get_metadata_routing() (wildboar.distance.kmeans method)": [[15, "wildboar.distance.KMeans.get_metadata_routing"]], "get_metadata_routing() (wildboar.distance.kmedoids method)": [[15, "wildboar.distance.KMedoids.get_metadata_routing"]], "get_metadata_routing() (wildboar.distance.kneighbourclassifier method)": [[15, "wildboar.distance.KNeighbourClassifier.get_metadata_routing"]], "get_params() (wildboar.distance.kmeans method)": [[15, "wildboar.distance.KMeans.get_params"]], "get_params() (wildboar.distance.kmedoids method)": [[15, "wildboar.distance.KMedoids.get_params"]], "get_params() (wildboar.distance.kneighbourclassifier method)": [[15, "wildboar.distance.KNeighbourClassifier.get_params"]], "matrix_profile() (in module wildboar.distance)": [[15, "wildboar.distance.matrix_profile"]], "paired_distance() (in module wildboar.distance)": [[15, "wildboar.distance.paired_distance"]], "paired_subsequence_distance() (in module wildboar.distance)": [[15, "wildboar.distance.paired_subsequence_distance"]], "paired_subsequence_match() (in module wildboar.distance)": [[15, "wildboar.distance.paired_subsequence_match"]], "pairwise_distance() (in module wildboar.distance)": [[15, "wildboar.distance.pairwise_distance"]], "pairwise_subsequence_distance() (in module wildboar.distance)": [[15, "wildboar.distance.pairwise_subsequence_distance"]], "predict() (wildboar.distance.kmeans method)": [[15, "wildboar.distance.KMeans.predict"]], "predict() (wildboar.distance.kmedoids method)": [[15, "wildboar.distance.KMedoids.predict"]], "predict() (wildboar.distance.kneighbourclassifier method)": [[15, "wildboar.distance.KNeighbourClassifier.predict"]], "predict_proba() (wildboar.distance.kneighbourclassifier method)": [[15, "wildboar.distance.KNeighbourClassifier.predict_proba"]], "score() (wildboar.distance.kneighbourclassifier method)": [[15, "wildboar.distance.KNeighbourClassifier.score"]], "set_output() (wildboar.distance.kmeans method)": [[15, "wildboar.distance.KMeans.set_output"]], "set_output() (wildboar.distance.kmedoids method)": [[15, "wildboar.distance.KMedoids.set_output"]], "set_params() (wildboar.distance.kmeans method)": [[15, "wildboar.distance.KMeans.set_params"]], "set_params() (wildboar.distance.kmedoids method)": [[15, "wildboar.distance.KMedoids.set_params"]], "set_params() (wildboar.distance.kneighbourclassifier method)": [[15, "wildboar.distance.KNeighbourClassifier.set_params"]], "subsequence_match() (in module wildboar.distance)": [[15, "wildboar.distance.subsequence_match"]], "transform() (wildboar.distance.kmeans method)": [[15, "wildboar.distance.KMeans.transform"]], "transform() (wildboar.distance.kmedoids method)": [[15, "wildboar.distance.KMedoids.transform"]], "wildboar.distance": [[15, "module-wildboar.distance"]], "baggingclassifier (class in wildboar.ensemble._ensemble)": [[16, "wildboar.ensemble._ensemble.BaggingClassifier"]], "baggingregressor (class in wildboar.ensemble._ensemble)": [[16, "wildboar.ensemble._ensemble.BaggingRegressor"]], "basebagging (class in wildboar.ensemble._ensemble)": [[16, "wildboar.ensemble._ensemble.BaseBagging"]], "baseforestclassifier (class in wildboar.ensemble._ensemble)": [[16, "wildboar.ensemble._ensemble.BaseForestClassifier"]], "baseforestregressor (class in wildboar.ensemble._ensemble)": [[16, "wildboar.ensemble._ensemble.BaseForestRegressor"]], "baseshapeletforestclassifier (class in wildboar.ensemble._ensemble)": [[16, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier"]], "baseshapeletforestregressor (class in wildboar.ensemble._ensemble)": [[16, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor"]], "extrashapelettreesclassifier (class in wildboar.ensemble._ensemble)": [[16, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier"]], "extrashapelettreesregressor (class in wildboar.ensemble._ensemble)": [[16, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor"]], "forestmixin (class in wildboar.ensemble._ensemble)": [[16, "wildboar.ensemble._ensemble.ForestMixin"]], "intervalforestclassifier (class in wildboar.ensemble._ensemble)": [[16, "wildboar.ensemble._ensemble.IntervalForestClassifier"]], "intervalforestregressor (class in wildboar.ensemble._ensemble)": [[16, "wildboar.ensemble._ensemble.IntervalForestRegressor"]], "isolationshapeletforest (class in wildboar.ensemble._ensemble)": [[16, "wildboar.ensemble._ensemble.IsolationShapeletForest"]], "pivotforestclassifier (class in wildboar.ensemble._ensemble)": [[16, "wildboar.ensemble._ensemble.PivotForestClassifier"]], "proximityforestclassifier (class in wildboar.ensemble._ensemble)": [[16, "wildboar.ensemble._ensemble.ProximityForestClassifier"]], "rocketforestclassifier (class in wildboar.ensemble._ensemble)": [[16, "wildboar.ensemble._ensemble.RocketForestClassifier"]], "rocketforestregressor (class in wildboar.ensemble._ensemble)": [[16, "wildboar.ensemble._ensemble.RocketForestRegressor"]], "shapeletforestclassifier (class in wildboar.ensemble._ensemble)": [[16, "wildboar.ensemble._ensemble.ShapeletForestClassifier"]], "shapeletforestembedding (class in wildboar.ensemble._ensemble)": [[16, "wildboar.ensemble._ensemble.ShapeletForestEmbedding"]], "shapeletforestregressor (class in wildboar.ensemble._ensemble)": [[16, "wildboar.ensemble._ensemble.ShapeletForestRegressor"]], "base_estimator_ (wildboar.ensemble._ensemble.baggingclassifier property)": [[16, "wildboar.ensemble._ensemble.BaggingClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.baggingregressor property)": [[16, "wildboar.ensemble._ensemble.BaggingRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.basebagging property)": [[16, "wildboar.ensemble._ensemble.BaseBagging.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.baseforestclassifier property)": [[16, "wildboar.ensemble._ensemble.BaseForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.baseforestregressor property)": [[16, "wildboar.ensemble._ensemble.BaseForestRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.baseshapeletforestclassifier property)": [[16, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.baseshapeletforestregressor property)": [[16, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.extrashapelettreesclassifier property)": [[16, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.extrashapelettreesregressor property)": [[16, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.intervalforestclassifier property)": [[16, "wildboar.ensemble._ensemble.IntervalForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.intervalforestregressor property)": [[16, "wildboar.ensemble._ensemble.IntervalForestRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.isolationshapeletforest property)": [[16, "wildboar.ensemble._ensemble.IsolationShapeletForest.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.pivotforestclassifier property)": [[16, "wildboar.ensemble._ensemble.PivotForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.proximityforestclassifier property)": [[16, "wildboar.ensemble._ensemble.ProximityForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.rocketforestclassifier property)": [[16, "wildboar.ensemble._ensemble.RocketForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.rocketforestregressor property)": [[16, "wildboar.ensemble._ensemble.RocketForestRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.shapeletforestclassifier property)": [[16, "wildboar.ensemble._ensemble.ShapeletForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.shapeletforestembedding property)": [[16, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.base_estimator_"]], "base_estimator_ (wildboar.ensemble._ensemble.shapeletforestregressor property)": [[16, "wildboar.ensemble._ensemble.ShapeletForestRegressor.base_estimator_"]], "decision_function() (wildboar.ensemble._ensemble.baggingclassifier method)": [[16, "wildboar.ensemble._ensemble.BaggingClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[16, "wildboar.ensemble._ensemble.BaseForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[16, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[16, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[16, "wildboar.ensemble._ensemble.IntervalForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[16, "wildboar.ensemble._ensemble.PivotForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[16, "wildboar.ensemble._ensemble.ProximityForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[16, "wildboar.ensemble._ensemble.RocketForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[16, "wildboar.ensemble._ensemble.ShapeletForestClassifier.decision_function"]], "estimators_samples_ (wildboar.ensemble._ensemble.baggingclassifier property)": [[16, "wildboar.ensemble._ensemble.BaggingClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.baggingregressor property)": [[16, "wildboar.ensemble._ensemble.BaggingRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.basebagging property)": [[16, "wildboar.ensemble._ensemble.BaseBagging.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.baseforestclassifier property)": [[16, "wildboar.ensemble._ensemble.BaseForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.baseforestregressor property)": [[16, "wildboar.ensemble._ensemble.BaseForestRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.baseshapeletforestclassifier property)": [[16, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.baseshapeletforestregressor property)": [[16, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.extrashapelettreesclassifier property)": [[16, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.extrashapelettreesregressor property)": [[16, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.intervalforestclassifier property)": [[16, "wildboar.ensemble._ensemble.IntervalForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.intervalforestregressor property)": [[16, "wildboar.ensemble._ensemble.IntervalForestRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.isolationshapeletforest property)": [[16, "wildboar.ensemble._ensemble.IsolationShapeletForest.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.pivotforestclassifier property)": [[16, "wildboar.ensemble._ensemble.PivotForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.proximityforestclassifier property)": [[16, "wildboar.ensemble._ensemble.ProximityForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.rocketforestclassifier property)": [[16, "wildboar.ensemble._ensemble.RocketForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.rocketforestregressor property)": [[16, "wildboar.ensemble._ensemble.RocketForestRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.shapeletforestclassifier property)": [[16, "wildboar.ensemble._ensemble.ShapeletForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.shapeletforestembedding property)": [[16, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.shapeletforestregressor property)": [[16, "wildboar.ensemble._ensemble.ShapeletForestRegressor.estimators_samples_"]], "fit() (wildboar.ensemble._ensemble.baggingclassifier method)": [[16, "wildboar.ensemble._ensemble.BaggingClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.baggingregressor method)": [[16, "wildboar.ensemble._ensemble.BaggingRegressor.fit"]], "fit() (wildboar.ensemble._ensemble.basebagging method)": [[16, "wildboar.ensemble._ensemble.BaseBagging.fit"]], "fit() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[16, "wildboar.ensemble._ensemble.BaseForestClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.baseforestregressor method)": [[16, "wildboar.ensemble._ensemble.BaseForestRegressor.fit"]], "fit() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[16, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[16, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.fit"]], "fit() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[16, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[16, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.fit"]], "fit() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[16, "wildboar.ensemble._ensemble.IntervalForestClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[16, "wildboar.ensemble._ensemble.IntervalForestRegressor.fit"]], "fit() (wildboar.ensemble._ensemble.isolationshapeletforest method)": [[16, "wildboar.ensemble._ensemble.IsolationShapeletForest.fit"]], "fit() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[16, "wildboar.ensemble._ensemble.PivotForestClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[16, "wildboar.ensemble._ensemble.ProximityForestClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[16, "wildboar.ensemble._ensemble.RocketForestClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[16, "wildboar.ensemble._ensemble.RocketForestRegressor.fit"]], "fit() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[16, "wildboar.ensemble._ensemble.ShapeletForestClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[16, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.fit"]], "fit() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[16, "wildboar.ensemble._ensemble.ShapeletForestRegressor.fit"]], "fit_predict() (wildboar.ensemble._ensemble.isolationshapeletforest method)": [[16, "wildboar.ensemble._ensemble.IsolationShapeletForest.fit_predict"]], "get_metadata_routing() (wildboar.ensemble._ensemble.baggingclassifier method)": [[16, "wildboar.ensemble._ensemble.BaggingClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.baggingregressor method)": [[16, "wildboar.ensemble._ensemble.BaggingRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.basebagging method)": [[16, "wildboar.ensemble._ensemble.BaseBagging.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[16, "wildboar.ensemble._ensemble.BaseForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.baseforestregressor method)": [[16, "wildboar.ensemble._ensemble.BaseForestRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[16, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[16, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[16, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[16, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[16, "wildboar.ensemble._ensemble.IntervalForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[16, "wildboar.ensemble._ensemble.IntervalForestRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.isolationshapeletforest method)": [[16, "wildboar.ensemble._ensemble.IsolationShapeletForest.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[16, "wildboar.ensemble._ensemble.PivotForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[16, "wildboar.ensemble._ensemble.ProximityForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[16, "wildboar.ensemble._ensemble.RocketForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[16, "wildboar.ensemble._ensemble.RocketForestRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[16, "wildboar.ensemble._ensemble.ShapeletForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[16, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[16, "wildboar.ensemble._ensemble.ShapeletForestRegressor.get_metadata_routing"]], "get_params() (wildboar.ensemble._ensemble.baggingclassifier method)": [[16, "wildboar.ensemble._ensemble.BaggingClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.baggingregressor method)": [[16, "wildboar.ensemble._ensemble.BaggingRegressor.get_params"]], "get_params() (wildboar.ensemble._ensemble.basebagging method)": [[16, "wildboar.ensemble._ensemble.BaseBagging.get_params"]], "get_params() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[16, "wildboar.ensemble._ensemble.BaseForestClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.baseforestregressor method)": [[16, "wildboar.ensemble._ensemble.BaseForestRegressor.get_params"]], "get_params() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[16, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[16, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.get_params"]], "get_params() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[16, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[16, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.get_params"]], "get_params() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[16, "wildboar.ensemble._ensemble.IntervalForestClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[16, "wildboar.ensemble._ensemble.IntervalForestRegressor.get_params"]], "get_params() (wildboar.ensemble._ensemble.isolationshapeletforest method)": [[16, "wildboar.ensemble._ensemble.IsolationShapeletForest.get_params"]], "get_params() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[16, "wildboar.ensemble._ensemble.PivotForestClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[16, "wildboar.ensemble._ensemble.ProximityForestClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[16, "wildboar.ensemble._ensemble.RocketForestClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[16, "wildboar.ensemble._ensemble.RocketForestRegressor.get_params"]], "get_params() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[16, "wildboar.ensemble._ensemble.ShapeletForestClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[16, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.get_params"]], "get_params() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[16, "wildboar.ensemble._ensemble.ShapeletForestRegressor.get_params"]], "predict() (wildboar.ensemble._ensemble.baggingclassifier method)": [[16, "wildboar.ensemble._ensemble.BaggingClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.baggingregressor method)": [[16, "wildboar.ensemble._ensemble.BaggingRegressor.predict"]], "predict() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[16, "wildboar.ensemble._ensemble.BaseForestClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.baseforestregressor method)": [[16, "wildboar.ensemble._ensemble.BaseForestRegressor.predict"]], "predict() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[16, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[16, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.predict"]], "predict() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[16, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[16, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.predict"]], "predict() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[16, "wildboar.ensemble._ensemble.IntervalForestClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[16, "wildboar.ensemble._ensemble.IntervalForestRegressor.predict"]], "predict() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[16, "wildboar.ensemble._ensemble.PivotForestClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[16, "wildboar.ensemble._ensemble.ProximityForestClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[16, "wildboar.ensemble._ensemble.RocketForestClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[16, "wildboar.ensemble._ensemble.RocketForestRegressor.predict"]], "predict() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[16, "wildboar.ensemble._ensemble.ShapeletForestClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[16, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.predict"]], "predict() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[16, "wildboar.ensemble._ensemble.ShapeletForestRegressor.predict"]], "predict_log_proba() (wildboar.ensemble._ensemble.baggingclassifier method)": [[16, "wildboar.ensemble._ensemble.BaggingClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[16, "wildboar.ensemble._ensemble.BaseForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[16, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[16, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[16, "wildboar.ensemble._ensemble.IntervalForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[16, "wildboar.ensemble._ensemble.PivotForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[16, "wildboar.ensemble._ensemble.ProximityForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[16, "wildboar.ensemble._ensemble.RocketForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[16, "wildboar.ensemble._ensemble.ShapeletForestClassifier.predict_log_proba"]], "predict_proba() (wildboar.ensemble._ensemble.baggingclassifier method)": [[16, "wildboar.ensemble._ensemble.BaggingClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[16, "wildboar.ensemble._ensemble.BaseForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[16, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[16, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[16, "wildboar.ensemble._ensemble.IntervalForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[16, "wildboar.ensemble._ensemble.PivotForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[16, "wildboar.ensemble._ensemble.ProximityForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[16, "wildboar.ensemble._ensemble.RocketForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[16, "wildboar.ensemble._ensemble.ShapeletForestClassifier.predict_proba"]], "score() (wildboar.ensemble._ensemble.baggingclassifier method)": [[16, "wildboar.ensemble._ensemble.BaggingClassifier.score"]], "score() (wildboar.ensemble._ensemble.baggingregressor method)": [[16, "wildboar.ensemble._ensemble.BaggingRegressor.score"]], "score() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[16, "wildboar.ensemble._ensemble.BaseForestClassifier.score"]], "score() (wildboar.ensemble._ensemble.baseforestregressor method)": [[16, "wildboar.ensemble._ensemble.BaseForestRegressor.score"]], "score() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[16, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.score"]], "score() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[16, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.score"]], "score() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[16, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.score"]], "score() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[16, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.score"]], "score() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[16, "wildboar.ensemble._ensemble.IntervalForestClassifier.score"]], "score() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[16, "wildboar.ensemble._ensemble.IntervalForestRegressor.score"]], "score() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[16, "wildboar.ensemble._ensemble.PivotForestClassifier.score"]], "score() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[16, "wildboar.ensemble._ensemble.ProximityForestClassifier.score"]], "score() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[16, "wildboar.ensemble._ensemble.RocketForestClassifier.score"]], "score() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[16, "wildboar.ensemble._ensemble.RocketForestRegressor.score"]], "score() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[16, "wildboar.ensemble._ensemble.ShapeletForestClassifier.score"]], "score() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[16, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.score"]], "score() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[16, "wildboar.ensemble._ensemble.ShapeletForestRegressor.score"]], "set_params() (wildboar.ensemble._ensemble.baggingclassifier method)": [[16, "wildboar.ensemble._ensemble.BaggingClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.baggingregressor method)": [[16, "wildboar.ensemble._ensemble.BaggingRegressor.set_params"]], "set_params() (wildboar.ensemble._ensemble.basebagging method)": [[16, "wildboar.ensemble._ensemble.BaseBagging.set_params"]], "set_params() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[16, "wildboar.ensemble._ensemble.BaseForestClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.baseforestregressor method)": [[16, "wildboar.ensemble._ensemble.BaseForestRegressor.set_params"]], "set_params() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[16, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[16, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.set_params"]], "set_params() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[16, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[16, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.set_params"]], "set_params() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[16, "wildboar.ensemble._ensemble.IntervalForestClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[16, "wildboar.ensemble._ensemble.IntervalForestRegressor.set_params"]], "set_params() (wildboar.ensemble._ensemble.isolationshapeletforest method)": [[16, "wildboar.ensemble._ensemble.IsolationShapeletForest.set_params"]], "set_params() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[16, "wildboar.ensemble._ensemble.PivotForestClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[16, "wildboar.ensemble._ensemble.ProximityForestClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[16, "wildboar.ensemble._ensemble.RocketForestClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[16, "wildboar.ensemble._ensemble.RocketForestRegressor.set_params"]], "set_params() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[16, "wildboar.ensemble._ensemble.ShapeletForestClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[16, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.set_params"]], "set_params() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[16, "wildboar.ensemble._ensemble.ShapeletForestRegressor.set_params"]], "wildboar.ensemble._ensemble": [[16, "module-wildboar.ensemble._ensemble"]], "baggingclassifier (class in wildboar.ensemble)": [[17, "wildboar.ensemble.BaggingClassifier"]], "baggingregressor (class in wildboar.ensemble)": [[17, "wildboar.ensemble.BaggingRegressor"]], "basebagging (class in wildboar.ensemble)": [[17, "wildboar.ensemble.BaseBagging"]], "extrashapelettreesclassifier (class in wildboar.ensemble)": [[17, "wildboar.ensemble.ExtraShapeletTreesClassifier"]], "extrashapelettreesregressor (class in wildboar.ensemble)": [[17, "wildboar.ensemble.ExtraShapeletTreesRegressor"]], "intervalforestclassifier (class in wildboar.ensemble)": [[17, "wildboar.ensemble.IntervalForestClassifier"]], "intervalforestregressor (class in wildboar.ensemble)": [[17, "wildboar.ensemble.IntervalForestRegressor"]], "isolationshapeletforest (class in wildboar.ensemble)": [[17, "wildboar.ensemble.IsolationShapeletForest"]], "pivotforestclassifier (class in wildboar.ensemble)": [[17, "wildboar.ensemble.PivotForestClassifier"]], "proximityforestclassifier (class in wildboar.ensemble)": [[17, "wildboar.ensemble.ProximityForestClassifier"]], "rocketforestclassifier (class in wildboar.ensemble)": [[17, "wildboar.ensemble.RocketForestClassifier"]], "rocketforestregressor (class in wildboar.ensemble)": [[17, "wildboar.ensemble.RocketForestRegressor"]], "shapeletforestclassifier (class in wildboar.ensemble)": [[17, "wildboar.ensemble.ShapeletForestClassifier"]], "shapeletforestembedding (class in wildboar.ensemble)": [[17, "wildboar.ensemble.ShapeletForestEmbedding"]], "shapeletforestregressor (class in wildboar.ensemble)": [[17, "wildboar.ensemble.ShapeletForestRegressor"]], "base_estimator_ (wildboar.ensemble.baggingclassifier property)": [[17, "wildboar.ensemble.BaggingClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble.baggingregressor property)": [[17, "wildboar.ensemble.BaggingRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble.basebagging property)": [[17, "wildboar.ensemble.BaseBagging.base_estimator_"]], "base_estimator_ (wildboar.ensemble.extrashapelettreesclassifier property)": [[17, "wildboar.ensemble.ExtraShapeletTreesClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble.extrashapelettreesregressor property)": [[17, "wildboar.ensemble.ExtraShapeletTreesRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble.intervalforestclassifier property)": [[17, "wildboar.ensemble.IntervalForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble.intervalforestregressor property)": [[17, "wildboar.ensemble.IntervalForestRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble.isolationshapeletforest property)": [[17, "wildboar.ensemble.IsolationShapeletForest.base_estimator_"]], "base_estimator_ (wildboar.ensemble.pivotforestclassifier property)": [[17, "wildboar.ensemble.PivotForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble.proximityforestclassifier property)": [[17, "wildboar.ensemble.ProximityForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble.rocketforestclassifier property)": [[17, "wildboar.ensemble.RocketForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble.rocketforestregressor property)": [[17, "wildboar.ensemble.RocketForestRegressor.base_estimator_"]], "base_estimator_ (wildboar.ensemble.shapeletforestclassifier property)": [[17, "wildboar.ensemble.ShapeletForestClassifier.base_estimator_"]], "base_estimator_ (wildboar.ensemble.shapeletforestembedding property)": [[17, "wildboar.ensemble.ShapeletForestEmbedding.base_estimator_"]], "base_estimator_ (wildboar.ensemble.shapeletforestregressor property)": [[17, "wildboar.ensemble.ShapeletForestRegressor.base_estimator_"]], "decision_function() (wildboar.ensemble.baggingclassifier method)": [[17, "wildboar.ensemble.BaggingClassifier.decision_function"]], "decision_function() (wildboar.ensemble.extrashapelettreesclassifier method)": [[17, "wildboar.ensemble.ExtraShapeletTreesClassifier.decision_function"]], "decision_function() (wildboar.ensemble.intervalforestclassifier method)": [[17, "wildboar.ensemble.IntervalForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble.pivotforestclassifier method)": [[17, "wildboar.ensemble.PivotForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble.proximityforestclassifier method)": [[17, "wildboar.ensemble.ProximityForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble.rocketforestclassifier method)": [[17, "wildboar.ensemble.RocketForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble.shapeletforestclassifier method)": [[17, "wildboar.ensemble.ShapeletForestClassifier.decision_function"]], "estimators_samples_ (wildboar.ensemble.baggingclassifier property)": [[17, "wildboar.ensemble.BaggingClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.baggingregressor property)": [[17, "wildboar.ensemble.BaggingRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.basebagging property)": [[17, "wildboar.ensemble.BaseBagging.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.extrashapelettreesclassifier property)": [[17, "wildboar.ensemble.ExtraShapeletTreesClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.extrashapelettreesregressor property)": [[17, "wildboar.ensemble.ExtraShapeletTreesRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.intervalforestclassifier property)": [[17, "wildboar.ensemble.IntervalForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.intervalforestregressor property)": [[17, "wildboar.ensemble.IntervalForestRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.isolationshapeletforest property)": [[17, "wildboar.ensemble.IsolationShapeletForest.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.pivotforestclassifier property)": [[17, "wildboar.ensemble.PivotForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.proximityforestclassifier property)": [[17, "wildboar.ensemble.ProximityForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.rocketforestclassifier property)": [[17, "wildboar.ensemble.RocketForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.rocketforestregressor property)": [[17, "wildboar.ensemble.RocketForestRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.shapeletforestclassifier property)": [[17, "wildboar.ensemble.ShapeletForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.shapeletforestembedding property)": [[17, "wildboar.ensemble.ShapeletForestEmbedding.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.shapeletforestregressor property)": [[17, "wildboar.ensemble.ShapeletForestRegressor.estimators_samples_"]], "fit() (wildboar.ensemble.baggingclassifier method)": [[17, "wildboar.ensemble.BaggingClassifier.fit"]], "fit() (wildboar.ensemble.baggingregressor method)": [[17, "wildboar.ensemble.BaggingRegressor.fit"]], "fit() (wildboar.ensemble.basebagging method)": [[17, "wildboar.ensemble.BaseBagging.fit"]], "fit() (wildboar.ensemble.extrashapelettreesclassifier method)": [[17, "wildboar.ensemble.ExtraShapeletTreesClassifier.fit"]], "fit() (wildboar.ensemble.extrashapelettreesregressor method)": [[17, "wildboar.ensemble.ExtraShapeletTreesRegressor.fit"]], "fit() (wildboar.ensemble.intervalforestclassifier method)": [[17, "wildboar.ensemble.IntervalForestClassifier.fit"]], "fit() (wildboar.ensemble.intervalforestregressor method)": [[17, "wildboar.ensemble.IntervalForestRegressor.fit"]], "fit() (wildboar.ensemble.isolationshapeletforest method)": [[17, "wildboar.ensemble.IsolationShapeletForest.fit"]], "fit() (wildboar.ensemble.pivotforestclassifier method)": [[17, "wildboar.ensemble.PivotForestClassifier.fit"]], "fit() (wildboar.ensemble.proximityforestclassifier method)": [[17, "wildboar.ensemble.ProximityForestClassifier.fit"]], "fit() (wildboar.ensemble.rocketforestclassifier method)": [[17, "wildboar.ensemble.RocketForestClassifier.fit"]], "fit() (wildboar.ensemble.rocketforestregressor method)": [[17, "wildboar.ensemble.RocketForestRegressor.fit"]], "fit() (wildboar.ensemble.shapeletforestclassifier method)": [[17, "wildboar.ensemble.ShapeletForestClassifier.fit"]], "fit() (wildboar.ensemble.shapeletforestembedding method)": [[17, "wildboar.ensemble.ShapeletForestEmbedding.fit"]], "fit() (wildboar.ensemble.shapeletforestregressor method)": [[17, "wildboar.ensemble.ShapeletForestRegressor.fit"]], "fit_predict() (wildboar.ensemble.isolationshapeletforest method)": [[17, "wildboar.ensemble.IsolationShapeletForest.fit_predict"]], "get_metadata_routing() (wildboar.ensemble.baggingclassifier method)": [[17, "wildboar.ensemble.BaggingClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.baggingregressor method)": [[17, "wildboar.ensemble.BaggingRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.basebagging method)": [[17, "wildboar.ensemble.BaseBagging.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.extrashapelettreesclassifier method)": [[17, "wildboar.ensemble.ExtraShapeletTreesClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.extrashapelettreesregressor method)": [[17, "wildboar.ensemble.ExtraShapeletTreesRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.intervalforestclassifier method)": [[17, "wildboar.ensemble.IntervalForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.intervalforestregressor method)": [[17, "wildboar.ensemble.IntervalForestRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.isolationshapeletforest method)": [[17, "wildboar.ensemble.IsolationShapeletForest.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.pivotforestclassifier method)": [[17, "wildboar.ensemble.PivotForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.proximityforestclassifier method)": [[17, "wildboar.ensemble.ProximityForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.rocketforestclassifier method)": [[17, "wildboar.ensemble.RocketForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.rocketforestregressor method)": [[17, "wildboar.ensemble.RocketForestRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.shapeletforestclassifier method)": [[17, "wildboar.ensemble.ShapeletForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.shapeletforestembedding method)": [[17, "wildboar.ensemble.ShapeletForestEmbedding.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.shapeletforestregressor method)": [[17, "wildboar.ensemble.ShapeletForestRegressor.get_metadata_routing"]], "get_params() (wildboar.ensemble.baggingclassifier method)": [[17, "wildboar.ensemble.BaggingClassifier.get_params"]], "get_params() (wildboar.ensemble.baggingregressor method)": [[17, "wildboar.ensemble.BaggingRegressor.get_params"]], "get_params() (wildboar.ensemble.basebagging method)": [[17, "wildboar.ensemble.BaseBagging.get_params"]], "get_params() (wildboar.ensemble.extrashapelettreesclassifier method)": [[17, "wildboar.ensemble.ExtraShapeletTreesClassifier.get_params"]], "get_params() (wildboar.ensemble.extrashapelettreesregressor method)": [[17, "wildboar.ensemble.ExtraShapeletTreesRegressor.get_params"]], "get_params() (wildboar.ensemble.intervalforestclassifier method)": [[17, "wildboar.ensemble.IntervalForestClassifier.get_params"]], "get_params() (wildboar.ensemble.intervalforestregressor method)": [[17, "wildboar.ensemble.IntervalForestRegressor.get_params"]], "get_params() (wildboar.ensemble.isolationshapeletforest method)": [[17, "wildboar.ensemble.IsolationShapeletForest.get_params"]], "get_params() (wildboar.ensemble.pivotforestclassifier method)": [[17, "wildboar.ensemble.PivotForestClassifier.get_params"]], "get_params() (wildboar.ensemble.proximityforestclassifier method)": [[17, "wildboar.ensemble.ProximityForestClassifier.get_params"]], "get_params() (wildboar.ensemble.rocketforestclassifier method)": [[17, "wildboar.ensemble.RocketForestClassifier.get_params"]], "get_params() (wildboar.ensemble.rocketforestregressor method)": [[17, "wildboar.ensemble.RocketForestRegressor.get_params"]], "get_params() (wildboar.ensemble.shapeletforestclassifier method)": [[17, "wildboar.ensemble.ShapeletForestClassifier.get_params"]], "get_params() (wildboar.ensemble.shapeletforestembedding method)": [[17, "wildboar.ensemble.ShapeletForestEmbedding.get_params"]], "get_params() (wildboar.ensemble.shapeletforestregressor method)": [[17, "wildboar.ensemble.ShapeletForestRegressor.get_params"]], "predict() (wildboar.ensemble.baggingclassifier method)": [[17, "wildboar.ensemble.BaggingClassifier.predict"]], "predict() (wildboar.ensemble.baggingregressor method)": [[17, "wildboar.ensemble.BaggingRegressor.predict"]], "predict() (wildboar.ensemble.extrashapelettreesclassifier method)": [[17, "wildboar.ensemble.ExtraShapeletTreesClassifier.predict"]], "predict() (wildboar.ensemble.extrashapelettreesregressor method)": [[17, "wildboar.ensemble.ExtraShapeletTreesRegressor.predict"]], "predict() (wildboar.ensemble.intervalforestclassifier method)": [[17, "wildboar.ensemble.IntervalForestClassifier.predict"]], "predict() (wildboar.ensemble.intervalforestregressor method)": [[17, "wildboar.ensemble.IntervalForestRegressor.predict"]], "predict() (wildboar.ensemble.pivotforestclassifier method)": [[17, "wildboar.ensemble.PivotForestClassifier.predict"]], "predict() (wildboar.ensemble.proximityforestclassifier method)": [[17, "wildboar.ensemble.ProximityForestClassifier.predict"]], "predict() (wildboar.ensemble.rocketforestclassifier method)": [[17, "wildboar.ensemble.RocketForestClassifier.predict"]], "predict() (wildboar.ensemble.rocketforestregressor method)": [[17, "wildboar.ensemble.RocketForestRegressor.predict"]], "predict() (wildboar.ensemble.shapeletforestclassifier method)": [[17, "wildboar.ensemble.ShapeletForestClassifier.predict"]], "predict() (wildboar.ensemble.shapeletforestembedding method)": [[17, "wildboar.ensemble.ShapeletForestEmbedding.predict"]], "predict() (wildboar.ensemble.shapeletforestregressor method)": [[17, "wildboar.ensemble.ShapeletForestRegressor.predict"]], "predict_log_proba() (wildboar.ensemble.baggingclassifier method)": [[17, "wildboar.ensemble.BaggingClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble.extrashapelettreesclassifier method)": [[17, "wildboar.ensemble.ExtraShapeletTreesClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble.intervalforestclassifier method)": [[17, "wildboar.ensemble.IntervalForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble.pivotforestclassifier method)": [[17, "wildboar.ensemble.PivotForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble.proximityforestclassifier method)": [[17, "wildboar.ensemble.ProximityForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble.rocketforestclassifier method)": [[17, "wildboar.ensemble.RocketForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble.shapeletforestclassifier method)": [[17, "wildboar.ensemble.ShapeletForestClassifier.predict_log_proba"]], "predict_proba() (wildboar.ensemble.baggingclassifier method)": [[17, "wildboar.ensemble.BaggingClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble.extrashapelettreesclassifier method)": [[17, "wildboar.ensemble.ExtraShapeletTreesClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble.intervalforestclassifier method)": [[17, "wildboar.ensemble.IntervalForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble.pivotforestclassifier method)": [[17, "wildboar.ensemble.PivotForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble.proximityforestclassifier method)": [[17, "wildboar.ensemble.ProximityForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble.rocketforestclassifier method)": [[17, "wildboar.ensemble.RocketForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble.shapeletforestclassifier method)": [[17, "wildboar.ensemble.ShapeletForestClassifier.predict_proba"]], "score() (wildboar.ensemble.baggingclassifier method)": [[17, "wildboar.ensemble.BaggingClassifier.score"]], "score() (wildboar.ensemble.baggingregressor method)": [[17, "wildboar.ensemble.BaggingRegressor.score"]], "score() (wildboar.ensemble.extrashapelettreesclassifier method)": [[17, "wildboar.ensemble.ExtraShapeletTreesClassifier.score"]], "score() (wildboar.ensemble.extrashapelettreesregressor method)": [[17, "wildboar.ensemble.ExtraShapeletTreesRegressor.score"]], "score() (wildboar.ensemble.intervalforestclassifier method)": [[17, "wildboar.ensemble.IntervalForestClassifier.score"]], "score() (wildboar.ensemble.intervalforestregressor method)": [[17, "wildboar.ensemble.IntervalForestRegressor.score"]], "score() (wildboar.ensemble.pivotforestclassifier method)": [[17, "wildboar.ensemble.PivotForestClassifier.score"]], "score() (wildboar.ensemble.proximityforestclassifier method)": [[17, "wildboar.ensemble.ProximityForestClassifier.score"]], "score() (wildboar.ensemble.rocketforestclassifier method)": [[17, "wildboar.ensemble.RocketForestClassifier.score"]], "score() (wildboar.ensemble.rocketforestregressor method)": [[17, "wildboar.ensemble.RocketForestRegressor.score"]], "score() (wildboar.ensemble.shapeletforestclassifier method)": [[17, "wildboar.ensemble.ShapeletForestClassifier.score"]], "score() (wildboar.ensemble.shapeletforestembedding method)": [[17, "wildboar.ensemble.ShapeletForestEmbedding.score"]], "score() (wildboar.ensemble.shapeletforestregressor method)": [[17, "wildboar.ensemble.ShapeletForestRegressor.score"]], "set_params() (wildboar.ensemble.baggingclassifier method)": [[17, "wildboar.ensemble.BaggingClassifier.set_params"]], "set_params() (wildboar.ensemble.baggingregressor method)": [[17, "wildboar.ensemble.BaggingRegressor.set_params"]], "set_params() (wildboar.ensemble.basebagging method)": [[17, "wildboar.ensemble.BaseBagging.set_params"]], "set_params() (wildboar.ensemble.extrashapelettreesclassifier method)": [[17, "wildboar.ensemble.ExtraShapeletTreesClassifier.set_params"]], "set_params() (wildboar.ensemble.extrashapelettreesregressor method)": [[17, "wildboar.ensemble.ExtraShapeletTreesRegressor.set_params"]], "set_params() (wildboar.ensemble.intervalforestclassifier method)": [[17, "wildboar.ensemble.IntervalForestClassifier.set_params"]], "set_params() (wildboar.ensemble.intervalforestregressor method)": [[17, "wildboar.ensemble.IntervalForestRegressor.set_params"]], "set_params() (wildboar.ensemble.isolationshapeletforest method)": [[17, "wildboar.ensemble.IsolationShapeletForest.set_params"]], "set_params() (wildboar.ensemble.pivotforestclassifier method)": [[17, "wildboar.ensemble.PivotForestClassifier.set_params"]], "set_params() (wildboar.ensemble.proximityforestclassifier method)": [[17, "wildboar.ensemble.ProximityForestClassifier.set_params"]], "set_params() (wildboar.ensemble.rocketforestclassifier method)": [[17, "wildboar.ensemble.RocketForestClassifier.set_params"]], "set_params() (wildboar.ensemble.rocketforestregressor method)": [[17, "wildboar.ensemble.RocketForestRegressor.set_params"]], "set_params() (wildboar.ensemble.shapeletforestclassifier method)": [[17, "wildboar.ensemble.ShapeletForestClassifier.set_params"]], "set_params() (wildboar.ensemble.shapeletforestembedding method)": [[17, "wildboar.ensemble.ShapeletForestEmbedding.set_params"]], "set_params() (wildboar.ensemble.shapeletforestregressor method)": [[17, "wildboar.ensemble.ShapeletForestRegressor.set_params"]], "wildboar.ensemble": [[17, "module-wildboar.ensemble"]], "amplitudeimportance (class in wildboar.explain._importance)": [[18, "wildboar.explain._importance.AmplitudeImportance"]], "intervalimportance (class in wildboar.explain._importance)": [[18, "wildboar.explain._importance.IntervalImportance"]], "permuteimportance (class in wildboar.explain._importance)": [[18, "wildboar.explain._importance.PermuteImportance"]], "shapeletimportance (class in wildboar.explain._importance)": [[18, "wildboar.explain._importance.ShapeletImportance"]], "fit_explain() (wildboar.explain._importance.amplitudeimportance method)": [[18, "wildboar.explain._importance.AmplitudeImportance.fit_explain"]], "fit_explain() (wildboar.explain._importance.intervalimportance method)": [[18, "wildboar.explain._importance.IntervalImportance.fit_explain"]], "fit_explain() (wildboar.explain._importance.shapeletimportance method)": [[18, "wildboar.explain._importance.ShapeletImportance.fit_explain"]], "get_metadata_routing() (wildboar.explain._importance.amplitudeimportance method)": [[18, "wildboar.explain._importance.AmplitudeImportance.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain._importance.intervalimportance method)": [[18, "wildboar.explain._importance.IntervalImportance.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain._importance.permuteimportance method)": [[18, "wildboar.explain._importance.PermuteImportance.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain._importance.shapeletimportance method)": [[18, "wildboar.explain._importance.ShapeletImportance.get_metadata_routing"]], "get_params() (wildboar.explain._importance.amplitudeimportance method)": [[18, "wildboar.explain._importance.AmplitudeImportance.get_params"]], "get_params() (wildboar.explain._importance.intervalimportance method)": [[18, "wildboar.explain._importance.IntervalImportance.get_params"]], "get_params() (wildboar.explain._importance.permuteimportance method)": [[18, "wildboar.explain._importance.PermuteImportance.get_params"]], "get_params() (wildboar.explain._importance.shapeletimportance method)": [[18, "wildboar.explain._importance.ShapeletImportance.get_params"]], "plot() (wildboar.explain._importance.amplitudeimportance method)": [[18, "wildboar.explain._importance.AmplitudeImportance.plot"]], "plot() (wildboar.explain._importance.intervalimportance method)": [[18, "wildboar.explain._importance.IntervalImportance.plot"]], "plot() (wildboar.explain._importance.shapeletimportance method)": [[18, "wildboar.explain._importance.ShapeletImportance.plot"]], "plot_importances() (in module wildboar.explain._importance)": [[18, "wildboar.explain._importance.plot_importances"]], "set_params() (wildboar.explain._importance.amplitudeimportance method)": [[18, "wildboar.explain._importance.AmplitudeImportance.set_params"]], "set_params() (wildboar.explain._importance.intervalimportance method)": [[18, "wildboar.explain._importance.IntervalImportance.set_params"]], "set_params() (wildboar.explain._importance.permuteimportance method)": [[18, "wildboar.explain._importance.PermuteImportance.set_params"]], "set_params() (wildboar.explain._importance.shapeletimportance method)": [[18, "wildboar.explain._importance.ShapeletImportance.set_params"]], "wildboar.explain._importance": [[18, "module-wildboar.explain._importance"]], "counterfactuals() (in module wildboar.explain.counterfactual._helper)": [[19, "wildboar.explain.counterfactual._helper.counterfactuals"]], "wildboar.explain.counterfactual._helper": [[19, "module-wildboar.explain.counterfactual._helper"]], "kneighborscounterfactual (class in wildboar.explain.counterfactual._nn)": [[20, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual"]], "fit_explain() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[20, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.fit_explain"]], "get_metadata_routing() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[20, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.get_metadata_routing"]], "get_params() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[20, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.get_params"]], "plot() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[20, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.plot"]], "score() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[20, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.score"]], "set_params() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[20, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.set_params"]], "wildboar.explain.counterfactual._nn": [[20, "module-wildboar.explain.counterfactual._nn"]], "dynamictimewarptransform (class in wildboar.explain.counterfactual._proto)": [[21, "wildboar.explain.counterfactual._proto.DynamicTimeWarpTransform"]], "euclideantransform (class in wildboar.explain.counterfactual._proto)": [[21, "wildboar.explain.counterfactual._proto.EuclideanTransform"]], "knearestprototypesampler (class in wildboar.explain.counterfactual._proto)": [[21, "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler"]], "knearestshapeletprototypesampler (class in wildboar.explain.counterfactual._proto)": [[21, "wildboar.explain.counterfactual._proto.KNearestShapeletPrototypeSampler"]], "metrictransform (class in wildboar.explain.counterfactual._proto)": [[21, "wildboar.explain.counterfactual._proto.MetricTransform"]], "predictevaluator (class in wildboar.explain.counterfactual._proto)": [[21, "wildboar.explain.counterfactual._proto.PredictEvaluator"]], "probabilityevaluator (class in wildboar.explain.counterfactual._proto)": [[21, "wildboar.explain.counterfactual._proto.ProbabilityEvaluator"]], "prototypecounterfactual (class in wildboar.explain.counterfactual._proto)": [[21, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual"]], "prototypesampler (class in wildboar.explain.counterfactual._proto)": [[21, "wildboar.explain.counterfactual._proto.PrototypeSampler"]], "shapeletprototypesampler (class in wildboar.explain.counterfactual._proto)": [[21, "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler"]], "targetevaluator (class in wildboar.explain.counterfactual._proto)": [[21, "wildboar.explain.counterfactual._proto.TargetEvaluator"]], "uniformprototypesampler (class in wildboar.explain.counterfactual._proto)": [[21, "wildboar.explain.counterfactual._proto.UniformPrototypeSampler"]], "weighteddynamictimewarptransform (class in wildboar.explain.counterfactual._proto)": [[21, "wildboar.explain.counterfactual._proto.WeightedDynamicTimeWarpTransform"]], "fit_explain() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[21, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.fit_explain"]], "get_metadata_routing() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[21, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.get_metadata_routing"]], "get_params() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[21, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.get_params"]], "is_counterfactual() (wildboar.explain.counterfactual._proto.predictevaluator method)": [[21, "wildboar.explain.counterfactual._proto.PredictEvaluator.is_counterfactual"]], "is_counterfactual() (wildboar.explain.counterfactual._proto.probabilityevaluator method)": [[21, "wildboar.explain.counterfactual._proto.ProbabilityEvaluator.is_counterfactual"]], "is_counterfactual() (wildboar.explain.counterfactual._proto.targetevaluator method)": [[21, "wildboar.explain.counterfactual._proto.TargetEvaluator.is_counterfactual"]], "move() (wildboar.explain.counterfactual._proto.dynamictimewarptransform method)": [[21, "wildboar.explain.counterfactual._proto.DynamicTimeWarpTransform.move"]], "move() (wildboar.explain.counterfactual._proto.euclideantransform method)": [[21, "wildboar.explain.counterfactual._proto.EuclideanTransform.move"]], "move() (wildboar.explain.counterfactual._proto.knearestprototypesampler method)": [[21, "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler.move"]], "move() (wildboar.explain.counterfactual._proto.knearestshapeletprototypesampler method)": [[21, "wildboar.explain.counterfactual._proto.KNearestShapeletPrototypeSampler.move"]], "move() (wildboar.explain.counterfactual._proto.metrictransform method)": [[21, "wildboar.explain.counterfactual._proto.MetricTransform.move"]], "move() (wildboar.explain.counterfactual._proto.prototypesampler method)": [[21, "wildboar.explain.counterfactual._proto.PrototypeSampler.move"]], "move() (wildboar.explain.counterfactual._proto.shapeletprototypesampler method)": [[21, "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler.move"]], "move() (wildboar.explain.counterfactual._proto.uniformprototypesampler method)": [[21, "wildboar.explain.counterfactual._proto.UniformPrototypeSampler.move"]], "move() (wildboar.explain.counterfactual._proto.weighteddynamictimewarptransform method)": [[21, "wildboar.explain.counterfactual._proto.WeightedDynamicTimeWarpTransform.move"]], "nearest_index() (wildboar.explain.counterfactual._proto.knearestprototypesampler method)": [[21, "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler.nearest_index"]], "plot() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[21, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.plot"]], "sample() (wildboar.explain.counterfactual._proto.knearestprototypesampler method)": [[21, "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler.sample"]], "sample() (wildboar.explain.counterfactual._proto.knearestshapeletprototypesampler method)": [[21, "wildboar.explain.counterfactual._proto.KNearestShapeletPrototypeSampler.sample"]], "sample() (wildboar.explain.counterfactual._proto.prototypesampler method)": [[21, "wildboar.explain.counterfactual._proto.PrototypeSampler.sample"]], "sample() (wildboar.explain.counterfactual._proto.shapeletprototypesampler method)": [[21, "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler.sample"]], "sample() (wildboar.explain.counterfactual._proto.uniformprototypesampler method)": [[21, "wildboar.explain.counterfactual._proto.UniformPrototypeSampler.sample"]], "sample_move() (wildboar.explain.counterfactual._proto.knearestprototypesampler method)": [[21, "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler.sample_move"]], "sample_move() (wildboar.explain.counterfactual._proto.knearestshapeletprototypesampler method)": [[21, "wildboar.explain.counterfactual._proto.KNearestShapeletPrototypeSampler.sample_move"]], "sample_move() (wildboar.explain.counterfactual._proto.prototypesampler method)": [[21, "wildboar.explain.counterfactual._proto.PrototypeSampler.sample_move"]], "sample_move() (wildboar.explain.counterfactual._proto.shapeletprototypesampler method)": [[21, "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler.sample_move"]], "sample_move() (wildboar.explain.counterfactual._proto.uniformprototypesampler method)": [[21, "wildboar.explain.counterfactual._proto.UniformPrototypeSampler.sample_move"]], "sample_shapelet() (wildboar.explain.counterfactual._proto.shapeletprototypesampler method)": [[21, "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler.sample_shapelet"]], "score() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[21, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.score"]], "set_params() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[21, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.set_params"]], "wildboar.explain.counterfactual._proto": [[21, "module-wildboar.explain.counterfactual._proto"]], "shapeletforestcounterfactual (class in wildboar.explain.counterfactual._sf)": [[22, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual"]], "fit_explain() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[22, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.fit_explain"]], "get_metadata_routing() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[22, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.get_metadata_routing"]], "get_params() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[22, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.get_params"]], "plot() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[22, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.plot"]], "score() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[22, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.score"]], "set_params() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[22, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.set_params"]], "wildboar.explain.counterfactual._sf": [[22, "module-wildboar.explain.counterfactual._sf"]], "kneighborscounterfactual (class in wildboar.explain.counterfactual)": [[23, "wildboar.explain.counterfactual.KNeighborsCounterfactual"]], "prototypecounterfactual (class in wildboar.explain.counterfactual)": [[23, "wildboar.explain.counterfactual.PrototypeCounterfactual"]], "shapeletforestcounterfactual (class in wildboar.explain.counterfactual)": [[23, "wildboar.explain.counterfactual.ShapeletForestCounterfactual"]], "counterfactuals() (in module wildboar.explain.counterfactual)": [[23, "wildboar.explain.counterfactual.counterfactuals"]], "fit_explain() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[23, "wildboar.explain.counterfactual.KNeighborsCounterfactual.fit_explain"]], "fit_explain() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[23, "wildboar.explain.counterfactual.PrototypeCounterfactual.fit_explain"]], "fit_explain() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[23, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.fit_explain"]], "get_metadata_routing() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[23, "wildboar.explain.counterfactual.KNeighborsCounterfactual.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[23, "wildboar.explain.counterfactual.PrototypeCounterfactual.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[23, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.get_metadata_routing"]], "get_params() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[23, "wildboar.explain.counterfactual.KNeighborsCounterfactual.get_params"]], "get_params() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[23, "wildboar.explain.counterfactual.PrototypeCounterfactual.get_params"]], "get_params() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[23, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.get_params"]], "plot() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[23, "wildboar.explain.counterfactual.KNeighborsCounterfactual.plot"]], "plot() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[23, "wildboar.explain.counterfactual.PrototypeCounterfactual.plot"]], "plot() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[23, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.plot"]], "proximity() (in module wildboar.explain.counterfactual)": [[23, "wildboar.explain.counterfactual.proximity"]], "score() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[23, "wildboar.explain.counterfactual.KNeighborsCounterfactual.score"]], "score() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[23, "wildboar.explain.counterfactual.PrototypeCounterfactual.score"]], "score() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[23, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.score"]], "set_params() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[23, "wildboar.explain.counterfactual.KNeighborsCounterfactual.set_params"]], "set_params() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[23, "wildboar.explain.counterfactual.PrototypeCounterfactual.set_params"]], "set_params() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[23, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.set_params"]], "wildboar.explain.counterfactual": [[23, "module-wildboar.explain.counterfactual"]], "amplitudeimportance (class in wildboar.explain)": [[24, "wildboar.explain.AmplitudeImportance"]], "intervalimportance (class in wildboar.explain)": [[24, "wildboar.explain.IntervalImportance"]], "shapeletimportance (class in wildboar.explain)": [[24, "wildboar.explain.ShapeletImportance"]], "fit_explain() (wildboar.explain.amplitudeimportance method)": [[24, "wildboar.explain.AmplitudeImportance.fit_explain"]], "fit_explain() (wildboar.explain.intervalimportance method)": [[24, "wildboar.explain.IntervalImportance.fit_explain"]], "fit_explain() (wildboar.explain.shapeletimportance method)": [[24, "wildboar.explain.ShapeletImportance.fit_explain"]], "get_metadata_routing() (wildboar.explain.amplitudeimportance method)": [[24, "wildboar.explain.AmplitudeImportance.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain.intervalimportance method)": [[24, "wildboar.explain.IntervalImportance.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain.shapeletimportance method)": [[24, "wildboar.explain.ShapeletImportance.get_metadata_routing"]], "get_params() (wildboar.explain.amplitudeimportance method)": [[24, "wildboar.explain.AmplitudeImportance.get_params"]], "get_params() (wildboar.explain.intervalimportance method)": [[24, "wildboar.explain.IntervalImportance.get_params"]], "get_params() (wildboar.explain.shapeletimportance method)": [[24, "wildboar.explain.ShapeletImportance.get_params"]], "plot() (wildboar.explain.amplitudeimportance method)": [[24, "wildboar.explain.AmplitudeImportance.plot"]], "plot() (wildboar.explain.intervalimportance method)": [[24, "wildboar.explain.IntervalImportance.plot"]], "plot() (wildboar.explain.shapeletimportance method)": [[24, "wildboar.explain.ShapeletImportance.plot"]], "plot_importances() (in module wildboar.explain)": [[24, "wildboar.explain.plot_importances"]], "set_params() (wildboar.explain.amplitudeimportance method)": [[24, "wildboar.explain.AmplitudeImportance.set_params"]], "set_params() (wildboar.explain.intervalimportance method)": [[24, "wildboar.explain.IntervalImportance.set_params"]], "set_params() (wildboar.explain.shapeletimportance method)": [[24, "wildboar.explain.ShapeletImportance.set_params"]], "wildboar.explain": [[24, "module-wildboar.explain"]], "iseos() (in module wildboar)": [[25, "wildboar.iseos"]], "wildboar": [[25, "module-wildboar"]], "hydraclassifier (class in wildboar.linear_model._hydra)": [[26, "wildboar.linear_model._hydra.HydraClassifier"]], "get_metadata_routing() (wildboar.linear_model._hydra.hydraclassifier method)": [[26, "wildboar.linear_model._hydra.HydraClassifier.get_metadata_routing"]], "get_params() (wildboar.linear_model._hydra.hydraclassifier method)": [[26, "wildboar.linear_model._hydra.HydraClassifier.get_params"]], "score() (wildboar.linear_model._hydra.hydraclassifier method)": [[26, "wildboar.linear_model._hydra.HydraClassifier.score"]], "set_params() (wildboar.linear_model._hydra.hydraclassifier method)": [[26, "wildboar.linear_model._hydra.HydraClassifier.set_params"]], "wildboar.linear_model._hydra": [[26, "module-wildboar.linear_model._hydra"]], "rocketclassifier (class in wildboar.linear_model._rocket)": [[27, "wildboar.linear_model._rocket.RocketClassifier"]], "rocketregressor (class in wildboar.linear_model._rocket)": [[27, "wildboar.linear_model._rocket.RocketRegressor"]], "get_metadata_routing() (wildboar.linear_model._rocket.rocketclassifier method)": [[27, "wildboar.linear_model._rocket.RocketClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model._rocket.rocketregressor method)": [[27, "wildboar.linear_model._rocket.RocketRegressor.get_metadata_routing"]], "get_params() (wildboar.linear_model._rocket.rocketclassifier method)": [[27, "wildboar.linear_model._rocket.RocketClassifier.get_params"]], "get_params() (wildboar.linear_model._rocket.rocketregressor method)": [[27, "wildboar.linear_model._rocket.RocketRegressor.get_params"]], "score() (wildboar.linear_model._rocket.rocketclassifier method)": [[27, "wildboar.linear_model._rocket.RocketClassifier.score"]], "score() (wildboar.linear_model._rocket.rocketregressor method)": [[27, "wildboar.linear_model._rocket.RocketRegressor.score"]], "set_params() (wildboar.linear_model._rocket.rocketclassifier method)": [[27, "wildboar.linear_model._rocket.RocketClassifier.set_params"]], "set_params() (wildboar.linear_model._rocket.rocketregressor method)": [[27, "wildboar.linear_model._rocket.RocketRegressor.set_params"]], "wildboar.linear_model._rocket": [[27, "module-wildboar.linear_model._rocket"]], "randomshapeletclassifier (class in wildboar.linear_model._shapelet)": [[28, "wildboar.linear_model._shapelet.RandomShapeletClassifier"]], "randomshapeletregressor (class in wildboar.linear_model._shapelet)": [[28, "wildboar.linear_model._shapelet.RandomShapeletRegressor"]], "get_metadata_routing() (wildboar.linear_model._shapelet.randomshapeletclassifier method)": [[28, "wildboar.linear_model._shapelet.RandomShapeletClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model._shapelet.randomshapeletregressor method)": [[28, "wildboar.linear_model._shapelet.RandomShapeletRegressor.get_metadata_routing"]], "get_params() (wildboar.linear_model._shapelet.randomshapeletclassifier method)": [[28, "wildboar.linear_model._shapelet.RandomShapeletClassifier.get_params"]], "get_params() (wildboar.linear_model._shapelet.randomshapeletregressor method)": [[28, "wildboar.linear_model._shapelet.RandomShapeletRegressor.get_params"]], "score() (wildboar.linear_model._shapelet.randomshapeletclassifier method)": [[28, "wildboar.linear_model._shapelet.RandomShapeletClassifier.score"]], "score() (wildboar.linear_model._shapelet.randomshapeletregressor method)": [[28, "wildboar.linear_model._shapelet.RandomShapeletRegressor.score"]], "set_params() (wildboar.linear_model._shapelet.randomshapeletclassifier method)": [[28, "wildboar.linear_model._shapelet.RandomShapeletClassifier.set_params"]], "set_params() (wildboar.linear_model._shapelet.randomshapeletregressor method)": [[28, "wildboar.linear_model._shapelet.RandomShapeletRegressor.set_params"]], "wildboar.linear_model._shapelet": [[28, "module-wildboar.linear_model._shapelet"]], "basetransformclassifier (class in wildboar.linear_model._transform)": [[29, "wildboar.linear_model._transform.BaseTransformClassifier"]], "basetransformestimator (class in wildboar.linear_model._transform)": [[29, "wildboar.linear_model._transform.BaseTransformEstimator"]], "basetransformregressor (class in wildboar.linear_model._transform)": [[29, "wildboar.linear_model._transform.BaseTransformRegressor"]], "transformridgecv (class in wildboar.linear_model._transform)": [[29, "wildboar.linear_model._transform.TransformRidgeCV"]], "transformridgeclassifiercv (class in wildboar.linear_model._transform)": [[29, "wildboar.linear_model._transform.TransformRidgeClassifierCV"]], "get_metadata_routing() (wildboar.linear_model._transform.basetransformclassifier method)": [[29, "wildboar.linear_model._transform.BaseTransformClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model._transform.basetransformestimator method)": [[29, "wildboar.linear_model._transform.BaseTransformEstimator.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model._transform.basetransformregressor method)": [[29, "wildboar.linear_model._transform.BaseTransformRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model._transform.transformridgecv method)": [[29, "wildboar.linear_model._transform.TransformRidgeCV.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model._transform.transformridgeclassifiercv method)": [[29, "wildboar.linear_model._transform.TransformRidgeClassifierCV.get_metadata_routing"]], "get_params() (wildboar.linear_model._transform.basetransformclassifier method)": [[29, "wildboar.linear_model._transform.BaseTransformClassifier.get_params"]], "get_params() (wildboar.linear_model._transform.basetransformestimator method)": [[29, "wildboar.linear_model._transform.BaseTransformEstimator.get_params"]], "get_params() (wildboar.linear_model._transform.basetransformregressor method)": [[29, "wildboar.linear_model._transform.BaseTransformRegressor.get_params"]], "get_params() (wildboar.linear_model._transform.transformridgecv method)": [[29, "wildboar.linear_model._transform.TransformRidgeCV.get_params"]], "get_params() (wildboar.linear_model._transform.transformridgeclassifiercv method)": [[29, "wildboar.linear_model._transform.TransformRidgeClassifierCV.get_params"]], "score() (wildboar.linear_model._transform.basetransformclassifier method)": [[29, "wildboar.linear_model._transform.BaseTransformClassifier.score"]], "score() (wildboar.linear_model._transform.basetransformregressor method)": [[29, "wildboar.linear_model._transform.BaseTransformRegressor.score"]], "score() (wildboar.linear_model._transform.transformridgecv method)": [[29, "wildboar.linear_model._transform.TransformRidgeCV.score"]], "score() (wildboar.linear_model._transform.transformridgeclassifiercv method)": [[29, "wildboar.linear_model._transform.TransformRidgeClassifierCV.score"]], "set_params() (wildboar.linear_model._transform.basetransformclassifier method)": [[29, "wildboar.linear_model._transform.BaseTransformClassifier.set_params"]], "set_params() (wildboar.linear_model._transform.basetransformestimator method)": [[29, "wildboar.linear_model._transform.BaseTransformEstimator.set_params"]], "set_params() (wildboar.linear_model._transform.basetransformregressor method)": [[29, "wildboar.linear_model._transform.BaseTransformRegressor.set_params"]], "set_params() (wildboar.linear_model._transform.transformridgecv method)": [[29, "wildboar.linear_model._transform.TransformRidgeCV.set_params"]], "set_params() (wildboar.linear_model._transform.transformridgeclassifiercv method)": [[29, "wildboar.linear_model._transform.TransformRidgeClassifierCV.set_params"]], "wildboar.linear_model._transform": [[29, "module-wildboar.linear_model._transform"]], "hydraclassifier (class in wildboar.linear_model)": [[30, "wildboar.linear_model.HydraClassifier"]], "randomshapeletclassifier (class in wildboar.linear_model)": [[30, "wildboar.linear_model.RandomShapeletClassifier"]], "randomshapeletregressor (class in wildboar.linear_model)": [[30, "wildboar.linear_model.RandomShapeletRegressor"]], "rocketclassifier (class in wildboar.linear_model)": [[30, "wildboar.linear_model.RocketClassifier"]], "rocketregressor (class in wildboar.linear_model)": [[30, "wildboar.linear_model.RocketRegressor"]], "get_metadata_routing() (wildboar.linear_model.hydraclassifier method)": [[30, "wildboar.linear_model.HydraClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model.randomshapeletclassifier method)": [[30, "wildboar.linear_model.RandomShapeletClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model.randomshapeletregressor method)": [[30, "wildboar.linear_model.RandomShapeletRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model.rocketclassifier method)": [[30, "wildboar.linear_model.RocketClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model.rocketregressor method)": [[30, "wildboar.linear_model.RocketRegressor.get_metadata_routing"]], "get_params() (wildboar.linear_model.hydraclassifier method)": [[30, "wildboar.linear_model.HydraClassifier.get_params"]], "get_params() (wildboar.linear_model.randomshapeletclassifier method)": [[30, "wildboar.linear_model.RandomShapeletClassifier.get_params"]], "get_params() (wildboar.linear_model.randomshapeletregressor method)": [[30, "wildboar.linear_model.RandomShapeletRegressor.get_params"]], "get_params() (wildboar.linear_model.rocketclassifier method)": [[30, "wildboar.linear_model.RocketClassifier.get_params"]], "get_params() (wildboar.linear_model.rocketregressor method)": [[30, "wildboar.linear_model.RocketRegressor.get_params"]], "score() (wildboar.linear_model.hydraclassifier method)": [[30, "wildboar.linear_model.HydraClassifier.score"]], "score() (wildboar.linear_model.randomshapeletclassifier method)": [[30, "wildboar.linear_model.RandomShapeletClassifier.score"]], "score() (wildboar.linear_model.randomshapeletregressor method)": [[30, "wildboar.linear_model.RandomShapeletRegressor.score"]], "score() (wildboar.linear_model.rocketclassifier method)": [[30, "wildboar.linear_model.RocketClassifier.score"]], "score() (wildboar.linear_model.rocketregressor method)": [[30, "wildboar.linear_model.RocketRegressor.score"]], "set_params() (wildboar.linear_model.hydraclassifier method)": [[30, "wildboar.linear_model.HydraClassifier.set_params"]], "set_params() (wildboar.linear_model.randomshapeletclassifier method)": [[30, "wildboar.linear_model.RandomShapeletClassifier.set_params"]], "set_params() (wildboar.linear_model.randomshapeletregressor method)": [[30, "wildboar.linear_model.RandomShapeletRegressor.set_params"]], "set_params() (wildboar.linear_model.rocketclassifier method)": [[30, "wildboar.linear_model.RocketClassifier.set_params"]], "set_params() (wildboar.linear_model.rocketregressor method)": [[30, "wildboar.linear_model.RocketRegressor.set_params"]], "wildboar.linear_model": [[30, "module-wildboar.linear_model"]], "silhouette_samples() (in module wildboar.metrics._cluster)": [[31, "wildboar.metrics._cluster.silhouette_samples"]], "silhouette_score() (in module wildboar.metrics._cluster)": [[31, "wildboar.metrics._cluster.silhouette_score"]], "wildboar.metrics._cluster": [[31, "module-wildboar.metrics._cluster"]], "compactness_score() (in module wildboar.metrics._counterfactual)": [[32, "wildboar.metrics._counterfactual.compactness_score"]], "plausability_score() (in module wildboar.metrics._counterfactual)": [[32, "wildboar.metrics._counterfactual.plausability_score"]], "proximity_score() (in module wildboar.metrics._counterfactual)": [[32, "wildboar.metrics._counterfactual.proximity_score"]], "redudancy_score() (in module wildboar.metrics._counterfactual)": [[32, "wildboar.metrics._counterfactual.redudancy_score"]], "relative_proximity_score() (in module wildboar.metrics._counterfactual)": [[32, "wildboar.metrics._counterfactual.relative_proximity_score"]], "validity_score() (in module wildboar.metrics._counterfactual)": [[32, "wildboar.metrics._counterfactual.validity_score"]], "wildboar.metrics._counterfactual": [[32, "module-wildboar.metrics._counterfactual"]], "compactness_score() (in module wildboar.metrics)": [[33, "wildboar.metrics.compactness_score"]], "plausability_score() (in module wildboar.metrics)": [[33, "wildboar.metrics.plausability_score"]], "proximity_score() (in module wildboar.metrics)": [[33, "wildboar.metrics.proximity_score"]], "redudancy_score() (in module wildboar.metrics)": [[33, "wildboar.metrics.redudancy_score"]], "relative_proximity_score() (in module wildboar.metrics)": [[33, "wildboar.metrics.relative_proximity_score"]], "silhouette_samples() (in module wildboar.metrics)": [[33, "wildboar.metrics.silhouette_samples"]], "silhouette_score() (in module wildboar.metrics)": [[33, "wildboar.metrics.silhouette_score"]], "validity_score() (in module wildboar.metrics)": [[33, "wildboar.metrics.validity_score"]], "wildboar.metrics": [[33, "module-wildboar.metrics"]], "repeatedoutliersplit (class in wildboar.model_selection._cv)": [[34, "wildboar.model_selection._cv.RepeatedOutlierSplit"]], "get_n_splits() (wildboar.model_selection._cv.repeatedoutliersplit method)": [[34, "wildboar.model_selection._cv.RepeatedOutlierSplit.get_n_splits"]], "split() (wildboar.model_selection._cv.repeatedoutliersplit method)": [[34, "wildboar.model_selection._cv.RepeatedOutlierSplit.split"]], "wildboar.model_selection._cv": [[34, "module-wildboar.model_selection._cv"]], "outlier_train_test_split() (in module wildboar.model_selection._outlier)": [[35, "wildboar.model_selection._outlier.outlier_train_test_split"]], "wildboar.model_selection._outlier": [[35, "module-wildboar.model_selection._outlier"]], "repeatedoutliersplit (class in wildboar.model_selection)": [[36, "wildboar.model_selection.RepeatedOutlierSplit"]], "get_n_splits() (wildboar.model_selection.repeatedoutliersplit method)": [[36, "wildboar.model_selection.RepeatedOutlierSplit.get_n_splits"]], "outlier_train_test_split() (in module wildboar.model_selection)": [[36, "wildboar.model_selection.outlier_train_test_split"]], "split() (wildboar.model_selection.repeatedoutliersplit method)": [[36, "wildboar.model_selection.RepeatedOutlierSplit.split"]], "wildboar.model_selection": [[36, "module-wildboar.model_selection"]], "baseattributetransform (class in wildboar.transform._base)": [[37, "wildboar.transform._base.BaseAttributeTransform"]], "fit() (wildboar.transform._base.baseattributetransform method)": [[37, "wildboar.transform._base.BaseAttributeTransform.fit"]], "fit_transform() (wildboar.transform._base.baseattributetransform method)": [[37, "wildboar.transform._base.BaseAttributeTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._base.baseattributetransform method)": [[37, "wildboar.transform._base.BaseAttributeTransform.get_metadata_routing"]], "get_params() (wildboar.transform._base.baseattributetransform method)": [[37, "wildboar.transform._base.BaseAttributeTransform.get_params"]], "set_output() (wildboar.transform._base.baseattributetransform method)": [[37, "wildboar.transform._base.BaseAttributeTransform.set_output"]], "set_params() (wildboar.transform._base.baseattributetransform method)": [[37, "wildboar.transform._base.BaseAttributeTransform.set_params"]], "transform() (wildboar.transform._base.baseattributetransform method)": [[37, "wildboar.transform._base.BaseAttributeTransform.transform"]], "wildboar.transform._base": [[37, "module-wildboar.transform._base"]], "convolve() (in module wildboar.transform._conv)": [[38, "wildboar.transform._conv.convolve"]], "wildboar.transform._conv": [[38, "module-wildboar.transform._conv"]], "difftransform (class in wildboar.transform._diff)": [[39, "wildboar.transform._diff.DiffTransform"]], "fit_transform() (wildboar.transform._diff.difftransform method)": [[39, "wildboar.transform._diff.DiffTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._diff.difftransform method)": [[39, "wildboar.transform._diff.DiffTransform.get_metadata_routing"]], "get_params() (wildboar.transform._diff.difftransform method)": [[39, "wildboar.transform._diff.DiffTransform.get_params"]], "set_output() (wildboar.transform._diff.difftransform method)": [[39, "wildboar.transform._diff.DiffTransform.set_output"]], "set_params() (wildboar.transform._diff.difftransform method)": [[39, "wildboar.transform._diff.DiffTransform.set_params"]], "wildboar.transform._diff": [[39, "module-wildboar.transform._diff"]], "hydratransform (class in wildboar.transform._hydra)": [[40, "wildboar.transform._hydra.HydraTransform"]], "fit() (wildboar.transform._hydra.hydratransform method)": [[40, "wildboar.transform._hydra.HydraTransform.fit"]], "fit_transform() (wildboar.transform._hydra.hydratransform method)": [[40, "wildboar.transform._hydra.HydraTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._hydra.hydratransform method)": [[40, "wildboar.transform._hydra.HydraTransform.get_metadata_routing"]], "get_params() (wildboar.transform._hydra.hydratransform method)": [[40, "wildboar.transform._hydra.HydraTransform.get_params"]], "set_output() (wildboar.transform._hydra.hydratransform method)": [[40, "wildboar.transform._hydra.HydraTransform.set_output"]], "set_params() (wildboar.transform._hydra.hydratransform method)": [[40, "wildboar.transform._hydra.HydraTransform.set_params"]], "transform() (wildboar.transform._hydra.hydratransform method)": [[40, "wildboar.transform._hydra.HydraTransform.transform"]], "wildboar.transform._hydra": [[40, "module-wildboar.transform._hydra"]], "featuretransform (class in wildboar.transform._interval)": [[41, "wildboar.transform._interval.FeatureTransform"]], "intervalmixin (class in wildboar.transform._interval)": [[41, "wildboar.transform._interval.IntervalMixin"]], "intervaltransform (class in wildboar.transform._interval)": [[41, "wildboar.transform._interval.IntervalTransform"]], "fit() (wildboar.transform._interval.featuretransform method)": [[41, "wildboar.transform._interval.FeatureTransform.fit"]], "fit() (wildboar.transform._interval.intervaltransform method)": [[41, "wildboar.transform._interval.IntervalTransform.fit"]], "fit_transform() (wildboar.transform._interval.featuretransform method)": [[41, "wildboar.transform._interval.FeatureTransform.fit_transform"]], "fit_transform() (wildboar.transform._interval.intervaltransform method)": [[41, "wildboar.transform._interval.IntervalTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._interval.featuretransform method)": [[41, "wildboar.transform._interval.FeatureTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform._interval.intervaltransform method)": [[41, "wildboar.transform._interval.IntervalTransform.get_metadata_routing"]], "get_params() (wildboar.transform._interval.featuretransform method)": [[41, "wildboar.transform._interval.FeatureTransform.get_params"]], "get_params() (wildboar.transform._interval.intervaltransform method)": [[41, "wildboar.transform._interval.IntervalTransform.get_params"]], "set_output() (wildboar.transform._interval.featuretransform method)": [[41, "wildboar.transform._interval.FeatureTransform.set_output"]], "set_output() (wildboar.transform._interval.intervaltransform method)": [[41, "wildboar.transform._interval.IntervalTransform.set_output"]], "set_params() (wildboar.transform._interval.featuretransform method)": [[41, "wildboar.transform._interval.FeatureTransform.set_params"]], "set_params() (wildboar.transform._interval.intervaltransform method)": [[41, "wildboar.transform._interval.IntervalTransform.set_params"]], "transform() (wildboar.transform._interval.featuretransform method)": [[41, "wildboar.transform._interval.FeatureTransform.transform"]], "transform() (wildboar.transform._interval.intervaltransform method)": [[41, "wildboar.transform._interval.IntervalTransform.transform"]], "wildboar.transform._interval": [[41, "module-wildboar.transform._interval"]], "matrixprofiletransform (class in wildboar.transform._matrix_profile)": [[42, "wildboar.transform._matrix_profile.MatrixProfileTransform"]], "fit() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[42, "wildboar.transform._matrix_profile.MatrixProfileTransform.fit"]], "fit_transform() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[42, "wildboar.transform._matrix_profile.MatrixProfileTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[42, "wildboar.transform._matrix_profile.MatrixProfileTransform.get_metadata_routing"]], "get_params() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[42, "wildboar.transform._matrix_profile.MatrixProfileTransform.get_params"]], "set_output() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[42, "wildboar.transform._matrix_profile.MatrixProfileTransform.set_output"]], "set_params() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[42, "wildboar.transform._matrix_profile.MatrixProfileTransform.set_params"]], "transform() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[42, "wildboar.transform._matrix_profile.MatrixProfileTransform.transform"]], "wildboar.transform._matrix_profile": [[42, "module-wildboar.transform._matrix_profile"]], "pivotmixin (class in wildboar.transform._pivot)": [[43, "wildboar.transform._pivot.PivotMixin"]], "pivottransform (class in wildboar.transform._pivot)": [[43, "wildboar.transform._pivot.PivotTransform"]], "proximitytransform (class in wildboar.transform._pivot)": [[43, "wildboar.transform._pivot.ProximityTransform"]], "fit() (wildboar.transform._pivot.pivottransform method)": [[43, "wildboar.transform._pivot.PivotTransform.fit"]], "fit_transform() (wildboar.transform._pivot.pivottransform method)": [[43, "wildboar.transform._pivot.PivotTransform.fit_transform"]], "fit_transform() (wildboar.transform._pivot.proximitytransform method)": [[43, "wildboar.transform._pivot.ProximityTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._pivot.pivottransform method)": [[43, "wildboar.transform._pivot.PivotTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform._pivot.proximitytransform method)": [[43, "wildboar.transform._pivot.ProximityTransform.get_metadata_routing"]], "get_params() (wildboar.transform._pivot.pivottransform method)": [[43, "wildboar.transform._pivot.PivotTransform.get_params"]], "get_params() (wildboar.transform._pivot.proximitytransform method)": [[43, "wildboar.transform._pivot.ProximityTransform.get_params"]], "set_output() (wildboar.transform._pivot.pivottransform method)": [[43, "wildboar.transform._pivot.PivotTransform.set_output"]], "set_output() (wildboar.transform._pivot.proximitytransform method)": [[43, "wildboar.transform._pivot.ProximityTransform.set_output"]], "set_params() (wildboar.transform._pivot.pivottransform method)": [[43, "wildboar.transform._pivot.PivotTransform.set_params"]], "set_params() (wildboar.transform._pivot.proximitytransform method)": [[43, "wildboar.transform._pivot.ProximityTransform.set_params"]], "transform() (wildboar.transform._pivot.pivottransform method)": [[43, "wildboar.transform._pivot.PivotTransform.transform"]], "wildboar.transform._pivot": [[43, "module-wildboar.transform._pivot"]], "rocketmixin (class in wildboar.transform._rocket)": [[44, "wildboar.transform._rocket.RocketMixin"]], "rockettransform (class in wildboar.transform._rocket)": [[44, "wildboar.transform._rocket.RocketTransform"]], "fit() (wildboar.transform._rocket.rockettransform method)": [[44, "wildboar.transform._rocket.RocketTransform.fit"]], "fit_transform() (wildboar.transform._rocket.rockettransform method)": [[44, "wildboar.transform._rocket.RocketTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._rocket.rockettransform method)": [[44, "wildboar.transform._rocket.RocketTransform.get_metadata_routing"]], "get_params() (wildboar.transform._rocket.rockettransform method)": [[44, "wildboar.transform._rocket.RocketTransform.get_params"]], "set_output() (wildboar.transform._rocket.rockettransform method)": [[44, "wildboar.transform._rocket.RocketTransform.set_output"]], "set_params() (wildboar.transform._rocket.rockettransform method)": [[44, "wildboar.transform._rocket.RocketTransform.set_params"]], "transform() (wildboar.transform._rocket.rockettransform method)": [[44, "wildboar.transform._rocket.RocketTransform.transform"]], "wildboar.transform._rocket": [[44, "module-wildboar.transform._rocket"]], "binning (class in wildboar.transform._sax)": [[45, "wildboar.transform._sax.Binning"]], "normalbinning (class in wildboar.transform._sax)": [[45, "wildboar.transform._sax.NormalBinning"]], "paa (class in wildboar.transform._sax)": [[45, "wildboar.transform._sax.PAA"]], "sax (class in wildboar.transform._sax)": [[45, "wildboar.transform._sax.SAX"]], "uniformbinning (class in wildboar.transform._sax)": [[45, "wildboar.transform._sax.UniformBinning"]], "fit_transform() (wildboar.transform._sax.paa method)": [[45, "wildboar.transform._sax.PAA.fit_transform"]], "fit_transform() (wildboar.transform._sax.sax method)": [[45, "wildboar.transform._sax.SAX.fit_transform"]], "get_metadata_routing() (wildboar.transform._sax.paa method)": [[45, "wildboar.transform._sax.PAA.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform._sax.sax method)": [[45, "wildboar.transform._sax.SAX.get_metadata_routing"]], "get_params() (wildboar.transform._sax.paa method)": [[45, "wildboar.transform._sax.PAA.get_params"]], "get_params() (wildboar.transform._sax.sax method)": [[45, "wildboar.transform._sax.SAX.get_params"]], "get_thresholds() (wildboar.transform._sax.binning method)": [[45, "wildboar.transform._sax.Binning.get_thresholds"]], "get_thresholds() (wildboar.transform._sax.normalbinning method)": [[45, "wildboar.transform._sax.NormalBinning.get_thresholds"]], "get_thresholds() (wildboar.transform._sax.uniformbinning method)": [[45, "wildboar.transform._sax.UniformBinning.get_thresholds"]], "piecewice_aggregate_approximation() (in module wildboar.transform._sax)": [[45, "wildboar.transform._sax.piecewice_aggregate_approximation"]], "scale() (wildboar.transform._sax.binning method)": [[45, "wildboar.transform._sax.Binning.scale"]], "scale() (wildboar.transform._sax.normalbinning method)": [[45, "wildboar.transform._sax.NormalBinning.scale"]], "scale() (wildboar.transform._sax.uniformbinning method)": [[45, "wildboar.transform._sax.UniformBinning.scale"]], "set_output() (wildboar.transform._sax.paa method)": [[45, "wildboar.transform._sax.PAA.set_output"]], "set_output() (wildboar.transform._sax.sax method)": [[45, "wildboar.transform._sax.SAX.set_output"]], "set_params() (wildboar.transform._sax.paa method)": [[45, "wildboar.transform._sax.PAA.set_params"]], "set_params() (wildboar.transform._sax.sax method)": [[45, "wildboar.transform._sax.SAX.set_params"]], "symbolic_aggregate_approximation() (in module wildboar.transform._sax)": [[45, "wildboar.transform._sax.symbolic_aggregate_approximation"]], "wildboar.transform._sax": [[45, "module-wildboar.transform._sax"]], "randomshapelettransform (class in wildboar.transform._shapelet)": [[46, "wildboar.transform._shapelet.RandomShapeletTransform"]], "shapeletmixin (class in wildboar.transform._shapelet)": [[46, "wildboar.transform._shapelet.ShapeletMixin"]], "fit() (wildboar.transform._shapelet.randomshapelettransform method)": [[46, "wildboar.transform._shapelet.RandomShapeletTransform.fit"]], "fit_transform() (wildboar.transform._shapelet.randomshapelettransform method)": [[46, "wildboar.transform._shapelet.RandomShapeletTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._shapelet.randomshapelettransform method)": [[46, "wildboar.transform._shapelet.RandomShapeletTransform.get_metadata_routing"]], "get_params() (wildboar.transform._shapelet.randomshapelettransform method)": [[46, "wildboar.transform._shapelet.RandomShapeletTransform.get_params"]], "set_output() (wildboar.transform._shapelet.randomshapelettransform method)": [[46, "wildboar.transform._shapelet.RandomShapeletTransform.set_output"]], "set_params() (wildboar.transform._shapelet.randomshapelettransform method)": [[46, "wildboar.transform._shapelet.RandomShapeletTransform.set_params"]], "transform() (wildboar.transform._shapelet.randomshapelettransform method)": [[46, "wildboar.transform._shapelet.RandomShapeletTransform.transform"]], "wildboar.transform._shapelet": [[46, "module-wildboar.transform._shapelet"]], "difftransform (class in wildboar.transform)": [[47, "wildboar.transform.DiffTransform"]], "featuretransform (class in wildboar.transform)": [[47, "wildboar.transform.FeatureTransform"]], "hydratransform (class in wildboar.transform)": [[47, "wildboar.transform.HydraTransform"]], "intervaltransform (class in wildboar.transform)": [[47, "wildboar.transform.IntervalTransform"]], "matrixprofiletransform (class in wildboar.transform)": [[47, "wildboar.transform.MatrixProfileTransform"]], "paa (class in wildboar.transform)": [[47, "wildboar.transform.PAA"]], "pivottransform (class in wildboar.transform)": [[47, "wildboar.transform.PivotTransform"]], "proximitytransform (class in wildboar.transform)": [[47, "wildboar.transform.ProximityTransform"]], "randomshapelettransform (class in wildboar.transform)": [[47, "wildboar.transform.RandomShapeletTransform"]], "rockettransform (class in wildboar.transform)": [[47, "wildboar.transform.RocketTransform"]], "sax (class in wildboar.transform)": [[47, "wildboar.transform.SAX"]], "convolve() (in module wildboar.transform)": [[47, "wildboar.transform.convolve"]], "fit() (wildboar.transform.featuretransform method)": [[47, "wildboar.transform.FeatureTransform.fit"]], "fit() (wildboar.transform.hydratransform method)": [[47, "wildboar.transform.HydraTransform.fit"]], "fit() (wildboar.transform.intervaltransform method)": [[47, "wildboar.transform.IntervalTransform.fit"]], "fit() (wildboar.transform.matrixprofiletransform method)": [[47, "wildboar.transform.MatrixProfileTransform.fit"]], "fit() (wildboar.transform.pivottransform method)": [[47, "wildboar.transform.PivotTransform.fit"]], "fit() (wildboar.transform.randomshapelettransform method)": [[47, "wildboar.transform.RandomShapeletTransform.fit"]], "fit() (wildboar.transform.rockettransform method)": [[47, "wildboar.transform.RocketTransform.fit"]], "fit_transform() (wildboar.transform.difftransform method)": [[47, "wildboar.transform.DiffTransform.fit_transform"]], "fit_transform() (wildboar.transform.featuretransform method)": [[47, "wildboar.transform.FeatureTransform.fit_transform"]], "fit_transform() (wildboar.transform.hydratransform method)": [[47, "wildboar.transform.HydraTransform.fit_transform"]], "fit_transform() (wildboar.transform.intervaltransform method)": [[47, "wildboar.transform.IntervalTransform.fit_transform"]], "fit_transform() (wildboar.transform.matrixprofiletransform method)": [[47, "wildboar.transform.MatrixProfileTransform.fit_transform"]], "fit_transform() (wildboar.transform.paa method)": [[47, "wildboar.transform.PAA.fit_transform"]], "fit_transform() (wildboar.transform.pivottransform method)": [[47, "wildboar.transform.PivotTransform.fit_transform"]], "fit_transform() (wildboar.transform.proximitytransform method)": [[47, "wildboar.transform.ProximityTransform.fit_transform"]], "fit_transform() (wildboar.transform.randomshapelettransform method)": [[47, "wildboar.transform.RandomShapeletTransform.fit_transform"]], "fit_transform() (wildboar.transform.rockettransform method)": [[47, "wildboar.transform.RocketTransform.fit_transform"]], "fit_transform() (wildboar.transform.sax method)": [[47, "wildboar.transform.SAX.fit_transform"]], "get_metadata_routing() (wildboar.transform.difftransform method)": [[47, "wildboar.transform.DiffTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.featuretransform method)": [[47, "wildboar.transform.FeatureTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.hydratransform method)": [[47, "wildboar.transform.HydraTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.intervaltransform method)": [[47, "wildboar.transform.IntervalTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.matrixprofiletransform method)": [[47, "wildboar.transform.MatrixProfileTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.paa method)": [[47, "wildboar.transform.PAA.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.pivottransform method)": [[47, "wildboar.transform.PivotTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.proximitytransform method)": [[47, "wildboar.transform.ProximityTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.randomshapelettransform method)": [[47, "wildboar.transform.RandomShapeletTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.rockettransform method)": [[47, "wildboar.transform.RocketTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.sax method)": [[47, "wildboar.transform.SAX.get_metadata_routing"]], "get_params() (wildboar.transform.difftransform method)": [[47, "wildboar.transform.DiffTransform.get_params"]], "get_params() (wildboar.transform.featuretransform method)": [[47, "wildboar.transform.FeatureTransform.get_params"]], "get_params() (wildboar.transform.hydratransform method)": [[47, "wildboar.transform.HydraTransform.get_params"]], "get_params() (wildboar.transform.intervaltransform method)": [[47, "wildboar.transform.IntervalTransform.get_params"]], "get_params() (wildboar.transform.matrixprofiletransform method)": [[47, "wildboar.transform.MatrixProfileTransform.get_params"]], "get_params() (wildboar.transform.paa method)": [[47, "wildboar.transform.PAA.get_params"]], "get_params() (wildboar.transform.pivottransform method)": [[47, "wildboar.transform.PivotTransform.get_params"]], "get_params() (wildboar.transform.proximitytransform method)": [[47, "wildboar.transform.ProximityTransform.get_params"]], "get_params() (wildboar.transform.randomshapelettransform method)": [[47, "wildboar.transform.RandomShapeletTransform.get_params"]], "get_params() (wildboar.transform.rockettransform method)": [[47, "wildboar.transform.RocketTransform.get_params"]], "get_params() (wildboar.transform.sax method)": [[47, "wildboar.transform.SAX.get_params"]], "piecewice_aggregate_approximation() (in module wildboar.transform)": [[47, "wildboar.transform.piecewice_aggregate_approximation"]], "set_output() (wildboar.transform.difftransform method)": [[47, "wildboar.transform.DiffTransform.set_output"]], "set_output() (wildboar.transform.featuretransform method)": [[47, "wildboar.transform.FeatureTransform.set_output"]], "set_output() (wildboar.transform.hydratransform method)": [[47, "wildboar.transform.HydraTransform.set_output"]], "set_output() (wildboar.transform.intervaltransform method)": [[47, "wildboar.transform.IntervalTransform.set_output"]], "set_output() (wildboar.transform.matrixprofiletransform method)": [[47, "wildboar.transform.MatrixProfileTransform.set_output"]], "set_output() (wildboar.transform.paa method)": [[47, "wildboar.transform.PAA.set_output"]], "set_output() (wildboar.transform.pivottransform method)": [[47, "wildboar.transform.PivotTransform.set_output"]], "set_output() (wildboar.transform.proximitytransform method)": [[47, "wildboar.transform.ProximityTransform.set_output"]], "set_output() (wildboar.transform.randomshapelettransform method)": [[47, "wildboar.transform.RandomShapeletTransform.set_output"]], "set_output() (wildboar.transform.rockettransform method)": [[47, "wildboar.transform.RocketTransform.set_output"]], "set_output() (wildboar.transform.sax method)": [[47, "wildboar.transform.SAX.set_output"]], "set_params() (wildboar.transform.difftransform method)": [[47, "wildboar.transform.DiffTransform.set_params"]], "set_params() (wildboar.transform.featuretransform method)": [[47, "wildboar.transform.FeatureTransform.set_params"]], "set_params() (wildboar.transform.hydratransform method)": [[47, "wildboar.transform.HydraTransform.set_params"]], "set_params() (wildboar.transform.intervaltransform method)": [[47, "wildboar.transform.IntervalTransform.set_params"]], "set_params() (wildboar.transform.matrixprofiletransform method)": [[47, "wildboar.transform.MatrixProfileTransform.set_params"]], "set_params() (wildboar.transform.paa method)": [[47, "wildboar.transform.PAA.set_params"]], "set_params() (wildboar.transform.pivottransform method)": [[47, "wildboar.transform.PivotTransform.set_params"]], "set_params() (wildboar.transform.proximitytransform method)": [[47, "wildboar.transform.ProximityTransform.set_params"]], "set_params() (wildboar.transform.randomshapelettransform method)": [[47, "wildboar.transform.RandomShapeletTransform.set_params"]], "set_params() (wildboar.transform.rockettransform method)": [[47, "wildboar.transform.RocketTransform.set_params"]], "set_params() (wildboar.transform.sax method)": [[47, "wildboar.transform.SAX.set_params"]], "symbolic_aggregate_approximation() (in module wildboar.transform)": [[47, "wildboar.transform.symbolic_aggregate_approximation"]], "transform() (wildboar.transform.featuretransform method)": [[47, "wildboar.transform.FeatureTransform.transform"]], "transform() (wildboar.transform.hydratransform method)": [[47, "wildboar.transform.HydraTransform.transform"]], "transform() (wildboar.transform.intervaltransform method)": [[47, "wildboar.transform.IntervalTransform.transform"]], "transform() (wildboar.transform.matrixprofiletransform method)": [[47, "wildboar.transform.MatrixProfileTransform.transform"]], "transform() (wildboar.transform.pivottransform method)": [[47, "wildboar.transform.PivotTransform.transform"]], "transform() (wildboar.transform.randomshapelettransform method)": [[47, "wildboar.transform.RandomShapeletTransform.transform"]], "transform() (wildboar.transform.rockettransform method)": [[47, "wildboar.transform.RocketTransform.transform"]], "wildboar.transform": [[47, "module-wildboar.transform"]], "basetree (class in wildboar.tree._base)": [[48, "wildboar.tree._base.BaseTree"]], "basetreeclassifier (class in wildboar.tree._base)": [[48, "wildboar.tree._base.BaseTreeClassifier"]], "basetreeregressor (class in wildboar.tree._base)": [[48, "wildboar.tree._base.BaseTreeRegressor"]], "apply() (wildboar.tree._base.basetree method)": [[48, "wildboar.tree._base.BaseTree.apply"]], "apply() (wildboar.tree._base.basetreeclassifier method)": [[48, "wildboar.tree._base.BaseTreeClassifier.apply"]], "apply() (wildboar.tree._base.basetreeregressor method)": [[48, "wildboar.tree._base.BaseTreeRegressor.apply"]], "decision_path() (wildboar.tree._base.basetree method)": [[48, "wildboar.tree._base.BaseTree.decision_path"]], "decision_path() (wildboar.tree._base.basetreeclassifier method)": [[48, "wildboar.tree._base.BaseTreeClassifier.decision_path"]], "decision_path() (wildboar.tree._base.basetreeregressor method)": [[48, "wildboar.tree._base.BaseTreeRegressor.decision_path"]], "fit() (wildboar.tree._base.basetreeclassifier method)": [[48, "wildboar.tree._base.BaseTreeClassifier.fit"]], "fit() (wildboar.tree._base.basetreeregressor method)": [[48, "wildboar.tree._base.BaseTreeRegressor.fit"]], "get_metadata_routing() (wildboar.tree._base.basetree method)": [[48, "wildboar.tree._base.BaseTree.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._base.basetreeclassifier method)": [[48, "wildboar.tree._base.BaseTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._base.basetreeregressor method)": [[48, "wildboar.tree._base.BaseTreeRegressor.get_metadata_routing"]], "get_params() (wildboar.tree._base.basetree method)": [[48, "wildboar.tree._base.BaseTree.get_params"]], "get_params() (wildboar.tree._base.basetreeclassifier method)": [[48, "wildboar.tree._base.BaseTreeClassifier.get_params"]], "get_params() (wildboar.tree._base.basetreeregressor method)": [[48, "wildboar.tree._base.BaseTreeRegressor.get_params"]], "predict() (wildboar.tree._base.basetreeclassifier method)": [[48, "wildboar.tree._base.BaseTreeClassifier.predict"]], "predict() (wildboar.tree._base.basetreeregressor method)": [[48, "wildboar.tree._base.BaseTreeRegressor.predict"]], "predict_proba() (wildboar.tree._base.basetreeclassifier method)": [[48, "wildboar.tree._base.BaseTreeClassifier.predict_proba"]], "score() (wildboar.tree._base.basetreeclassifier method)": [[48, "wildboar.tree._base.BaseTreeClassifier.score"]], "score() (wildboar.tree._base.basetreeregressor method)": [[48, "wildboar.tree._base.BaseTreeRegressor.score"]], "set_params() (wildboar.tree._base.basetree method)": [[48, "wildboar.tree._base.BaseTree.set_params"]], "set_params() (wildboar.tree._base.basetreeclassifier method)": [[48, "wildboar.tree._base.BaseTreeClassifier.set_params"]], "set_params() (wildboar.tree._base.basetreeregressor method)": [[48, "wildboar.tree._base.BaseTreeRegressor.set_params"]], "wildboar.tree._base": [[48, "module-wildboar.tree._base"]], "proximitytreeclassifier (class in wildboar.tree._ptree)": [[49, "wildboar.tree._ptree.ProximityTreeClassifier"]], "apply() (wildboar.tree._ptree.proximitytreeclassifier method)": [[49, "wildboar.tree._ptree.ProximityTreeClassifier.apply"]], "decision_path() (wildboar.tree._ptree.proximitytreeclassifier method)": [[49, "wildboar.tree._ptree.ProximityTreeClassifier.decision_path"]], "fit() (wildboar.tree._ptree.proximitytreeclassifier method)": [[49, "wildboar.tree._ptree.ProximityTreeClassifier.fit"]], "get_metadata_routing() (wildboar.tree._ptree.proximitytreeclassifier method)": [[49, "wildboar.tree._ptree.ProximityTreeClassifier.get_metadata_routing"]], "get_params() (wildboar.tree._ptree.proximitytreeclassifier method)": [[49, "wildboar.tree._ptree.ProximityTreeClassifier.get_params"]], "predict() (wildboar.tree._ptree.proximitytreeclassifier method)": [[49, "wildboar.tree._ptree.ProximityTreeClassifier.predict"]], "predict_proba() (wildboar.tree._ptree.proximitytreeclassifier method)": [[49, "wildboar.tree._ptree.ProximityTreeClassifier.predict_proba"]], "score() (wildboar.tree._ptree.proximitytreeclassifier method)": [[49, "wildboar.tree._ptree.ProximityTreeClassifier.score"]], "set_params() (wildboar.tree._ptree.proximitytreeclassifier method)": [[49, "wildboar.tree._ptree.ProximityTreeClassifier.set_params"]], "wildboar.tree._ptree": [[49, "module-wildboar.tree._ptree"]], "basefeaturetreeclassifier (class in wildboar.tree._tree)": [[50, "wildboar.tree._tree.BaseFeatureTreeClassifier"]], "basefeaturetreeregressor (class in wildboar.tree._tree)": [[50, "wildboar.tree._tree.BaseFeatureTreeRegressor"]], "extrashapelettreeclassifier (class in wildboar.tree._tree)": [[50, "wildboar.tree._tree.ExtraShapeletTreeClassifier"]], "extrashapelettreeregressor (class in wildboar.tree._tree)": [[50, "wildboar.tree._tree.ExtraShapeletTreeRegressor"]], "intervaltreeclassifier (class in wildboar.tree._tree)": [[50, "wildboar.tree._tree.IntervalTreeClassifier"]], "intervaltreeregressor (class in wildboar.tree._tree)": [[50, "wildboar.tree._tree.IntervalTreeRegressor"]], "pivottreeclassifier (class in wildboar.tree._tree)": [[50, "wildboar.tree._tree.PivotTreeClassifier"]], "rockettreeclassifier (class in wildboar.tree._tree)": [[50, "wildboar.tree._tree.RocketTreeClassifier"]], "rockettreeregressor (class in wildboar.tree._tree)": [[50, "wildboar.tree._tree.RocketTreeRegressor"]], "shapelettreeclassifier (class in wildboar.tree._tree)": [[50, "wildboar.tree._tree.ShapeletTreeClassifier"]], "shapelettreeregressor (class in wildboar.tree._tree)": [[50, "wildboar.tree._tree.ShapeletTreeRegressor"]], "apply() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[50, "wildboar.tree._tree.BaseFeatureTreeClassifier.apply"]], "apply() (wildboar.tree._tree.basefeaturetreeregressor method)": [[50, "wildboar.tree._tree.BaseFeatureTreeRegressor.apply"]], "apply() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[50, "wildboar.tree._tree.ExtraShapeletTreeClassifier.apply"]], "apply() (wildboar.tree._tree.extrashapelettreeregressor method)": [[50, "wildboar.tree._tree.ExtraShapeletTreeRegressor.apply"]], "apply() (wildboar.tree._tree.intervaltreeclassifier method)": [[50, "wildboar.tree._tree.IntervalTreeClassifier.apply"]], "apply() (wildboar.tree._tree.intervaltreeregressor method)": [[50, "wildboar.tree._tree.IntervalTreeRegressor.apply"]], "apply() (wildboar.tree._tree.pivottreeclassifier method)": [[50, "wildboar.tree._tree.PivotTreeClassifier.apply"]], "apply() (wildboar.tree._tree.rockettreeclassifier method)": [[50, "wildboar.tree._tree.RocketTreeClassifier.apply"]], "apply() (wildboar.tree._tree.rockettreeregressor method)": [[50, "wildboar.tree._tree.RocketTreeRegressor.apply"]], "apply() (wildboar.tree._tree.shapelettreeclassifier method)": [[50, "wildboar.tree._tree.ShapeletTreeClassifier.apply"]], "apply() (wildboar.tree._tree.shapelettreeregressor method)": [[50, "wildboar.tree._tree.ShapeletTreeRegressor.apply"]], "decision_path() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[50, "wildboar.tree._tree.BaseFeatureTreeClassifier.decision_path"]], "decision_path() (wildboar.tree._tree.basefeaturetreeregressor method)": [[50, "wildboar.tree._tree.BaseFeatureTreeRegressor.decision_path"]], "decision_path() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[50, "wildboar.tree._tree.ExtraShapeletTreeClassifier.decision_path"]], "decision_path() (wildboar.tree._tree.extrashapelettreeregressor method)": [[50, "wildboar.tree._tree.ExtraShapeletTreeRegressor.decision_path"]], "decision_path() (wildboar.tree._tree.intervaltreeclassifier method)": [[50, "wildboar.tree._tree.IntervalTreeClassifier.decision_path"]], "decision_path() (wildboar.tree._tree.intervaltreeregressor method)": [[50, "wildboar.tree._tree.IntervalTreeRegressor.decision_path"]], "decision_path() (wildboar.tree._tree.pivottreeclassifier method)": [[50, "wildboar.tree._tree.PivotTreeClassifier.decision_path"]], "decision_path() (wildboar.tree._tree.rockettreeclassifier method)": [[50, "wildboar.tree._tree.RocketTreeClassifier.decision_path"]], "decision_path() (wildboar.tree._tree.rockettreeregressor method)": [[50, "wildboar.tree._tree.RocketTreeRegressor.decision_path"]], "decision_path() (wildboar.tree._tree.shapelettreeclassifier method)": [[50, "wildboar.tree._tree.ShapeletTreeClassifier.decision_path"]], "decision_path() (wildboar.tree._tree.shapelettreeregressor method)": [[50, "wildboar.tree._tree.ShapeletTreeRegressor.decision_path"]], "fit() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[50, "wildboar.tree._tree.BaseFeatureTreeClassifier.fit"]], "fit() (wildboar.tree._tree.basefeaturetreeregressor method)": [[50, "wildboar.tree._tree.BaseFeatureTreeRegressor.fit"]], "fit() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[50, "wildboar.tree._tree.ExtraShapeletTreeClassifier.fit"]], "fit() (wildboar.tree._tree.extrashapelettreeregressor method)": [[50, "wildboar.tree._tree.ExtraShapeletTreeRegressor.fit"]], "fit() (wildboar.tree._tree.intervaltreeclassifier method)": [[50, "wildboar.tree._tree.IntervalTreeClassifier.fit"]], "fit() (wildboar.tree._tree.intervaltreeregressor method)": [[50, "wildboar.tree._tree.IntervalTreeRegressor.fit"]], "fit() (wildboar.tree._tree.pivottreeclassifier method)": [[50, "wildboar.tree._tree.PivotTreeClassifier.fit"]], "fit() (wildboar.tree._tree.rockettreeclassifier method)": [[50, "wildboar.tree._tree.RocketTreeClassifier.fit"]], "fit() (wildboar.tree._tree.rockettreeregressor method)": [[50, "wildboar.tree._tree.RocketTreeRegressor.fit"]], "fit() (wildboar.tree._tree.shapelettreeclassifier method)": [[50, "wildboar.tree._tree.ShapeletTreeClassifier.fit"]], "fit() (wildboar.tree._tree.shapelettreeregressor method)": [[50, "wildboar.tree._tree.ShapeletTreeRegressor.fit"]], "get_metadata_routing() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[50, "wildboar.tree._tree.BaseFeatureTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.basefeaturetreeregressor method)": [[50, "wildboar.tree._tree.BaseFeatureTreeRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[50, "wildboar.tree._tree.ExtraShapeletTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.extrashapelettreeregressor method)": [[50, "wildboar.tree._tree.ExtraShapeletTreeRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.intervaltreeclassifier method)": [[50, "wildboar.tree._tree.IntervalTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.intervaltreeregressor method)": [[50, "wildboar.tree._tree.IntervalTreeRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.pivottreeclassifier method)": [[50, "wildboar.tree._tree.PivotTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.rockettreeclassifier method)": [[50, "wildboar.tree._tree.RocketTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.rockettreeregressor method)": [[50, "wildboar.tree._tree.RocketTreeRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.shapelettreeclassifier method)": [[50, "wildboar.tree._tree.ShapeletTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.shapelettreeregressor method)": [[50, "wildboar.tree._tree.ShapeletTreeRegressor.get_metadata_routing"]], "get_params() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[50, "wildboar.tree._tree.BaseFeatureTreeClassifier.get_params"]], "get_params() (wildboar.tree._tree.basefeaturetreeregressor method)": [[50, "wildboar.tree._tree.BaseFeatureTreeRegressor.get_params"]], "get_params() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[50, "wildboar.tree._tree.ExtraShapeletTreeClassifier.get_params"]], "get_params() (wildboar.tree._tree.extrashapelettreeregressor method)": [[50, "wildboar.tree._tree.ExtraShapeletTreeRegressor.get_params"]], "get_params() (wildboar.tree._tree.intervaltreeclassifier method)": [[50, "wildboar.tree._tree.IntervalTreeClassifier.get_params"]], "get_params() (wildboar.tree._tree.intervaltreeregressor method)": [[50, "wildboar.tree._tree.IntervalTreeRegressor.get_params"]], "get_params() (wildboar.tree._tree.pivottreeclassifier method)": [[50, "wildboar.tree._tree.PivotTreeClassifier.get_params"]], "get_params() (wildboar.tree._tree.rockettreeclassifier method)": [[50, "wildboar.tree._tree.RocketTreeClassifier.get_params"]], "get_params() (wildboar.tree._tree.rockettreeregressor method)": [[50, "wildboar.tree._tree.RocketTreeRegressor.get_params"]], "get_params() (wildboar.tree._tree.shapelettreeclassifier method)": [[50, "wildboar.tree._tree.ShapeletTreeClassifier.get_params"]], "get_params() (wildboar.tree._tree.shapelettreeregressor method)": [[50, "wildboar.tree._tree.ShapeletTreeRegressor.get_params"]], "predict() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[50, "wildboar.tree._tree.BaseFeatureTreeClassifier.predict"]], "predict() (wildboar.tree._tree.basefeaturetreeregressor method)": [[50, "wildboar.tree._tree.BaseFeatureTreeRegressor.predict"]], "predict() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[50, "wildboar.tree._tree.ExtraShapeletTreeClassifier.predict"]], "predict() (wildboar.tree._tree.extrashapelettreeregressor method)": [[50, "wildboar.tree._tree.ExtraShapeletTreeRegressor.predict"]], "predict() (wildboar.tree._tree.intervaltreeclassifier method)": [[50, "wildboar.tree._tree.IntervalTreeClassifier.predict"]], "predict() (wildboar.tree._tree.intervaltreeregressor method)": [[50, "wildboar.tree._tree.IntervalTreeRegressor.predict"]], "predict() (wildboar.tree._tree.pivottreeclassifier method)": [[50, "wildboar.tree._tree.PivotTreeClassifier.predict"]], "predict() (wildboar.tree._tree.rockettreeclassifier method)": [[50, "wildboar.tree._tree.RocketTreeClassifier.predict"]], "predict() (wildboar.tree._tree.rockettreeregressor method)": [[50, "wildboar.tree._tree.RocketTreeRegressor.predict"]], "predict() (wildboar.tree._tree.shapelettreeclassifier method)": [[50, "wildboar.tree._tree.ShapeletTreeClassifier.predict"]], "predict() (wildboar.tree._tree.shapelettreeregressor method)": [[50, "wildboar.tree._tree.ShapeletTreeRegressor.predict"]], "predict_proba() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[50, "wildboar.tree._tree.BaseFeatureTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[50, "wildboar.tree._tree.ExtraShapeletTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree._tree.intervaltreeclassifier method)": [[50, "wildboar.tree._tree.IntervalTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree._tree.pivottreeclassifier method)": [[50, "wildboar.tree._tree.PivotTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree._tree.rockettreeclassifier method)": [[50, "wildboar.tree._tree.RocketTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree._tree.shapelettreeclassifier method)": [[50, "wildboar.tree._tree.ShapeletTreeClassifier.predict_proba"]], "score() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[50, "wildboar.tree._tree.BaseFeatureTreeClassifier.score"]], "score() (wildboar.tree._tree.basefeaturetreeregressor method)": [[50, "wildboar.tree._tree.BaseFeatureTreeRegressor.score"]], "score() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[50, "wildboar.tree._tree.ExtraShapeletTreeClassifier.score"]], "score() (wildboar.tree._tree.extrashapelettreeregressor method)": [[50, "wildboar.tree._tree.ExtraShapeletTreeRegressor.score"]], "score() (wildboar.tree._tree.intervaltreeclassifier method)": [[50, "wildboar.tree._tree.IntervalTreeClassifier.score"]], "score() (wildboar.tree._tree.intervaltreeregressor method)": [[50, "wildboar.tree._tree.IntervalTreeRegressor.score"]], "score() (wildboar.tree._tree.pivottreeclassifier method)": [[50, "wildboar.tree._tree.PivotTreeClassifier.score"]], "score() (wildboar.tree._tree.rockettreeclassifier method)": [[50, "wildboar.tree._tree.RocketTreeClassifier.score"]], "score() (wildboar.tree._tree.rockettreeregressor method)": [[50, "wildboar.tree._tree.RocketTreeRegressor.score"]], "score() (wildboar.tree._tree.shapelettreeclassifier method)": [[50, "wildboar.tree._tree.ShapeletTreeClassifier.score"]], "score() (wildboar.tree._tree.shapelettreeregressor method)": [[50, "wildboar.tree._tree.ShapeletTreeRegressor.score"]], "set_params() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[50, "wildboar.tree._tree.BaseFeatureTreeClassifier.set_params"]], "set_params() (wildboar.tree._tree.basefeaturetreeregressor method)": [[50, "wildboar.tree._tree.BaseFeatureTreeRegressor.set_params"]], "set_params() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[50, "wildboar.tree._tree.ExtraShapeletTreeClassifier.set_params"]], "set_params() (wildboar.tree._tree.extrashapelettreeregressor method)": [[50, "wildboar.tree._tree.ExtraShapeletTreeRegressor.set_params"]], "set_params() (wildboar.tree._tree.intervaltreeclassifier method)": [[50, "wildboar.tree._tree.IntervalTreeClassifier.set_params"]], "set_params() (wildboar.tree._tree.intervaltreeregressor method)": [[50, "wildboar.tree._tree.IntervalTreeRegressor.set_params"]], "set_params() (wildboar.tree._tree.pivottreeclassifier method)": [[50, "wildboar.tree._tree.PivotTreeClassifier.set_params"]], "set_params() (wildboar.tree._tree.rockettreeclassifier method)": [[50, "wildboar.tree._tree.RocketTreeClassifier.set_params"]], "set_params() (wildboar.tree._tree.rockettreeregressor method)": [[50, "wildboar.tree._tree.RocketTreeRegressor.set_params"]], "set_params() (wildboar.tree._tree.shapelettreeclassifier method)": [[50, "wildboar.tree._tree.ShapeletTreeClassifier.set_params"]], "set_params() (wildboar.tree._tree.shapelettreeregressor method)": [[50, "wildboar.tree._tree.ShapeletTreeRegressor.set_params"]], "wildboar.tree._tree": [[50, "module-wildboar.tree._tree"]], "extrashapelettreeclassifier (class in wildboar.tree)": [[51, "wildboar.tree.ExtraShapeletTreeClassifier"]], "extrashapelettreeregressor (class in wildboar.tree)": [[51, "wildboar.tree.ExtraShapeletTreeRegressor"]], "intervaltreeclassifier (class in wildboar.tree)": [[51, "wildboar.tree.IntervalTreeClassifier"]], "intervaltreeregressor (class in wildboar.tree)": [[51, "wildboar.tree.IntervalTreeRegressor"]], "pivottreeclassifier (class in wildboar.tree)": [[51, "wildboar.tree.PivotTreeClassifier"]], "proximitytreeclassifier (class in wildboar.tree)": [[51, "wildboar.tree.ProximityTreeClassifier"]], "rockettreeclassifier (class in wildboar.tree)": [[51, "wildboar.tree.RocketTreeClassifier"]], "rockettreeregressor (class in wildboar.tree)": [[51, "wildboar.tree.RocketTreeRegressor"]], "shapelettreeclassifier (class in wildboar.tree)": [[51, "wildboar.tree.ShapeletTreeClassifier"]], "shapelettreeregressor (class in wildboar.tree)": [[51, "wildboar.tree.ShapeletTreeRegressor"]], "apply() (wildboar.tree.extrashapelettreeclassifier method)": [[51, "wildboar.tree.ExtraShapeletTreeClassifier.apply"]], "apply() (wildboar.tree.extrashapelettreeregressor method)": [[51, "wildboar.tree.ExtraShapeletTreeRegressor.apply"]], "apply() (wildboar.tree.intervaltreeclassifier method)": [[51, "wildboar.tree.IntervalTreeClassifier.apply"]], "apply() (wildboar.tree.intervaltreeregressor method)": [[51, "wildboar.tree.IntervalTreeRegressor.apply"]], "apply() (wildboar.tree.pivottreeclassifier method)": [[51, "wildboar.tree.PivotTreeClassifier.apply"]], "apply() (wildboar.tree.proximitytreeclassifier method)": [[51, "wildboar.tree.ProximityTreeClassifier.apply"]], "apply() (wildboar.tree.rockettreeclassifier method)": [[51, "wildboar.tree.RocketTreeClassifier.apply"]], "apply() (wildboar.tree.rockettreeregressor method)": [[51, "wildboar.tree.RocketTreeRegressor.apply"]], "apply() (wildboar.tree.shapelettreeclassifier method)": [[51, "wildboar.tree.ShapeletTreeClassifier.apply"]], "apply() (wildboar.tree.shapelettreeregressor method)": [[51, "wildboar.tree.ShapeletTreeRegressor.apply"]], "decision_path() (wildboar.tree.extrashapelettreeclassifier method)": [[51, "wildboar.tree.ExtraShapeletTreeClassifier.decision_path"]], "decision_path() (wildboar.tree.extrashapelettreeregressor method)": [[51, "wildboar.tree.ExtraShapeletTreeRegressor.decision_path"]], "decision_path() (wildboar.tree.intervaltreeclassifier method)": [[51, "wildboar.tree.IntervalTreeClassifier.decision_path"]], "decision_path() (wildboar.tree.intervaltreeregressor method)": [[51, "wildboar.tree.IntervalTreeRegressor.decision_path"]], "decision_path() (wildboar.tree.pivottreeclassifier method)": [[51, "wildboar.tree.PivotTreeClassifier.decision_path"]], "decision_path() (wildboar.tree.proximitytreeclassifier method)": [[51, "wildboar.tree.ProximityTreeClassifier.decision_path"]], "decision_path() (wildboar.tree.rockettreeclassifier method)": [[51, "wildboar.tree.RocketTreeClassifier.decision_path"]], "decision_path() (wildboar.tree.rockettreeregressor method)": [[51, "wildboar.tree.RocketTreeRegressor.decision_path"]], "decision_path() (wildboar.tree.shapelettreeclassifier method)": [[51, "wildboar.tree.ShapeletTreeClassifier.decision_path"]], "decision_path() (wildboar.tree.shapelettreeregressor method)": [[51, "wildboar.tree.ShapeletTreeRegressor.decision_path"]], "fit() (wildboar.tree.extrashapelettreeclassifier method)": [[51, "wildboar.tree.ExtraShapeletTreeClassifier.fit"]], "fit() (wildboar.tree.extrashapelettreeregressor method)": [[51, "wildboar.tree.ExtraShapeletTreeRegressor.fit"]], "fit() (wildboar.tree.intervaltreeclassifier method)": [[51, "wildboar.tree.IntervalTreeClassifier.fit"]], "fit() (wildboar.tree.intervaltreeregressor method)": [[51, "wildboar.tree.IntervalTreeRegressor.fit"]], "fit() (wildboar.tree.pivottreeclassifier method)": [[51, "wildboar.tree.PivotTreeClassifier.fit"]], "fit() (wildboar.tree.proximitytreeclassifier method)": [[51, "wildboar.tree.ProximityTreeClassifier.fit"]], "fit() (wildboar.tree.rockettreeclassifier method)": [[51, "wildboar.tree.RocketTreeClassifier.fit"]], "fit() (wildboar.tree.rockettreeregressor method)": [[51, "wildboar.tree.RocketTreeRegressor.fit"]], "fit() (wildboar.tree.shapelettreeclassifier method)": [[51, "wildboar.tree.ShapeletTreeClassifier.fit"]], "fit() (wildboar.tree.shapelettreeregressor method)": [[51, "wildboar.tree.ShapeletTreeRegressor.fit"]], "get_metadata_routing() (wildboar.tree.extrashapelettreeclassifier method)": [[51, "wildboar.tree.ExtraShapeletTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.extrashapelettreeregressor method)": [[51, "wildboar.tree.ExtraShapeletTreeRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.intervaltreeclassifier method)": [[51, "wildboar.tree.IntervalTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.intervaltreeregressor method)": [[51, "wildboar.tree.IntervalTreeRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.pivottreeclassifier method)": [[51, "wildboar.tree.PivotTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.proximitytreeclassifier method)": [[51, "wildboar.tree.ProximityTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.rockettreeclassifier method)": [[51, "wildboar.tree.RocketTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.rockettreeregressor method)": [[51, "wildboar.tree.RocketTreeRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.shapelettreeclassifier method)": [[51, "wildboar.tree.ShapeletTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.shapelettreeregressor method)": [[51, "wildboar.tree.ShapeletTreeRegressor.get_metadata_routing"]], "get_params() (wildboar.tree.extrashapelettreeclassifier method)": [[51, "wildboar.tree.ExtraShapeletTreeClassifier.get_params"]], "get_params() (wildboar.tree.extrashapelettreeregressor method)": [[51, "wildboar.tree.ExtraShapeletTreeRegressor.get_params"]], "get_params() (wildboar.tree.intervaltreeclassifier method)": [[51, "wildboar.tree.IntervalTreeClassifier.get_params"]], "get_params() (wildboar.tree.intervaltreeregressor method)": [[51, "wildboar.tree.IntervalTreeRegressor.get_params"]], "get_params() (wildboar.tree.pivottreeclassifier method)": [[51, "wildboar.tree.PivotTreeClassifier.get_params"]], "get_params() (wildboar.tree.proximitytreeclassifier method)": [[51, "wildboar.tree.ProximityTreeClassifier.get_params"]], "get_params() (wildboar.tree.rockettreeclassifier method)": [[51, "wildboar.tree.RocketTreeClassifier.get_params"]], "get_params() (wildboar.tree.rockettreeregressor method)": [[51, "wildboar.tree.RocketTreeRegressor.get_params"]], "get_params() (wildboar.tree.shapelettreeclassifier method)": [[51, "wildboar.tree.ShapeletTreeClassifier.get_params"]], "get_params() (wildboar.tree.shapelettreeregressor method)": [[51, "wildboar.tree.ShapeletTreeRegressor.get_params"]], "predict() (wildboar.tree.extrashapelettreeclassifier method)": [[51, "wildboar.tree.ExtraShapeletTreeClassifier.predict"]], "predict() (wildboar.tree.extrashapelettreeregressor method)": [[51, "wildboar.tree.ExtraShapeletTreeRegressor.predict"]], "predict() (wildboar.tree.intervaltreeclassifier method)": [[51, "wildboar.tree.IntervalTreeClassifier.predict"]], "predict() (wildboar.tree.intervaltreeregressor method)": [[51, "wildboar.tree.IntervalTreeRegressor.predict"]], "predict() (wildboar.tree.pivottreeclassifier method)": [[51, "wildboar.tree.PivotTreeClassifier.predict"]], "predict() (wildboar.tree.proximitytreeclassifier method)": [[51, "wildboar.tree.ProximityTreeClassifier.predict"]], "predict() (wildboar.tree.rockettreeclassifier method)": [[51, "wildboar.tree.RocketTreeClassifier.predict"]], "predict() (wildboar.tree.rockettreeregressor method)": [[51, "wildboar.tree.RocketTreeRegressor.predict"]], "predict() (wildboar.tree.shapelettreeclassifier method)": [[51, "wildboar.tree.ShapeletTreeClassifier.predict"]], "predict() (wildboar.tree.shapelettreeregressor method)": [[51, "wildboar.tree.ShapeletTreeRegressor.predict"]], "predict_proba() (wildboar.tree.extrashapelettreeclassifier method)": [[51, "wildboar.tree.ExtraShapeletTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree.intervaltreeclassifier method)": [[51, "wildboar.tree.IntervalTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree.pivottreeclassifier method)": [[51, "wildboar.tree.PivotTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree.proximitytreeclassifier method)": [[51, "wildboar.tree.ProximityTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree.rockettreeclassifier method)": [[51, "wildboar.tree.RocketTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree.shapelettreeclassifier method)": [[51, "wildboar.tree.ShapeletTreeClassifier.predict_proba"]], "score() (wildboar.tree.extrashapelettreeclassifier method)": [[51, "wildboar.tree.ExtraShapeletTreeClassifier.score"]], "score() (wildboar.tree.extrashapelettreeregressor method)": [[51, "wildboar.tree.ExtraShapeletTreeRegressor.score"]], "score() (wildboar.tree.intervaltreeclassifier method)": [[51, "wildboar.tree.IntervalTreeClassifier.score"]], "score() (wildboar.tree.intervaltreeregressor method)": [[51, "wildboar.tree.IntervalTreeRegressor.score"]], "score() (wildboar.tree.pivottreeclassifier method)": [[51, "wildboar.tree.PivotTreeClassifier.score"]], "score() (wildboar.tree.proximitytreeclassifier method)": [[51, "wildboar.tree.ProximityTreeClassifier.score"]], "score() (wildboar.tree.rockettreeclassifier method)": [[51, "wildboar.tree.RocketTreeClassifier.score"]], "score() (wildboar.tree.rockettreeregressor method)": [[51, "wildboar.tree.RocketTreeRegressor.score"]], "score() (wildboar.tree.shapelettreeclassifier method)": [[51, "wildboar.tree.ShapeletTreeClassifier.score"]], "score() (wildboar.tree.shapelettreeregressor method)": [[51, "wildboar.tree.ShapeletTreeRegressor.score"]], "set_params() (wildboar.tree.extrashapelettreeclassifier method)": [[51, "wildboar.tree.ExtraShapeletTreeClassifier.set_params"]], "set_params() (wildboar.tree.extrashapelettreeregressor method)": [[51, "wildboar.tree.ExtraShapeletTreeRegressor.set_params"]], "set_params() (wildboar.tree.intervaltreeclassifier method)": [[51, "wildboar.tree.IntervalTreeClassifier.set_params"]], "set_params() (wildboar.tree.intervaltreeregressor method)": [[51, "wildboar.tree.IntervalTreeRegressor.set_params"]], "set_params() (wildboar.tree.pivottreeclassifier method)": [[51, "wildboar.tree.PivotTreeClassifier.set_params"]], "set_params() (wildboar.tree.proximitytreeclassifier method)": [[51, "wildboar.tree.ProximityTreeClassifier.set_params"]], "set_params() (wildboar.tree.rockettreeclassifier method)": [[51, "wildboar.tree.RocketTreeClassifier.set_params"]], "set_params() (wildboar.tree.rockettreeregressor method)": [[51, "wildboar.tree.RocketTreeRegressor.set_params"]], "set_params() (wildboar.tree.shapelettreeclassifier method)": [[51, "wildboar.tree.ShapeletTreeClassifier.set_params"]], "set_params() (wildboar.tree.shapelettreeregressor method)": [[51, "wildboar.tree.ShapeletTreeRegressor.set_params"]], "wildboar.tree": [[51, "module-wildboar.tree"]], "run_in_parallel() (in module wildboar.utils._parallel)": [[52, "wildboar.utils._parallel.run_in_parallel"]], "wildboar.utils._parallel": [[52, "module-wildboar.utils._parallel"]], "assert_exhaustive_parameter_checks() (in module wildboar.utils._testing)": [[53, "wildboar.utils._testing.assert_exhaustive_parameter_checks"]], "assert_parameter_checks() (in module wildboar.utils._testing)": [[53, "wildboar.utils._testing.assert_parameter_checks"]], "wildboar.utils._testing": [[53, "module-wildboar.utils._testing"]], "array_or_scalar() (in module wildboar.utils.decorators)": [[54, "wildboar.utils.decorators.array_or_scalar"]], "singleton() (in module wildboar.utils.decorators)": [[54, "wildboar.utils.decorators.singleton"]], "unstable() (in module wildboar.utils.decorators)": [[54, "wildboar.utils.decorators.unstable"]], "wildboar.utils.decorators": [[54, "module-wildboar.utils.decorators"]], "check_estimator() (in module wildboar.utils.estimator_checks)": [[55, "wildboar.utils.estimator_checks.check_estimator"]], "wildboar.utils.estimator_checks": [[55, "module-wildboar.utils.estimator_checks"]], "check_x_y() (in module wildboar.utils)": [[56, "wildboar.utils.check_X_y"]], "check_array() (in module wildboar.utils)": [[56, "wildboar.utils.check_array"]], "wildboar.utils": [[56, "module-wildboar.utils"]], "midpointnormalize (class in wildboar.utils.plot)": [[57, "wildboar.utils.plot.MidpointNormalize"]], "autoscale() (wildboar.utils.plot.midpointnormalize method)": [[57, "wildboar.utils.plot.MidpointNormalize.autoscale"]], "autoscale_none() (wildboar.utils.plot.midpointnormalize method)": [[57, "wildboar.utils.plot.MidpointNormalize.autoscale_None"]], "plot_frequency_domain() (in module wildboar.utils.plot)": [[57, "wildboar.utils.plot.plot_frequency_domain"]], "plot_time_domain() (in module wildboar.utils.plot)": [[57, "wildboar.utils.plot.plot_time_domain"]], "process_value() (wildboar.utils.plot.midpointnormalize static method)": [[57, "wildboar.utils.plot.MidpointNormalize.process_value"]], "scaled() (wildboar.utils.plot.midpointnormalize method)": [[57, "wildboar.utils.plot.MidpointNormalize.scaled"]], "wildboar.utils.plot": [[57, "module-wildboar.utils.plot"]], "check_x_y() (in module wildboar.utils.validation)": [[58, "wildboar.utils.validation.check_X_y"]], "check_array() (in module wildboar.utils.validation)": [[58, "wildboar.utils.validation.check_array"]], "check_classification_targets() (in module wildboar.utils.validation)": [[58, "wildboar.utils.validation.check_classification_targets"]], "check_option() (in module wildboar.utils.validation)": [[58, "wildboar.utils.validation.check_option"]], "check_type() (in module wildboar.utils.validation)": [[58, "wildboar.utils.validation.check_type"]], "wildboar.utils.validation": [[58, "module-wildboar.utils.validation"]], "get_variable_length() (in module wildboar.utils.variable_len)": [[59, "wildboar.utils.variable_len.get_variable_length"]], "is_end_of_series() (in module wildboar.utils.variable_len)": [[59, "wildboar.utils.variable_len.is_end_of_series"]], "is_variable_length() (in module wildboar.utils.variable_len)": [[59, "wildboar.utils.variable_len.is_variable_length"]], "wildboar.utils.variable_len": [[59, "module-wildboar.utils.variable_len"]], "wildboar.version": [[60, "module-wildboar.version"]]}})