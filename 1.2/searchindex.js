Search.setIndex({"docnames": ["api/index", "api/wildboar/annotate/_motifs/index", "api/wildboar/annotate/_segment/index", "api/wildboar/annotate/index", "api/wildboar/base/index", "api/wildboar/datasets/_filter/index", "api/wildboar/datasets/_repository/index", "api/wildboar/datasets/index", "api/wildboar/datasets/outlier/index", "api/wildboar/datasets/preprocess/index", "api/wildboar/distance/_distance/index", "api/wildboar/distance/_manifold/index", "api/wildboar/distance/_matrix_profile/index", "api/wildboar/distance/_multi_metric/index", "api/wildboar/distance/_neighbors/index", "api/wildboar/distance/dtw/index", "api/wildboar/distance/index", "api/wildboar/ensemble/_elastic/index", "api/wildboar/ensemble/_ensemble/index", "api/wildboar/ensemble/index", "api/wildboar/explain/_importance/index", "api/wildboar/explain/counterfactual/_helper/index", "api/wildboar/explain/counterfactual/_nn/index", "api/wildboar/explain/counterfactual/_proto/index", "api/wildboar/explain/counterfactual/_sf/index", "api/wildboar/explain/counterfactual/index", "api/wildboar/explain/index", "api/wildboar/index", "api/wildboar/linear_model/_hydra/index", "api/wildboar/linear_model/_rocket/index", "api/wildboar/linear_model/_shapelet/index", "api/wildboar/linear_model/_transform/index", "api/wildboar/linear_model/index", "api/wildboar/metrics/_cluster/index", "api/wildboar/metrics/_counterfactual/index", "api/wildboar/metrics/index", "api/wildboar/model_selection/_cv/index", "api/wildboar/model_selection/_outlier/index", "api/wildboar/model_selection/index", "api/wildboar/transform/_base/index", "api/wildboar/transform/_conv/index", "api/wildboar/transform/_diff/index", "api/wildboar/transform/_hydra/index", "api/wildboar/transform/_interval/index", "api/wildboar/transform/_matrix_profile/index", "api/wildboar/transform/_pivot/index", "api/wildboar/transform/_rocket/index", "api/wildboar/transform/_sax/index", "api/wildboar/transform/_shapelet/index", "api/wildboar/transform/index", "api/wildboar/tree/_base/index", "api/wildboar/tree/_ptree/index", "api/wildboar/tree/_tree/index", "api/wildboar/tree/index", "api/wildboar/utils/_parallel/index", "api/wildboar/utils/_testing/index", "api/wildboar/utils/decorators/index", "api/wildboar/utils/estimator_checks/index", "api/wildboar/utils/index", "api/wildboar/utils/plot/index", "api/wildboar/utils/validation/index", "api/wildboar/utils/variable_len/index", "api/wildboar/version/index", "examples", "examples/convolution_transform", "examples/counterfactuals", "guide", "guide/annotate", "guide/basics", "guide/datasets", "guide/datasets/preprocess", "guide/datasets/repositories", "guide/glossary", "guide/metrics", "guide/metrics/distance", "guide/metrics/elastic", "guide/supervised", "guide/supervised/ensemble", "guide/supervised/transform", "guide/supervised/trees", "guide/unsupervised", "guide/unsupervised/outlier", "guide/unsupervised/outlier/generation", "index", "install", "install/build", "more/whatsnew"], "filenames": ["api/index.rst", "api/wildboar/annotate/_motifs/index.rst", "api/wildboar/annotate/_segment/index.rst", "api/wildboar/annotate/index.rst", "api/wildboar/base/index.rst", "api/wildboar/datasets/_filter/index.rst", "api/wildboar/datasets/_repository/index.rst", "api/wildboar/datasets/index.rst", "api/wildboar/datasets/outlier/index.rst", "api/wildboar/datasets/preprocess/index.rst", "api/wildboar/distance/_distance/index.rst", "api/wildboar/distance/_manifold/index.rst", "api/wildboar/distance/_matrix_profile/index.rst", "api/wildboar/distance/_multi_metric/index.rst", "api/wildboar/distance/_neighbors/index.rst", "api/wildboar/distance/dtw/index.rst", "api/wildboar/distance/index.rst", "api/wildboar/ensemble/_elastic/index.rst", "api/wildboar/ensemble/_ensemble/index.rst", "api/wildboar/ensemble/index.rst", "api/wildboar/explain/_importance/index.rst", "api/wildboar/explain/counterfactual/_helper/index.rst", "api/wildboar/explain/counterfactual/_nn/index.rst", "api/wildboar/explain/counterfactual/_proto/index.rst", "api/wildboar/explain/counterfactual/_sf/index.rst", "api/wildboar/explain/counterfactual/index.rst", "api/wildboar/explain/index.rst", "api/wildboar/index.rst", "api/wildboar/linear_model/_hydra/index.rst", "api/wildboar/linear_model/_rocket/index.rst", "api/wildboar/linear_model/_shapelet/index.rst", "api/wildboar/linear_model/_transform/index.rst", "api/wildboar/linear_model/index.rst", "api/wildboar/metrics/_cluster/index.rst", "api/wildboar/metrics/_counterfactual/index.rst", "api/wildboar/metrics/index.rst", "api/wildboar/model_selection/_cv/index.rst", "api/wildboar/model_selection/_outlier/index.rst", "api/wildboar/model_selection/index.rst", "api/wildboar/transform/_base/index.rst", "api/wildboar/transform/_conv/index.rst", "api/wildboar/transform/_diff/index.rst", "api/wildboar/transform/_hydra/index.rst", "api/wildboar/transform/_interval/index.rst", "api/wildboar/transform/_matrix_profile/index.rst", "api/wildboar/transform/_pivot/index.rst", "api/wildboar/transform/_rocket/index.rst", "api/wildboar/transform/_sax/index.rst", "api/wildboar/transform/_shapelet/index.rst", "api/wildboar/transform/index.rst", "api/wildboar/tree/_base/index.rst", "api/wildboar/tree/_ptree/index.rst", "api/wildboar/tree/_tree/index.rst", "api/wildboar/tree/index.rst", "api/wildboar/utils/_parallel/index.rst", "api/wildboar/utils/_testing/index.rst", "api/wildboar/utils/decorators/index.rst", "api/wildboar/utils/estimator_checks/index.rst", "api/wildboar/utils/index.rst", "api/wildboar/utils/plot/index.rst", "api/wildboar/utils/validation/index.rst", "api/wildboar/utils/variable_len/index.rst", "api/wildboar/version/index.rst", "examples.rst", "examples/convolution_transform.rst", "examples/counterfactuals.rst", "guide.rst", "guide/annotate.rst", "guide/basics.rst", "guide/datasets.rst", "guide/datasets/preprocess.rst", "guide/datasets/repositories.rst", "guide/glossary.rst", "guide/metrics.rst", "guide/metrics/distance.rst", "guide/metrics/elastic.rst", "guide/supervised.rst", "guide/supervised/ensemble.rst", "guide/supervised/transform.rst", "guide/supervised/trees.rst", "guide/unsupervised.rst", "guide/unsupervised/outlier.rst", "guide/unsupervised/outlier/generation.rst", "index.rst", "install.rst", "install/build.rst", "more/whatsnew.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.annotate._motifs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.annotate._segment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.annotate</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets._filter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets._repository</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets.outlier</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.datasets.preprocess</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance._distance</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance._manifold</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance._matrix_profile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance._multi_metric</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance._neighbors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance.dtw</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.distance</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.ensemble._elastic</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.ensemble._ensemble</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.ensemble</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain._importance</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain.counterfactual._helper</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain.counterfactual._nn</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain.counterfactual._proto</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain.counterfactual._sf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain.counterfactual</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.explain</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.linear_model._hydra</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.linear_model._rocket</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.linear_model._shapelet</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.linear_model._transform</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.linear_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.metrics._cluster</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.metrics._counterfactual</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.metrics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.model_selection._cv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.model_selection._outlier</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.model_selection</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._conv</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._diff</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._hydra</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._interval</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._matrix_profile</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._pivot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._rocket</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._sax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform._shapelet</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.transform</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.tree._base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.tree._ptree</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.tree._tree</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.tree</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils._parallel</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils._testing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils.decorators</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils.estimator_checks</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils.plot</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils.validation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.utils.variable_len</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wildboar.version</span></code>", "Examples", "Convolution transform", "Counterfactual explanations", "User Guide", "Annotate", "Time series", "Datasets", "Pre-processing", "Repositories", "Glossary", "Metrics", "Distance", "Elastic metrics", "Supervised learning", "Ensemble estimators", "Transform-based estimators", "Tree-based estimators", "Unsupervised learning", "Outlier detection", "Outlier detection benchmarks", "&lt;no title&gt;", "Install wildboar", "Build from source", "What\u2019s new"], "terms": {"librari": [0, 27], "tempor": [0, 24, 25, 27, 65, 66, 68, 83], "machin": [0, 27, 66, 73, 83], "learn": [0, 15, 27, 31, 41, 42, 49, 50, 52, 57, 58, 60, 64, 72, 83, 86], "includ": [0, 1, 3, 8, 12, 16, 25, 27, 58, 60, 64, 66, 74, 79, 86], "numer": [0, 25, 27, 58, 60, 64, 66], "algorithm": [0, 8, 11, 14, 15, 16, 24, 25, 27, 64, 65, 68, 70, 73, 86], "seamlessli": [0, 27, 66], "integr": [0, 27, 71, 74], "them": [0, 8, 27, 59, 68, 70, 71], "scikit": [0, 27, 31, 41, 42, 49, 50, 52, 57, 58, 60, 64, 66, 72, 86], "iseo": [0, 27, 68, 70], "boolean": [0, 15, 27, 61], "indic": [0, 7, 10, 15, 16, 18, 19, 21, 25, 27, 34, 35, 50, 51, 52, 53, 61, 65, 72, 86], "valu": [0, 4, 6, 7, 8, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 64, 65, 66, 68, 69, 70, 71, 72, 74, 77, 86], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 82, 84, 85, 86], "end": [0, 20, 26, 27, 50, 51, 52, 53, 58, 60, 68, 70, 72], "sequenc": [0, 9, 27, 58, 59, 60, 68, 70, 73], "time": [0, 1, 2, 3, 4, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 30, 32, 33, 34, 35, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 64, 65, 69, 70, 71, 72, 73, 74, 76, 77, 78, 82, 86], "seri": [0, 1, 2, 3, 4, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 30, 32, 33, 34, 35, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 60, 61, 64, 65, 69, 70, 71, 72, 73, 74, 76, 77, 78, 82, 86], "see": [0, 3, 7, 8, 10, 11, 14, 16, 21, 25, 30, 32, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 74, 86], "section": [0, 3, 7, 20, 26], "user": [0, 3, 4, 7, 8, 10, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 65, 71, 74, 82, 84], "guid": [0, 3, 4, 7, 8, 10, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 83], "more": [0, 3, 7, 8, 10, 11, 14, 16, 18, 19, 20, 25, 26, 30, 31, 32, 33, 34, 35, 45, 48, 49, 50, 51, 52, 53, 58, 60, 66, 71, 73, 74, 82, 86], "detail": [0, 3, 7, 8, 16, 41, 49, 74, 83, 86], "exampl": [0, 3, 7, 8, 10, 14, 15, 16, 17, 18, 19, 21, 23, 25, 31, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 59, 61, 64, 65, 68, 69, 70, 71, 74, 83], "motif": [0, 1, 3, 12, 16], "find": [0, 1, 2, 3, 10, 16, 69, 85, 86], "segment": [0, 2, 3], "chang": [0, 2, 3, 7, 15, 18, 19, 21, 24, 25, 34, 35, 52, 53, 65, 68, 69, 71, 74], "regim": [0, 2, 3], "all": [0, 1, 3, 4, 6, 7, 8, 10, 12, 14, 16, 17, 18, 19, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 46, 48, 49, 50, 52, 53, 55, 57, 58, 59, 60, 65, 66, 69, 70, 71, 73, 74, 84, 85, 86], "estim": [0, 4, 8, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 60, 65, 66, 69, 72, 74, 76, 82, 86], "baseestim": [0, 4, 31, 41, 49, 50, 52, 55], "counterfactualmixin": [0, 4], "mixin": [0, 4, 18, 20, 26, 31, 41, 43, 45, 46, 48, 49, 50, 52], "explainermixin": [0, 4], "is_counterfactu": [0, 4, 23], "check": [0, 4, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 60, 70, 72, 83], "is_explain": [0, 4], "an": [0, 4, 8, 10, 11, 14, 16, 17, 18, 19, 23, 28, 30, 32, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 60, 65, 68, 69, 71, 72, 73, 74, 76, 77, 82, 83, 86], "load": [0, 6, 7, 64, 65, 71], "from": [0, 1, 3, 6, 7, 8, 10, 15, 16, 17, 18, 19, 21, 23, 24, 25, 28, 29, 30, 31, 32, 34, 35, 37, 38, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 59, 61, 64, 65, 66, 69, 70, 71, 73, 74, 82, 84, 86], "import": [0, 7, 10, 15, 16, 17, 18, 19, 20, 26, 31, 37, 38, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 59, 61, 64, 65, 66, 68, 69, 70, 71, 74, 82], "load_dataset": [0, 7, 10, 16, 43, 49, 51, 53, 64, 65, 66, 69, 70, 71, 74, 86], "x": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 61, 64, 65, 66, 68, 69, 70, 71, 73, 74, 82, 86], "y": [0, 4, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 64, 65, 66, 69, 70, 71, 73, 74, 82, 86], "gunpoint": [0, 7, 43, 49, 51, 53, 69, 70, 71], "shape": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 59, 66, 68, 69, 70, 72, 73, 74], "200": [0, 7, 69], "60": [0, 7, 69, 74], "bundl": [0, 6, 7, 69, 71, 82, 86], "handl": [0, 6, 7, 69], "jsonrepositori": [0, 6, 7, 71], "A": [0, 4, 5, 6, 7, 8, 10, 11, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 59, 65, 66, 68, 69, 70, 71, 72, 73, 74, 82, 86], "repositori": [0, 6, 7, 66, 69, 86], "collect": [0, 6, 7, 21, 25, 43, 49, 66, 71, 76, 82, 84, 86], "npbundl": [0, 6, 7], "numpi": [0, 6, 7, 10, 16, 18, 19, 20, 26, 28, 30, 31, 32, 39, 41, 42, 43, 46, 48, 49, 50, 52, 53, 66, 68, 70, 71, 72, 74, 86], "binari": [0, 6, 7, 8, 18, 19, 60, 65, 82, 84], "file": [0, 6, 7, 71, 85], "clear_cach": [0, 7], "clear": [0, 7], "cach": [0, 6, 7, 69], "delet": [0, 7], "get_bundl": [0, 6, 7], "get": [0, 4, 6, 7, 9, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 66, 70, 83], "get_repositori": [0, 7], "name": [0, 4, 6, 7, 9, 10, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 60, 66, 69, 70, 71, 73, 74, 86], "install_repositori": [0, 7, 71], "instal": [0, 7, 69, 82, 83, 85], "list_bundl": [0, 7, 71], "list": [0, 1, 3, 5, 6, 7, 10, 11, 16, 18, 19, 20, 21, 25, 26, 29, 30, 31, 32, 34, 35, 43, 45, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 60, 69, 71, 74, 82, 86], "specifi": [0, 6, 7, 18, 19, 20, 26, 34, 35, 45, 48, 49, 52, 53, 59, 65, 66, 69, 70, 71, 73, 74, 82, 84, 86], "list_collect": [0, 7], "list_dataset": [0, 7, 71], "list_repositori": [0, 7, 71], "kei": [0, 6, 7, 10, 11, 16, 18, 19, 21, 25, 30, 32, 34, 35, 43, 45, 48, 49, 51, 52, 53, 60, 71], "gener": [0, 7, 8, 11, 14, 15, 16, 18, 19, 20, 21, 22, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 42, 43, 46, 48, 49, 50, 51, 52, 53, 57, 64, 65, 66, 69, 82], "load_gun_point": [0, 7, 17, 19, 42, 43, 46, 49, 50, 51, 52, 53, 59, 69], "load_synthetic_control": [0, 7, 18, 19, 66], "synthetic_control": [0, 7, 66], "load_two_lead_ecg": [0, 7, 15, 18, 19, 37, 38, 44, 49, 66, 74], "twoleadecg": [0, 7, 66, 69, 71, 74], "refresh_repositori": [0, 7, 71], "refresh": [0, 6, 7, 71, 86], "set_cache_dir": [0, 7, 71], "global": [0, 7, 22, 24, 25, 34, 35, 43, 49, 65, 71], "directori": [0, 7, 71, 84], "synthet": [0, 8, 82], "us": [0, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 64, 65, 66, 69, 70, 71, 72, 73, 74, 78, 82, 83, 84, 85, 86], "density_outli": [0, 8], "densitii": [0, 8], "emmott_outli": [0, 8, 82], "difficulti": [0, 8, 82], "kmeans_outli": [0, 8], "k": [0, 8, 10, 14, 16, 18, 19, 20, 22, 25, 26, 51, 53, 65, 77, 82, 86], "mean": [0, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19, 22, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 39, 42, 43, 46, 48, 49, 50, 51, 52, 53, 64, 65, 66, 70, 73, 74, 86], "majority_outli": [0, 8], "label": [0, 4, 6, 7, 8, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 44, 49, 50, 51, 52, 53, 58, 59, 60, 64, 65, 66, 69, 71, 76, 81], "major": [0, 8, 15, 81], "inlier": [0, 8, 18, 19, 36, 38, 82], "minority_outli": [0, 8, 82], "fraction": [0, 1, 2, 3, 8, 12, 15, 16, 18, 19, 20, 24, 25, 26, 34, 35, 36, 38, 44, 49, 50, 51, 52, 53, 82], "minor": [0, 8, 81, 86], "maxabs_scal": [0, 9, 70], "scale": [0, 8, 9, 10, 11, 16, 18, 19, 28, 32, 42, 46, 47, 49, 59, 70, 73, 82, 86], "each": [0, 2, 3, 4, 7, 8, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 61, 64, 65, 66, 68, 70, 71, 72, 73, 74, 86], "its": [0, 9, 12, 16, 43, 44, 49, 58, 59, 60, 69, 84], "maximum": [0, 1, 3, 9, 11, 14, 15, 16, 18, 19, 20, 23, 26, 30, 32, 36, 38, 43, 46, 48, 49, 51, 52, 53, 59, 64, 70, 72, 74], "absolut": [0, 9, 34, 35, 70], "minmax_scal": [0, 9, 47, 49, 69, 70], "along": [0, 9, 20, 26, 28, 30, 32, 70], "dimens": [0, 9, 10, 11, 15, 16, 28, 30, 32, 34, 35, 44, 49, 58, 60, 66, 68, 69, 70, 72, 74, 86], "named_preprocess": [0, 9], "preprocessor": [0, 9, 70], "standard": [0, 9, 18, 19, 28, 30, 32, 42, 43, 48, 49, 64, 66, 70, 86], "truncat": [0, 9, 70], "shortest": [0, 9, 70], "fast": [0, 14, 16, 28, 32, 42, 46, 48, 49, 73], "comput": [0, 1, 2, 3, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 33, 34, 35, 44, 45, 49, 50, 51, 52, 53, 65, 73, 74, 78, 86], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 82, 83, 84, 85, 86], "modul": [0, 16, 25, 65, 66, 69, 70, 82, 86], "pair": [0, 1, 3, 7, 12, 16, 18, 19, 34, 35, 45, 48, 49, 51, 52, 53, 60, 86], "pairwis": [0, 16], "between": [0, 1, 3, 9, 10, 14, 15, 16, 21, 24, 25, 33, 34, 35, 40, 48, 49, 65, 66, 70, 73, 74, 82, 86], "subsequ": [0, 1, 3, 10, 12, 16, 18, 19, 44, 46, 48, 49, 64, 65, 86], "kmean": [0, 14, 16, 86], "cluster": [0, 8, 14, 16, 65, 82, 86], "support": [0, 8, 10, 11, 14, 16, 18, 19, 24, 25, 30, 32, 34, 35, 43, 46, 48, 49, 52, 53, 66, 68, 69, 70, 71, 73, 82, 86], "weight": [0, 14, 15, 16, 17, 18, 19, 28, 29, 30, 31, 32, 34, 35, 42, 45, 49, 50, 51, 52, 53, 73], "kmedoid": [0, 14, 16, 86], "kneighborsclassifi": [0, 14, 16, 17, 19, 65, 86], "classifi": [0, 8, 14, 16, 17, 18, 19, 22, 24, 25, 26, 29, 30, 31, 32, 42, 49, 51, 52, 53, 57, 64, 65, 66, 77, 86], "implement": [0, 11, 14, 15, 16, 18, 19, 20, 24, 25, 26, 29, 32, 34, 35, 42, 43, 46, 49, 64, 65, 66, 70, 71, 73, 74, 77, 82, 86], "nearest": [0, 12, 14, 16, 22, 23, 25], "neighbor": [0, 12, 14, 16, 17, 19, 22, 23, 25, 65, 86], "md": [0, 11, 16], "multidimension": [0, 11, 16], "argmin_dist": [0, 10, 16, 86], "indici": [0, 1, 3, 10, 16, 36, 38], "sampl": [0, 4, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 64, 65, 66, 68, 69, 70, 71, 72, 74, 79, 82, 86], "lowest": [0, 10, 15, 16, 64], "argmin_subsequence_dist": [0, 10, 16, 86], "th": [0, 10, 16, 18, 19, 34, 35, 86], "closest": [0, 8, 10, 14, 16, 23, 34, 35], "distance_profil": [0, 10, 16, 86], "profil": [0, 1, 2, 3, 10, 12, 16, 44, 49], "matrix_profil": [0, 1, 2, 3, 12, 16], "matrix": [0, 1, 2, 3, 12, 15, 16, 18, 19, 21, 23, 25, 29, 30, 31, 32, 44, 49, 50, 51, 52, 53, 66, 74], "paired_dist": [0, 10, 16, 74, 86], "paired_subsequence_dist": [0, 10, 16, 74], "minimum": [0, 1, 3, 6, 7, 9, 10, 15, 16, 18, 19, 20, 23, 26, 30, 32, 43, 46, 48, 49, 51, 52, 53, 58, 60, 65, 71, 73, 74], "paired_subsequence_match": [0, 10, 16], "match": [0, 1, 3, 10, 12, 16, 23, 65, 71, 73, 74, 86], "subsequnc": [0, 10, 16], "pairwise_dist": [0, 10, 16, 73, 74, 86], "pairwise_subsequence_dist": [0, 10, 16, 73, 74], "subsequence_match": [0, 1, 3, 10, 16, 74, 86], "align": [0, 15, 20, 23, 26, 34, 35], "sever": [0, 15, 50, 51, 52, 53, 66, 73, 86], "ddtw_distanc": [0, 15], "deriv": [0, 15, 18, 34, 35, 73], "dynam": [0, 15, 18, 19, 51, 52, 53, 65, 73, 74, 86], "warp": [0, 14, 15, 16, 51, 53, 65, 73, 74, 86], "dtw_align": [0, 15], "dtw_averag": [0, 15], "barycent": [0, 14, 15, 16], "averag": [0, 15, 18, 19, 34, 35, 64, 65], "dba": [0, 15], "dtw_distanc": [0, 15], "dtw_envelop": [0, 15], "envelop": [0, 15], "lb_keogh": [0, 15], "dtw_lb_keogh": [0, 15], "lower": [0, 8, 10, 15, 16, 18, 19, 30, 32, 34, 35, 45, 46, 48, 49, 51, 52, 53, 59, 74], "bound": [0, 15, 18, 19, 36, 38, 45, 48, 49, 51, 52, 53, 74], "dtw_map": [0, 15], "optim": [0, 15, 17, 19, 74, 85, 86], "path": [0, 15, 24, 25, 50, 51, 52, 53, 65, 71, 85], "two": [0, 14, 15, 16, 18, 19, 28, 32, 42, 43, 45, 48, 49, 51, 52, 53, 59, 64, 65, 66, 71, 73, 74, 79, 86], "given": [0, 2, 3, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 26, 28, 29, 30, 31, 32, 40, 47, 49, 50, 51, 52, 53, 72, 76], "jeong_weight": [0, 15], "describ": [0, 8, 15, 17, 19, 24, 25, 42, 49, 64, 65, 69, 71, 74, 83, 86], "jeong": [0, 15], "et": [0, 1, 2, 3, 8, 12, 15, 16, 18, 19, 42, 49, 51, 53, 64, 65, 82, 86], "al": [0, 1, 2, 3, 8, 12, 15, 16, 18, 19, 42, 49, 51, 53, 64, 65, 82, 86], "2011": [0, 15], "r4bf7d056babf": [0, 15], "1": [0, 1, 2, 3, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 82, 84, 85], "_": [0, 10, 15, 16], "wddtw_distanc": [0, 15], "wdtw_align": [0, 15], "wdtw_distanc": [0, 15], "method": [0, 4, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 64, 65, 66, 77, 83, 86], "classif": [0, 8, 14, 15, 16, 17, 18, 19, 28, 29, 30, 31, 32, 34, 35, 37, 38, 42, 46, 48, 49, 50, 51, 52, 53, 60, 65, 66, 79, 82], "regress": [0, 8, 18, 19, 31, 32, 50, 51, 52, 53, 66, 78, 82], "detect": [0, 8, 19, 74, 86], "baggingclassifi": [0, 18, 19, 86], "bag": [0, 18, 19], "baggingregressor": [0, 18, 19, 86], "regressor": [0, 18, 19, 26, 29, 30, 31, 32, 50, 52, 53, 57, 77], "basebag": [0, 18, 19], "elasticensembleclassifi": [0, 17, 19, 86], "extrashapelettreesclassifi": [0, 18, 19], "extrem": [0, 18, 19], "random": [0, 8, 11, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 33, 35, 36, 37, 38, 39, 42, 43, 45, 46, 48, 49, 51, 52, 53, 64, 65, 66, 77, 78], "shapelet": [0, 1, 3, 10, 12, 16, 18, 19, 20, 23, 24, 25, 26, 30, 32, 46, 48, 49, 52, 53, 66, 79, 86], "extrashapelettreesregressor": [0, 18, 19, 86], "intervalforestclassifi": [0, 18, 19], "interv": [0, 8, 18, 19, 20, 26, 34, 35, 43, 47, 49, 52, 53, 66, 82], "intervalforestregressor": [0, 18, 19], "isolationshapeletforest": [0, 18, 19], "isol": [0, 18, 19, 85], "forest": [0, 8, 18, 19, 24, 25, 51, 53, 66], "pivotforestclassifi": [0, 18, 19], "proximityforestclassifi": [0, 18, 19, 77], "proxim": [0, 18, 19, 21, 25, 34, 35, 51, 53], "rocketforestclassifi": [0, 18, 19, 86], "rocket": [0, 18, 19, 29, 32, 46, 49, 66], "rocketforestregressor": [0, 18, 19, 86], "shapeletforestclassifi": [0, 18, 19, 65, 66, 77, 86], "shapeletforestembed": [0, 18, 19], "shapeletforestregressor": [0, 18, 19, 77, 86], "explan": [0, 4, 20, 21, 22, 23, 24, 25, 26, 34, 35], "amplitudeimport": [0, 20, 26], "equi": [0, 20, 26], "probabl": [0, 4, 8, 14, 16, 17, 18, 19, 20, 23, 26, 30, 32, 45, 46, 48, 49, 50, 51, 52, 53], "amplitud": [0, 20, 26, 59], "frequencyimport": [0, 20, 26], "intervalimport": [0, 20, 26, 66], "shapeletimport": [0, 20, 26], "plot_import": [0, 20, 26], "plot": [0, 4, 20, 22, 23, 24, 25, 26, 64, 65, 66, 70], "boxplot": [0, 20, 26], "kneighborscounterfactu": [0, 22, 25, 65, 86], "fit": [0, 4, 8, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 64, 65, 66, 69, 78, 86], "prototypecounterfactu": [0, 23, 25], "model": [0, 8, 18, 19, 23, 25, 28, 29, 30, 31, 32, 38, 50, 52, 53, 65, 78, 82], "agnost": [0, 2, 3, 23, 25], "approach": [0, 23, 25, 28, 30, 32, 42, 48, 49, 65, 66, 69, 82, 84], "construct": [0, 8, 23, 25, 34, 35, 47, 49, 52, 53, 58, 60, 64, 65, 77, 82], "shapeletforestcounterfactu": [0, 24, 25, 65], "singl": [0, 10, 11, 14, 16, 18, 19, 21, 25, 28, 32, 34, 35, 39, 42, 46, 49, 50, 51, 52, 53, 56, 64, 68, 71, 72, 74, 86], "linear": [0, 32], "both": [0, 8, 10, 12, 15, 16, 17, 19, 32, 40, 49, 58, 60, 64, 68, 70, 71, 73, 74, 79, 82], "castorclassifi": [0, 30, 32, 86], "dictionari": [0, 6, 7, 18, 19, 23, 24, 25, 28, 30, 32, 42, 45, 48, 49, 51, 52, 53, 60, 71, 86], "dilat": [0, 10, 16, 30, 32, 40, 48, 49, 64, 86], "compet": [0, 28, 30, 32, 42, 48, 49, 86], "dilatedshapeletclassifi": [0, 30, 32, 86], "hydraclassifi": [0, 28, 32, 42, 49, 78, 86], "convolut": [0, 18, 19, 28, 32, 40, 42, 46, 49, 52, 53, 78, 86], "kernel": [0, 8, 18, 19, 28, 29, 30, 31, 32, 40, 42, 46, 48, 49, 50, 52, 53, 64, 78, 82], "randomshapeletclassifi": [0, 30, 32], "randomshapeletregressor": [0, 30, 32], "rocketclassifi": [0, 29, 32, 78, 86], "rocketregressor": [0, 29, 32, 78, 86], "evalu": [0, 18, 19, 23, 24, 25, 34, 35, 52, 53, 57, 64, 66, 69], "compactness_scor": [0, 34, 35], "compact": [0, 34, 35], "score": [0, 4, 8, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 50, 51, 52, 53, 66, 82], "plausability_scor": [0, 34, 35], "plausibl": [0, 34, 35], "proximity_scor": [0, 34, 35], "redudancy_scor": [0, 34, 35], "redud": [0, 34, 35], "relative_proximity_scor": [0, 34, 35], "rel": [0, 11, 14, 16, 34, 35, 74], "silhouette_sampl": [0, 33, 35], "silhouett": [0, 33, 35], "coeffici": [0, 18, 19, 29, 30, 31, 32, 33, 35, 50, 52, 53], "silhouette_scor": [0, 33, 35], "validity_scor": [0, 34, 35], "valid": [0, 7, 17, 19, 21, 23, 25, 28, 30, 32, 34, 35, 36, 38, 50, 51, 52, 53, 58, 68, 69, 71, 86], "select": [0, 8, 10, 14, 16, 21, 25, 33, 35, 38, 43, 48, 49, 65, 66, 69, 70, 82, 85, 86], "repeatedoutliersplit": [0, 36, 38], "repeat": [0, 20, 26, 36, 38], "cross": [0, 17, 19, 28, 30, 32, 36, 38], "outlier_train_test_split": [0, 18, 19, 37, 38], "train": [0, 6, 7, 14, 16, 18, 19, 21, 25, 34, 35, 36, 37, 38, 46, 49, 50, 51, 52, 53, 66, 69, 70, 71], "test": [0, 7, 14, 16, 17, 18, 19, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 50, 51, 52, 53, 55, 57, 61, 66, 69, 70, 71, 74, 77], "split": [0, 7, 18, 19, 28, 30, 32, 36, 37, 38, 50, 51, 52, 53, 64, 66, 71, 73], "raw": [0, 11, 16, 49], "tabular": [0, 49], "represent": [0, 18, 19, 48, 49, 52, 53, 64, 65, 66, 78, 82], "castortransform": [0, 48, 49, 86], "dialat": [0, 48, 49], "derivativetransform": [0, 41, 49], "difftransform": [0, 41, 42, 49], "dilatedshapelettransform": [0, 48, 49, 86], "featuretransform": [0, 43, 49], "number": [0, 1, 2, 3, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 64, 66, 69, 72, 74], "featur": [0, 18, 19, 29, 30, 31, 32, 39, 43, 46, 49, 50, 52, 53, 56, 64, 69, 70, 78, 85, 86], "hydratransform": [0, 42, 49, 64, 86], "intervaltransform": [0, 8, 43, 49, 82, 86], "emb": [0, 43, 49], "per": [0, 8, 20, 24, 25, 26, 28, 30, 32, 42, 43, 45, 48, 49], "matrixprofiletransform": [0, 44, 49], "paa": [0, 47, 49], "peicewis": [0, 47, 49], "aggreg": [0, 24, 25, 47, 49], "approxim": [0, 8, 47, 49], "pivottransform": [0, 45, 49, 86], "pivot": [0, 8, 18, 19, 45, 49, 51, 52, 53, 77], "proximitytransform": [0, 45, 49], "condit": [0, 45, 49, 65], "randomshapelettransform": [0, 48, 49, 86], "tranform": [0, 48, 49], "rockettransform": [0, 46, 49, 64, 66, 86], "sax": [0, 20, 26, 34, 35, 47, 49], "symbol": [0, 47, 49], "convolv": [0, 28, 30, 32, 40, 49], "appli": [0, 7, 8, 10, 16, 40, 49, 50, 51, 52, 53, 64, 69, 86], "1d": [0, 10, 16, 40, 49, 58, 60, 72, 74], "over": [0, 17, 18, 19, 20, 26, 34, 35, 40, 45, 48, 49, 51, 52, 53, 66, 73, 86], "piecewice_aggregate_approxim": [0, 47, 49], "symbolic_aggregate_approxim": [0, 47, 49], "extrashapelettreeclassifi": [0, 52, 53, 79], "extra": [0, 4, 6, 7, 20, 22, 23, 24, 25, 26, 52, 53, 71, 74], "extrashapelettreeregressor": [0, 52, 53, 79, 86], "intervaltreeclassifi": [0, 52, 53], "intervaltreeregressor": [0, 52, 53], "pivottreeclassifi": [0, 52, 53], "proximitytreeclassifi": [0, 51, 53, 86], "branch": [0, 51, 53, 77], "rockettreeclassifi": [0, 52, 53, 86], "rockettreeregressor": [0, 52, 53, 86], "shapelettreeclassifi": [0, 50, 51, 52, 53, 79, 86], "shapelettreeregressor": [0, 18, 19, 52, 53, 79, 86], "check_arrai": [0, 58, 60], "input": [0, 4, 8, 10, 12, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 44, 45, 47, 49, 50, 51, 52, 53, 58, 59, 60, 61, 64, 65, 66, 72, 74, 86], "check_x_i": [0, 58, 60], "mp": [1, 3, 12, 16], "none": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 71, 74], "window": [1, 2, 3, 12, 14, 15, 16, 20, 26, 34, 35, 44, 47, 49, 71, 73, 84, 85], "auto": [1, 3, 10, 11, 14, 16, 17, 18, 19, 22, 23, 25, 45, 49, 51, 53, 65, 86], "exclud": [1, 2, 3, 10, 12, 16, 44, 49], "0": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 36, 37, 38, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 64, 65, 66, 68, 69, 70, 71, 73, 74, 82, 84], "2": [1, 2, 3, 8, 10, 11, 12, 15, 16, 18, 19, 20, 21, 22, 25, 26, 29, 30, 31, 32, 36, 37, 38, 40, 41, 43, 44, 46, 49, 50, 51, 52, 53, 58, 60, 61, 64, 65, 66, 68, 69, 71, 72, 73, 74, 84], "max_dist": [1, 3], "max_neighbour": [1, 3], "10": [1, 3, 10, 16, 18, 19, 20, 26, 28, 29, 30, 31, 32, 43, 45, 46, 48, 49, 51, 52, 53, 59, 64, 74, 85], "min_neighbour": [1, 3], "max_motif": [1, 3], "return_dist": [1, 3, 10, 16], "fals": [1, 2, 3, 7, 10, 11, 12, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 28, 30, 32, 34, 35, 47, 48, 49, 57, 58, 59, 60, 66, 68, 69, 71], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 84], "paramet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 71, 73, 74, 82, 83, 86], "arrai": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 64, 65, 66, 68, 70, 71, 72, 74, 86], "like": [1, 2, 3, 4, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 72], "n_sampl": [1, 2, 3, 4, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 66, 68, 69, 70, 72, 74, 86], "n_timestep": [1, 2, 3, 4, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 66, 68, 69, 70, 72, 74], "ndarrai": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 60, 61, 66, 70], "profile_s": [1, 2, 3, 12, 16], "option": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 69, 71, 74, 82, 84, 85], "int": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 58, 59, 60, 69, 74, 82], "float": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 61, 68, 69, 73], "size": [1, 2, 3, 9, 10, 12, 14, 15, 16, 18, 19, 20, 23, 24, 25, 26, 28, 30, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 46, 47, 48, 49, 64, 66, 69], "math": [1, 3, 10, 16, 74], "ceil": [1, 3, 10, 16, 52, 53], "exact": [1, 2, 3, 10, 12, 14, 15, 16, 18, 19, 20, 26, 28, 32, 39, 42, 44, 46, 49], "exclus": [1, 2, 3, 10, 12, 16, 44, 49, 65], "zone": [1, 3, 10, 12, 16, 44, 49], "str": [1, 3, 5, 6, 7, 8, 9, 10, 11, 14, 16, 18, 19, 20, 21, 25, 26, 28, 30, 32, 33, 34, 35, 43, 45, 47, 48, 49, 51, 52, 53, 56, 58, 59, 60, 69], "distanc": [1, 2, 3, 8, 17, 18, 19, 20, 24, 25, 26, 27, 30, 32, 33, 34, 35, 45, 48, 49, 51, 52, 53, 65, 73, 77, 79, 86], "neighbour": [1, 3], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 65, 66, 69, 70, 71, 72, 74, 82, 86], "bool": [1, 2, 3, 4, 7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61], "main": [1, 3, 66, 69, 83], "motif_indici": [1, 3], "motif_dist": [1, 3], "refer": [1, 2, 3, 8, 12, 15, 16, 17, 18, 19, 22, 23, 24, 25, 28, 30, 32, 34, 35, 42, 43, 46, 48, 49, 51, 53, 74, 83], "yeh": [1, 3, 12, 16], "c": [1, 3, 12, 16, 18, 19, 58, 60, 66, 73, 85], "m": [1, 3, 12, 15, 16, 34, 35, 73, 74, 84], "2016": [1, 3, 12, 16], "similar": [1, 3, 12, 16, 21, 25, 44, 49, 65, 66, 70, 73, 74, 78], "join": [1, 2, 3, 12, 16, 44, 49], "unifi": [1, 3, 12, 16], "view": [1, 3, 12, 16], "discord": [1, 3, 12, 16], "In": [1, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 24, 25, 28, 29, 30, 31, 32, 43, 49, 50, 51, 52, 53, 64, 65, 66, 68, 69, 70, 71, 73, 74, 76, 82], "ieee": [1, 3, 12, 16, 24, 25, 65, 73], "16th": [1, 3, 12, 16], "intern": [1, 2, 3, 12, 15, 16, 18, 19, 24, 25, 52, 53, 65, 73, 74], "confer": [1, 2, 3, 12, 15, 16, 24, 25, 65, 73, 74], "data": [1, 2, 3, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 37, 38, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 58, 60, 64, 65, 69, 70, 71, 73, 74, 82], "mine": [1, 2, 3, 12, 16, 17, 18, 19, 24, 25, 28, 32, 42, 43, 46, 49, 51, 53, 65, 74], "icdm": [1, 3, 12, 16, 24, 25, 65], "mpi": [2, 3, 12, 16], "n_segment": [2, 3], "boundri": [2, 3], "return_arc_curv": [2, 3], "If": [2, 3, 4, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 69, 71, 74, 82, 84], "index": [2, 3, 10, 12, 14, 15, 16, 18, 19, 20, 23, 26, 48, 49, 50, 51, 52, 53, 68, 72, 74], "must": [2, 3, 8, 15, 20, 26, 34, 35, 43, 46, 71, 73, 82, 84], "unless": [2, 3, 18, 19, 45, 48, 49, 50, 51, 52, 53, 58, 60, 71, 73], "identifi": [2, 3, 18, 19, 48, 49, 52, 53, 58, 60, 64, 65, 66, 68, 71, 74], "ignor": [2, 3, 10, 14, 15, 16, 18, 19, 20, 26, 34, 35, 36, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 68], "self": [2, 3, 4, 11, 12, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 69], "region": [2, 3, 66], "around": [2, 3, 11, 14, 16, 33, 35], "express": [2, 3, 8, 12, 16, 18, 19, 34, 35, 44, 49, 52, 53, 69, 71], "arc": [2, 3], "curv": [2, 3], "start": [2, 3, 10, 16, 20, 26, 66, 83], "arc_curv": [2, 3], "gharghabi": [2, 3], "shaghayegh": [2, 3], "2017": [2, 3], "viii": [2, 3], "domain": [2, 3, 59], "onlin": [2, 3], "semant": [2, 3], "superhuman": [2, 3], "perform": [2, 3, 10, 11, 14, 16, 18, 19, 34, 35, 43, 46, 49, 57, 58, 60, 64, 69, 70, 74, 78], "level": [2, 3, 11, 16], "proceed": [2, 3, 8, 73, 74, 82], "get_metadata_rout": [4, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "metadata": [4, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "rout": [4, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "thi": [4, 6, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 60, 64, 65, 66, 69, 70, 74, 78, 84, 86], "object": [4, 8, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 66, 69, 73, 74], "pleas": [4, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 64, 65], "how": [4, 11, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 65, 66], "mechan": [4, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "work": [4, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 66, 74, 84, 85, 86], "metadatarequest": [4, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "encapsul": [4, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "inform": [4, 11, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 65, 66], "get_param": [4, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "deep": [4, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "true": [4, 7, 10, 11, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 60, 61, 68, 69, 72, 73, 74, 86], "default": [4, 7, 8, 10, 11, 12, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 64, 66, 69, 70, 71, 73, 74, 82, 86], "contain": [4, 7, 8, 10, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 60, 61, 64, 65, 68, 71, 74, 83], "subobject": [4, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "ar": [4, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 64, 65, 66, 68, 69, 70, 71, 73, 74, 76, 77, 79, 82, 84, 86], "param": [4, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "dict": [4, 5, 6, 7, 10, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 60, 69, 71], "map": [4, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 76], "set_param": [4, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "set": [4, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 64, 65, 66, 69, 71, 74, 84, 85, 86], "simpl": [4, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 82, 83, 85], "well": [4, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "nest": [4, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "pipelin": [4, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 64, 66], "latter": [4, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 65], "have": [4, 9, 10, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 60, 65, 66, 68, 69, 70, 72, 73, 84, 86], "form": [4, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 66], "compon": [4, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 64, 71], "__": [4, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "so": [4, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 66, 69], "": [4, 8, 10, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 60, 65, 66, 73, 74, 82], "possibl": [4, 11, 12, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 76, 84], "updat": [4, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "instanc": [4, 8, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 60, 64, 65, 71], "counterfactu": [4, 26, 27, 34, 35, 66, 86], "explain": [4, 27, 34, 35, 64, 65, 66, 86], "term": [4, 18, 19, 22, 23, 24, 25, 46, 49, 72, 73], "close": [4, 22, 23, 24, 25, 58, 60, 65], "desir": [4, 8, 21, 22, 23, 24, 25, 34, 35, 42, 49, 65, 74, 82], "counterfact": [4, 22, 23, 24, 25], "closensess": [4, 22, 23, 24, 25], "fit_explain": [4, 20, 22, 23, 24, 25, 26], "kwarg": [4, 7, 14, 16, 18, 19, 20, 22, 23, 24, 25, 26], "argument": [4, 7, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 45, 48, 49, 51, 52, 53, 56, 66, 71, 73, 74, 85, 86], "ax": [4, 20, 22, 23, 24, 25, 26, 59, 70], "make_dict_filt": 5, "filter": [5, 7, 18, 19, 46, 49, 66], "make": [5, 58, 60, 65, 73], "new": [5, 7, 10, 14, 16, 18, 19, 21, 22, 23, 24, 25, 30, 32, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 57, 65, 66, 70, 83, 85], "subject": 5, "op": 5, "verb": 5, "callabl": [5, 7, 9, 10, 16, 20, 21, 24, 25, 26, 28, 30, 32, 33, 34, 35, 48, 49, 56, 86], "make_filt": 5, "creat": [5, 7, 8, 18, 19, 50, 51, 52, 53, 65, 68, 71, 84, 85], "make_list_filt": 5, "base": [5, 6, 7, 8, 15, 18, 19, 20, 21, 25, 27, 28, 30, 31, 32, 34, 35, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 71, 73, 84, 85, 86], "string": [5, 7, 18, 19, 28, 30, 32, 45, 48, 49, 51, 52, 53, 69, 70, 71], "make_str_filt": 5, "version": [6, 7, 10, 14, 16, 18, 19, 21, 22, 24, 25, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 66, 71, 82, 84, 85], "tag": [6, 7, 31, 50, 52, 57, 71], "descript": [6, 7, 8, 56, 71, 82, 83], "uniqu": [6, 7, 34, 35, 71], "human": [6, 7], "readabl": [6, 7], "get_collect": [6, 7], "get_filenam": [6, 7], "ext": [6, 7], "extens": [6, 7, 64, 71], "filenam": [6, 7], "archiv": [6, 7, 64], "zipfil": [6, 7], "sort": [6, 7, 10, 16, 18, 19], "zip": [6, 7, 69, 71], "n_training_sampl": [6, 7], "url": [6, 7, 71], "properti": [6, 7, 18, 19, 43, 46], "download_url": [6, 7], "templat": [6, 7], "download": [6, 7, 64, 65, 69, 71, 85, 86], "wildboar_requir": [6, 7, 71], "requir": [6, 7, 8, 14, 15, 16, 17, 18, 19, 21, 25, 28, 29, 30, 31, 32, 50, 51, 52, 53, 58, 60, 65, 69, 71, 74, 82, 85, 86], "min": [6, 7, 9, 14, 15, 16, 52, 53, 59, 68, 74], "timeout": [6, 7, 71], "abstract": [6, 7, 23, 47], "util": [7, 8, 9, 18, 19, 27, 52, 53, 64, 65, 72, 74], "outlier": [7, 18, 19, 27, 34, 35, 36, 37, 38, 71], "preprocess": [7, 20, 26, 27, 28, 30, 32, 47, 49, 64, 66, 69, 70], "cache_dir": [7, 71], "keep_last_vers": 7, "keep": [7, 18, 19, 29, 30, 31, 32, 50, 52, 53], "latest": [7, 84, 85], "json": 7, "request": [7, 8, 69, 71, 74, 82, 85], "ucr": [7, 64, 66, 69, 71, 74], "tini": [7, 69, 71], "format": [7, 14, 16, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 71], "bake": [7, 66], "off": [7, 66], "create_cache_dir": 7, "progress": 7, "forc": [7, 58, 60, 69], "where": [7, 8, 10, 15, 16, 18, 19, 29, 30, 31, 32, 34, 35, 37, 38, 40, 43, 45, 48, 49, 50, 51, 52, 53, 59, 64, 65, 66, 68, 71, 73, 74, 84, 86], "wildboar_cach": 7, "miss": [7, 11, 16, 68, 72], "show": [7, 15, 59, 64, 65], "bar": 7, "while": [7, 18, 19, 50, 51, 52, 53, 65, 66, 69, 71, 84], "re": [7, 14, 16, 18, 19, 69], "we": [7, 10, 16, 17, 18, 19, 34, 35, 43, 45, 48, 49, 51, 52, 53, 57, 58, 59, 60, 64, 65, 66, 68, 69, 70, 71, 73, 74, 76, 82, 84, 86], "can": [7, 8, 18, 19, 29, 30, 31, 32, 42, 49, 50, 51, 52, 53, 56, 59, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 82, 83, 84, 85], "also": [7, 34, 35, 50, 51, 52, 53, 57, 65, 66, 69, 72, 73, 74, 79, 82, 84, 86], "ani": [7, 8, 50, 51, 52, 53, 65, 71, 72, 73, 86], "newli": 7, "ad": [7, 14, 16, 18, 19, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53], "still": [7, 84], "pend": 7, "dtype": [7, 14, 16, 58, 59, 60, 68, 69], "contigu": [7, 58, 60, 66], "merge_train_test": [7, 17, 19, 66, 69, 71], "return_extra": 7, "read": [7, 10, 11, 14, 16, 18, 19, 25, 30, 31, 32, 33, 34, 35, 45, 48, 49, 50, 51, 52, 53, 66, 74], "type": [7, 41, 49, 58, 59, 60, 65, 66, 79], "_preprocess": 7, "take": [7, 43, 49, 50, 51, 52, 53, 71, 73, 86], "np": [7, 8, 10, 14, 15, 16, 18, 19, 20, 22, 25, 26, 31, 34, 35, 41, 43, 45, 48, 49, 50, 51, 52, 53, 58, 59, 60, 61, 65, 68, 70, 74], "ensur": [7, 21, 25, 36, 38, 58, 60, 64, 65, 71, 86], "memori": [7, 18, 19, 58, 60, 66, 74, 86], "merg": [7, 51, 53, 71, 73], "exist": [7, 36, 38, 66, 69, 86], "partit": [7, 14, 16, 64, 66], "alreadi": [7, 69, 84], "4": [7, 8, 10, 11, 14, 15, 16, 18, 19, 20, 26, 31, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 61, 65, 68, 73, 74, 82, 86], "x_train": [7, 17, 18, 19, 37, 38, 64, 65, 66, 69, 71], "x_test": [7, 17, 18, 19, 37, 38, 64, 65, 66, 69, 71], "y_train": [7, 17, 18, 19, 37, 38, 64, 65, 66, 69, 71], "y_test": [7, 17, 18, 19, 37, 38, 64, 65, 66, 69, 71], "syntheticcontrol": [7, 69, 71], "600": [7, 69], "origin": [7, 18, 19, 20, 21, 25, 26, 28, 32, 34, 35, 39, 46, 49, 58, 60, 65, 66], "preserv": [7, 58, 59, 60, 66], "specif": [7, 17, 18, 19, 41, 45, 48, 49, 51, 52, 53, 57, 58, 60, 65, 69, 70, 71, 84, 86], "doe": [7, 8, 36, 38, 42, 49, 66, 74], "shown": [7, 20, 26], "onli": [7, 11, 12, 15, 16, 18, 19, 20, 21, 24, 25, 26, 50, 51, 52, 53, 58, 60, 64, 66, 69, 70, 71, 73, 74, 85, 86], "yield": [7, 36, 38, 57, 70], "those": [7, 65], "which": [7, 8, 11, 14, 15, 16, 17, 18, 19, 22, 23, 25, 28, 29, 30, 31, 32, 34, 35, 43, 48, 49, 50, 51, 52, 53, 64, 65, 66, 69, 71, 72, 73, 74, 82, 83, 85, 86], "f": [7, 8, 18, 19, 28, 32, 42, 43, 49, 51, 53, 56, 58, 60, 66, 70, 73, 82], "attribut": [7, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 30, 31, 32, 39, 42, 46, 48, 49, 50, 51, 52, 53, 55, 64, 66, 69, 71, 77], "comparison": [7, 69], "spec": 7, "conjunct": [7, 65], "part": [7, 64, 65, 69, 70, 71, 72, 74], "depend": [7, 8, 10, 11, 12, 16, 43, 49, 64, 66, 68, 74, 84, 85], "tupl": [7, 15, 17, 18, 19, 45, 48, 49, 51, 52, 53, 57, 60, 86], "last": [7, 66, 70, 71, 74], "element": [7, 10, 16, 18, 19, 40, 45, 48, 49, 51, 52, 53, 56, 61], "print": [7, 14, 16, 24, 25, 66, 69], "beef": [7, 69, 71], "470": [7, 69], "coffe": [7, 69, 71], "56": [7, 69], "286": [7, 69], "150": [7, 43, 49, 65, 69], "1162": [7, 69], "82": [7, 69], "than": [7, 8, 10, 16, 18, 19, 22, 25, 52, 53, 59, 66, 69, 72, 73, 74], "call": [7, 11, 16, 18, 19, 29, 30, 31, 32, 50, 52, 53, 57, 71, 86], "without": [7, 56, 68, 71, 73], "reset": [7, 71], "root": [7, 20, 26], "n_outlier": [8, 36, 38, 82], "05": [8, 15, 18, 19, 23, 25, 30, 32, 36, 37, 38, 43, 48, 49, 52, 73, 82], "dbscan": 8, "ep": [8, 11, 16], "min_sampl": 8, "5": [8, 10, 12, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 29, 32, 34, 35, 43, 46, 48, 49, 52, 53, 59, 65, 73, 74, 82, 86], "metric": [8, 10, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 45, 48, 49, 50, 51, 52, 53, 65, 86], "euclidean": [8, 10, 11, 14, 16, 18, 19, 20, 22, 23, 24, 25, 26, 30, 32, 33, 34, 35, 48, 49, 52, 53, 65, 73, 74], "max_ep": 8, "inf": [8, 58, 60], "random_st": [8, 11, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 42, 43, 45, 46, 48, 49, 51, 52, 53, 64, 65], "densiti": 8, "fail": [8, 22, 25], "assign": [8, 14, 16, 64, 65, 66, 82], "By": [8, 18, 19, 20, 26, 28, 30, 32, 42, 45, 47, 49, 51, 53, 58, 59, 60, 64, 66, 68, 71, 74, 82, 86], "class": [8, 37, 65, 66, 71, 82, 83], "consid": [8, 10, 11, 16, 18, 19, 34, 35, 37, 38, 51, 53, 66], "optic": 8, "when": [8, 11, 12, 14, 16, 18, 19, 20, 24, 25, 26, 29, 30, 31, 32, 33, 35, 44, 47, 49, 50, 52, 53, 57, 58, 59, 60, 65, 66, 69, 71, 73, 74, 86], "cluter": 8, "randomst": [8, 11, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 33, 35, 36, 37, 38, 39, 42, 43, 45, 46, 48, 49, 51, 52, 53], "seed": [8, 18, 19, 20, 22, 25, 26, 28, 30, 32, 39, 42, 43, 46, 48, 49, 51, 52, 53, 66], "x_outlier": [8, 82], "n_inlier": [8, 36, 38], "y_outlier": [8, 82], "labl": 8, "confusion_estim": 8, "difficulty_estim": 8, "transform": [8, 9, 14, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 30, 32, 34, 35, 52, 53, 57, 65, 82, 86], "simplest": [8, 69, 82], "variat": [8, 82], "tight": [8, 82], "emmott": [8, 81], "2013": [8, 73, 82], "reliabl": [8, 66], "multiclass": [8, 60, 82], "For": [8, 10, 16, 18, 19, 29, 30, 31, 32, 39, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 64, 66, 69, 70, 71, 72, 74, 77, 78, 79, 84, 85, 86], "maxim": [8, 30, 32, 48, 49], "confus": [8, 82], "measur": [8, 11, 16, 17, 18, 19, 34, 35, 45, 48, 49, 51, 52, 53, 73, 86], "digit": 8, "rang": [8, 18, 19, 45, 48, 49, 50, 51, 52, 53, 70, 74, 82], "accord": [8, 10, 12, 16, 18, 19, 46, 47, 49, 52, 53, 59, 71, 82], "final": [8, 11, 16, 18, 19, 57], "either": [8, 15, 37, 38, 48, 49, 50, 51, 52, 53, 60, 65, 66, 69, 71, 74, 82], "dispers": [8, 82], "guarante": [8, 66], "error": [8, 18, 19, 58, 60], "rais": [8, 58, 60], "ha": [8, 10, 16, 18, 19, 34, 35, 43, 47, 49, 51, 52, 53, 56, 58, 59, 60, 64, 65, 68, 71, 73, 74, 86], "few": [8, 34, 35, 84], "n_class": [8, 14, 16, 17, 18, 19, 50, 51, 52, 53], "predict_proba": [8, 14, 16, 17, 18, 19, 50, 51, 52, 53], "logist": [8, 82], "rbf": [8, 82], "befor": [8, 10, 14, 16, 28, 30, 32, 86], "otherwis": [8, 11, 16, 18, 19, 22, 25, 30, 32, 34, 35, 48, 49, 58, 60], "suppli": [8, 20, 21, 25, 26], "hardest": [8, 82], "point": [8, 10, 15, 16, 50, 52, 53, 65, 66, 69, 71, 73, 82], "quantiz": [8, 82], "should": [8, 11, 16, 18, 31, 34, 35, 37, 38, 50, 52, 66, 70, 71, 73], "len": [8, 10, 14, 16, 20, 26, 41, 49], "denot": [8, 37, 38, 70, 73, 74], "simpler": 8, "multipl": [8, 11, 16, 18, 19, 20, 26, 45, 48, 49, 52, 53, 66, 68, 71, 74, 82, 86], "e": [8, 10, 11, 15, 16, 18, 19, 24, 25, 34, 35, 52, 53, 58, 60, 66, 68, 69, 70, 71, 73, 74, 82, 84, 85, 86], "g": [8, 14, 15, 16, 23, 25, 28, 32, 42, 48, 49, 66, 69, 70, 73, 74, 82, 84, 85, 86], "would": [8, 18, 19, 29, 30, 31, 32, 45, 48, 49, 50, 51, 52, 53, 65, 70], "mix": 8, "easi": [8, 59, 69], "difficult": [8, 82], "16": [8, 64, 82], "3": [8, 10, 15, 16, 17, 18, 19, 31, 41, 43, 46, 49, 50, 52, 58, 60, 61, 68, 70, 72, 73, 74, 82, 86], "percentil": [8, 18, 19, 30, 32, 48, 49, 82], "procedur": 8, "effect": [8, 18, 19, 47, 49, 51, 53, 58, 60, 73, 86], "facil": 8, "locat": [8, 71, 74, 84], "thei": [8, 18, 19, 45, 49, 50, 51, 52, 53, 65, 71, 74], "distribut": [8, 18, 19, 28, 32, 42, 46, 47, 49, 50, 51, 52, 53, 69, 84, 85], "among": [8, 23], "avail": [8, 71, 79, 86], "suffici": 8, "fewer": [8, 34, 35], "mai": [8, 18, 19, 29, 30, 31, 32, 50, 52, 53, 64, 86], "note": [8, 11, 12, 15, 16, 18, 19, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 38, 42, 43, 49, 50, 52, 53, 59, 64, 70, 74], "packag": [8, 69, 82, 84, 85], "networkx": [8, 82], "da": [8, 73, 82], "dietterich": [8, 82], "t": [8, 14, 16, 17, 18, 19, 28, 29, 30, 31, 32, 34, 35, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 58, 60, 73, 74, 82, 84, 86], "fern": [8, 82], "wong": [8, 82], "w": [8, 14, 15, 16, 17, 18, 19, 28, 29, 30, 31, 32, 50, 51, 52, 53, 69, 71, 82], "systemat": [8, 82], "anomali": [8, 37, 38, 65, 82], "benchmark": [8, 65, 69, 78, 81], "real": [8, 18, 19, 68, 73, 82], "acm": [8, 73, 74, 82], "sigkdd": [8, 74, 82], "workshop": [8, 82], "pp": [8, 65, 74, 82], "21": [8, 82], "n_cluster": [8, 14, 16], "farther": 8, "other": [8, 14, 16, 22, 25, 36, 38, 66, 69, 71, 74, 82], "satisfi": [8, 73], "constraint": [8, 55, 73], "allow": [8, 43, 49, 50, 51, 52, 53, 57, 58, 60, 66, 71, 82, 86], "n_dim": [9, 10, 12, 16, 17, 19, 34, 35, 37, 38, 44, 49, 50, 51, 52, 53, 66, 68, 69, 70, 72, 74, 86], "max": [9, 15, 52, 53, 59, 73, 74], "result": [9, 11, 16, 18, 19, 21, 23, 25, 37, 38, 40, 48, 49, 50, 51, 52, 53, 58, 59, 60, 61, 64, 65, 70, 73, 82, 86], "zero": [9, 18, 19, 28, 30, 32, 42, 46, 48, 49, 50, 51, 52, 53, 64, 66, 70, 73], "unit": [9, 28, 30, 32, 42, 48, 49, 66, 70, 73], "deviat": [9, 15, 28, 30, 32, 42, 43, 48, 49, 64, 82], "n_shortest": 9, "dim": [10, 12, 16, 70, 74, 86], "metric_param": [10, 14, 16, 18, 19, 20, 25, 26, 30, 32, 33, 34, 35, 45, 48, 49, 51, 52, 53, 65, 73, 74, 86], "n_job": [10, 11, 12, 14, 16, 17, 18, 19, 28, 29, 30, 31, 32, 39, 42, 43, 44, 45, 46, 48, 49, 54, 86], "univari": [10, 14, 16, 33, 35, 66, 68, 72, 74], "multivari": [10, 14, 16, 24, 25, 33, 35, 66, 68, 70, 72], "needl": [10, 16], "haystack": [10, 16], "_metric": [10, 11, 16, 25, 30, 32, 34, 35, 48, 49], "about": [10, 11, 14, 16, 18, 19, 25, 30, 32, 33, 34, 35, 43, 45, 46, 48, 49, 51, 52, 53, 58, 60, 66, 74], "smallest": [10, 11, 14, 16, 86], "largest": [10, 16], "parallel": [10, 11, 14, 16, 18, 19, 28, 30, 32, 39, 42, 46, 48, 49, 54], "job": [10, 11, 12, 14, 16, 17, 18, 19, 28, 30, 32, 39, 42, 44, 46, 48, 49, 54], "pass": [10, 11, 14, 16, 18, 19, 31, 50, 52, 58, 60, 74, 82, 86], "signific": [10, 16], "implic": [10, 16], "wildoar": [10, 16], "11": [10, 16, 18, 19, 30, 32, 46, 48, 49], "6": [10, 15, 16, 43, 49, 66, 68, 73, 74, 86], "7": [10, 15, 16, 18, 19, 43, 46, 48, 49, 74], "8": [10, 14, 15, 16, 28, 30, 32, 42, 43, 48, 49, 52, 59, 64, 86], "24621125": [10, 16], "79583152": [10, 16], "24695077": [10, 16], "m_timestep": [10, 15, 16], "ndim": [10, 16, 58, 60, 66], "broadcast": [10, 12, 16, 21, 25, 74], "same": [10, 15, 16, 18, 19, 20, 26, 34, 35, 48, 49, 50, 51, 52, 53, 59, 65, 66, 70, 71, 73, 74, 86], "_subsequence_metr": [10, 16], "dataset": [10, 15, 16, 17, 18, 19, 20, 26, 27, 28, 30, 32, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 64, 65, 68, 70, 71, 74, 82, 86], "lib": [10, 16], "stride_trick": [10, 16], "sliding_window_view": [10, 16], "window_shap": [10, 16], "broadcast_to": [10, 16], "pad": [10, 16, 18, 19, 40, 46, 49, 64, 86], "mass": [10, 16, 73, 74], "correspond": [10, 16, 18, 19, 28, 30, 32, 34, 35, 50, 51, 52, 53, 64, 65], "everi": [10, 12, 16, 50, 51, 52, 53, 58, 60, 74], "broacast": [10, 16], "space": [10, 14, 16, 23, 40, 49, 59, 74], "amount": [10, 16], "output": [10, 11, 14, 16, 18, 19, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 58, 60, 66, 74], "search": [10, 16, 50, 51, 52, 53, 73], "run": [10, 11, 14, 16, 18, 19, 24, 25, 28, 32, 39, 42, 46, 48, 49, 57, 69, 70, 85], "output_s": [10, 16, 40, 49], "squeez": [10, 16, 56], "ecg200": [10, 16, 65], "reshap": [10, 16, 74], "14": [10, 16, 74], "00120332": [10, 16], "41943788": [10, 16], "81597243": [10, 16], "75219094": [10, 16], "72681005": [10, 16], "70155561": [10, 16], "9": [10, 15, 16, 28, 32, 42, 43, 48, 49, 71], "dtw": [10, 14, 16, 17, 19, 22, 23, 25, 27, 48, 49, 51, 52, 53, 65, 73, 74, 86], "01881424": [10, 16], "15083281": [10, 16], "48856368": [10, 16], "83139294": [10, 16], "75595579": [10, 16], "30073636": [10, 16], "65346307": [10, 16], "27919601": [10, 16], "25666948": [10, 16], "0961576": [10, 16], "warn": [10, 11, 16, 58, 60, 86], "full": [10, 16, 31, 34, 35, 41, 43, 49, 50, 52, 66, 69, 74, 86], "scalar": [10, 16, 56, 59, 74], "return_index": [10, 12, 15, 16, 74], "best": [10, 11, 16, 18, 19, 21, 23, 25, 29, 30, 31, 32, 48, 49, 50, 52, 53, 74, 86], "mani": [10, 16, 18, 19, 58, 60, 70, 74], "equal": [10, 16, 18, 19, 45, 49, 50, 51, 52, 53, 68, 69, 73, 82], "good": [10, 16, 24, 25, 34, 35, 82], "first": [10, 12, 15, 16, 18, 19, 42, 45, 48, 49, 51, 52, 53, 58, 60, 64, 65, 71, 72, 74, 82, 85, 86], "dist": [10, 16, 52, 53, 74], "minumum": [10, 16, 59], "posit": [10, 14, 16, 18, 19, 20, 24, 25, 26, 28, 32, 39, 42, 46, 49, 64, 73, 86], "threshold": [10, 16, 18, 19, 20, 23, 24, 25, 26, 30, 32, 47, 48, 49, 52, 53, 77, 79, 86], "max_match": [10, 16], "less": [10, 16, 18, 19, 52, 53, 66, 69, 70], "behaviour": [10, 16], "order": [10, 16, 18, 19, 28, 30, 32, 34, 35, 41, 42, 49, 50, 51, 52, 53, 58, 59, 60, 65, 66, 68, 74], "occurr": [10, 16, 64], "top": [10, 16, 20, 26], "length": [10, 16, 18, 19, 30, 32, 48, 49, 52, 53, 56, 58, 60, 61, 70, 72, 73, 86], "below": [10, 16, 30, 32, 48, 49, 71], "x_sampl": [10, 16, 74], "y_sampl": [10, 16, 74], "n_subsequ": [10, 16, 74], "yn_timestep": [10, 12, 16], "closer": [10, 16, 23, 34, 35], "treshold": [10, 16], "trivial": [10, 12, 16], "vicin": [10, 16], "within": [10, 16, 65, 74], "timestep": [10, 16, 34, 35, 46, 48, 49, 58, 60, 66, 68, 69, 70, 72, 74], "anoth": [10, 16, 65, 71, 82], "higher": [10, 16], "n_match": [10, 16], "found": [10, 16], "n_compon": [11, 16], "n_init": [11, 14, 16], "max_it": [11, 14, 16, 23, 25], "300": [11, 14, 16, 66], "verbos": [11, 14, 15, 16, 18, 19, 23, 24, 25, 85], "001": [11, 14, 16, 73], "dissimilar": [11, 16], "dissimilarity_param": [11, 16], "normalized_stress": [11, 16], "immers": [11, 16], "nonmetr": [11, 16], "non": [11, 16, 17, 19, 34, 35, 43, 49, 58, 60, 74], "smacof": [11, 16], "differ": [11, 16, 24, 25, 28, 30, 32, 34, 35, 36, 38, 42, 49, 64, 65, 66, 71, 72, 73, 74, 86], "initi": [11, 14, 15, 16, 23, 64, 65, 71], "determin": [11, 14, 16, 18, 19, 21, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 38, 43, 49, 50, 52, 53, 71, 82], "stress": [11, 16], "iter": [11, 14, 16, 28, 30, 32, 36, 38, 69], "toler": [11, 14, 16, 34, 35, 73], "respect": [11, 16, 65, 69, 71, 77], "declar": [11, 14, 16, 71, 86], "converg": [11, 14, 16], "tune": [11, 16], "separ": [11, 16, 71, 82], "whether": [11, 16, 28, 30, 32, 58, 59, 60, 65], "being": [11, 16], "center": [11, 14, 16], "reproduc": [11, 16], "across": [11, 16], "function": [11, 18, 19, 24, 31, 41, 42, 43, 50, 52, 64, 65, 66, 69, 70, 71, 73, 74, 86], "measu": [11, 16], "norm": [11, 16, 73], "instead": [11, 15, 16, 18, 19, 29, 30, 31, 32, 36, 38, 50, 52, 53, 66, 74, 78], "calcul": [11, 16, 28, 30, 32, 33, 35, 47, 65], "conveni": [11, 16, 33, 35, 66], "wrapper": [11, 16, 33, 35, 56], "sklearn": [11, 16, 18, 19, 31, 33, 35, 41, 42, 49, 50, 52, 58, 60, 64, 65, 66, 82], "manifold": [11, 16], "subsequenec": [12, 16], "xn_timestep": [12, 16], "second": [12, 15, 16, 18, 19, 45, 48, 49, 51, 52, 53, 71, 74], "r": [14, 15, 16, 17, 18, 19, 23, 25, 28, 29, 30, 31, 32, 43, 45, 48, 49, 50, 51, 52, 53, 65, 73, 85], "init": [14, 15, 16], "tol": [14, 15, 16], "softdtw": [14, 16], "penalti": [14, 15, 16, 73], "tradit": [14, 16, 70, 73, 82, 86], "randomli": [14, 16, 43, 48, 49, 64, 79], "centroid": [14, 16, 65, 86], "consecut": [14, 16], "diagnost": [14, 16], "messag": [14, 16, 58, 60], "dure": [14, 16, 24, 25], "n_iter_": [14, 16], "cluster_centers_": [14, 16], "labels_": [14, 16], "Not": [14, 16, 18, 19], "fit_predict": [14, 16, 18, 19], "n_featur": [14, 16, 17, 18, 19, 28, 29, 30, 31, 32, 41, 44, 45, 47, 49, 50, 51, 52, 53], "present": [14, 16, 18, 19, 65, 71], "api": [14, 16, 18, 19, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 66, 68, 83, 86], "consist": [14, 16, 18, 19, 24, 25, 29, 30, 31, 32, 48, 49, 50, 52, 53, 64, 74, 86], "convent": [14, 16, 18, 19, 57, 58, 60, 66, 69, 77], "int64": [14, 16], "fit_transform": [14, 16, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49], "fit_param": [14, 16, 41, 44, 45, 47, 49], "n_output": [14, 16, 17, 18, 19, 28, 29, 30, 31, 32, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "target": [14, 16, 18, 19, 23, 25, 41, 44, 45, 47, 49, 50, 51, 52, 53, 60, 65, 84], "unsupervis": [14, 16, 18, 19, 41, 44, 45, 47, 49], "addit": [14, 16, 41, 44, 45, 47, 49, 66, 69, 72, 74], "x_new": [14, 16, 41, 44, 45, 47, 49], "n_features_new": [14, 16, 41, 44, 45, 47, 49], "predict": [14, 16, 17, 18, 19, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 50, 51, 52, 53, 64, 65, 78], "belong": [14, 16, 65, 66], "set_output": [14, 16, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49], "introduc": [14, 16, 18, 19, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 86], "panda": [14, 16, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49], "configur": [14, 16, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 65, 66, 74, 78, 85], "datafram": [14, 16, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49], "polar": [14, 16, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49], "unchang": [14, 15, 16, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49], "wa": [14, 16, 18, 19, 21, 25, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 65, 86], "30": [14, 16, 66, 73, 74], "0001": [14, 16], "pam": [14, 16], "medoid": [14, 16, 22, 25, 65, 86], "core": [14, 16, 18, 19, 28, 32, 39, 42, 43, 45, 46, 49], "integ": [14, 16, 18, 19, 28, 32, 39, 42, 46, 49, 59, 82], "medoid_indices_": [14, 16], "n_neighbor": [14, 16, 17, 19, 65, 86], "classes_": [14, 16, 18, 19, 23, 25, 50, 51, 52, 53, 65], "shapel": [14, 16], "known": [14, 16], "multivarait": [14, 16], "kneighborclassifi": [14, 16], "sample_weight": [14, 15, 16, 17, 18, 19, 28, 29, 30, 31, 32, 34, 35, 50, 51, 52, 53], "accuraci": [14, 16, 17, 18, 19, 28, 29, 30, 31, 32, 34, 35, 50, 51, 52, 53, 65], "multi": [14, 16, 17, 18, 19, 28, 29, 30, 31, 32, 43, 49, 50, 51, 52, 53, 58, 60, 82], "subset": [14, 16, 17, 18, 19, 28, 29, 30, 31, 32, 33, 35, 50, 51, 52, 53], "harsh": [14, 16, 17, 18, 19, 28, 29, 30, 31, 32, 50, 51, 52, 53], "sinc": [14, 16, 17, 18, 19, 21, 25, 28, 29, 30, 31, 32, 43, 49, 50, 51, 52, 53, 65, 66, 70, 74, 82], "you": [14, 16, 17, 18, 19, 28, 29, 30, 31, 32, 50, 51, 52, 53, 66, 84, 85, 86], "correctli": [14, 16, 17, 18, 19, 28, 29, 30, 31, 32, 50, 51, 52, 53, 86], "x_timestep": [15, 74], "y_timestep": [15, 74], "out": [15, 18, 19, 66, 83], "vector": [15, 58, 60], "penal": 15, "store": [15, 18, 19, 65, 69], "mm": 15, "max_stabl": 15, "learning_r": 15, "decai": 15, "1e": [15, 34, 35], "max_epoch": 15, "50": [15, 65, 69, 74], "return_cost": 15, "control": [15, 18, 19, 20, 24, 25, 26, 28, 30, 32, 39, 42, 45, 46, 48, 49, 85], "exp": [15, 18, 19, 52, 53], "influenc": [15, 18, 19, 29, 30, 31, 32, 50, 52, 53], "much": [15, 34, 35, 86], "contribut": 15, "ssg": 15, "minim": [15, 30, 32, 48, 49], "equival": 15, "stochast": 15, "subgradi": 15, "epoch": 15, "cost": [15, 24, 25, 73, 74], "rate": 15, "minmum": 15, "runtim": 15, "pseudo": [15, 21, 24, 25], "27442791e": 15, "01": [15, 43, 49], "19807473e": 15, "02": [15, 43, 49, 64], "77490053e": 15, "60441308e": 15, "31930140e": 15, "17437783e": 15, "43925941e": 15, "60983434e": 15, "72118437e": 15, "73352049e": 15, "56701557e": 15, "53269314e": 15, "33366128e": 15, "09010828e": 15, "97539989e": 15, "71443248e": 15, "42492836e": 15, "71408958e": 15, "82518334e": 15, "35671953e": 15, "26442901e": 15, "38342948e": 15, "11248815e": 15, "99355168e": 15, "00": [15, 43, 49], "08588712e": 15, "35954194e": 15, "78345146e": 15, "41023092e": 15, "99915956e": 15, "82717462e": 15, "71687181e": 15, "55819192e": 15, "28805337e": 15, "06653283e": 15, "25159669e": 15, "02389872e": 15, "39410523e": 15, "34687887e": 15, "03": 15, "98654485e": 15, "85832342e": 15, "56436416e": 15, "25302660e": 15, "77697444e": 15, "24606299e": 15, "76357782e": 15, "27083874e": 15, "44590342e": 15, "64184026e": 15, "03608265e": 15, "13964118e": 15, "33595675e": 15, "09954847e": 15, "61924171e": 15, "47433305e": 15, "29583168e": 15, "00425122e": 15, "80524683e": 15, "70210329e": 15, "40259039e": 15, "59657389e": 15, "52170730e": 15, "54666287e": 15, "93690730e": 15, "23968406e": 15, "upper": [15, 18, 19, 30, 32, 36, 38, 45, 46, 48, 49, 51, 52, 53, 74], "keogh": [15, 74], "2002": 15, "28th": 15, "veri": [15, 70, 73], "larg": [15, 59, 64, 69, 73, 77], "min_dist": 15, "cumul": 15, "step": [15, 30, 32, 48, 49, 64, 65, 66, 69, 70], "precomput": [15, 18, 19, 29, 30, 31, 32, 50, 52, 53], "x_indic": 15, "y_indic": 15, "provid": [15, 43, 46, 65, 66, 71, 73, 84], "n": [15, 66, 74, 82], "omitaomu": 15, "o": [15, 18, 19, 23, 51, 53, 74], "2021": [15, 34, 35], "pattern": [15, 30, 32, 48, 49, 73, 82], "recognit": [15, 30, 32, 48, 49, 73], "44": 15, "2231": 15, "2240": 15, "diagon": 15, "raec1aca773": 15, "grid": [17, 18, 19, 45, 48, 49, 51, 52, 53], "elast": [17, 19, 74, 86], "non_elast": [17, 19], "one": [17, 18, 19, 20, 26, 42, 45, 48, 49, 51, 52, 53, 56, 64, 65, 66, 69, 71, 74, 77], "line": [17, 19, 59, 85, 86], "bagnal": [17, 19, 86], "2015": [17, 19, 48, 49, 86], "slightli": [17, 19, 65], "smaller": [17, 19, 59], "custom": [17, 18, 19, 43, 49, 51, 53], "paralel": [17, 19, 43, 49], "jason": [17, 19], "anthoni": [17, 19], "knowledg": [17, 18, 19, 22, 24, 25, 28, 32, 34, 35, 42, 43, 46, 49, 51, 53, 65, 73, 74], "discoveri": [17, 18, 19, 28, 32, 42, 43, 46, 49, 51, 53, 74], "29": [17, 19], "clf": [17, 19, 66], "min_r": [17, 18, 19, 45, 48, 49, 51, 52, 53], "max_r": [17, 18, 19, 45, 48, 49, 51, 52, 53], "ddtw": [17, 19, 73, 74], "9866666666666667": [17, 19], "n_estim": [18, 19, 65], "max_sampl": [18, 19], "bootstrap": [18, 19], "oob_scor": [18, 19], "class_weight": [18, 19, 28, 29, 30, 31, 32, 51, 52, 53], "warm_start": [18, 19], "base_estim": [18, 19, 86], "deprec": [18, 19, 21, 25, 43, 49, 51, 52, 53, 86], "meta": [18, 19], "draw": [18, 19, 30, 32, 48, 49], "drawn": [18, 19], "replac": [18, 19, 34, 35, 71, 84, 85], "balanc": [18, 19, 28, 30, 32, 51, 52, 53], "associ": [18, 19, 28, 30, 32, 51, 52, 53], "invers": [18, 19, 51, 52, 53, 65], "proport": [18, 19, 51, 52, 53], "frequenc": [18, 19, 51, 52, 53, 59, 64], "reus": [18, 19, 65, 66, 70], "solut": [18, 19], "previou": [18, 19, 70], "add": [18, 19, 24, 25, 57, 59, 86], "just": [18, 19, 68, 85], "whole": [18, 19], "resampl": [18, 19, 20, 26, 28, 32, 39, 46, 49], "been": [18, 19, 43, 49, 59, 71, 73, 86], "remov": [18, 19, 21, 25, 52, 53, 56, 71, 86], "estimators_samples_": [18, 19], "member": [18, 19], "reduc": [18, 19, 43, 49, 69], "footprint": [18, 19], "thu": [18, 19], "fetch": [18, 19, 85], "slower": [18, 19, 74], "expect": [18, 19, 29, 30, 31, 32, 44, 49, 50, 52, 53, 65, 66, 70, 82], "decision_funct": [18, 19, 34, 35], "decis": [18, 19, 24, 25, 50, 51, 52, 53, 65, 77], "spars": [18, 19, 28, 30, 32, 50, 51, 52, 53, 58, 60, 64], "matric": [18, 19], "accept": [18, 19, 28, 32, 42, 49, 58, 60, 66, 69, 70, 71, 74], "column": [18, 19, 58, 60, 71, 72], "appear": [18, 19, 65], "special": [18, 19, 66], "case": [18, 19, 73], "build": [18, 19, 51, 53, 66, 84], "highest": [18, 19, 64], "do": [18, 19, 50, 51, 52, 53, 73, 74, 85, 86], "resort": [18, 19], "vote": [18, 19], "predict_log_proba": [18, 19], "log": [18, 19, 43, 49, 86], "p": [18, 19, 22, 23, 24, 25, 34, 35, 65, 73, 74], "repres": [18, 19, 65, 68, 72, 73, 78], "100": [18, 19, 20, 23, 25, 26, 45, 49, 51, 53, 59, 65, 69], "defin": [18, 19, 29, 30, 31, 32, 41, 45, 47, 48, 49, 50, 51, 52, 53, 65, 71], "frac": [18, 19, 29, 30, 31, 32, 50, 52, 53], "u": [18, 19, 29, 30, 31, 32, 50, 52, 53], "v": [18, 19, 29, 30, 31, 32, 50, 52, 53, 71, 73], "residu": [18, 19, 29, 30, 31, 32, 50, 52, 53], "sum": [18, 19, 29, 30, 31, 32, 48, 49, 50, 52, 53], "squar": [18, 19, 20, 26, 29, 30, 31, 32, 50, 52, 53], "y_true": [18, 19, 29, 30, 31, 32, 50, 52, 53], "y_pred": [18, 19, 29, 30, 31, 32, 50, 52, 53, 65], "total": [18, 19, 29, 30, 31, 32, 50, 52, 53], "neg": [18, 19, 29, 30, 31, 32, 50, 51, 52, 53], "becaus": [18, 19, 29, 30, 31, 32, 50, 52, 53], "arbitrarili": [18, 19, 29, 30, 31, 32, 50, 52, 53], "wors": [18, 19, 29, 30, 31, 32, 50, 52, 53], "constant": [18, 19, 29, 30, 31, 32, 50, 52, 53], "alwai": [18, 19, 22, 25, 29, 30, 31, 32, 36, 38, 50, 52, 53, 73], "disregard": [18, 19, 29, 30, 31, 32, 50, 52, 53], "some": [18, 19, 29, 30, 31, 32, 50, 52, 53, 57, 58, 60, 68, 69, 72, 84], "n_samples_fit": [18, 19, 29, 30, 31, 32, 50, 52, 53], "multioutput": [18, 19, 29, 30, 31, 32, 50, 52, 53], "uniform_averag": [18, 19, 29, 30, 31, 32, 50, 52, 53], "23": [18, 19, 29, 30, 31, 32, 50, 52, 53, 64], "r2_score": [18, 19, 29, 30, 31, 32, 50, 52, 53], "except": [18, 19, 29, 30, 31, 32, 50, 52, 53, 71, 82], "multioutputregressor": [18, 19, 29, 30, 31, 32, 50, 52, 53], "baseforestclassifi": 18, "estimator_param": 18, "max_depth": [18, 19, 50, 51, 52, 53, 65], "min_samples_split": [18, 19, 50, 51, 52, 53], "min_samples_leaf": [18, 19, 50, 51, 52, 53, 86], "min_impurity_decreas": [18, 19, 50, 51, 52, 53], "criterion": [18, 19, 51, 52, 53, 86], "entropi": [18, 19, 51, 52, 53], "tree": [18, 19, 27, 65, 77, 86], "baseforestregressor": 18, "squared_error": [18, 19, 52, 53], "baseshapeletforestclassifi": 18, "n_shapelet": [18, 19, 20, 26, 30, 32, 48, 49, 52, 53, 86], "log2": [18, 19, 20, 26, 34, 35, 43, 47, 49, 52, 53, 86], "min_shapelet_s": [18, 19, 20, 23, 25, 26, 30, 32, 48, 49, 52, 53], "max_shapelet_s": [18, 19, 20, 23, 25, 26, 30, 32, 48, 49, 52, 53], "directli": [18, 64, 71], "baseshapeletforestregressor": 18, "depth": [18, 19, 51, 52, 53, 85], "expand": [18, 19, 52, 53], "until": [18, 19, 52, 53], "leav": [18, 19, 50, 51, 52, 53], "pure": [18, 19, 52, 53], "node": [18, 19, 46, 49, 50, 51, 52, 53], "leaf": [18, 19, 50, 51, 52, 53], "impur": [18, 19, 51, 52, 53], "decreas": [18, 19, 51, 52, 53], "larger": [18, 19, 34, 35, 52, 53, 59, 66, 72, 73], "mandatori": [18, 19, 45, 48, 49, 51, 52, 53], "specifii": [18, 19, 45, 48, 49, 51, 52, 53], "give": [18, 19, 20, 26, 45, 48, 49, 51, 52, 53, 78], "follow": [18, 19, 31, 41, 43, 45, 46, 48, 49, 50, 51, 52, 53, 66, 69, 70, 71, 73, 74, 85], "num_r": [18, 19, 45, 48, 49, 51, 52, 53], "gini": [18, 19, 51, 52, 53], "scaled_euclidean": [18, 19, 52, 53, 73, 74, 86], "y_hat": [18, 19], "mse": [18, 19, 52, 53, 86], "v1": [18, 19, 52, 53, 69, 71], "forestmixin": 18, "n_interv": [18, 19, 20, 26, 34, 35, 43, 47, 49, 52, 53, 86], "sqrt": [18, 19, 20, 26, 34, 35, 43, 47, 49, 52, 53], "fix": [18, 19, 43, 49, 52, 53, 64, 86], "summar": [18, 19, 43, 49, 52, 53], "mean_var_std": [18, 19], "sample_s": [18, 19, 33, 35, 43, 49, 52, 53], "min_siz": [18, 19, 43, 46, 49, 52, 53, 86], "max_siz": [18, 19, 43, 46, 49, 52, 53, 86], "contamin": [18, 19, 37, 38], "strategi": [18, 19, 28, 30, 32, 36, 38, 42, 46, 47, 49], "offset": [18, 19], "offset_": [18, 19], "model_select": [18, 19, 27, 64, 65, 66], "balanced_accuracy_scor": [18, 19], "test_siz": [18, 19, 36, 37, 38, 66], "anomalies_train_s": [18, 19, 37, 38], "8674": [18, 19], "n_pivot": [18, 19, 45, 49, 51, 52, 53], "pivot_sampl": [18, 19, 51, 53], "metric_sampl": [18, 19, 45, 49, 51, 53], "metric_factori": [18, 19, 51, 53, 86], "uniform": [18, 19, 45, 46, 47, 49, 51, 53, 70, 74], "parameter": [18, 19, 51, 53], "suggest": [18, 19, 51, 53], "luca": [18, 19, 51, 53], "2019": [18, 19, 43, 49, 51, 53, 85], "2020": [18, 19, 22, 23, 24, 25, 34, 35, 46, 49, 51, 53, 65], "combin": [18, 19, 23, 43, 49, 51, 53, 64], "sub": [18, 19, 51, 53], "benjamin": [18, 19, 51, 53], "ahm": [18, 19, 51, 53], "shifaz": [18, 19, 51, 53], "charlott": [18, 19, 51, 53], "pelleti": [18, 19, 51, 53], "lachlan": [18, 19, 51, 53], "neill": [18, 19, 51, 53], "nayyar": [18, 19, 51, 53], "zaidi": [18, 19, 51, 53], "bart": [18, 19, 51, 53], "goethal": [18, 19, 51, 53], "fran\u00e7oi": [18, 19, 46, 49, 51, 53], "petitjean": [18, 19, 46, 49, 51, 53], "geoffrei": [18, 19, 46, 49, 51, 53, 73], "webb": [18, 19, 28, 32, 42, 46, 49, 51, 53, 73], "scalabl": [18, 19, 51, 53], "n_kernel": [18, 19, 28, 29, 32, 42, 46, 49, 52, 53, 64], "normal": [18, 19, 20, 26, 28, 29, 30, 31, 32, 37, 38, 42, 46, 47, 49, 52, 53, 59, 64, 65, 70, 73, 86], "sampling_param": [18, 19, 28, 29, 32, 42, 46, 49, 52, 53], "kernel_s": [18, 19, 28, 29, 32, 40, 42, 46, 49, 52, 53, 86], "bias_prob": [18, 19, 29, 32, 46, 49, 52, 53], "normalize_prob": [18, 19, 29, 30, 32, 46, 48, 49, 52, 53], "padding_prob": [18, 19, 29, 32, 46, 49, 52, 53], "13": [18, 19, 46, 49], "bia": [18, 19, 40, 46, 49], "processor": [18, 19, 48, 49, 85], "alpha": [18, 19, 28, 29, 30, 31, 32, 52, 53, 59], "current": [18, 19, 23, 52, 53, 69, 70, 71, 85, 86], "ab": [18, 19, 52, 53], "toward": [18, 19, 23, 52, 53, 57], "increas": [18, 19, 52, 53], "independeth": [18, 19, 52, 53], "sparse_output": [18, 19], "high": [18, 19], "dimension": [18, 19], "fall": [18, 19, 66, 73], "lead": [18, 19, 65, 86], "code": [18, 19, 65, 70, 74, 86], "ones": [18, 19], "csr": [18, 19], "bin": [20, 26, 47, 49, 59, 82, 84], "n_bin": [20, 26, 34, 35, 47, 49], "n_repeat": [20, 26], "discret": [20, 26, 28, 30, 32, 48, 49, 59, 82], "permut": [20, 26], "show_bin": [20, 26], "show_grid": [20, 26], "scorer": [20, 26, 28, 30, 32], "were": [20, 26, 72], "annot": [20, 26, 27], "axi": [20, 26, 50, 51, 52, 53, 56, 58, 60, 70, 74], "mappabl": [20, 26], "scalarmapp": [20, 26], "colorbar": [20, 26], "specici": [20, 26], "least": [20, 26, 58, 60], "importances_": [20, 26], "components_": [20, 26], "permuteimport": 20, "kernel_scal": [20, 26], "25": [20, 26, 51, 53, 73, 82], "train_x": [21, 25], "train_i": [21, 25], "valid_scor": [21, 25], "method_arg": [21, 25], "basecounterfactu": [21, 25], "infer": [21, 25], "most": [21, 25, 64, 65, 68, 72, 82, 84], "appropri": [21, 25, 72], "_counterfactu": [21, 25], "renam": [21, 25, 43, 49, 86], "success": [21, 25], "stabl": [21, 25, 37, 38, 68], "x_counterfactu": [21, 25, 34, 35], "wdtw": [22, 25, 73, 74, 86], "karlsson": [22, 24, 25, 34, 35, 65], "reban": [22, 24, 25, 34, 35, 65], "j": [22, 24, 25, 34, 35, 65, 74], "papapetr": [22, 24, 25, 34, 35, 65], "gioni": [22, 24, 25, 34, 35, 65], "local": [22, 24, 25, 34, 35, 65], "tweak": [22, 24, 25, 34, 35, 65], "system": [22, 24, 25, 34, 35, 65, 69, 71, 84, 85], "62": [22, 24, 25, 34, 35, 65], "1671": [22, 24, 25, 34, 35, 65], "1700": [22, 24, 25, 34, 35, 65], "explainer_": [22, 25], "dynamictimewarptransform": 23, "gamma": 23, "move": [23, 51, 53, 73], "euclideantransform": 23, "knearestprototypesampl": 23, "prototype_indici": 23, "metric_transform": 23, "prototyp": 23, "nearest_index": 23, "state": [23, 37, 38, 45, 49, 70, 78], "sample_mov": 23, "sampla": 23, "knearestshapeletprototypesampl": 23, "shapeletprototypesampl": 23, "metrictransform": 23, "predictevalu": 23, "probabilityevalu": 23, "step_siz": [23, 25], "n_prototyp": [23, 25], "samsten": [23, 25], "isak": [23, 25], "estimator_": [23, 25], "partitions_": [23, 25], "prototypesampl": [23, 25], "target_": [23, 25], "targetevalu": [23, 25], "prototype_indic": 23, "refin": 23, "new_counterfactu": 23, "_o": 23, "sample_shapelet": 23, "uniformprototypesampl": 23, "uniformli": [23, 47, 49, 52, 53], "weighteddynamictimewarptransform": 23, "epsilon": [24, 25, 73, 86], "batch_siz": [24, 25], "max_path": [24, 25], "cosin": [24, 25, 73, 74], "manhattan": [24, 25, 73, 74], "degre": [24, 25], "batch": [24, 25, 54], "candid": [24, 25, 34, 35], "subsampl": [24, 25], "stdout": [24, 25], "execut": [24, 25, 54], "revers": [24, 25, 65], "2018": [24, 25, 65], "via": [24, 25, 65], "irrevers": [24, 25, 65], "paths_": [24, 25], "x_true": 25, "normalized_euclidean": [25, 34, 35, 73, 74], "ensembl": [27, 65, 66, 82, 86], "linear_model": [27, 66, 78, 86], "variable_len": [27, 58, 60, 72], "n_group": [28, 30, 32, 42, 48, 49, 64], "64": [28, 30, 32, 42, 48, 49, 64, 69, 85], "fit_intercept": [28, 29, 30, 31, 32], "cv": [28, 29, 30, 31, 32], "group": [28, 30, 32, 36, 38, 42, 48, 49, 64, 78], "sampler": [28, 32, 42, 49], "half": [28, 30, 32, 74], "n_alpha": [28, 30, 32], "try": [28, 30, 32, 56, 64, 65], "intercept": [28, 30, 32], "signatur": [28, 30, 32], "class_label": [28, 30, 32], "sparsescal": [28, 30, 32, 64], "disabl": [28, 30, 32, 58, 60, 66], "standardscal": [28, 30, 32, 64], "dempster": [28, 32, 42, 46, 49, 86], "schmidt": [28, 32, 42, 48, 49], "d": [28, 32, 34, 35, 42, 43, 49, 69, 73, 74], "2023": [28, 32, 42, 49, 73, 86], "hydra": [28, 32, 42, 49], "accur": [28, 32, 42, 46, 49, 76], "10000": [29, 32, 64], "gcv_mode": [29, 30, 31, 32], "shapelet_s": [30, 32, 48, 49, 52], "soft_min": [30, 32, 48, 49], "soft_max": [30, 32, 48, 49], "soft_threshold": [30, 32, 48, 49], "abov": [30, 32, 48, 49, 66, 70, 73], "count": [30, 32, 48, 49, 64], "1000": [30, 32, 46, 48, 49, 52], "antoin": [30, 32, 48, 49], "guillaum": [30, 32, 48, 49, 86], "christel": [30, 32, 48, 49], "vrain": [30, 32, 48, 49], "elloumi": [30, 32, 48, 49], "wael": [30, 32, 48, 49], "artifici": [30, 32, 48, 49], "intellig": [30, 32, 48, 49, 73], "2022": [30, 32, 48, 49, 86], "basetransformclassifi": 31, "_estimator_typ": [31, 50, 52], "accuracy_scor": 31, "enforc": [31, 50, 52, 58, 60], "through": [31, 50, 52, 73, 84], "requires_i": [31, 50, 52], "classifiermixin": 31, "left": [31, 50, 52], "hand": [31, 50, 52], "side": [31, 40, 49, 50, 52], "correct": [31, 34, 35, 50, 52, 55, 76], "mro": [31, 50, 52], "myestim": [31, 50, 52], "def": [31, 41, 49, 50, 52, 65, 74], "__init__": [31, 41, 49, 50, 52], "is_fitted_": [31, 50, 52], "fill_valu": [31, 41, 49, 50, 52], "66": [31, 46, 49], "basetransformestim": 31, "basetransformregressor": 31, "regressormixin": [31, 50, 52], "transformridgecv": 31, "transformridgeclassifiercv": 31, "nativ": [33, 34, 35, 42, 49, 86], "x_factual": [34, 35], "atol": [34, 35], "08": [34, 35], "n_timetep": [34, 35], "overlap": [34, 35, 43, 49], "counterfacut": [34, 35], "factual": [34, 35], "x_plausibl": [34, 35], "y_plausibl": [34, 35], "y_counterfactu": [34, 35], "typic": [34, 35, 66, 74], "m_sampl": [34, 35], "localoutlierfactor": [34, 35], "individu": [34, 35, 70], "plausabl": [34, 35], "incic": [34, 35], "better": [34, 35], "delanei": [34, 35], "green": [34, 35], "kean": [34, 35], "arxiv": [34, 35, 48, 49], "2009": [34, 35], "13211v2": [34, 35], "redund": [34, 35], "impact": [34, 35], "x_nativ": [34, 35], "y_nativ": [34, 35], "captur": [34, 35, 66], "n_nativ": [34, 35], "n_counterfactu": [34, 35], "avareg": [34, 35], "smyth": [34, 35], "b": [34, 35, 65, 74], "interpret": [34, 35, 43, 49], "divers": [34, 35], "2101": [34, 35], "09056v1": [34, 35], "y_predict": [34, 35], "n_split": [36, 38], "shuffl": [36, 38, 66], "total_n_outli": [36, 38], "psudo": [36, 37, 38], "contrari": [36, 38], "fold": [36, 38], "insert": [36, 38], "repeatedli": [36, 38, 66, 69], "get_n_split": [36, 38], "compat": [36, 38, 39, 42, 43, 45, 46, 48, 49], "train_idx": [36, 38], "test_idx": [36, 38], "normal_class": [37, 38], "anomal": [37, 38], "train_test_split": [37, 38, 64, 65, 66], "baseattributetransform": [39, 42, 43, 45, 46, 48, 49], "engin": [39, 73], "embedding_": [39, 42, 46, 48, 49], "embed": [39, 42, 43, 45, 46, 48, 49, 78], "underli": [39, 42, 46, 48, 49], "n_dimens": [39, 42, 43, 45, 46, 48, 49, 58, 60], "stride": [40, 49], "implicit": [40, 49], "floor": [40, 49], "deleg": [41, 49, 57, 58, 60], "get_feature_names_out": [41, 49], "automat": [41, 49, 84], "wrap": [41, 49, 56], "develop": [41, 49, 85], "onetoonefeaturemixin": [41, 49], "classnameprefixfeaturesoutmixin": [41, 49], "help": [41, 49, 65], "transformermixin": [41, 49], "mytransform": [41, 49], "descret": [42, 49], "make_pipelin": [42, 49, 64, 66], "make_union": [42, 49], "dempster_hydra": [42, 49], "32": [42, 49, 69], "catch22": [43, 49], "_summar": [43, 49], "x_t": [43, 49], "19633603e": [43, 49], "51047206e": [43, 49], "90000000e": [43, 49], "80000000e": [43, 49], "48441896e": [43, 49], "73293560e": [43, 49], "21476510e": [43, 49], "70000000e": [43, 49], "00000000e": [43, 49], "70502518e": [43, 49], "60000000e": [43, 49], "42857143e": [43, 49], "26666667e": [43, 49], "89974643e": [43, 49], "31570726e": [43, 49], "50000000e": [43, 49], "90873852e": [43, 49], "47311800e": [43, 49], "intervalmixin": 43, "It": [43, 65, 66, 83], "_get_gener": [43, 46], "mean_var_slop": [43, 49, 52, 53], "possibli": [43, 49], "slope": [43, 49], "releas": [43, 49], "lock": [43, 49], "gil": [43, 49], "As": [43, 49, 64, 66, 69, 71, 73, 74], "varianc": [43, 49, 64, 66, 70, 73], "suit": [43, 49, 57, 74, 86], "futur": [43, 49, 69, 86], "downstream": [43, 49], "project": [43, 49, 85], "own": [43, 49], "cython": [43, 49, 74], "lubba": [43, 49], "carl": [43, 49], "h": [43, 49], "sarab": [43, 49], "sethi": [43, 49], "philip": [43, 49], "knaut": [43, 49], "simon": [43, 49], "schultz": [43, 49], "ben": [43, 49], "fulcher": [43, 49], "nick": [43, 49], "jone": [43, 49], "canon": [43, 49], "characterist": [43, 49], "33": [43, 49], "1821": [43, 49], "1852": [43, 49], "15": [43, 49], "timepoint": [43, 49], "std": [43, 49, 73], "12": [43, 49, 74], "matrixprofil": [44, 49], "pivotmixin": 45, "rocketmixin": 46, "angu": [46, 49], "exception": [46, 49], "34": [46, 49, 66, 74], "1454": [46, 49], "1495": [46, 49], "51333333": [46, 49], "11526939": [46, 49], "47333333": [46, 49], "04712544": [46, 49], "24": [46, 49], "82912261": [46, 49], "52666667": [46, 49], "26611524": [46, 49], "54": [46, 49, 74], "98047216": [46, 49], "81260641": [46, 49], "54666667": [46, 49], "71210092": [46, 49], "35333333": [46, 49], "28841158": [46, 49], "25333333": [46, 49], "82203705": [46, 49], "72938203": [46, 49], "45333333": [46, 49], "53756324": [46, 49], "24666667": [46, 49], "8380654": [46, 49], "68666667": [46, 49], "80533684": [46, 49], "26": [46, 49, 70], "41709413": [46, 49], "65634235": [46, 49], "94724793": [46, 49], "32666667": [46, 49], "85575661": [46, 49], "67630249": [46, 49], "piecewic": 47, "get_threshold": 47, "suitabl": 47, "normalbin": 47, "assum": [47, 49, 59, 65, 68, 70, 71, 72], "uniformbin": 47, "ignore_i": [48, 49], "three": [48, 49, 65, 73, 74], "wistuba": [48, 49], "martin": [48, 49], "josif": [48, 49], "grabocka": [48, 49], "lar": [48, 49], "thiem": [48, 49], "ultra": [48, 49], "preprint": [48, 49], "1503": [48, 49], "05018": [48, 49], "load_gunpoint": [48, 49], "erp": [48, 49, 73, 74, 86], "min_g": [48, 49], "max_g": [48, 49], "shapeletmixin": [48, 86], "estiom": 48, "basetre": 50, "check_input": [50, 51, 52, 53], "bypass": [50, 51, 52, 53], "sure": [50, 51, 52, 53, 58, 60], "your": [50, 51, 52, 53, 84, 85, 86], "up": [50, 51, 52, 53, 84], "node_count": [50, 51, 52, 53], "tree_": [50, 51, 52, 53], "equvival": [50, 51, 52, 53], "decision_path": [50, 51, 52, 53], "n_node": [50, 51, 52, 53], "nonzero": [50, 51, 52, 53, 68], "travers": [50, 51, 52, 53, 65], "basetreeclassifi": 50, "child": [50, 51, 52, 53], "net": [50, 51, 52, 53], "carri": [50, 51, 52, 53], "don": [50, 51, 52, 53, 84], "know": [50, 51, 52, 53], "what": [50, 51, 52, 53, 82, 83], "basetreeregressor": 50, "msm": [51, 53, 73, 74, 86], "min_c": [51, 53], "max_c": [51, 53], "num_c": [51, 53], "20": [51, 53, 74], "basefeaturetreeclassifi": 52, "basefeaturetreeregressor": 52, "dilatedshapelettreeclassifi": 52, "scaled_dtw": [52, 53, 73, 74], "structur": [52, 53], "n_classes_": [52, 53], "run_in_parallel": 54, "parallel_arg": 54, "assert_exhaustive_parameter_check": 55, "assert": 55, "ok": 55, "assert_parameter_check": 55, "skip": [55, 57], "extend": 55, "array_or_scalar": 56, "optional_f": 56, "item": 56, "singleton": 56, "recursivlei": 56, "unwrap": 56, "Such": 56, "unstabl": 56, "stabil": 56, "beta": 56, "unsat": 56, "check_estim": 57, "generate_onli": 57, "skip_scikit": 57, "adher": 57, "monkei": 57, "patch": 57, "relat": [57, 73], "silent": 57, "tailor": 57, "copi": [58, 60, 74], "ensure_2d": [58, 60], "ensure_ts_arrai": [58, 60], "allow_3d": [58, 60], "allow_nd": [58, 60], "force_all_finit": [58, 60], "multi_output": [58, 60], "ensure_min_sampl": [58, 60], "ensure_min_timestep": [58, 60], "ensure_min_dim": [58, 60], "allow_eo": [58, 60], "y_numer": [58, 60], "y_contigu": [58, 60], "2d": [58, 60, 66, 72, 74], "3d": [58, 60, 66, 72, 74], "finit": [58, 60], "varial": [58, 60], "report": [58, 60, 74], "ravel_1d": [58, 60], "input_nam": [58, 60], "convert": [58, 59, 60, 69, 82], "never": [58, 60, 64, 73], "empti": [58, 60], "attempt": [58, 60], "failur": [58, 60], "convers": [58, 60], "fortran": [58, 60], "style": [58, 60], "noth": [58, 60], "layout": [58, 60], "kept": [58, 60], "trigger": [58, 60], "might": [58, 60, 65], "ravel": [58, 60], "neither": [58, 60], "eo": [58, 60, 61, 68, 70, 72], "nan": [58, 60, 68, 72, 86], "pd": [58, 60], "na": [58, 60], "cannot": [58, 60], "infinit": [58, 60], "row": [58, 60, 72], "reject": [58, 60], "midpointnorm": 59, "vmin": 59, "vmax": 59, "midpoint": 59, "normalis": 59, "autoscal": 59, "autoscale_non": 59, "static": 59, "process_valu": 59, "homogen": 59, "effici": [59, 83, 86], "mask": 59, "is_scalar": 59, "byte": 59, "float32": 59, "float64": 59, "place": 59, "oper": [59, 66, 69, 70, 71, 84, 85], "greatli": 59, "improv": [59, 69], "speed": 59, "plot_frequency_domain": 59, "jitter": 59, "sample_spac": 59, "cmap": 59, "dark2": 59, "freqenc": 59, "matplotlib": [59, 70], "colormap": 59, "plot_time_domain": 59, "linewidth": 59, "zorder": 59, "show_legend": 59, "opac": 59, "width": 59, "color": 59, "legend": 59, "check_classification_target": 60, "valueerror": 60, "check_opt": 60, "option_valu": 60, "check_typ": 60, "target_typ": 60, "variabl": [61, 72, 85], "get_variable_length": 61, "lenght": 61, "is_end_of_seri": [61, 72], "wise": [61, 66, 70], "is_variable_length": 61, "wildboar": [64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 79, 82, 83, 85, 86], "dempsar": 64, "emploi": [64, 65], "sligtli": 64, "manner": 64, "activ": [64, 84], "record": [64, 65], "exponenti": 64, "Then": [64, 66], "had": 64, "purpos": [64, 65, 66, 74], "motestrain": 64, "954": 64, "84": [64, 65], "Of": [64, 65], "510": 64, "444": 64, "here": [64, 65, 71, 84], "wherein": 64, "dictat": 64, "stage": 64, "applic": [64, 65, 70], "scaler": 64, "compens": 64, "sparsiti": 64, "induc": 64, "exhibit": 64, "achiev": [64, 66], "ultim": 64, "ridg": [64, 78], "x27": [64, 65], "jupyt": [64, 65], "environ": [64, 65, 84, 85], "rerun": [64, 65], "cell": [64, 65], "html": [64, 65], "trust": [64, 65, 66], "notebook": [64, 65], "On": [64, 65, 73], "github": [64, 65, 85], "unabl": [64, 65], "render": [64, 65], "page": [64, 65], "nbviewer": [64, 65], "org": [64, 65, 71], "nbsp": [64, 65], "document": [64, 65, 66, 84, 86], "pipelineifittedpipelin": 64, "hydratransformhydratransform": 64, "sparsescalersparsescal": 64, "inspect": [64, 74], "x_test_transform": 64, "53921955": 64, "39192971": 64, "60035454": 64, "36929508": 64, "5286341": 64, "08999765": 64, "4096": 64, "princip": 64, "analysi": [64, 73], "pca": 64, "account": 64, "04": 64, "17": 64, "percent": 64, "enabl": [64, 86], "process": [64, 85], "furthermor": 64, "offer": [64, 69], "rockettransformrockettransform": 64, "standardscalerstandardscal": 64, "36421631": 64, "08080935": 64, "43425203": 64, "56801615": 64, "58121924": 64, "69906051": 64, "contrast": [64, 65, 70], "whose": 64, "35": 64, "could": [65, 70], "led": 65, "altern": [65, 71, 85], "outcom": 65, "essenti": [65, 66, 85], "need": [65, 73, 74, 85, 86], "alter": 65, "certain": 65, "flip": 65, "These": [65, 73], "understand": 65, "behavior": 65, "highlight": 65, "critic": 65, "natur": 65, "facilit": 65, "delin": 65, "arithmet": 65, "incorpor": 65, "although": 65, "former": 65, "minkowski": [65, 73, 74], "To": [65, 69, 70, 71, 72, 82, 84, 86], "electrocardiogram": 65, "ecg": 65, "signal": 65, "task": [65, 66, 74, 77, 78, 82], "goal": [65, 66, 76], "distinguish": [65, 73], "heartbeat": 65, "particular": [65, 66, 74], "abnorm": 65, "cardiac": 65, "heart": 65, "96": 65, "next": 65, "five": 65, "nn": 65, "kneighborsclassifierifittedkneighborsclassifi": 65, "compris": 65, "primari": [65, 82], "interact": 65, "desired_label": 65, "modifi": 65, "vice": [65, 66], "versa": [65, 66], "find_counterfactu": 65, "y_desir": 65, "empty_lik": 65, "x_cf": 65, "cf_pred": 65, "7757554": 65, "04521294": 65, "12209986": 65, "41066892": 65, "51301643": 65, "13364922": 65, "4545415": 65, "8152728": 65, "36613719": 65, "59799892": 65, "6364614": 65, "66240546": 65, "37925246": 65, "4975822": 65, "87851584": 65, "5716536": 65, "05212617": 65, "33645889": 65, "now": [65, 86], "36": 65, "alongsid": 65, "One": [65, 66, 69, 70], "propos": 65, "rsf": 65, "shapeletforestclassifierifittedshapeletforestclassifi": 65, "80": 65, "previous": [65, 66, 69, 76, 86], "met": 65, "64275557": 65, "96522188": 65, "90476179": 65, "09269015": 65, "12069088": 65, "34982908": 65, "5807386": 65, "09711063": 65, "74405634": 65, "28666866": 65, "32964692": 65, "14763103": 65, "5347352": 65, "15122819": 65, "66537309": 65, "31634668": 65, "43290016": 65, "38359833": 65, "29476759": 65, "86093158": 65, "41918778": 65, "16256033": 65, "0061831": 65, "56791544": 65, "66077834": 65, "7870391": 65, "20106232": 65, "18811169": 65, "37941185": 65, "32272574": 65, "74926655": 65, "33281894": 65, "20372777": 65, "41850936": 65, "25302505": 65, "48742855": 65, "novemb": 65, "207": 65, "216": 65, "problem": [66, 73, 82], "involv": [66, 74], "forecast": 66, "unfamiliar": 66, "framework": [66, 86], "focu": [66, 82], "chronolog": 66, "logic": 66, "solv": 66, "python": [66, 69, 71, 74, 83, 84, 85, 86], "concern": 66, "categori": [66, 73], "supervis": 66, "nomin": 66, "unlabel": 66, "acquir": 66, "commun": 66, "access": [66, 84], "robust": [66, 73, 86], "often": [66, 78], "opt": 66, "prefer": 66, "irrespect": 66, "floodmodeling1": 66, "uea": 66, "extrins": 66, "snippet": [66, 70], "tsereg": 66, "interfac": [66, 71], "unseen": [66, 76], "simplifi": [66, 70], "experiment": 66, "clone": [66, 85], "screen": 66, "despit": 66, "even": 66, "tabluar_x": 66, "design": 66, "interoper": 66, "logisticregress": 66, "bad": 66, "practic": 66, "proper": 66, "hold": [66, 73], "reason": 66, "respons": 66, "break": 66, "continu": [66, 74], "reevalu": 66, "relianc": 66, "visual": [66, 85], "importance_": 66, "31": [66, 73], "disk": [66, 71], "pickl": 66, "repr": 66, "dump": 66, "earlier": 66, "clf_": 66, "older": 66, "newer": 66, "secur": 66, "unpickl": 66, "wherea": [68, 77], "context": 68, "multivaret": 68, "howev": [68, 69, 71, 74], "unequ": [68, 70, 73], "ieee754": 68, "treat": 68, "isnan": [68, 72], "wb": 68, "t1": 68, "t2": 68, "t3": 68, "vstack": 68, "pip": [69, 82, 84, 85], "conda": 69, "advanc": 69, "entri": 69, "hope": 69, "drawback": 69, "asset": 69, "demand": [69, 71], "small": [69, 82], "experi": 69, "brows": 69, "688": 69, "43": 69, "kb": 69, "668": 69, "bit": [69, 85], "conform": 69, "common": [69, 70, 72, 73, 84], "workflow": [69, 74], "comparis": 69, "explanatori": 69, "n_label": 69, "greater": 69, "exactli": [69, 72], "chain": 69, "large_multivari": 69, "large_multiclass": 69, "0x7f262ce95d00": 69, "predefin": 70, "our": 70, "enumer": [70, 84], "rewritten": 70, "crude": 70, "wai": [70, 86], "deal": 70, "longer": 70, "accomplish": [70, 74], "argmax": 70, "pyplot": 70, "plt": 70, "fig": 70, "subplot": 70, "nrow": 70, "scatter": 70, "arang": 70, "marker": 70, "set_ylabel": 70, "spokenarabicdigit": 70, "ucrmt": 70, "figur": 70, "loss": 70, "togeth": 71, "compos": 71, "written": 71, "letter": 71, "regular": 71, "alphanumer": 71, "charact": 71, "za": 71, "z0": 71, "z": [71, 73], "exemplifi": 71, "hard": 71, "endpoint": 71, "http": [71, 85], "www": 71, "repo": 71, "addition": 71, "offlin": 71, "localappdata": 71, "gnu": [71, 84, 85], "linux": [71, 84, 85], "xdg_cache_hom": 71, "unset": 71, "maco": [71, 84, 85], "librarycach": 71, "fallback": 71, "long": 71, "session": 71, "func": [71, 74], "bundle_url": 71, "example1": 71, "remot": 71, "sha": 71, "sha1": 71, "hash": 71, "npy": 71, "npz": 71, "save": 71, "savez": 71, "dataset_nam": 71, "_train": 71, "_test": 71, "That": 71, "embrac": 72, "asarrai": 72, "produc": [72, 76], "rank": 72, "arr": 72, "shorter": [72, 73], "loos": 73, "obei": 73, "inequ": 73, "itself": 73, "distinct": 73, "gt": 73, "ne": 73, "symmetr": 73, "sai": 73, "triangl": [73, 74], "lt": 73, "shortcut": 73, "lp": 73, "shift": 73, "min_": 73, "notat": 73, "_elastic_": 73, "slide": 73, "moreov": 73, "comment": 73, "undefin": 73, "chebyshev": [73, 74], "angular": [73, 74, 86], "phase": 73, "wddtw": [73, 74], "longest": 73, "lcss": [73, 74, 86], "edit": [73, 85], "gap": 73, "edr": [73, 74, 86], "twe": [73, 74, 86], "edit_penalti": 73, "stiff": [73, 74], "lambda": 73, "nu": 73, "amerc": [73, 86], "matthieu": 73, "herrmann": 73, "intuit": 73, "volum": 73, "137": 73, "hirschberg": 73, "1977": 73, "journal": 73, "jacm": 73, "chen": 73, "l": 73, "ng": 73, "2004": 73, "marriag": 73, "thirtieth": 73, "\u00f6zsu": 73, "oria": 73, "2005": 73, "trajectori": 73, "manag": 73, "stefan": 73, "athitso": 73, "transact": 73, "1425": 73, "1438": 73, "marteau": 73, "2008": 73, "adjust": 73, "306": 73, "318": 73, "_euclidean": 74, "51158857": 74, "11514381": 74, "35905618": 74, "mirror": 74, "imag": 74, "halv": 74, "advis": 74, "tri": 74, "smart": 74, "85497117": 74, "96086309": 74, "18777928": 74, "00606825": 74, "23060212": 74, "27419835": 74, "64445581": 74, "38965963": 74, "79102936": 74, "59756098": 74, "47560976": 74, "64634146": 74, "08536585": 74, "03658537": 74, "13414634": 74, "09756098": 74, "25609756": 74, "12195122": 74, "76": 74, "20881199": 74, "73": 74, "62554784": 74, "88": 74, "5536877": 74, "27": 74, "49142159": 74, "56024904": 74, "24551102": 74, "45513015": 74, "81": 74, "60658533": 74, "06099416": 74, "multitud": 74, "48683192": 74, "60301954": 74, "34083722": 74, "35954558": 74, "sometim": 74, "_pairs_": 74, "50816474": 74, "3299048": 74, "55193242": 74, "interdimension": 74, "50507001": 74, "90920635": 74, "27646127": 74, "60041068": 74, "60786006": 74, "75645164": 74, "26677146": 74, "24823344": 74, "similarli": 74, "interest": 74, "slice": 74, "want": [74, 85], "avoid": [74, 84], "unwant": 74, "limits_": 74, "queri": 74, "le": 74, "counterpart": 74, "_threshold_": 74, "jag": 74, "66371456": 74, "11914265": 74, "13076667": 74, "99043671": 74, "73408875": 74, "84227457": 74, "2028058": 74, "85972633": 74, "85367621": 74, "86957415": 74, "64041732": 74, "33156061": 74, "56698045": 74, "99489626": 74, "6790517": 74, "16754772": 74, "10973127": 74, "50583639": 74, "pairwise_sd_ful": 74, "stack": 74, "21688671": 74, "83210644": 74, "50884094": 74, "18507116": 74, "11177626": 74, "15611733": 74, "21780536": 74, "13350353": 74, "09710811": 74, "75114125": 74, "13489775": 74, "09806374": 74, "idx": 74, "28": 74, "third": 74, "investig": 74, "cpu": 74, "theoret": 74, "complex": 74, "magnitud": 74, "97686": 74, "87686": 74, "98368": 74, "98282": 74, "11131": 74, "98268": 74, "95506": 74, "14157": 74, "96041": 74, "94631": 74, "83231": 74, "92207": 74, "55527": 74, "73285": 74, "55538": 74, "41892": 74, "40887": 74, "42778": 74, "00061": 74, "00104": 74, "00064": 74, "wlcss": 74, "00054": 74, "00091": 74, "00056": 74, "00030": 74, "00052": 74, "00032": 74, "00028": 74, "00048": 74, "00029": 74, "00021": 74, "00035": 74, "00022": 74, "00019": 74, "82372": 74, "49048": 74, "79202": 74, "66394": 74, "75967": 74, "67113": 74, "56287": 74, "61275": 74, "56196": 74, "text": 74, "49453": 74, "59627": 74, "49988": 74, "42765": 74, "58025": 74, "43553": 74, "42761": 74, "58982": 74, "43474": 74, "21051": 74, "33659": 74, "21757": 74, "06851": 74, "10321": 74, "07092": 74, "00216": 74, "00413": 74, "00226": 74, "00146": 74, "00278": 74, "00153": 74, "00102": 74, "00195": 74, "00107": 74, "00194": 74, "00106": 74, "00099": 74, "00190": 74, "00189": 74, "00103": 74, "00097": 74, "00185": 74, "00101": 74, "00096": 74, "00182": 74, "00100": 74, "00095": 74, "00181": 74, "00071": 74, "00136": 74, "00074": 74, "rakthanmanon": 74, "campana": 74, "mueen": 74, "batista": 74, "westov": 74, "zhu": 74, "q": 74, "zakaria": 74, "2012": 74, "august": 74, "trillion": 74, "under": [74, 85], "18th": 74, "262": 74, "270": 74, "varieti": 77, "excel": 77, "baselin": 77, "highli": 77, "art": 78, "emmott_label": 82, "oppos": 82, "perhap": 82, "minority_label": 82, "majority_label": 82, "sophist": 82, "publish": 82, "randomforestclassifi": 82, "four": 82, "75": 82, "quantil": 82, "familiar": 83, "introduct": 83, "concept": 83, "There": 84, "offici": 84, "pypi": 84, "recommend": 84, "compil": [84, 85], "fastest": 84, "platform": 84, "built": 84, "write": 84, "conflict": 84, "strongli": 84, "virtual": [84, 85], "venv": 84, "python3": [84, 85], "folder": 84, "ceavet": 84, "outsid": 84, "scope": 84, "issu": [84, 86], "debian": [84, 85], "apt": [84, 85], "homebrew": 84, "brew": 84, "anaconda": 84, "miniconda": 84, "pull": 85, "git": 85, "com": 85, "isaksamsten": 85, "tool": 85, "studio": 85, "command": 85, "cmd": 85, "consol": 85, "distutils_use_sdk": 85, "program": 85, "x86": 85, "microsoft": 85, "buildtool": 85, "vc": 85, "auxiliari": 85, "vcvarsal": 85, "bat": 85, "x64": 85, "xcode": 85, "ubuntu": 85, "dev": 85, "txt": 85, "mode": 85, "eas": 85, "wildboar_build": 85, "architectur": 85, "enhanc": 86, "someth": 86, "couldn": 86, "miscellan": 86, "didn": 86, "19": 86, "scipi": 86, "compar": 86, "drop": 86, "duplic": 86, "defer": 86, "3darrai": 86, "prefix": 86, "scaled_": 86, "scaled_msm": 86, "keyword": 86, "bug": 86, "incorrect": 86, "_distanc": 86, "distancemeasur": 86, "subsequencedistancemeasur": 86, "subsequencemetr": 86, "affect": 86, "cimport": 86, "old": 86, "constructor": 86, "incorrectli": 86, "undeprec": 86, "migrat": 86}, "objects": {"": [[27, 0, 0, "-", "wildboar"]], "wildboar": [[3, 0, 0, "-", "annotate"], [4, 0, 0, "-", "base"], [7, 0, 0, "-", "datasets"], [16, 0, 0, "-", "distance"], [19, 0, 0, "-", "ensemble"], [26, 0, 0, "-", "explain"], [27, 1, 1, "", "iseos"], [32, 0, 0, "-", "linear_model"], [35, 0, 0, "-", "metrics"], [38, 0, 0, "-", "model_selection"], [49, 0, 0, "-", "transform"], [53, 0, 0, "-", "tree"], [58, 0, 0, "-", "utils"], [62, 0, 0, "-", "version"]], "wildboar.annotate": [[1, 0, 0, "-", "_motifs"], [2, 0, 0, "-", "_segment"], [3, 1, 1, "", "motifs"], [3, 1, 1, "", "segment"]], "wildboar.annotate._motifs": [[1, 1, 1, "", "motifs"]], "wildboar.annotate._segment": [[2, 1, 1, "", "segment"]], "wildboar.base": [[4, 2, 1, "", "BaseEstimator"], [4, 2, 1, "", "CounterfactualMixin"], [4, 2, 1, "", "ExplainerMixin"], [4, 1, 1, "", "is_counterfactual"], [4, 1, 1, "", "is_explainer"]], "wildboar.base.BaseEstimator": [[4, 3, 1, "", "get_metadata_routing"], [4, 3, 1, "", "get_params"], [4, 3, 1, "", "set_params"]], "wildboar.base.CounterfactualMixin": [[4, 3, 1, "", "score"]], "wildboar.base.ExplainerMixin": [[4, 3, 1, "", "fit_explain"], [4, 3, 1, "", "plot"]], "wildboar.datasets": [[7, 2, 1, "", "Bundle"], [7, 2, 1, "", "JSONRepository"], [7, 2, 1, "", "NpBundle"], [7, 2, 1, "", "Repository"], [5, 0, 0, "-", "_filter"], [6, 0, 0, "-", "_repository"], [7, 1, 1, "", "clear_cache"], [7, 1, 1, "", "get_bundles"], [7, 1, 1, "", "get_repository"], [7, 1, 1, "", "install_repository"], [7, 1, 1, "", "list_bundles"], [7, 1, 1, "", "list_collections"], [7, 1, 1, "", "list_datasets"], [7, 1, 1, "", "list_repositories"], [7, 1, 1, "", "load_dataset"], [7, 1, 1, "", "load_datasets"], [7, 1, 1, "", "load_gun_point"], [7, 1, 1, "", "load_synthetic_control"], [7, 1, 1, "", "load_two_lead_ecg"], [8, 0, 0, "-", "outlier"], [9, 0, 0, "-", "preprocess"], [7, 1, 1, "", "refresh_repositories"], [7, 1, 1, "", "set_cache_dir"]], "wildboar.datasets.Bundle": [[7, 3, 1, "", "get_collection"], [7, 3, 1, "", "get_filename"], [7, 3, 1, "", "list"], [7, 3, 1, "", "load"]], "wildboar.datasets.JSONRepository": [[7, 4, 1, "", "download_url"], [7, 3, 1, "", "get_bundle"], [7, 3, 1, "", "get_bundles"], [7, 4, 1, "", "name"], [7, 3, 1, "", "refresh"], [7, 4, 1, "", "version"], [7, 4, 1, "", "wildboar_requires"]], "wildboar.datasets.NpBundle": [[7, 3, 1, "", "get_collection"], [7, 3, 1, "", "get_filename"], [7, 3, 1, "", "list"], [7, 3, 1, "", "load"]], "wildboar.datasets.Repository": [[7, 4, 1, "", "download_url"], [7, 3, 1, "", "get_bundle"], [7, 3, 1, "", "get_bundles"], [7, 4, 1, "", "name"], [7, 3, 1, "", "refresh"], [7, 4, 1, "", "version"], [7, 4, 1, "", "wildboar_requires"]], "wildboar.datasets._filter": [[5, 1, 1, "", "make_dict_filter"], [5, 1, 1, "", "make_filter"], [5, 1, 1, "", "make_list_filter"], [5, 1, 1, "", "make_str_filter"]], "wildboar.datasets._repository": [[6, 2, 1, "", "Bundle"], [6, 2, 1, "", "JSONRepository"], [6, 2, 1, "", "NpBundle"], [6, 2, 1, "", "Repository"]], "wildboar.datasets._repository.Bundle": [[6, 3, 1, "", "get_collection"], [6, 3, 1, "", "get_filename"], [6, 3, 1, "", "list"], [6, 3, 1, "", "load"]], "wildboar.datasets._repository.JSONRepository": [[6, 4, 1, "", "download_url"], [6, 3, 1, "", "get_bundle"], [6, 3, 1, "", "get_bundles"], [6, 4, 1, "", "name"], [6, 3, 1, "", "refresh"], [6, 4, 1, "", "version"], [6, 4, 1, "", "wildboar_requires"]], "wildboar.datasets._repository.NpBundle": [[6, 3, 1, "", "get_collection"], [6, 3, 1, "", "get_filename"], [6, 3, 1, "", "list"], [6, 3, 1, "", "load"]], "wildboar.datasets._repository.Repository": [[6, 4, 1, "", "download_url"], [6, 3, 1, "", "get_bundle"], [6, 3, 1, "", "get_bundles"], [6, 4, 1, "", "name"], [6, 3, 1, "", "refresh"], [6, 4, 1, "", "version"], [6, 4, 1, "", "wildboar_requires"]], "wildboar.datasets.outlier": [[8, 1, 1, "", "density_outliers"], [8, 1, 1, "", "emmott_outliers"], [8, 1, 1, "", "kmeans_outliers"], [8, 1, 1, "", "majority_outliers"], [8, 1, 1, "", "minority_outliers"]], "wildboar.datasets.preprocess": [[9, 1, 1, "", "maxabs_scale"], [9, 1, 1, "", "minmax_scale"], [9, 1, 1, "", "named_preprocess"], [9, 1, 1, "", "standardize"], [9, 1, 1, "", "truncate"]], "wildboar.distance": [[16, 2, 1, "", "KMeans"], [16, 2, 1, "", "KMedoids"], [16, 2, 1, "", "KNeighborsClassifier"], [16, 2, 1, "", "MDS"], [10, 0, 0, "-", "_distance"], [11, 0, 0, "-", "_manifold"], [12, 0, 0, "-", "_matrix_profile"], [13, 0, 0, "-", "_multi_metric"], [14, 0, 0, "-", "_neighbors"], [16, 1, 1, "", "argmin_distance"], [16, 1, 1, "", "argmin_subsequence_distance"], [16, 1, 1, "", "distance_profile"], [15, 0, 0, "-", "dtw"], [16, 1, 1, "", "matrix_profile"], [16, 1, 1, "", "paired_distance"], [16, 1, 1, "", "paired_subsequence_distance"], [16, 1, 1, "", "paired_subsequence_match"], [16, 1, 1, "", "pairwise_distance"], [16, 1, 1, "", "pairwise_subsequence_distance"], [16, 1, 1, "", "subsequence_match"]], "wildboar.distance.KMeans": [[16, 3, 1, "", "fit"], [16, 3, 1, "", "fit_predict"], [16, 3, 1, "", "fit_transform"], [16, 3, 1, "", "get_metadata_routing"], [16, 3, 1, "", "get_params"], [16, 3, 1, "", "predict"], [16, 3, 1, "", "set_output"], [16, 3, 1, "", "set_params"], [16, 3, 1, "", "transform"]], "wildboar.distance.KMedoids": [[16, 3, 1, "", "fit"], [16, 3, 1, "", "fit_predict"], [16, 3, 1, "", "fit_transform"], [16, 3, 1, "", "get_metadata_routing"], [16, 3, 1, "", "get_params"], [16, 3, 1, "", "predict"], [16, 3, 1, "", "set_output"], [16, 3, 1, "", "set_params"], [16, 3, 1, "", "transform"]], "wildboar.distance.KNeighborsClassifier": [[16, 3, 1, "", "fit"], [16, 3, 1, "", "get_metadata_routing"], [16, 3, 1, "", "get_params"], [16, 3, 1, "", "predict"], [16, 3, 1, "", "predict_proba"], [16, 3, 1, "", "score"], [16, 3, 1, "", "set_params"]], "wildboar.distance.MDS": [[16, 3, 1, "", "get_metadata_routing"], [16, 3, 1, "", "get_params"], [16, 3, 1, "", "set_params"]], "wildboar.distance._distance": [[10, 1, 1, "", "argmin_distance"], [10, 1, 1, "", "argmin_subsequence_distance"], [10, 1, 1, "", "distance_profile"], [10, 1, 1, "", "paired_distance"], [10, 1, 1, "", "paired_subsequence_distance"], [10, 1, 1, "", "paired_subsequence_match"], [10, 1, 1, "", "pairwise_distance"], [10, 1, 1, "", "pairwise_subsequence_distance"], [10, 1, 1, "", "subsequence_match"]], "wildboar.distance._manifold": [[11, 2, 1, "", "MDS"]], "wildboar.distance._manifold.MDS": [[11, 3, 1, "", "get_metadata_routing"], [11, 3, 1, "", "get_params"], [11, 3, 1, "", "set_params"]], "wildboar.distance._matrix_profile": [[12, 1, 1, "", "matrix_profile"]], "wildboar.distance._neighbors": [[14, 2, 1, "", "KMeans"], [14, 2, 1, "", "KMedoids"], [14, 2, 1, "", "KNeighborsClassifier"]], "wildboar.distance._neighbors.KMeans": [[14, 3, 1, "", "fit"], [14, 3, 1, "", "fit_predict"], [14, 3, 1, "", "fit_transform"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "set_output"], [14, 3, 1, "", "set_params"], [14, 3, 1, "", "transform"]], "wildboar.distance._neighbors.KMedoids": [[14, 3, 1, "", "fit"], [14, 3, 1, "", "fit_predict"], [14, 3, 1, "", "fit_transform"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "set_output"], [14, 3, 1, "", "set_params"], [14, 3, 1, "", "transform"]], "wildboar.distance._neighbors.KNeighborsClassifier": [[14, 3, 1, "", "fit"], [14, 3, 1, "", "get_metadata_routing"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "predict_proba"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_params"]], "wildboar.distance.dtw": [[15, 1, 1, "", "ddtw_distance"], [15, 1, 1, "", "dtw_alignment"], [15, 1, 1, "", "dtw_average"], [15, 1, 1, "", "dtw_distance"], [15, 1, 1, "", "dtw_envelop"], [15, 1, 1, "", "dtw_lb_keogh"], [15, 1, 1, "", "dtw_mapping"], [15, 1, 1, "", "jeong_weight"], [15, 1, 1, "", "wddtw_distance"], [15, 1, 1, "", "wdtw_alignment"], [15, 1, 1, "", "wdtw_distance"]], "wildboar.ensemble": [[19, 2, 1, "", "BaggingClassifier"], [19, 2, 1, "", "BaggingRegressor"], [19, 2, 1, "", "BaseBagging"], [19, 2, 1, "", "ElasticEnsembleClassifier"], [19, 2, 1, "", "ExtraShapeletTreesClassifier"], [19, 2, 1, "", "ExtraShapeletTreesRegressor"], [19, 2, 1, "", "IntervalForestClassifier"], [19, 2, 1, "", "IntervalForestRegressor"], [19, 2, 1, "", "IsolationShapeletForest"], [19, 2, 1, "", "PivotForestClassifier"], [19, 2, 1, "", "ProximityForestClassifier"], [19, 2, 1, "", "RocketForestClassifier"], [19, 2, 1, "", "RocketForestRegressor"], [19, 2, 1, "", "ShapeletForestClassifier"], [19, 2, 1, "", "ShapeletForestEmbedding"], [19, 2, 1, "", "ShapeletForestRegressor"], [17, 0, 0, "-", "_elastic"], [18, 0, 0, "-", "_ensemble"]], "wildboar.ensemble.BaggingClassifier": [[19, 3, 1, "", "decision_function"], [19, 4, 1, "", "estimators_samples_"], [19, 3, 1, "", "fit"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "predict"], [19, 3, 1, "", "predict_log_proba"], [19, 3, 1, "", "predict_proba"], [19, 3, 1, "", "score"], [19, 3, 1, "", "set_params"]], "wildboar.ensemble.BaggingRegressor": [[19, 4, 1, "", "estimators_samples_"], [19, 3, 1, "", "fit"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "predict"], [19, 3, 1, "", "score"], [19, 3, 1, "", "set_params"]], "wildboar.ensemble.BaseBagging": [[19, 4, 1, "", "estimators_samples_"], [19, 3, 1, "", "fit"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "set_params"]], "wildboar.ensemble.ElasticEnsembleClassifier": [[19, 3, 1, "", "fit"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "predict"], [19, 3, 1, "", "predict_proba"], [19, 3, 1, "", "score"], [19, 3, 1, "", "set_params"]], "wildboar.ensemble.ExtraShapeletTreesClassifier": [[19, 3, 1, "", "decision_function"], [19, 4, 1, "", "estimators_samples_"], [19, 3, 1, "", "fit"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "predict"], [19, 3, 1, "", "predict_log_proba"], [19, 3, 1, "", "predict_proba"], [19, 3, 1, "", "score"], [19, 3, 1, "", "set_params"]], "wildboar.ensemble.ExtraShapeletTreesRegressor": [[19, 4, 1, "", "estimators_samples_"], [19, 3, 1, "", "fit"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "predict"], [19, 3, 1, "", "score"], [19, 3, 1, "", "set_params"]], "wildboar.ensemble.IntervalForestClassifier": [[19, 3, 1, "", "decision_function"], [19, 4, 1, "", "estimators_samples_"], [19, 3, 1, "", "fit"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "predict"], [19, 3, 1, "", "predict_log_proba"], [19, 3, 1, "", "predict_proba"], [19, 3, 1, "", "score"], [19, 3, 1, "", "set_params"]], "wildboar.ensemble.IntervalForestRegressor": [[19, 4, 1, "", "estimators_samples_"], [19, 3, 1, "", "fit"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "predict"], [19, 3, 1, "", "score"], [19, 3, 1, "", "set_params"]], "wildboar.ensemble.IsolationShapeletForest": [[19, 4, 1, "", "estimators_samples_"], [19, 3, 1, "", "fit"], [19, 3, 1, "", "fit_predict"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "set_params"]], "wildboar.ensemble.PivotForestClassifier": [[19, 3, 1, "", "decision_function"], [19, 4, 1, "", "estimators_samples_"], [19, 3, 1, "", "fit"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "predict"], [19, 3, 1, "", "predict_log_proba"], [19, 3, 1, "", "predict_proba"], [19, 3, 1, "", "score"], [19, 3, 1, "", "set_params"]], "wildboar.ensemble.ProximityForestClassifier": [[19, 3, 1, "", "decision_function"], [19, 4, 1, "", "estimators_samples_"], [19, 3, 1, "", "fit"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "predict"], [19, 3, 1, "", "predict_log_proba"], [19, 3, 1, "", "predict_proba"], [19, 3, 1, "", "score"], [19, 3, 1, "", "set_params"]], "wildboar.ensemble.RocketForestClassifier": [[19, 3, 1, "", "decision_function"], [19, 4, 1, "", "estimators_samples_"], [19, 3, 1, "", "fit"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "predict"], [19, 3, 1, "", "predict_log_proba"], [19, 3, 1, "", "predict_proba"], [19, 3, 1, "", "score"], [19, 3, 1, "", "set_params"]], "wildboar.ensemble.RocketForestRegressor": [[19, 4, 1, "", "estimators_samples_"], [19, 3, 1, "", "fit"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "predict"], [19, 3, 1, "", "score"], [19, 3, 1, "", "set_params"]], "wildboar.ensemble.ShapeletForestClassifier": [[19, 3, 1, "", "decision_function"], [19, 4, 1, "", "estimators_samples_"], [19, 3, 1, "", "fit"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "predict"], [19, 3, 1, "", "predict_log_proba"], [19, 3, 1, "", "predict_proba"], [19, 3, 1, "", "score"], [19, 3, 1, "", "set_params"]], "wildboar.ensemble.ShapeletForestEmbedding": [[19, 4, 1, "", "estimators_samples_"], [19, 3, 1, "", "fit"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "predict"], [19, 3, 1, "", "score"], [19, 3, 1, "", "set_params"]], "wildboar.ensemble.ShapeletForestRegressor": [[19, 4, 1, "", "estimators_samples_"], [19, 3, 1, "", "fit"], [19, 3, 1, "", "get_metadata_routing"], [19, 3, 1, "", "get_params"], [19, 3, 1, "", "predict"], [19, 3, 1, "", "score"], [19, 3, 1, "", "set_params"]], "wildboar.ensemble._elastic": [[17, 2, 1, "", "ElasticEnsembleClassifier"]], "wildboar.ensemble._elastic.ElasticEnsembleClassifier": [[17, 3, 1, "", "fit"], [17, 3, 1, "", "get_metadata_routing"], [17, 3, 1, "", "get_params"], [17, 3, 1, "", "predict"], [17, 3, 1, "", "predict_proba"], [17, 3, 1, "", "score"], [17, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble": [[18, 2, 1, "", "BaggingClassifier"], [18, 2, 1, "", "BaggingRegressor"], [18, 2, 1, "", "BaseBagging"], [18, 2, 1, "", "BaseForestClassifier"], [18, 2, 1, "", "BaseForestRegressor"], [18, 2, 1, "", "BaseShapeletForestClassifier"], [18, 2, 1, "", "BaseShapeletForestRegressor"], [18, 2, 1, "", "ExtraShapeletTreesClassifier"], [18, 2, 1, "", "ExtraShapeletTreesRegressor"], [18, 2, 1, "", "ForestMixin"], [18, 2, 1, "", "IntervalForestClassifier"], [18, 2, 1, "", "IntervalForestRegressor"], [18, 2, 1, "", "IsolationShapeletForest"], [18, 2, 1, "", "PivotForestClassifier"], [18, 2, 1, "", "ProximityForestClassifier"], [18, 2, 1, "", "RocketForestClassifier"], [18, 2, 1, "", "RocketForestRegressor"], [18, 2, 1, "", "ShapeletForestClassifier"], [18, 2, 1, "", "ShapeletForestEmbedding"], [18, 2, 1, "", "ShapeletForestRegressor"]], "wildboar.ensemble._ensemble.BaggingClassifier": [[18, 3, 1, "", "decision_function"], [18, 4, 1, "", "estimators_samples_"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "predict"], [18, 3, 1, "", "predict_log_proba"], [18, 3, 1, "", "predict_proba"], [18, 3, 1, "", "score"], [18, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaggingRegressor": [[18, 4, 1, "", "estimators_samples_"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "predict"], [18, 3, 1, "", "score"], [18, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaseBagging": [[18, 4, 1, "", "estimators_samples_"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaseForestClassifier": [[18, 3, 1, "", "decision_function"], [18, 4, 1, "", "estimators_samples_"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "predict"], [18, 3, 1, "", "predict_log_proba"], [18, 3, 1, "", "predict_proba"], [18, 3, 1, "", "score"], [18, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaseForestRegressor": [[18, 4, 1, "", "estimators_samples_"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "predict"], [18, 3, 1, "", "score"], [18, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaseShapeletForestClassifier": [[18, 3, 1, "", "decision_function"], [18, 4, 1, "", "estimators_samples_"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "predict"], [18, 3, 1, "", "predict_log_proba"], [18, 3, 1, "", "predict_proba"], [18, 3, 1, "", "score"], [18, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.BaseShapeletForestRegressor": [[18, 4, 1, "", "estimators_samples_"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "predict"], [18, 3, 1, "", "score"], [18, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier": [[18, 3, 1, "", "decision_function"], [18, 4, 1, "", "estimators_samples_"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "predict"], [18, 3, 1, "", "predict_log_proba"], [18, 3, 1, "", "predict_proba"], [18, 3, 1, "", "score"], [18, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor": [[18, 4, 1, "", "estimators_samples_"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "predict"], [18, 3, 1, "", "score"], [18, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.IntervalForestClassifier": [[18, 3, 1, "", "decision_function"], [18, 4, 1, "", "estimators_samples_"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "predict"], [18, 3, 1, "", "predict_log_proba"], [18, 3, 1, "", "predict_proba"], [18, 3, 1, "", "score"], [18, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.IntervalForestRegressor": [[18, 4, 1, "", "estimators_samples_"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "predict"], [18, 3, 1, "", "score"], [18, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.IsolationShapeletForest": [[18, 4, 1, "", "estimators_samples_"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "fit_predict"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.PivotForestClassifier": [[18, 3, 1, "", "decision_function"], [18, 4, 1, "", "estimators_samples_"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "predict"], [18, 3, 1, "", "predict_log_proba"], [18, 3, 1, "", "predict_proba"], [18, 3, 1, "", "score"], [18, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ProximityForestClassifier": [[18, 3, 1, "", "decision_function"], [18, 4, 1, "", "estimators_samples_"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "predict"], [18, 3, 1, "", "predict_log_proba"], [18, 3, 1, "", "predict_proba"], [18, 3, 1, "", "score"], [18, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.RocketForestClassifier": [[18, 3, 1, "", "decision_function"], [18, 4, 1, "", "estimators_samples_"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "predict"], [18, 3, 1, "", "predict_log_proba"], [18, 3, 1, "", "predict_proba"], [18, 3, 1, "", "score"], [18, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.RocketForestRegressor": [[18, 4, 1, "", "estimators_samples_"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "predict"], [18, 3, 1, "", "score"], [18, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ShapeletForestClassifier": [[18, 3, 1, "", "decision_function"], [18, 4, 1, "", "estimators_samples_"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "predict"], [18, 3, 1, "", "predict_log_proba"], [18, 3, 1, "", "predict_proba"], [18, 3, 1, "", "score"], [18, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ShapeletForestEmbedding": [[18, 4, 1, "", "estimators_samples_"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "predict"], [18, 3, 1, "", "score"], [18, 3, 1, "", "set_params"]], "wildboar.ensemble._ensemble.ShapeletForestRegressor": [[18, 4, 1, "", "estimators_samples_"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "get_metadata_routing"], [18, 3, 1, "", "get_params"], [18, 3, 1, "", "predict"], [18, 3, 1, "", "score"], [18, 3, 1, "", "set_params"]], "wildboar.explain": [[26, 2, 1, "", "AmplitudeImportance"], [26, 2, 1, "", "FrequencyImportance"], [26, 2, 1, "", "IntervalImportance"], [26, 2, 1, "", "ShapeletImportance"], [20, 0, 0, "-", "_importance"], [25, 0, 0, "-", "counterfactual"], [26, 1, 1, "", "plot_importances"]], "wildboar.explain.AmplitudeImportance": [[26, 3, 1, "", "fit_explain"], [26, 3, 1, "", "get_metadata_routing"], [26, 3, 1, "", "get_params"], [26, 3, 1, "", "plot"], [26, 3, 1, "", "set_params"]], "wildboar.explain.FrequencyImportance": [[26, 3, 1, "", "fit_explain"], [26, 3, 1, "", "get_metadata_routing"], [26, 3, 1, "", "get_params"], [26, 3, 1, "", "plot"], [26, 3, 1, "", "set_params"]], "wildboar.explain.IntervalImportance": [[26, 3, 1, "", "fit_explain"], [26, 3, 1, "", "get_metadata_routing"], [26, 3, 1, "", "get_params"], [26, 3, 1, "", "plot"], [26, 3, 1, "", "set_params"]], "wildboar.explain.ShapeletImportance": [[26, 3, 1, "", "fit_explain"], [26, 3, 1, "", "get_metadata_routing"], [26, 3, 1, "", "get_params"], [26, 3, 1, "", "plot"], [26, 3, 1, "", "set_params"]], "wildboar.explain._importance": [[20, 2, 1, "", "AmplitudeImportance"], [20, 2, 1, "", "FrequencyImportance"], [20, 2, 1, "", "IntervalImportance"], [20, 2, 1, "", "PermuteImportance"], [20, 2, 1, "", "ShapeletImportance"], [20, 1, 1, "", "plot_importances"]], "wildboar.explain._importance.AmplitudeImportance": [[20, 3, 1, "", "fit_explain"], [20, 3, 1, "", "get_metadata_routing"], [20, 3, 1, "", "get_params"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "set_params"]], "wildboar.explain._importance.FrequencyImportance": [[20, 3, 1, "", "fit_explain"], [20, 3, 1, "", "get_metadata_routing"], [20, 3, 1, "", "get_params"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "set_params"]], "wildboar.explain._importance.IntervalImportance": [[20, 3, 1, "", "fit_explain"], [20, 3, 1, "", "get_metadata_routing"], [20, 3, 1, "", "get_params"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "set_params"]], "wildboar.explain._importance.PermuteImportance": [[20, 3, 1, "", "get_metadata_routing"], [20, 3, 1, "", "get_params"], [20, 3, 1, "", "set_params"]], "wildboar.explain._importance.ShapeletImportance": [[20, 3, 1, "", "fit_explain"], [20, 3, 1, "", "get_metadata_routing"], [20, 3, 1, "", "get_params"], [20, 3, 1, "", "plot"], [20, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual": [[25, 2, 1, "", "KNeighborsCounterfactual"], [25, 2, 1, "", "PrototypeCounterfactual"], [25, 2, 1, "", "ShapeletForestCounterfactual"], [21, 0, 0, "-", "_helper"], [22, 0, 0, "-", "_nn"], [23, 0, 0, "-", "_proto"], [24, 0, 0, "-", "_sf"], [25, 1, 1, "", "counterfactuals"], [25, 1, 1, "", "proximity"]], "wildboar.explain.counterfactual.KNeighborsCounterfactual": [[25, 3, 1, "", "fit_explain"], [25, 3, 1, "", "get_metadata_routing"], [25, 3, 1, "", "get_params"], [25, 3, 1, "", "plot"], [25, 3, 1, "", "score"], [25, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual.PrototypeCounterfactual": [[25, 3, 1, "", "fit_explain"], [25, 3, 1, "", "get_metadata_routing"], [25, 3, 1, "", "get_params"], [25, 3, 1, "", "plot"], [25, 3, 1, "", "score"], [25, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual.ShapeletForestCounterfactual": [[25, 3, 1, "", "fit_explain"], [25, 3, 1, "", "get_metadata_routing"], [25, 3, 1, "", "get_params"], [25, 3, 1, "", "plot"], [25, 3, 1, "", "score"], [25, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual._helper": [[21, 1, 1, "", "counterfactuals"]], "wildboar.explain.counterfactual._nn": [[22, 2, 1, "", "KNeighborsCounterfactual"]], "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual": [[22, 3, 1, "", "fit_explain"], [22, 3, 1, "", "get_metadata_routing"], [22, 3, 1, "", "get_params"], [22, 3, 1, "", "plot"], [22, 3, 1, "", "score"], [22, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual._proto": [[23, 2, 1, "", "DynamicTimeWarpTransform"], [23, 2, 1, "", "EuclideanTransform"], [23, 2, 1, "", "KNearestPrototypeSampler"], [23, 2, 1, "", "KNearestShapeletPrototypeSampler"], [23, 2, 1, "", "MetricTransform"], [23, 2, 1, "", "PredictEvaluator"], [23, 2, 1, "", "ProbabilityEvaluator"], [23, 2, 1, "", "PrototypeCounterfactual"], [23, 2, 1, "", "PrototypeSampler"], [23, 2, 1, "", "ShapeletPrototypeSampler"], [23, 2, 1, "", "TargetEvaluator"], [23, 2, 1, "", "UniformPrototypeSampler"], [23, 2, 1, "", "WeightedDynamicTimeWarpTransform"]], "wildboar.explain.counterfactual._proto.DynamicTimeWarpTransform": [[23, 3, 1, "", "move"]], "wildboar.explain.counterfactual._proto.EuclideanTransform": [[23, 3, 1, "", "move"]], "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler": [[23, 3, 1, "", "move"], [23, 3, 1, "", "nearest_index"], [23, 3, 1, "", "sample"], [23, 3, 1, "", "sample_move"]], "wildboar.explain.counterfactual._proto.KNearestShapeletPrototypeSampler": [[23, 3, 1, "", "move"], [23, 3, 1, "", "sample"], [23, 3, 1, "", "sample_move"]], "wildboar.explain.counterfactual._proto.MetricTransform": [[23, 3, 1, "", "move"]], "wildboar.explain.counterfactual._proto.PredictEvaluator": [[23, 3, 1, "", "is_counterfactual"]], "wildboar.explain.counterfactual._proto.ProbabilityEvaluator": [[23, 3, 1, "", "is_counterfactual"]], "wildboar.explain.counterfactual._proto.PrototypeCounterfactual": [[23, 3, 1, "", "fit_explain"], [23, 3, 1, "", "get_metadata_routing"], [23, 3, 1, "", "get_params"], [23, 3, 1, "", "plot"], [23, 3, 1, "", "score"], [23, 3, 1, "", "set_params"]], "wildboar.explain.counterfactual._proto.PrototypeSampler": [[23, 3, 1, "", "move"], [23, 3, 1, "", "sample"], [23, 3, 1, "", "sample_move"]], "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler": [[23, 3, 1, "", "move"], [23, 3, 1, "", "sample"], [23, 3, 1, "", "sample_move"], [23, 3, 1, "", "sample_shapelet"]], "wildboar.explain.counterfactual._proto.TargetEvaluator": [[23, 3, 1, "", "is_counterfactual"]], "wildboar.explain.counterfactual._proto.UniformPrototypeSampler": [[23, 3, 1, "", "move"], [23, 3, 1, "", "sample"], [23, 3, 1, "", "sample_move"]], "wildboar.explain.counterfactual._proto.WeightedDynamicTimeWarpTransform": [[23, 3, 1, "", "move"]], "wildboar.explain.counterfactual._sf": [[24, 2, 1, "", "ShapeletForestCounterfactual"]], "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual": [[24, 3, 1, "", "fit_explain"], [24, 3, 1, "", "get_metadata_routing"], [24, 3, 1, "", "get_params"], [24, 3, 1, "", "plot"], [24, 3, 1, "", "score"], [24, 3, 1, "", "set_params"]], "wildboar.linear_model": [[32, 2, 1, "", "CastorClassifier"], [32, 2, 1, "", "DilatedShapeletClassifier"], [32, 2, 1, "", "HydraClassifier"], [32, 2, 1, "", "RandomShapeletClassifier"], [32, 2, 1, "", "RandomShapeletRegressor"], [32, 2, 1, "", "RocketClassifier"], [32, 2, 1, "", "RocketRegressor"], [28, 0, 0, "-", "_hydra"], [29, 0, 0, "-", "_rocket"], [30, 0, 0, "-", "_shapelet"], [31, 0, 0, "-", "_transform"]], "wildboar.linear_model.CastorClassifier": [[32, 3, 1, "", "get_metadata_routing"], [32, 3, 1, "", "get_params"], [32, 3, 1, "", "score"], [32, 3, 1, "", "set_params"]], "wildboar.linear_model.DilatedShapeletClassifier": [[32, 3, 1, "", "get_metadata_routing"], [32, 3, 1, "", "get_params"], [32, 3, 1, "", "score"], [32, 3, 1, "", "set_params"]], "wildboar.linear_model.HydraClassifier": [[32, 3, 1, "", "get_metadata_routing"], [32, 3, 1, "", "get_params"], [32, 3, 1, "", "score"], [32, 3, 1, "", "set_params"]], "wildboar.linear_model.RandomShapeletClassifier": [[32, 3, 1, "", "get_metadata_routing"], [32, 3, 1, "", "get_params"], [32, 3, 1, "", "score"], [32, 3, 1, "", "set_params"]], "wildboar.linear_model.RandomShapeletRegressor": [[32, 3, 1, "", "get_metadata_routing"], [32, 3, 1, "", "get_params"], [32, 3, 1, "", "score"], [32, 3, 1, "", "set_params"]], "wildboar.linear_model.RocketClassifier": [[32, 3, 1, "", "get_metadata_routing"], [32, 3, 1, "", "get_params"], [32, 3, 1, "", "score"], [32, 3, 1, "", "set_params"]], "wildboar.linear_model.RocketRegressor": [[32, 3, 1, "", "get_metadata_routing"], [32, 3, 1, "", "get_params"], [32, 3, 1, "", "score"], [32, 3, 1, "", "set_params"]], "wildboar.linear_model._hydra": [[28, 2, 1, "", "HydraClassifier"]], "wildboar.linear_model._hydra.HydraClassifier": [[28, 3, 1, "", "get_metadata_routing"], [28, 3, 1, "", "get_params"], [28, 3, 1, "", "score"], [28, 3, 1, "", "set_params"]], "wildboar.linear_model._rocket": [[29, 2, 1, "", "RocketClassifier"], [29, 2, 1, "", "RocketRegressor"]], "wildboar.linear_model._rocket.RocketClassifier": [[29, 3, 1, "", "get_metadata_routing"], [29, 3, 1, "", "get_params"], [29, 3, 1, "", "score"], [29, 3, 1, "", "set_params"]], "wildboar.linear_model._rocket.RocketRegressor": [[29, 3, 1, "", "get_metadata_routing"], [29, 3, 1, "", "get_params"], [29, 3, 1, "", "score"], [29, 3, 1, "", "set_params"]], "wildboar.linear_model._shapelet": [[30, 2, 1, "", "CastorClassifier"], [30, 2, 1, "", "DilatedShapeletClassifier"], [30, 2, 1, "", "RandomShapeletClassifier"], [30, 2, 1, "", "RandomShapeletRegressor"]], "wildboar.linear_model._shapelet.CastorClassifier": [[30, 3, 1, "", "get_metadata_routing"], [30, 3, 1, "", "get_params"], [30, 3, 1, "", "score"], [30, 3, 1, "", "set_params"]], "wildboar.linear_model._shapelet.DilatedShapeletClassifier": [[30, 3, 1, "", "get_metadata_routing"], [30, 3, 1, "", "get_params"], [30, 3, 1, "", "score"], [30, 3, 1, "", "set_params"]], "wildboar.linear_model._shapelet.RandomShapeletClassifier": [[30, 3, 1, "", "get_metadata_routing"], [30, 3, 1, "", "get_params"], [30, 3, 1, "", "score"], [30, 3, 1, "", "set_params"]], "wildboar.linear_model._shapelet.RandomShapeletRegressor": [[30, 3, 1, "", "get_metadata_routing"], [30, 3, 1, "", "get_params"], [30, 3, 1, "", "score"], [30, 3, 1, "", "set_params"]], "wildboar.linear_model._transform": [[31, 2, 1, "", "BaseTransformClassifier"], [31, 2, 1, "", "BaseTransformEstimator"], [31, 2, 1, "", "BaseTransformRegressor"], [31, 2, 1, "", "TransformRidgeCV"], [31, 2, 1, "", "TransformRidgeClassifierCV"]], "wildboar.linear_model._transform.BaseTransformClassifier": [[31, 3, 1, "", "get_metadata_routing"], [31, 3, 1, "", "get_params"], [31, 3, 1, "", "score"], [31, 3, 1, "", "set_params"]], "wildboar.linear_model._transform.BaseTransformEstimator": [[31, 3, 1, "", "get_metadata_routing"], [31, 3, 1, "", "get_params"], [31, 3, 1, "", "set_params"]], "wildboar.linear_model._transform.BaseTransformRegressor": [[31, 3, 1, "", "get_metadata_routing"], [31, 3, 1, "", "get_params"], [31, 3, 1, "", "score"], [31, 3, 1, "", "set_params"]], "wildboar.linear_model._transform.TransformRidgeCV": [[31, 3, 1, "", "get_metadata_routing"], [31, 3, 1, "", "get_params"], [31, 3, 1, "", "score"], [31, 3, 1, "", "set_params"]], "wildboar.linear_model._transform.TransformRidgeClassifierCV": [[31, 3, 1, "", "get_metadata_routing"], [31, 3, 1, "", "get_params"], [31, 3, 1, "", "score"], [31, 3, 1, "", "set_params"]], "wildboar.metrics": [[33, 0, 0, "-", "_cluster"], [34, 0, 0, "-", "_counterfactual"], [35, 1, 1, "", "compactness_score"], [35, 1, 1, "", "plausability_score"], [35, 1, 1, "", "proximity_score"], [35, 1, 1, "", "redudancy_score"], [35, 1, 1, "", "relative_proximity_score"], [35, 1, 1, "", "silhouette_samples"], [35, 1, 1, "", "silhouette_score"], [35, 1, 1, "", "validity_score"]], "wildboar.metrics._cluster": [[33, 1, 1, "", "silhouette_samples"], [33, 1, 1, "", "silhouette_score"]], "wildboar.metrics._counterfactual": [[34, 1, 1, "", "compactness_score"], [34, 1, 1, "", "plausability_score"], [34, 1, 1, "", "proximity_score"], [34, 1, 1, "", "redudancy_score"], [34, 1, 1, "", "relative_proximity_score"], [34, 1, 1, "", "validity_score"]], "wildboar.model_selection": [[38, 2, 1, "", "RepeatedOutlierSplit"], [36, 0, 0, "-", "_cv"], [37, 0, 0, "-", "_outlier"], [38, 1, 1, "", "outlier_train_test_split"]], "wildboar.model_selection.RepeatedOutlierSplit": [[38, 3, 1, "", "get_n_splits"], [38, 3, 1, "", "split"]], "wildboar.model_selection._cv": [[36, 2, 1, "", "RepeatedOutlierSplit"]], "wildboar.model_selection._cv.RepeatedOutlierSplit": [[36, 3, 1, "", "get_n_splits"], [36, 3, 1, "", "split"]], "wildboar.model_selection._outlier": [[37, 1, 1, "", "outlier_train_test_split"]], "wildboar.transform": [[49, 2, 1, "", "CastorTransform"], [49, 2, 1, "", "DerivativeTransform"], [49, 2, 1, "", "DiffTransform"], [49, 2, 1, "", "DilatedShapeletTransform"], [49, 2, 1, "", "FeatureTransform"], [49, 2, 1, "", "HydraTransform"], [49, 2, 1, "", "IntervalTransform"], [49, 2, 1, "", "MatrixProfileTransform"], [49, 2, 1, "", "PAA"], [49, 2, 1, "", "PivotTransform"], [49, 2, 1, "", "ProximityTransform"], [49, 2, 1, "", "RandomShapeletTransform"], [49, 2, 1, "", "RocketTransform"], [49, 2, 1, "", "SAX"], [39, 0, 0, "-", "_base"], [40, 0, 0, "-", "_conv"], [41, 0, 0, "-", "_diff"], [42, 0, 0, "-", "_hydra"], [43, 0, 0, "-", "_interval"], [44, 0, 0, "-", "_matrix_profile"], [45, 0, 0, "-", "_pivot"], [46, 0, 0, "-", "_rocket"], [47, 0, 0, "-", "_sax"], [48, 0, 0, "-", "_shapelet"], [49, 1, 1, "", "convolve"], [49, 1, 1, "", "piecewice_aggregate_approximation"], [49, 1, 1, "", "symbolic_aggregate_approximation"]], "wildboar.transform.CastorTransform": [[49, 3, 1, "", "fit"], [49, 3, 1, "", "fit_transform"], [49, 3, 1, "", "get_metadata_routing"], [49, 3, 1, "", "get_params"], [49, 3, 1, "", "set_output"], [49, 3, 1, "", "set_params"], [49, 3, 1, "", "transform"]], "wildboar.transform.DerivativeTransform": [[49, 3, 1, "", "fit_transform"], [49, 3, 1, "", "get_metadata_routing"], [49, 3, 1, "", "get_params"], [49, 3, 1, "", "set_output"], [49, 3, 1, "", "set_params"]], "wildboar.transform.DiffTransform": [[49, 3, 1, "", "fit_transform"], [49, 3, 1, "", "get_metadata_routing"], [49, 3, 1, "", "get_params"], [49, 3, 1, "", "set_output"], [49, 3, 1, "", "set_params"]], "wildboar.transform.DilatedShapeletTransform": [[49, 3, 1, "", "fit"], [49, 3, 1, "", "fit_transform"], [49, 3, 1, "", "get_metadata_routing"], [49, 3, 1, "", "get_params"], [49, 3, 1, "", "set_output"], [49, 3, 1, "", "set_params"], [49, 3, 1, "", "transform"]], "wildboar.transform.FeatureTransform": [[49, 3, 1, "", "fit"], [49, 3, 1, "", "fit_transform"], [49, 3, 1, "", "get_metadata_routing"], [49, 3, 1, "", "get_params"], [49, 3, 1, "", "set_output"], [49, 3, 1, "", "set_params"], [49, 3, 1, "", "transform"]], "wildboar.transform.HydraTransform": [[49, 3, 1, "", "fit"], [49, 3, 1, "", "fit_transform"], [49, 3, 1, "", "get_metadata_routing"], [49, 3, 1, "", "get_params"], [49, 3, 1, "", "set_output"], [49, 3, 1, "", "set_params"], [49, 3, 1, "", "transform"]], "wildboar.transform.IntervalTransform": [[49, 3, 1, "", "fit"], [49, 3, 1, "", "fit_transform"], [49, 3, 1, "", "get_metadata_routing"], [49, 3, 1, "", "get_params"], [49, 3, 1, "", "set_output"], [49, 3, 1, "", "set_params"], [49, 3, 1, "", "transform"]], "wildboar.transform.MatrixProfileTransform": [[49, 3, 1, "", "fit"], [49, 3, 1, "", "fit_transform"], [49, 3, 1, "", "get_metadata_routing"], [49, 3, 1, "", "get_params"], [49, 3, 1, "", "set_output"], [49, 3, 1, "", "set_params"], [49, 3, 1, "", "transform"]], "wildboar.transform.PAA": [[49, 3, 1, "", "fit_transform"], [49, 3, 1, "", "get_metadata_routing"], [49, 3, 1, "", "get_params"], [49, 3, 1, "", "set_output"], [49, 3, 1, "", "set_params"]], "wildboar.transform.PivotTransform": [[49, 3, 1, "", "fit"], [49, 3, 1, "", "fit_transform"], [49, 3, 1, "", "get_metadata_routing"], [49, 3, 1, "", "get_params"], [49, 3, 1, "", "set_output"], [49, 3, 1, "", "set_params"], [49, 3, 1, "", "transform"]], "wildboar.transform.ProximityTransform": [[49, 3, 1, "", "fit_transform"], [49, 3, 1, "", "get_metadata_routing"], [49, 3, 1, "", "get_params"], [49, 3, 1, "", "set_output"], [49, 3, 1, "", "set_params"]], "wildboar.transform.RandomShapeletTransform": [[49, 3, 1, "", "fit"], [49, 3, 1, "", "fit_transform"], [49, 3, 1, "", "get_metadata_routing"], [49, 3, 1, "", "get_params"], [49, 3, 1, "", "set_output"], [49, 3, 1, "", "set_params"], [49, 3, 1, "", "transform"]], "wildboar.transform.RocketTransform": [[49, 3, 1, "", "fit"], [49, 3, 1, "", "fit_transform"], [49, 3, 1, "", "get_metadata_routing"], [49, 3, 1, "", "get_params"], [49, 3, 1, "", "set_output"], [49, 3, 1, "", "set_params"], [49, 3, 1, "", "transform"]], "wildboar.transform.SAX": [[49, 3, 1, "", "fit_transform"], [49, 3, 1, "", "get_metadata_routing"], [49, 3, 1, "", "get_params"], [49, 3, 1, "", "set_output"], [49, 3, 1, "", "set_params"]], "wildboar.transform._base": [[39, 2, 1, "", "BaseAttributeTransform"]], "wildboar.transform._base.BaseAttributeTransform": [[39, 3, 1, "", "fit"], [39, 3, 1, "", "fit_transform"], [39, 3, 1, "", "get_metadata_routing"], [39, 3, 1, "", "get_params"], [39, 3, 1, "", "set_output"], [39, 3, 1, "", "set_params"], [39, 3, 1, "", "transform"]], "wildboar.transform._conv": [[40, 1, 1, "", "convolve"]], "wildboar.transform._diff": [[41, 2, 1, "", "DerivativeTransform"], [41, 2, 1, "", "DiffTransform"]], "wildboar.transform._diff.DerivativeTransform": [[41, 3, 1, "", "fit_transform"], [41, 3, 1, "", "get_metadata_routing"], [41, 3, 1, "", "get_params"], [41, 3, 1, "", "set_output"], [41, 3, 1, "", "set_params"]], "wildboar.transform._diff.DiffTransform": [[41, 3, 1, "", "fit_transform"], [41, 3, 1, "", "get_metadata_routing"], [41, 3, 1, "", "get_params"], [41, 3, 1, "", "set_output"], [41, 3, 1, "", "set_params"]], "wildboar.transform._hydra": [[42, 2, 1, "", "HydraTransform"]], "wildboar.transform._hydra.HydraTransform": [[42, 3, 1, "", "fit"], [42, 3, 1, "", "fit_transform"], [42, 3, 1, "", "get_metadata_routing"], [42, 3, 1, "", "get_params"], [42, 3, 1, "", "set_output"], [42, 3, 1, "", "set_params"], [42, 3, 1, "", "transform"]], "wildboar.transform._interval": [[43, 2, 1, "", "FeatureTransform"], [43, 2, 1, "", "IntervalMixin"], [43, 2, 1, "", "IntervalTransform"]], "wildboar.transform._interval.FeatureTransform": [[43, 3, 1, "", "fit"], [43, 3, 1, "", "fit_transform"], [43, 3, 1, "", "get_metadata_routing"], [43, 3, 1, "", "get_params"], [43, 3, 1, "", "set_output"], [43, 3, 1, "", "set_params"], [43, 3, 1, "", "transform"]], "wildboar.transform._interval.IntervalTransform": [[43, 3, 1, "", "fit"], [43, 3, 1, "", "fit_transform"], [43, 3, 1, "", "get_metadata_routing"], [43, 3, 1, "", "get_params"], [43, 3, 1, "", "set_output"], [43, 3, 1, "", "set_params"], [43, 3, 1, "", "transform"]], "wildboar.transform._matrix_profile": [[44, 2, 1, "", "MatrixProfileTransform"]], "wildboar.transform._matrix_profile.MatrixProfileTransform": [[44, 3, 1, "", "fit"], [44, 3, 1, "", "fit_transform"], [44, 3, 1, "", "get_metadata_routing"], [44, 3, 1, "", "get_params"], [44, 3, 1, "", "set_output"], [44, 3, 1, "", "set_params"], [44, 3, 1, "", "transform"]], "wildboar.transform._pivot": [[45, 2, 1, "", "PivotMixin"], [45, 2, 1, "", "PivotTransform"], [45, 2, 1, "", "ProximityTransform"]], "wildboar.transform._pivot.PivotTransform": [[45, 3, 1, "", "fit"], [45, 3, 1, "", "fit_transform"], [45, 3, 1, "", "get_metadata_routing"], [45, 3, 1, "", "get_params"], [45, 3, 1, "", "set_output"], [45, 3, 1, "", "set_params"], [45, 3, 1, "", "transform"]], "wildboar.transform._pivot.ProximityTransform": [[45, 3, 1, "", "fit_transform"], [45, 3, 1, "", "get_metadata_routing"], [45, 3, 1, "", "get_params"], [45, 3, 1, "", "set_output"], [45, 3, 1, "", "set_params"]], "wildboar.transform._rocket": [[46, 2, 1, "", "RocketMixin"], [46, 2, 1, "", "RocketTransform"]], "wildboar.transform._rocket.RocketTransform": [[46, 3, 1, "", "fit"], [46, 3, 1, "", "fit_transform"], [46, 3, 1, "", "get_metadata_routing"], [46, 3, 1, "", "get_params"], [46, 3, 1, "", "set_output"], [46, 3, 1, "", "set_params"], [46, 3, 1, "", "transform"]], "wildboar.transform._sax": [[47, 2, 1, "", "Binning"], [47, 2, 1, "", "NormalBinning"], [47, 2, 1, "", "PAA"], [47, 2, 1, "", "SAX"], [47, 2, 1, "", "UniformBinning"], [47, 1, 1, "", "piecewice_aggregate_approximation"], [47, 1, 1, "", "symbolic_aggregate_approximation"]], "wildboar.transform._sax.Binning": [[47, 3, 1, "", "get_thresholds"], [47, 3, 1, "", "scale"]], "wildboar.transform._sax.NormalBinning": [[47, 3, 1, "", "get_thresholds"], [47, 3, 1, "", "scale"]], "wildboar.transform._sax.PAA": [[47, 3, 1, "", "fit_transform"], [47, 3, 1, "", "get_metadata_routing"], [47, 3, 1, "", "get_params"], [47, 3, 1, "", "set_output"], [47, 3, 1, "", "set_params"]], "wildboar.transform._sax.SAX": [[47, 3, 1, "", "fit_transform"], [47, 3, 1, "", "get_metadata_routing"], [47, 3, 1, "", "get_params"], [47, 3, 1, "", "set_output"], [47, 3, 1, "", "set_params"]], "wildboar.transform._sax.UniformBinning": [[47, 3, 1, "", "get_thresholds"], [47, 3, 1, "", "scale"]], "wildboar.transform._shapelet": [[48, 2, 1, "", "CastorTransform"], [48, 2, 1, "", "DilatedShapeletTransform"], [48, 2, 1, "", "RandomShapeletTransform"], [48, 2, 1, "", "ShapeletMixin"]], "wildboar.transform._shapelet.CastorTransform": [[48, 3, 1, "", "fit"], [48, 3, 1, "", "fit_transform"], [48, 3, 1, "", "get_metadata_routing"], [48, 3, 1, "", "get_params"], [48, 3, 1, "", "set_output"], [48, 3, 1, "", "set_params"], [48, 3, 1, "", "transform"]], "wildboar.transform._shapelet.DilatedShapeletTransform": [[48, 3, 1, "", "fit"], [48, 3, 1, "", "fit_transform"], [48, 3, 1, "", "get_metadata_routing"], [48, 3, 1, "", "get_params"], [48, 3, 1, "", "set_output"], [48, 3, 1, "", "set_params"], [48, 3, 1, "", "transform"]], "wildboar.transform._shapelet.RandomShapeletTransform": [[48, 3, 1, "", "fit"], [48, 3, 1, "", "fit_transform"], [48, 3, 1, "", "get_metadata_routing"], [48, 3, 1, "", "get_params"], [48, 3, 1, "", "set_output"], [48, 3, 1, "", "set_params"], [48, 3, 1, "", "transform"]], "wildboar.tree": [[53, 2, 1, "", "ExtraShapeletTreeClassifier"], [53, 2, 1, "", "ExtraShapeletTreeRegressor"], [53, 2, 1, "", "IntervalTreeClassifier"], [53, 2, 1, "", "IntervalTreeRegressor"], [53, 2, 1, "", "PivotTreeClassifier"], [53, 2, 1, "", "ProximityTreeClassifier"], [53, 2, 1, "", "RocketTreeClassifier"], [53, 2, 1, "", "RocketTreeRegressor"], [53, 2, 1, "", "ShapeletTreeClassifier"], [53, 2, 1, "", "ShapeletTreeRegressor"], [50, 0, 0, "-", "_base"], [51, 0, 0, "-", "_ptree"], [52, 0, 0, "-", "_tree"]], "wildboar.tree.ExtraShapeletTreeClassifier": [[53, 3, 1, "", "apply"], [53, 3, 1, "", "decision_path"], [53, 3, 1, "", "fit"], [53, 3, 1, "", "get_metadata_routing"], [53, 3, 1, "", "get_params"], [53, 3, 1, "", "predict"], [53, 3, 1, "", "predict_proba"], [53, 3, 1, "", "score"], [53, 3, 1, "", "set_params"]], "wildboar.tree.ExtraShapeletTreeRegressor": [[53, 3, 1, "", "apply"], [53, 3, 1, "", "decision_path"], [53, 3, 1, "", "fit"], [53, 3, 1, "", "get_metadata_routing"], [53, 3, 1, "", "get_params"], [53, 3, 1, "", "predict"], [53, 3, 1, "", "score"], [53, 3, 1, "", "set_params"]], "wildboar.tree.IntervalTreeClassifier": [[53, 3, 1, "", "apply"], [53, 3, 1, "", "decision_path"], [53, 3, 1, "", "fit"], [53, 3, 1, "", "get_metadata_routing"], [53, 3, 1, "", "get_params"], [53, 3, 1, "", "predict"], [53, 3, 1, "", "predict_proba"], [53, 3, 1, "", "score"], [53, 3, 1, "", "set_params"]], "wildboar.tree.IntervalTreeRegressor": [[53, 3, 1, "", "apply"], [53, 3, 1, "", "decision_path"], [53, 3, 1, "", "fit"], [53, 3, 1, "", "get_metadata_routing"], [53, 3, 1, "", "get_params"], [53, 3, 1, "", "predict"], [53, 3, 1, "", "score"], [53, 3, 1, "", "set_params"]], "wildboar.tree.PivotTreeClassifier": [[53, 3, 1, "", "apply"], [53, 3, 1, "", "decision_path"], [53, 3, 1, "", "fit"], [53, 3, 1, "", "get_metadata_routing"], [53, 3, 1, "", "get_params"], [53, 3, 1, "", "predict"], [53, 3, 1, "", "predict_proba"], [53, 3, 1, "", "score"], [53, 3, 1, "", "set_params"]], "wildboar.tree.ProximityTreeClassifier": [[53, 3, 1, "", "apply"], [53, 3, 1, "", "decision_path"], [53, 3, 1, "", "fit"], [53, 3, 1, "", "get_metadata_routing"], [53, 3, 1, "", "get_params"], [53, 3, 1, "", "predict"], [53, 3, 1, "", "predict_proba"], [53, 3, 1, "", "score"], [53, 3, 1, "", "set_params"]], "wildboar.tree.RocketTreeClassifier": [[53, 3, 1, "", "apply"], [53, 3, 1, "", "decision_path"], [53, 3, 1, "", "fit"], [53, 3, 1, "", "get_metadata_routing"], [53, 3, 1, "", "get_params"], [53, 3, 1, "", "predict"], [53, 3, 1, "", "predict_proba"], [53, 3, 1, "", "score"], [53, 3, 1, "", "set_params"]], "wildboar.tree.RocketTreeRegressor": [[53, 3, 1, "", "apply"], [53, 3, 1, "", "decision_path"], [53, 3, 1, "", "fit"], [53, 3, 1, "", "get_metadata_routing"], [53, 3, 1, "", "get_params"], [53, 3, 1, "", "predict"], [53, 3, 1, "", "score"], [53, 3, 1, "", "set_params"]], "wildboar.tree.ShapeletTreeClassifier": [[53, 3, 1, "", "apply"], [53, 3, 1, "", "decision_path"], [53, 3, 1, "", "fit"], [53, 3, 1, "", "get_metadata_routing"], [53, 3, 1, "", "get_params"], [53, 3, 1, "", "predict"], [53, 3, 1, "", "predict_proba"], [53, 3, 1, "", "score"], [53, 3, 1, "", "set_params"]], "wildboar.tree.ShapeletTreeRegressor": [[53, 3, 1, "", "apply"], [53, 3, 1, "", "decision_path"], [53, 3, 1, "", "fit"], [53, 3, 1, "", "get_metadata_routing"], [53, 3, 1, "", "get_params"], [53, 3, 1, "", "predict"], [53, 3, 1, "", "score"], [53, 3, 1, "", "set_params"]], "wildboar.tree._base": [[50, 2, 1, "", "BaseTree"], [50, 2, 1, "", "BaseTreeClassifier"], [50, 2, 1, "", "BaseTreeRegressor"]], "wildboar.tree._base.BaseTree": [[50, 3, 1, "", "apply"], [50, 3, 1, "", "decision_path"], [50, 3, 1, "", "get_metadata_routing"], [50, 3, 1, "", "get_params"], [50, 3, 1, "", "set_params"]], "wildboar.tree._base.BaseTreeClassifier": [[50, 3, 1, "", "apply"], [50, 3, 1, "", "decision_path"], [50, 3, 1, "", "fit"], [50, 3, 1, "", "get_metadata_routing"], [50, 3, 1, "", "get_params"], [50, 3, 1, "", "predict"], [50, 3, 1, "", "predict_proba"], [50, 3, 1, "", "score"], [50, 3, 1, "", "set_params"]], "wildboar.tree._base.BaseTreeRegressor": [[50, 3, 1, "", "apply"], [50, 3, 1, "", "decision_path"], [50, 3, 1, "", "fit"], [50, 3, 1, "", "get_metadata_routing"], [50, 3, 1, "", "get_params"], [50, 3, 1, "", "predict"], [50, 3, 1, "", "score"], [50, 3, 1, "", "set_params"]], "wildboar.tree._ptree": [[51, 2, 1, "", "ProximityTreeClassifier"]], "wildboar.tree._ptree.ProximityTreeClassifier": [[51, 3, 1, "", "apply"], [51, 3, 1, "", "decision_path"], [51, 3, 1, "", "fit"], [51, 3, 1, "", "get_metadata_routing"], [51, 3, 1, "", "get_params"], [51, 3, 1, "", "predict"], [51, 3, 1, "", "predict_proba"], [51, 3, 1, "", "score"], [51, 3, 1, "", "set_params"]], "wildboar.tree._tree": [[52, 2, 1, "", "BaseFeatureTreeClassifier"], [52, 2, 1, "", "BaseFeatureTreeRegressor"], [52, 2, 1, "", "DilatedShapeletTreeClassifier"], [52, 2, 1, "", "ExtraShapeletTreeClassifier"], [52, 2, 1, "", "ExtraShapeletTreeRegressor"], [52, 2, 1, "", "IntervalTreeClassifier"], [52, 2, 1, "", "IntervalTreeRegressor"], [52, 2, 1, "", "PivotTreeClassifier"], [52, 2, 1, "", "RocketTreeClassifier"], [52, 2, 1, "", "RocketTreeRegressor"], [52, 2, 1, "", "ShapeletTreeClassifier"], [52, 2, 1, "", "ShapeletTreeRegressor"]], "wildboar.tree._tree.BaseFeatureTreeClassifier": [[52, 3, 1, "", "apply"], [52, 3, 1, "", "decision_path"], [52, 3, 1, "", "fit"], [52, 3, 1, "", "get_metadata_routing"], [52, 3, 1, "", "get_params"], [52, 3, 1, "", "predict"], [52, 3, 1, "", "predict_proba"], [52, 3, 1, "", "score"], [52, 3, 1, "", "set_params"]], "wildboar.tree._tree.BaseFeatureTreeRegressor": [[52, 3, 1, "", "apply"], [52, 3, 1, "", "decision_path"], [52, 3, 1, "", "fit"], [52, 3, 1, "", "get_metadata_routing"], [52, 3, 1, "", "get_params"], [52, 3, 1, "", "predict"], [52, 3, 1, "", "score"], [52, 3, 1, "", "set_params"]], "wildboar.tree._tree.DilatedShapeletTreeClassifier": [[52, 3, 1, "", "apply"], [52, 3, 1, "", "decision_path"], [52, 3, 1, "", "fit"], [52, 3, 1, "", "get_metadata_routing"], [52, 3, 1, "", "get_params"], [52, 3, 1, "", "predict"], [52, 3, 1, "", "predict_proba"], [52, 3, 1, "", "score"], [52, 3, 1, "", "set_params"]], "wildboar.tree._tree.ExtraShapeletTreeClassifier": [[52, 3, 1, "", "apply"], [52, 3, 1, "", "decision_path"], [52, 3, 1, "", "fit"], [52, 3, 1, "", "get_metadata_routing"], [52, 3, 1, "", "get_params"], [52, 3, 1, "", "predict"], [52, 3, 1, "", "predict_proba"], [52, 3, 1, "", "score"], [52, 3, 1, "", "set_params"]], "wildboar.tree._tree.ExtraShapeletTreeRegressor": [[52, 3, 1, "", "apply"], [52, 3, 1, "", "decision_path"], [52, 3, 1, "", "fit"], [52, 3, 1, "", "get_metadata_routing"], [52, 3, 1, "", "get_params"], [52, 3, 1, "", "predict"], [52, 3, 1, "", "score"], [52, 3, 1, "", "set_params"]], "wildboar.tree._tree.IntervalTreeClassifier": [[52, 3, 1, "", "apply"], [52, 3, 1, "", "decision_path"], [52, 3, 1, "", "fit"], [52, 3, 1, "", "get_metadata_routing"], [52, 3, 1, "", "get_params"], [52, 3, 1, "", "predict"], [52, 3, 1, "", "predict_proba"], [52, 3, 1, "", "score"], [52, 3, 1, "", "set_params"]], "wildboar.tree._tree.IntervalTreeRegressor": [[52, 3, 1, "", "apply"], [52, 3, 1, "", "decision_path"], [52, 3, 1, "", "fit"], [52, 3, 1, "", "get_metadata_routing"], [52, 3, 1, "", "get_params"], [52, 3, 1, "", "predict"], [52, 3, 1, "", "score"], [52, 3, 1, "", "set_params"]], "wildboar.tree._tree.PivotTreeClassifier": [[52, 3, 1, "", "apply"], [52, 3, 1, "", "decision_path"], [52, 3, 1, "", "fit"], [52, 3, 1, "", "get_metadata_routing"], [52, 3, 1, "", "get_params"], [52, 3, 1, "", "predict"], [52, 3, 1, "", "predict_proba"], [52, 3, 1, "", "score"], [52, 3, 1, "", "set_params"]], "wildboar.tree._tree.RocketTreeClassifier": [[52, 3, 1, "", "apply"], [52, 3, 1, "", "decision_path"], [52, 3, 1, "", "fit"], [52, 3, 1, "", "get_metadata_routing"], [52, 3, 1, "", "get_params"], [52, 3, 1, "", "predict"], [52, 3, 1, "", "predict_proba"], [52, 3, 1, "", "score"], [52, 3, 1, "", "set_params"]], "wildboar.tree._tree.RocketTreeRegressor": [[52, 3, 1, "", "apply"], [52, 3, 1, "", "decision_path"], [52, 3, 1, "", "fit"], [52, 3, 1, "", "get_metadata_routing"], [52, 3, 1, "", "get_params"], [52, 3, 1, "", "predict"], [52, 3, 1, "", "score"], [52, 3, 1, "", "set_params"]], "wildboar.tree._tree.ShapeletTreeClassifier": [[52, 3, 1, "", "apply"], [52, 3, 1, "", "decision_path"], [52, 3, 1, "", "fit"], [52, 3, 1, "", "get_metadata_routing"], [52, 3, 1, "", "get_params"], [52, 3, 1, "", "predict"], [52, 3, 1, "", "predict_proba"], [52, 3, 1, "", "score"], [52, 3, 1, "", "set_params"]], "wildboar.tree._tree.ShapeletTreeRegressor": [[52, 3, 1, "", "apply"], [52, 3, 1, "", "decision_path"], [52, 3, 1, "", "fit"], [52, 3, 1, "", "get_metadata_routing"], [52, 3, 1, "", "get_params"], [52, 3, 1, "", "predict"], [52, 3, 1, "", "score"], [52, 3, 1, "", "set_params"]], "wildboar.utils": [[54, 0, 0, "-", "_parallel"], [55, 0, 0, "-", "_testing"], [58, 1, 1, "", "check_X_y"], [58, 1, 1, "", "check_array"], [56, 0, 0, "-", "decorators"], [57, 0, 0, "-", "estimator_checks"], [59, 0, 0, "-", "plot"], [60, 0, 0, "-", "validation"], [61, 0, 0, "-", "variable_len"]], "wildboar.utils._parallel": [[54, 1, 1, "", "run_in_parallel"]], "wildboar.utils._testing": [[55, 1, 1, "", "assert_exhaustive_parameter_checks"], [55, 1, 1, "", "assert_parameter_checks"]], "wildboar.utils.decorators": [[56, 1, 1, "", "array_or_scalar"], [56, 1, 1, "", "singleton"], [56, 1, 1, "", "unstable"]], "wildboar.utils.estimator_checks": [[57, 1, 1, "", "check_estimator"]], "wildboar.utils.plot": [[59, 2, 1, "", "MidpointNormalize"], [59, 1, 1, "", "plot_frequency_domain"], [59, 1, 1, "", "plot_time_domain"]], "wildboar.utils.plot.MidpointNormalize": [[59, 3, 1, "", "autoscale"], [59, 3, 1, "", "autoscale_None"], [59, 3, 1, "", "process_value"], [59, 3, 1, "", "scaled"]], "wildboar.utils.validation": [[60, 1, 1, "", "check_X_y"], [60, 1, 1, "", "check_array"], [60, 1, 1, "", "check_classification_targets"], [60, 1, 1, "", "check_option"], [60, 1, 1, "", "check_type"]], "wildboar.utils.variable_len": [[61, 1, 1, "", "get_variable_length"], [61, 1, 1, "", "is_end_of_series"], [61, 1, 1, "", "is_variable_length"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "titleterms": {"wildboar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 84], "function": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 15, 16, 20, 21, 25, 26, 27, 33, 34, 35, 37, 38, 40, 47, 49, 54, 55, 56, 57, 58, 59, 60, 61], "annot": [0, 1, 2, 3, 67], "base": [0, 4, 78, 79], "class": [0, 4, 6, 7, 11, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 59], "dataset": [0, 5, 6, 7, 8, 9, 66, 69], "outlier": [0, 8, 81, 82], "preprocess": [0, 9], "distanc": [0, 10, 11, 12, 13, 14, 15, 16, 74, 75], "dtw": [0, 15], "ensembl": [0, 17, 18, 19, 77], "explain": [0, 20, 21, 22, 23, 24, 25, 26], "counterfactu": [0, 21, 22, 23, 24, 25, 65], "linear_model": [0, 28, 29, 30, 31, 32], "metric": [0, 33, 34, 35, 73, 74, 75], "model_select": [0, 36, 37, 38], "transform": [0, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 64, 66, 78], "tree": [0, 50, 51, 52, 53, 79], "util": [0, 54, 55, 56, 57, 58, 59, 60, 61], "_motif": 1, "modul": [1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 17, 18, 20, 21, 22, 23, 24, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61], "content": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_segment": 2, "packag": [3, 7, 16, 19, 25, 26, 27, 32, 35, 38, 49, 53, 58], "_filter": 5, "_repositori": 6, "submodul": [7, 16, 27, 58], "_distanc": 10, "_manifold": 11, "_matrix_profil": [12, 44], "_multi_metr": 13, "_neighbor": 14, "_elast": 17, "_ensembl": 18, "_import": 20, "_helper": 21, "_nn": 22, "_proto": 23, "_sf": 24, "subpackag": [26, 27], "attribut": 27, "_hydra": [28, 42], "_rocket": [29, 46], "_shapelet": [30, 48], "_transform": 31, "_cluster": 33, "_counterfactu": 34, "_cv": 36, "_outlier": 37, "_base": [39, 50], "_conv": 40, "_diff": 41, "_interv": 43, "_pivot": 45, "_sax": 47, "_ptree": 51, "_tree": 52, "_parallel": 54, "_test": 55, "decor": 56, "estimator_check": 57, "plot": 59, "valid": 60, "variable_len": 61, "version": [62, 86], "exampl": [63, 66], "convolut": 64, "hydra": 64, "rocket": 64, "explan": 65, "nearest": 65, "neighbour": 65, "shapelet": [65, 77], "forest": [65, 77], "refer": 65, "user": 66, "guid": 66, "load": [66, 69], "an": 66, "learn": [66, 76, 80], "predict": 66, "time": [66, 68, 75], "seri": [66, 68], "tabular": 66, "data": 66, "explor": 66, "model": [66, 86], "perform": 66, "persist": 66, "variabl": 68, "length": 68, "singl": 69, "multipl": 69, "filter": 69, "pre": 70, "process": 70, "repositori": 71, "definit": 71, "instal": [71, 84], "local": 71, "cach": 71, "json": 71, "glossari": 72, "subsequ": [73, 74, 75], "elast": [73, 75], "non": 73, "pairwis": 74, "pair": 74, "multivari": 74, "support": 74, "search": 74, "benchmark": [74, 82], "dynam": 75, "warp": 75, "longest": 75, "common": 75, "edit": 75, "real": 75, "penalti": 75, "sequenc": 75, "move": 75, "split": 75, "merg": 75, "supervis": 76, "estim": [77, 78, 79], "proxim": 77, "unsupervis": 80, "detect": [81, 82], "minor": 82, "label": 82, "major": 82, "emmott": 82, "build": 85, "from": 85, "sourc": 85, "what": 86, "": 86, "new": 86, "depend": 86, "1": 86, "2": 86, "0": 86, "chang": 86, "changelog": 86, "other": 86, "improv": 86}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"wildboar": [[0, "wildboar"], [27, "module-wildboar"]], "Functions": [[0, "id1"], [0, "id2"], [0, "id4"], [0, "id6"], [0, "id7"], [0, "id8"], [0, "id10"], [0, "id11"], [0, "id14"], [0, "id16"], [0, "id18"], [0, "id20"], [0, "id22"], [0, "id24"], [1, "functions"], [2, "functions"], [3, "functions"], [4, "functions"], [5, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [12, "functions"], [15, "functions"], [16, "functions"], [20, "functions"], [21, "functions"], [25, "functions"], [26, "functions"], [27, "functions"], [33, "functions"], [34, "functions"], [35, "functions"], [37, "functions"], [38, "functions"], [40, "functions"], [47, "functions"], [49, "functions"], [54, "functions"], [55, "functions"], [56, "functions"], [57, "functions"], [58, "functions"], [59, "functions"], [60, "functions"], [61, "functions"]], "wildboar.annotate": [[0, "wildboar-annotate"], [3, "module-wildboar.annotate"]], "wildboar.base": [[0, "wildboar-base"], [4, "module-wildboar.base"]], "Classes": [[0, "id3"], [0, "id5"], [0, "id9"], [0, "id12"], [0, "id13"], [0, "id15"], [0, "id17"], [0, "id19"], [0, "id21"], [0, "id23"], [4, "classes"], [6, "classes"], [7, "classes"], [11, "classes"], [14, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [36, "classes"], [38, "classes"], [39, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [44, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [51, "classes"], [52, "classes"], [53, "classes"], [59, "classes"]], "wildboar.datasets": [[0, "wildboar-datasets"], [7, "module-wildboar.datasets"]], "wildboar.datasets.outlier": [[0, "wildboar-datasets-outlier"], [8, "module-wildboar.datasets.outlier"]], "wildboar.datasets.preprocess": [[0, "wildboar-datasets-preprocess"], [9, "module-wildboar.datasets.preprocess"]], "wildboar.distance": [[0, "wildboar-distance"], [16, "module-wildboar.distance"]], "wildboar.distance.dtw": [[0, "wildboar-distance-dtw"], [15, "module-wildboar.distance.dtw"]], "wildboar.ensemble": [[0, "wildboar-ensemble"], [19, "module-wildboar.ensemble"]], "wildboar.explain": [[0, "wildboar-explain"], [26, "module-wildboar.explain"]], "wildboar.explain.counterfactual": [[0, "wildboar-explain-counterfactual"], [25, "module-wildboar.explain.counterfactual"]], "wildboar.linear_model": [[0, "wildboar-linear-model"], [32, "module-wildboar.linear_model"]], "wildboar.metrics": [[0, "wildboar-metrics"], [35, "module-wildboar.metrics"]], "wildboar.model_selection": [[0, "wildboar-model-selection"], [38, "module-wildboar.model_selection"]], "wildboar.transform": [[0, "wildboar-transform"], [49, "module-wildboar.transform"]], "wildboar.tree": [[0, "wildboar-tree"], [53, "module-wildboar.tree"]], "wildboar.utils": [[0, "wildboar-utils"], [58, "module-wildboar.utils"]], "wildboar.annotate._motifs": [[1, "module-wildboar.annotate._motifs"]], "Module Contents": [[1, "module-contents"], [2, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [14, "module-contents"], [15, "module-contents"], [17, "module-contents"], [18, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [33, "module-contents"], [34, "module-contents"], [36, "module-contents"], [37, "module-contents"], [39, "module-contents"], [40, "module-contents"], [41, "module-contents"], [42, "module-contents"], [43, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [54, "module-contents"], [55, "module-contents"], [56, "module-contents"], [57, "module-contents"], [59, "module-contents"], [60, "module-contents"], [61, "module-contents"]], "wildboar.annotate._segment": [[2, "module-wildboar.annotate._segment"]], "Package Contents": [[3, "package-contents"], [7, "package-contents"], [16, "package-contents"], [19, "package-contents"], [25, "package-contents"], [26, "package-contents"], [27, "package-contents"], [32, "package-contents"], [35, "package-contents"], [38, "package-contents"], [49, "package-contents"], [53, "package-contents"], [58, "package-contents"]], "wildboar.datasets._filter": [[5, "module-wildboar.datasets._filter"]], "wildboar.datasets._repository": [[6, "module-wildboar.datasets._repository"]], "Submodules": [[7, "submodules"], [16, "submodules"], [27, "submodules"], [58, "submodules"]], "wildboar.distance._distance": [[10, "module-wildboar.distance._distance"]], "wildboar.distance._manifold": [[11, "module-wildboar.distance._manifold"]], "wildboar.distance._matrix_profile": [[12, "module-wildboar.distance._matrix_profile"]], "wildboar.distance._multi_metric": [[13, "module-wildboar.distance._multi_metric"]], "wildboar.distance._neighbors": [[14, "module-wildboar.distance._neighbors"]], "wildboar.ensemble._elastic": [[17, "module-wildboar.ensemble._elastic"]], "wildboar.ensemble._ensemble": [[18, "module-wildboar.ensemble._ensemble"]], "wildboar.explain._importance": [[20, "module-wildboar.explain._importance"]], "wildboar.explain.counterfactual._helper": [[21, "module-wildboar.explain.counterfactual._helper"]], "wildboar.explain.counterfactual._nn": [[22, "module-wildboar.explain.counterfactual._nn"]], "wildboar.explain.counterfactual._proto": [[23, "module-wildboar.explain.counterfactual._proto"]], "wildboar.explain.counterfactual._sf": [[24, "module-wildboar.explain.counterfactual._sf"]], "Subpackages": [[26, "subpackages"], [27, "subpackages"]], "Attributes": [[27, "attributes"]], "wildboar.linear_model._hydra": [[28, "module-wildboar.linear_model._hydra"]], "wildboar.linear_model._rocket": [[29, "module-wildboar.linear_model._rocket"]], "wildboar.linear_model._shapelet": [[30, "module-wildboar.linear_model._shapelet"]], "wildboar.linear_model._transform": [[31, "module-wildboar.linear_model._transform"]], "wildboar.metrics._cluster": [[33, "module-wildboar.metrics._cluster"]], "wildboar.metrics._counterfactual": [[34, "module-wildboar.metrics._counterfactual"]], "wildboar.model_selection._cv": [[36, "module-wildboar.model_selection._cv"]], "wildboar.model_selection._outlier": [[37, "module-wildboar.model_selection._outlier"]], "wildboar.transform._base": [[39, "module-wildboar.transform._base"]], "wildboar.transform._conv": [[40, "module-wildboar.transform._conv"]], "wildboar.transform._diff": [[41, "module-wildboar.transform._diff"]], "wildboar.transform._hydra": [[42, "module-wildboar.transform._hydra"]], "wildboar.transform._interval": [[43, "module-wildboar.transform._interval"]], "wildboar.transform._matrix_profile": [[44, "module-wildboar.transform._matrix_profile"]], "wildboar.transform._pivot": [[45, "module-wildboar.transform._pivot"]], "wildboar.transform._rocket": [[46, "module-wildboar.transform._rocket"]], "wildboar.transform._sax": [[47, "module-wildboar.transform._sax"]], "wildboar.transform._shapelet": [[48, "module-wildboar.transform._shapelet"]], "wildboar.tree._base": [[50, "module-wildboar.tree._base"]], "wildboar.tree._ptree": [[51, "module-wildboar.tree._ptree"]], "wildboar.tree._tree": [[52, "module-wildboar.tree._tree"]], "wildboar.utils._parallel": [[54, "module-wildboar.utils._parallel"]], "wildboar.utils._testing": [[55, "module-wildboar.utils._testing"]], "wildboar.utils.decorators": [[56, "module-wildboar.utils.decorators"]], "wildboar.utils.estimator_checks": [[57, "module-wildboar.utils.estimator_checks"]], "wildboar.utils.plot": [[59, "module-wildboar.utils.plot"]], "wildboar.utils.validation": [[60, "module-wildboar.utils.validation"]], "wildboar.utils.variable_len": [[61, "module-wildboar.utils.variable_len"]], "wildboar.version": [[62, "module-wildboar.version"]], "Examples": [[63, "examples"]], "Convolution transform": [[64, "convolution-transform"]], "Hydra transformation": [[64, "hydra-transformation"]], "Rocket transform": [[64, "rocket-transform"]], "Counterfactual explanations": [[65, "counterfactual-explanations"]], "Nearest neighbour counterfactuals": [[65, "nearest-neighbour-counterfactuals"]], "Shapelet forest counterfactuals": [[65, "shapelet-forest-counterfactuals"]], "References": [[65, "references"]], "User Guide": [[66, "user-guide"]], "Loading an example dataset": [[66, "loading-an-example-dataset"]], "Learning and predicting": [[66, "learning-and-predicting"]], "Transforming time series to tabular data": [[66, "transforming-time-series-to-tabular-data"]], "Exploring model performance": [[66, "exploring-model-performance"]], "Model persistence": [[66, "model-persistence"]], "Annotate": [[67, "annotate"]], "Time series": [[68, "time-series"]], "Variable length time series": [[68, "variable-length-time-series"]], "Datasets": [[69, "datasets"]], "Loading datasets": [[69, "loading-datasets"]], "Loading a single dataset": [[69, "loading-a-single-dataset"]], "Loading multiple datasets": [[69, "loading-multiple-datasets"]], "Filters": [[69, "filters"]], "Pre-processing": [[70, "pre-processing"]], "Repositories": [[71, "repositories"]], "Repository definitions": [[71, "repository-definitions"]], "Installing repositories": [[71, "installing-repositories"]], "Local cache": [[71, "local-cache"]], "JSON repositories": [[71, "json-repositories"]], "Glossary": [[72, "glossary"]], "Metrics": [[73, "metrics"], [74, "metrics"]], "Subsequence metrics": [[73, "subsequence-metrics"], [74, "subsequence-metrics"]], "Elastic and non-elastic metrics": [[73, "elastic-and-non-elastic-metrics"]], "Distance": [[74, "distance"]], "Pairwise distance": [[74, "pairwise-distance"]], "Paired distance": [[74, "paired-distance"]], "Multivariate support": [[74, "multivariate-support"]], "Subsequence search": [[74, "subsequence-search"]], "Pairwise subsequence distance": [[74, "pairwise-subsequence-distance"]], "Benchmark": [[74, "benchmark"]], "Elastic metrics": [[75, "elastic-metrics"]], "Dynamic time warping": [[75, "dynamic-time-warping"]], "Longest common subsequence": [[75, "longest-common-subsequence"]], "Edit-distance with real penalty": [[75, "edit-distance-with-real-penalty"]], "Edit-distance for real sequence": [[75, "edit-distance-for-real-sequence"]], "Time-warp edit distance": [[75, "time-warp-edit-distance"]], "Move-split-merge": [[75, "move-split-merge"]], "Supervised learning": [[76, "supervised-learning"]], "Ensemble estimators": [[77, "ensemble-estimators"]], "Shapelet forests": [[77, "shapelet-forests"]], "Proximity forests": [[77, "proximity-forests"]], "Transform-based estimators": [[78, "transform-based-estimators"]], "Tree-based estimators": [[79, "tree-based-estimators"]], "Unsupervised learning": [[80, "unsupervised-learning"]], "Outlier detection": [[81, "outlier-detection"]], "Outlier detection benchmarks": [[82, "outlier-detection-benchmarks"]], "Minority labeler": [[82, "minority-labeler"]], "Majority labeler": [[82, "majority-labeler"]], "Emmott labeler": [[82, "emmott-labeler"]], "Install wildboar": [[84, "install-wildboar"]], "Build from source": [[85, "build-from-source"]], "What\u2019s new": [[86, "what-s-new"]], "Dependencies": [[86, "dependencies"]], "Version 1.2.0": [[86, "version-1-2-0"]], "New and changed models": [[86, "new-and-changed-models"]], "Changelog": [[86, "changelog"]], "Other improvements": [[86, "other-improvements"]]}, "indexentries": {"module": [[1, "module-wildboar.annotate._motifs"], [2, "module-wildboar.annotate._segment"], [3, "module-wildboar.annotate"], [4, "module-wildboar.base"], [5, "module-wildboar.datasets._filter"], [6, "module-wildboar.datasets._repository"], [7, "module-wildboar.datasets"], [8, "module-wildboar.datasets.outlier"], [9, "module-wildboar.datasets.preprocess"], [10, "module-wildboar.distance._distance"], [11, "module-wildboar.distance._manifold"], [12, "module-wildboar.distance._matrix_profile"], [13, "module-wildboar.distance._multi_metric"], [14, "module-wildboar.distance._neighbors"], [15, "module-wildboar.distance.dtw"], [16, "module-wildboar.distance"], [17, "module-wildboar.ensemble._elastic"], [18, "module-wildboar.ensemble._ensemble"], [19, "module-wildboar.ensemble"], [20, "module-wildboar.explain._importance"], [21, "module-wildboar.explain.counterfactual._helper"], [22, "module-wildboar.explain.counterfactual._nn"], [23, "module-wildboar.explain.counterfactual._proto"], [24, "module-wildboar.explain.counterfactual._sf"], [25, "module-wildboar.explain.counterfactual"], [26, "module-wildboar.explain"], [27, "module-wildboar"], [28, "module-wildboar.linear_model._hydra"], [29, "module-wildboar.linear_model._rocket"], [30, "module-wildboar.linear_model._shapelet"], [31, "module-wildboar.linear_model._transform"], [32, "module-wildboar.linear_model"], [33, "module-wildboar.metrics._cluster"], [34, "module-wildboar.metrics._counterfactual"], [35, "module-wildboar.metrics"], [36, "module-wildboar.model_selection._cv"], [37, "module-wildboar.model_selection._outlier"], [38, "module-wildboar.model_selection"], [39, "module-wildboar.transform._base"], [40, "module-wildboar.transform._conv"], [41, "module-wildboar.transform._diff"], [42, "module-wildboar.transform._hydra"], [43, "module-wildboar.transform._interval"], [44, "module-wildboar.transform._matrix_profile"], [45, "module-wildboar.transform._pivot"], [46, "module-wildboar.transform._rocket"], [47, "module-wildboar.transform._sax"], [48, "module-wildboar.transform._shapelet"], [49, "module-wildboar.transform"], [50, "module-wildboar.tree._base"], [51, "module-wildboar.tree._ptree"], [52, "module-wildboar.tree._tree"], [53, "module-wildboar.tree"], [54, "module-wildboar.utils._parallel"], [55, "module-wildboar.utils._testing"], [56, "module-wildboar.utils.decorators"], [57, "module-wildboar.utils.estimator_checks"], [58, "module-wildboar.utils"], [59, "module-wildboar.utils.plot"], [60, "module-wildboar.utils.validation"], [61, "module-wildboar.utils.variable_len"], [62, "module-wildboar.version"]], "motifs() (in module wildboar.annotate._motifs)": [[1, "wildboar.annotate._motifs.motifs"]], "wildboar.annotate._motifs": [[1, "module-wildboar.annotate._motifs"]], "segment() (in module wildboar.annotate._segment)": [[2, "wildboar.annotate._segment.segment"]], "wildboar.annotate._segment": [[2, "module-wildboar.annotate._segment"]], "motifs() (in module wildboar.annotate)": [[3, "wildboar.annotate.motifs"]], "segment() (in module wildboar.annotate)": [[3, "wildboar.annotate.segment"]], "wildboar.annotate": [[3, "module-wildboar.annotate"]], "baseestimator (class in wildboar.base)": [[4, "wildboar.base.BaseEstimator"]], "counterfactualmixin (class in wildboar.base)": [[4, "wildboar.base.CounterfactualMixin"]], "explainermixin (class in wildboar.base)": [[4, "wildboar.base.ExplainerMixin"]], "fit_explain() (wildboar.base.explainermixin method)": [[4, "wildboar.base.ExplainerMixin.fit_explain"]], "get_metadata_routing() (wildboar.base.baseestimator method)": [[4, "wildboar.base.BaseEstimator.get_metadata_routing"]], "get_params() (wildboar.base.baseestimator method)": [[4, "wildboar.base.BaseEstimator.get_params"]], "is_counterfactual() (in module wildboar.base)": [[4, "wildboar.base.is_counterfactual"]], "is_explainer() (in module wildboar.base)": [[4, "wildboar.base.is_explainer"]], "plot() (wildboar.base.explainermixin method)": [[4, "wildboar.base.ExplainerMixin.plot"]], "score() (wildboar.base.counterfactualmixin method)": [[4, "wildboar.base.CounterfactualMixin.score"]], "set_params() (wildboar.base.baseestimator method)": [[4, "wildboar.base.BaseEstimator.set_params"]], "wildboar.base": [[4, "module-wildboar.base"]], "make_dict_filter() (in module wildboar.datasets._filter)": [[5, "wildboar.datasets._filter.make_dict_filter"]], "make_filter() (in module wildboar.datasets._filter)": [[5, "wildboar.datasets._filter.make_filter"]], "make_list_filter() (in module wildboar.datasets._filter)": [[5, "wildboar.datasets._filter.make_list_filter"]], "make_str_filter() (in module wildboar.datasets._filter)": [[5, "wildboar.datasets._filter.make_str_filter"]], "wildboar.datasets._filter": [[5, "module-wildboar.datasets._filter"]], "bundle (class in wildboar.datasets._repository)": [[6, "wildboar.datasets._repository.Bundle"]], "jsonrepository (class in wildboar.datasets._repository)": [[6, "wildboar.datasets._repository.JSONRepository"]], "npbundle (class in wildboar.datasets._repository)": [[6, "wildboar.datasets._repository.NpBundle"]], "repository (class in wildboar.datasets._repository)": [[6, "wildboar.datasets._repository.Repository"]], "download_url (wildboar.datasets._repository.jsonrepository property)": [[6, "wildboar.datasets._repository.JSONRepository.download_url"]], "download_url (wildboar.datasets._repository.repository property)": [[6, "wildboar.datasets._repository.Repository.download_url"]], "get_bundle() (wildboar.datasets._repository.jsonrepository method)": [[6, "wildboar.datasets._repository.JSONRepository.get_bundle"]], "get_bundle() (wildboar.datasets._repository.repository method)": [[6, "wildboar.datasets._repository.Repository.get_bundle"]], "get_bundles() (wildboar.datasets._repository.jsonrepository method)": [[6, "wildboar.datasets._repository.JSONRepository.get_bundles"]], "get_bundles() (wildboar.datasets._repository.repository method)": [[6, "wildboar.datasets._repository.Repository.get_bundles"]], "get_collection() (wildboar.datasets._repository.bundle method)": [[6, "wildboar.datasets._repository.Bundle.get_collection"]], "get_collection() (wildboar.datasets._repository.npbundle method)": [[6, "wildboar.datasets._repository.NpBundle.get_collection"]], "get_filename() (wildboar.datasets._repository.bundle method)": [[6, "wildboar.datasets._repository.Bundle.get_filename"]], "get_filename() (wildboar.datasets._repository.npbundle method)": [[6, "wildboar.datasets._repository.NpBundle.get_filename"]], "list() (wildboar.datasets._repository.bundle method)": [[6, "wildboar.datasets._repository.Bundle.list"]], "list() (wildboar.datasets._repository.npbundle method)": [[6, "wildboar.datasets._repository.NpBundle.list"]], "load() (wildboar.datasets._repository.bundle method)": [[6, "wildboar.datasets._repository.Bundle.load"]], "load() (wildboar.datasets._repository.npbundle method)": [[6, "wildboar.datasets._repository.NpBundle.load"]], "name (wildboar.datasets._repository.jsonrepository property)": [[6, "wildboar.datasets._repository.JSONRepository.name"]], "name (wildboar.datasets._repository.repository property)": [[6, "wildboar.datasets._repository.Repository.name"]], "refresh() (wildboar.datasets._repository.jsonrepository method)": [[6, "wildboar.datasets._repository.JSONRepository.refresh"]], "refresh() (wildboar.datasets._repository.repository method)": [[6, "wildboar.datasets._repository.Repository.refresh"]], "version (wildboar.datasets._repository.jsonrepository property)": [[6, "wildboar.datasets._repository.JSONRepository.version"]], "version (wildboar.datasets._repository.repository property)": [[6, "wildboar.datasets._repository.Repository.version"]], "wildboar.datasets._repository": [[6, "module-wildboar.datasets._repository"]], "wildboar_requires (wildboar.datasets._repository.jsonrepository property)": [[6, "wildboar.datasets._repository.JSONRepository.wildboar_requires"]], "wildboar_requires (wildboar.datasets._repository.repository property)": [[6, "wildboar.datasets._repository.Repository.wildboar_requires"]], "bundle (class in wildboar.datasets)": [[7, "wildboar.datasets.Bundle"]], "jsonrepository (class in wildboar.datasets)": [[7, "wildboar.datasets.JSONRepository"]], "npbundle (class in wildboar.datasets)": [[7, "wildboar.datasets.NpBundle"]], "repository (class in wildboar.datasets)": [[7, "wildboar.datasets.Repository"]], "clear_cache() (in module wildboar.datasets)": [[7, "wildboar.datasets.clear_cache"]], "download_url (wildboar.datasets.jsonrepository property)": [[7, "wildboar.datasets.JSONRepository.download_url"]], "download_url (wildboar.datasets.repository property)": [[7, "wildboar.datasets.Repository.download_url"]], "get_bundle() (wildboar.datasets.jsonrepository method)": [[7, "wildboar.datasets.JSONRepository.get_bundle"]], "get_bundle() (wildboar.datasets.repository method)": [[7, "wildboar.datasets.Repository.get_bundle"]], "get_bundles() (in module wildboar.datasets)": [[7, "wildboar.datasets.get_bundles"]], "get_bundles() (wildboar.datasets.jsonrepository method)": [[7, "wildboar.datasets.JSONRepository.get_bundles"]], "get_bundles() (wildboar.datasets.repository method)": [[7, "wildboar.datasets.Repository.get_bundles"]], "get_collection() (wildboar.datasets.bundle method)": [[7, "wildboar.datasets.Bundle.get_collection"]], "get_collection() (wildboar.datasets.npbundle method)": [[7, "wildboar.datasets.NpBundle.get_collection"]], "get_filename() (wildboar.datasets.bundle method)": [[7, "wildboar.datasets.Bundle.get_filename"]], "get_filename() (wildboar.datasets.npbundle method)": [[7, "wildboar.datasets.NpBundle.get_filename"]], "get_repository() (in module wildboar.datasets)": [[7, "wildboar.datasets.get_repository"]], "install_repository() (in module wildboar.datasets)": [[7, "wildboar.datasets.install_repository"]], "list() (wildboar.datasets.bundle method)": [[7, "wildboar.datasets.Bundle.list"]], "list() (wildboar.datasets.npbundle method)": [[7, "wildboar.datasets.NpBundle.list"]], "list_bundles() (in module wildboar.datasets)": [[7, "wildboar.datasets.list_bundles"]], "list_collections() (in module wildboar.datasets)": [[7, "wildboar.datasets.list_collections"]], "list_datasets() (in module wildboar.datasets)": [[7, "wildboar.datasets.list_datasets"]], "list_repositories() (in module wildboar.datasets)": [[7, "wildboar.datasets.list_repositories"]], "load() (wildboar.datasets.bundle method)": [[7, "wildboar.datasets.Bundle.load"]], "load() (wildboar.datasets.npbundle method)": [[7, "wildboar.datasets.NpBundle.load"]], "load_dataset() (in module wildboar.datasets)": [[7, "wildboar.datasets.load_dataset"]], "load_datasets() (in module wildboar.datasets)": [[7, "wildboar.datasets.load_datasets"]], "load_gun_point() (in module wildboar.datasets)": [[7, "wildboar.datasets.load_gun_point"]], "load_synthetic_control() (in module wildboar.datasets)": [[7, "wildboar.datasets.load_synthetic_control"]], "load_two_lead_ecg() (in module wildboar.datasets)": [[7, "wildboar.datasets.load_two_lead_ecg"]], "name (wildboar.datasets.jsonrepository property)": [[7, "wildboar.datasets.JSONRepository.name"]], "name (wildboar.datasets.repository property)": [[7, "wildboar.datasets.Repository.name"]], "refresh() (wildboar.datasets.jsonrepository method)": [[7, "wildboar.datasets.JSONRepository.refresh"]], "refresh() (wildboar.datasets.repository method)": [[7, "wildboar.datasets.Repository.refresh"]], "refresh_repositories() (in module wildboar.datasets)": [[7, "wildboar.datasets.refresh_repositories"]], "set_cache_dir() (in module wildboar.datasets)": [[7, "wildboar.datasets.set_cache_dir"]], "version (wildboar.datasets.jsonrepository property)": [[7, "wildboar.datasets.JSONRepository.version"]], "version (wildboar.datasets.repository property)": [[7, "wildboar.datasets.Repository.version"]], "wildboar.datasets": [[7, "module-wildboar.datasets"]], "wildboar_requires (wildboar.datasets.jsonrepository property)": [[7, "wildboar.datasets.JSONRepository.wildboar_requires"]], "wildboar_requires (wildboar.datasets.repository property)": [[7, "wildboar.datasets.Repository.wildboar_requires"]], "density_outliers() (in module wildboar.datasets.outlier)": [[8, "wildboar.datasets.outlier.density_outliers"]], "emmott_outliers() (in module wildboar.datasets.outlier)": [[8, "wildboar.datasets.outlier.emmott_outliers"]], "kmeans_outliers() (in module wildboar.datasets.outlier)": [[8, "wildboar.datasets.outlier.kmeans_outliers"]], "majority_outliers() (in module wildboar.datasets.outlier)": [[8, "wildboar.datasets.outlier.majority_outliers"]], "minority_outliers() (in module wildboar.datasets.outlier)": [[8, "wildboar.datasets.outlier.minority_outliers"]], "wildboar.datasets.outlier": [[8, "module-wildboar.datasets.outlier"]], "maxabs_scale() (in module wildboar.datasets.preprocess)": [[9, "wildboar.datasets.preprocess.maxabs_scale"]], "minmax_scale() (in module wildboar.datasets.preprocess)": [[9, "wildboar.datasets.preprocess.minmax_scale"]], "named_preprocess() (in module wildboar.datasets.preprocess)": [[9, "wildboar.datasets.preprocess.named_preprocess"]], "standardize() (in module wildboar.datasets.preprocess)": [[9, "wildboar.datasets.preprocess.standardize"]], "truncate() (in module wildboar.datasets.preprocess)": [[9, "wildboar.datasets.preprocess.truncate"]], "wildboar.datasets.preprocess": [[9, "module-wildboar.datasets.preprocess"]], "argmin_distance() (in module wildboar.distance._distance)": [[10, "wildboar.distance._distance.argmin_distance"]], "argmin_subsequence_distance() (in module wildboar.distance._distance)": [[10, "wildboar.distance._distance.argmin_subsequence_distance"]], "distance_profile() (in module wildboar.distance._distance)": [[10, "wildboar.distance._distance.distance_profile"]], "paired_distance() (in module wildboar.distance._distance)": [[10, "wildboar.distance._distance.paired_distance"]], "paired_subsequence_distance() (in module wildboar.distance._distance)": [[10, "wildboar.distance._distance.paired_subsequence_distance"]], "paired_subsequence_match() (in module wildboar.distance._distance)": [[10, "wildboar.distance._distance.paired_subsequence_match"]], "pairwise_distance() (in module wildboar.distance._distance)": [[10, "wildboar.distance._distance.pairwise_distance"]], "pairwise_subsequence_distance() (in module wildboar.distance._distance)": [[10, "wildboar.distance._distance.pairwise_subsequence_distance"]], "subsequence_match() (in module wildboar.distance._distance)": [[10, "wildboar.distance._distance.subsequence_match"]], "wildboar.distance._distance": [[10, "module-wildboar.distance._distance"]], "mds (class in wildboar.distance._manifold)": [[11, "wildboar.distance._manifold.MDS"]], "get_metadata_routing() (wildboar.distance._manifold.mds method)": [[11, "wildboar.distance._manifold.MDS.get_metadata_routing"]], "get_params() (wildboar.distance._manifold.mds method)": [[11, "wildboar.distance._manifold.MDS.get_params"]], "set_params() (wildboar.distance._manifold.mds method)": [[11, "wildboar.distance._manifold.MDS.set_params"]], "wildboar.distance._manifold": [[11, "module-wildboar.distance._manifold"]], "matrix_profile() (in module wildboar.distance._matrix_profile)": [[12, "wildboar.distance._matrix_profile.matrix_profile"]], "wildboar.distance._matrix_profile": [[12, "module-wildboar.distance._matrix_profile"]], "wildboar.distance._multi_metric": [[13, "module-wildboar.distance._multi_metric"]], "kmeans (class in wildboar.distance._neighbors)": [[14, "wildboar.distance._neighbors.KMeans"]], "kmedoids (class in wildboar.distance._neighbors)": [[14, "wildboar.distance._neighbors.KMedoids"]], "kneighborsclassifier (class in wildboar.distance._neighbors)": [[14, "wildboar.distance._neighbors.KNeighborsClassifier"]], "fit() (wildboar.distance._neighbors.kmeans method)": [[14, "wildboar.distance._neighbors.KMeans.fit"]], "fit() (wildboar.distance._neighbors.kmedoids method)": [[14, "wildboar.distance._neighbors.KMedoids.fit"]], "fit() (wildboar.distance._neighbors.kneighborsclassifier method)": [[14, "wildboar.distance._neighbors.KNeighborsClassifier.fit"]], "fit_predict() (wildboar.distance._neighbors.kmeans method)": [[14, "wildboar.distance._neighbors.KMeans.fit_predict"]], "fit_predict() (wildboar.distance._neighbors.kmedoids method)": [[14, "wildboar.distance._neighbors.KMedoids.fit_predict"]], "fit_transform() (wildboar.distance._neighbors.kmeans method)": [[14, "wildboar.distance._neighbors.KMeans.fit_transform"]], "fit_transform() (wildboar.distance._neighbors.kmedoids method)": [[14, "wildboar.distance._neighbors.KMedoids.fit_transform"]], "get_metadata_routing() (wildboar.distance._neighbors.kmeans method)": [[14, "wildboar.distance._neighbors.KMeans.get_metadata_routing"]], "get_metadata_routing() (wildboar.distance._neighbors.kmedoids method)": [[14, "wildboar.distance._neighbors.KMedoids.get_metadata_routing"]], "get_metadata_routing() (wildboar.distance._neighbors.kneighborsclassifier method)": [[14, "wildboar.distance._neighbors.KNeighborsClassifier.get_metadata_routing"]], "get_params() (wildboar.distance._neighbors.kmeans method)": [[14, "wildboar.distance._neighbors.KMeans.get_params"]], "get_params() (wildboar.distance._neighbors.kmedoids method)": [[14, "wildboar.distance._neighbors.KMedoids.get_params"]], "get_params() (wildboar.distance._neighbors.kneighborsclassifier method)": [[14, "wildboar.distance._neighbors.KNeighborsClassifier.get_params"]], "predict() (wildboar.distance._neighbors.kmeans method)": [[14, "wildboar.distance._neighbors.KMeans.predict"]], "predict() (wildboar.distance._neighbors.kmedoids method)": [[14, "wildboar.distance._neighbors.KMedoids.predict"]], "predict() (wildboar.distance._neighbors.kneighborsclassifier method)": [[14, "wildboar.distance._neighbors.KNeighborsClassifier.predict"]], "predict_proba() (wildboar.distance._neighbors.kneighborsclassifier method)": [[14, "wildboar.distance._neighbors.KNeighborsClassifier.predict_proba"]], "score() (wildboar.distance._neighbors.kneighborsclassifier method)": [[14, "wildboar.distance._neighbors.KNeighborsClassifier.score"]], "set_output() (wildboar.distance._neighbors.kmeans method)": [[14, "wildboar.distance._neighbors.KMeans.set_output"]], "set_output() (wildboar.distance._neighbors.kmedoids method)": [[14, "wildboar.distance._neighbors.KMedoids.set_output"]], "set_params() (wildboar.distance._neighbors.kmeans method)": [[14, "wildboar.distance._neighbors.KMeans.set_params"]], "set_params() (wildboar.distance._neighbors.kmedoids method)": [[14, "wildboar.distance._neighbors.KMedoids.set_params"]], "set_params() (wildboar.distance._neighbors.kneighborsclassifier method)": [[14, "wildboar.distance._neighbors.KNeighborsClassifier.set_params"]], "transform() (wildboar.distance._neighbors.kmeans method)": [[14, "wildboar.distance._neighbors.KMeans.transform"]], "transform() (wildboar.distance._neighbors.kmedoids method)": [[14, "wildboar.distance._neighbors.KMedoids.transform"]], "wildboar.distance._neighbors": [[14, "module-wildboar.distance._neighbors"]], "ddtw_distance() (in module wildboar.distance.dtw)": [[15, "wildboar.distance.dtw.ddtw_distance"]], "dtw_alignment() (in module wildboar.distance.dtw)": [[15, "wildboar.distance.dtw.dtw_alignment"]], "dtw_average() (in module wildboar.distance.dtw)": [[15, "wildboar.distance.dtw.dtw_average"]], "dtw_distance() (in module wildboar.distance.dtw)": [[15, "wildboar.distance.dtw.dtw_distance"]], "dtw_envelop() (in module wildboar.distance.dtw)": [[15, "wildboar.distance.dtw.dtw_envelop"]], "dtw_lb_keogh() (in module wildboar.distance.dtw)": [[15, "wildboar.distance.dtw.dtw_lb_keogh"]], "dtw_mapping() (in module wildboar.distance.dtw)": [[15, "wildboar.distance.dtw.dtw_mapping"]], "jeong_weight() (in module wildboar.distance.dtw)": [[15, "wildboar.distance.dtw.jeong_weight"]], "wddtw_distance() (in module wildboar.distance.dtw)": [[15, "wildboar.distance.dtw.wddtw_distance"]], "wdtw_alignment() (in module wildboar.distance.dtw)": [[15, "wildboar.distance.dtw.wdtw_alignment"]], "wdtw_distance() (in module wildboar.distance.dtw)": [[15, "wildboar.distance.dtw.wdtw_distance"]], "wildboar.distance.dtw": [[15, "module-wildboar.distance.dtw"]], "kmeans (class in wildboar.distance)": [[16, "wildboar.distance.KMeans"]], "kmedoids (class in wildboar.distance)": [[16, "wildboar.distance.KMedoids"]], "kneighborsclassifier (class in wildboar.distance)": [[16, "wildboar.distance.KNeighborsClassifier"]], "mds (class in wildboar.distance)": [[16, "wildboar.distance.MDS"]], "argmin_distance() (in module wildboar.distance)": [[16, "wildboar.distance.argmin_distance"]], "argmin_subsequence_distance() (in module wildboar.distance)": [[16, "wildboar.distance.argmin_subsequence_distance"]], "distance_profile() (in module wildboar.distance)": [[16, "wildboar.distance.distance_profile"]], "fit() (wildboar.distance.kmeans method)": [[16, "wildboar.distance.KMeans.fit"]], "fit() (wildboar.distance.kmedoids method)": [[16, "wildboar.distance.KMedoids.fit"]], "fit() (wildboar.distance.kneighborsclassifier method)": [[16, "wildboar.distance.KNeighborsClassifier.fit"]], "fit_predict() (wildboar.distance.kmeans method)": [[16, "wildboar.distance.KMeans.fit_predict"]], "fit_predict() (wildboar.distance.kmedoids method)": [[16, "wildboar.distance.KMedoids.fit_predict"]], "fit_transform() (wildboar.distance.kmeans method)": [[16, "wildboar.distance.KMeans.fit_transform"]], "fit_transform() (wildboar.distance.kmedoids method)": [[16, "wildboar.distance.KMedoids.fit_transform"]], "get_metadata_routing() (wildboar.distance.kmeans method)": [[16, "wildboar.distance.KMeans.get_metadata_routing"]], "get_metadata_routing() (wildboar.distance.kmedoids method)": [[16, "wildboar.distance.KMedoids.get_metadata_routing"]], "get_metadata_routing() (wildboar.distance.kneighborsclassifier method)": [[16, "wildboar.distance.KNeighborsClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.distance.mds method)": [[16, "wildboar.distance.MDS.get_metadata_routing"]], "get_params() (wildboar.distance.kmeans method)": [[16, "wildboar.distance.KMeans.get_params"]], "get_params() (wildboar.distance.kmedoids method)": [[16, "wildboar.distance.KMedoids.get_params"]], "get_params() (wildboar.distance.kneighborsclassifier method)": [[16, "wildboar.distance.KNeighborsClassifier.get_params"]], "get_params() (wildboar.distance.mds method)": [[16, "wildboar.distance.MDS.get_params"]], "matrix_profile() (in module wildboar.distance)": [[16, "wildboar.distance.matrix_profile"]], "paired_distance() (in module wildboar.distance)": [[16, "wildboar.distance.paired_distance"]], "paired_subsequence_distance() (in module wildboar.distance)": [[16, "wildboar.distance.paired_subsequence_distance"]], "paired_subsequence_match() (in module wildboar.distance)": [[16, "wildboar.distance.paired_subsequence_match"]], "pairwise_distance() (in module wildboar.distance)": [[16, "wildboar.distance.pairwise_distance"]], "pairwise_subsequence_distance() (in module wildboar.distance)": [[16, "wildboar.distance.pairwise_subsequence_distance"]], "predict() (wildboar.distance.kmeans method)": [[16, "wildboar.distance.KMeans.predict"]], "predict() (wildboar.distance.kmedoids method)": [[16, "wildboar.distance.KMedoids.predict"]], "predict() (wildboar.distance.kneighborsclassifier method)": [[16, "wildboar.distance.KNeighborsClassifier.predict"]], "predict_proba() (wildboar.distance.kneighborsclassifier method)": [[16, "wildboar.distance.KNeighborsClassifier.predict_proba"]], "score() (wildboar.distance.kneighborsclassifier method)": [[16, "wildboar.distance.KNeighborsClassifier.score"]], "set_output() (wildboar.distance.kmeans method)": [[16, "wildboar.distance.KMeans.set_output"]], "set_output() (wildboar.distance.kmedoids method)": [[16, "wildboar.distance.KMedoids.set_output"]], "set_params() (wildboar.distance.kmeans method)": [[16, "wildboar.distance.KMeans.set_params"]], "set_params() (wildboar.distance.kmedoids method)": [[16, "wildboar.distance.KMedoids.set_params"]], "set_params() (wildboar.distance.kneighborsclassifier method)": [[16, "wildboar.distance.KNeighborsClassifier.set_params"]], "set_params() (wildboar.distance.mds method)": [[16, "wildboar.distance.MDS.set_params"]], "subsequence_match() (in module wildboar.distance)": [[16, "wildboar.distance.subsequence_match"]], "transform() (wildboar.distance.kmeans method)": [[16, "wildboar.distance.KMeans.transform"]], "transform() (wildboar.distance.kmedoids method)": [[16, "wildboar.distance.KMedoids.transform"]], "wildboar.distance": [[16, "module-wildboar.distance"]], "elasticensembleclassifier (class in wildboar.ensemble._elastic)": [[17, "wildboar.ensemble._elastic.ElasticEnsembleClassifier"]], "fit() (wildboar.ensemble._elastic.elasticensembleclassifier method)": [[17, "wildboar.ensemble._elastic.ElasticEnsembleClassifier.fit"]], "get_metadata_routing() (wildboar.ensemble._elastic.elasticensembleclassifier method)": [[17, "wildboar.ensemble._elastic.ElasticEnsembleClassifier.get_metadata_routing"]], "get_params() (wildboar.ensemble._elastic.elasticensembleclassifier method)": [[17, "wildboar.ensemble._elastic.ElasticEnsembleClassifier.get_params"]], "predict() (wildboar.ensemble._elastic.elasticensembleclassifier method)": [[17, "wildboar.ensemble._elastic.ElasticEnsembleClassifier.predict"]], "predict_proba() (wildboar.ensemble._elastic.elasticensembleclassifier method)": [[17, "wildboar.ensemble._elastic.ElasticEnsembleClassifier.predict_proba"]], "score() (wildboar.ensemble._elastic.elasticensembleclassifier method)": [[17, "wildboar.ensemble._elastic.ElasticEnsembleClassifier.score"]], "set_params() (wildboar.ensemble._elastic.elasticensembleclassifier method)": [[17, "wildboar.ensemble._elastic.ElasticEnsembleClassifier.set_params"]], "wildboar.ensemble._elastic": [[17, "module-wildboar.ensemble._elastic"]], "baggingclassifier (class in wildboar.ensemble._ensemble)": [[18, "wildboar.ensemble._ensemble.BaggingClassifier"]], "baggingregressor (class in wildboar.ensemble._ensemble)": [[18, "wildboar.ensemble._ensemble.BaggingRegressor"]], "basebagging (class in wildboar.ensemble._ensemble)": [[18, "wildboar.ensemble._ensemble.BaseBagging"]], "baseforestclassifier (class in wildboar.ensemble._ensemble)": [[18, "wildboar.ensemble._ensemble.BaseForestClassifier"]], "baseforestregressor (class in wildboar.ensemble._ensemble)": [[18, "wildboar.ensemble._ensemble.BaseForestRegressor"]], "baseshapeletforestclassifier (class in wildboar.ensemble._ensemble)": [[18, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier"]], "baseshapeletforestregressor (class in wildboar.ensemble._ensemble)": [[18, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor"]], "extrashapelettreesclassifier (class in wildboar.ensemble._ensemble)": [[18, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier"]], "extrashapelettreesregressor (class in wildboar.ensemble._ensemble)": [[18, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor"]], "forestmixin (class in wildboar.ensemble._ensemble)": [[18, "wildboar.ensemble._ensemble.ForestMixin"]], "intervalforestclassifier (class in wildboar.ensemble._ensemble)": [[18, "wildboar.ensemble._ensemble.IntervalForestClassifier"]], "intervalforestregressor (class in wildboar.ensemble._ensemble)": [[18, "wildboar.ensemble._ensemble.IntervalForestRegressor"]], "isolationshapeletforest (class in wildboar.ensemble._ensemble)": [[18, "wildboar.ensemble._ensemble.IsolationShapeletForest"]], "pivotforestclassifier (class in wildboar.ensemble._ensemble)": [[18, "wildboar.ensemble._ensemble.PivotForestClassifier"]], "proximityforestclassifier (class in wildboar.ensemble._ensemble)": [[18, "wildboar.ensemble._ensemble.ProximityForestClassifier"]], "rocketforestclassifier (class in wildboar.ensemble._ensemble)": [[18, "wildboar.ensemble._ensemble.RocketForestClassifier"]], "rocketforestregressor (class in wildboar.ensemble._ensemble)": [[18, "wildboar.ensemble._ensemble.RocketForestRegressor"]], "shapeletforestclassifier (class in wildboar.ensemble._ensemble)": [[18, "wildboar.ensemble._ensemble.ShapeletForestClassifier"]], "shapeletforestembedding (class in wildboar.ensemble._ensemble)": [[18, "wildboar.ensemble._ensemble.ShapeletForestEmbedding"]], "shapeletforestregressor (class in wildboar.ensemble._ensemble)": [[18, "wildboar.ensemble._ensemble.ShapeletForestRegressor"]], "decision_function() (wildboar.ensemble._ensemble.baggingclassifier method)": [[18, "wildboar.ensemble._ensemble.BaggingClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[18, "wildboar.ensemble._ensemble.BaseForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[18, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[18, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[18, "wildboar.ensemble._ensemble.IntervalForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[18, "wildboar.ensemble._ensemble.PivotForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[18, "wildboar.ensemble._ensemble.ProximityForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[18, "wildboar.ensemble._ensemble.RocketForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[18, "wildboar.ensemble._ensemble.ShapeletForestClassifier.decision_function"]], "estimators_samples_ (wildboar.ensemble._ensemble.baggingclassifier property)": [[18, "wildboar.ensemble._ensemble.BaggingClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.baggingregressor property)": [[18, "wildboar.ensemble._ensemble.BaggingRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.basebagging property)": [[18, "wildboar.ensemble._ensemble.BaseBagging.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.baseforestclassifier property)": [[18, "wildboar.ensemble._ensemble.BaseForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.baseforestregressor property)": [[18, "wildboar.ensemble._ensemble.BaseForestRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.baseshapeletforestclassifier property)": [[18, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.baseshapeletforestregressor property)": [[18, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.extrashapelettreesclassifier property)": [[18, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.extrashapelettreesregressor property)": [[18, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.intervalforestclassifier property)": [[18, "wildboar.ensemble._ensemble.IntervalForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.intervalforestregressor property)": [[18, "wildboar.ensemble._ensemble.IntervalForestRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.isolationshapeletforest property)": [[18, "wildboar.ensemble._ensemble.IsolationShapeletForest.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.pivotforestclassifier property)": [[18, "wildboar.ensemble._ensemble.PivotForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.proximityforestclassifier property)": [[18, "wildboar.ensemble._ensemble.ProximityForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.rocketforestclassifier property)": [[18, "wildboar.ensemble._ensemble.RocketForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.rocketforestregressor property)": [[18, "wildboar.ensemble._ensemble.RocketForestRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.shapeletforestclassifier property)": [[18, "wildboar.ensemble._ensemble.ShapeletForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.shapeletforestembedding property)": [[18, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble._ensemble.shapeletforestregressor property)": [[18, "wildboar.ensemble._ensemble.ShapeletForestRegressor.estimators_samples_"]], "fit() (wildboar.ensemble._ensemble.baggingclassifier method)": [[18, "wildboar.ensemble._ensemble.BaggingClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.baggingregressor method)": [[18, "wildboar.ensemble._ensemble.BaggingRegressor.fit"]], "fit() (wildboar.ensemble._ensemble.basebagging method)": [[18, "wildboar.ensemble._ensemble.BaseBagging.fit"]], "fit() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[18, "wildboar.ensemble._ensemble.BaseForestClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.baseforestregressor method)": [[18, "wildboar.ensemble._ensemble.BaseForestRegressor.fit"]], "fit() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[18, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[18, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.fit"]], "fit() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[18, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[18, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.fit"]], "fit() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[18, "wildboar.ensemble._ensemble.IntervalForestClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[18, "wildboar.ensemble._ensemble.IntervalForestRegressor.fit"]], "fit() (wildboar.ensemble._ensemble.isolationshapeletforest method)": [[18, "wildboar.ensemble._ensemble.IsolationShapeletForest.fit"]], "fit() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[18, "wildboar.ensemble._ensemble.PivotForestClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[18, "wildboar.ensemble._ensemble.ProximityForestClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[18, "wildboar.ensemble._ensemble.RocketForestClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[18, "wildboar.ensemble._ensemble.RocketForestRegressor.fit"]], "fit() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[18, "wildboar.ensemble._ensemble.ShapeletForestClassifier.fit"]], "fit() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[18, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.fit"]], "fit() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[18, "wildboar.ensemble._ensemble.ShapeletForestRegressor.fit"]], "fit_predict() (wildboar.ensemble._ensemble.isolationshapeletforest method)": [[18, "wildboar.ensemble._ensemble.IsolationShapeletForest.fit_predict"]], "get_metadata_routing() (wildboar.ensemble._ensemble.baggingclassifier method)": [[18, "wildboar.ensemble._ensemble.BaggingClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.baggingregressor method)": [[18, "wildboar.ensemble._ensemble.BaggingRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.basebagging method)": [[18, "wildboar.ensemble._ensemble.BaseBagging.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[18, "wildboar.ensemble._ensemble.BaseForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.baseforestregressor method)": [[18, "wildboar.ensemble._ensemble.BaseForestRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[18, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[18, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[18, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[18, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[18, "wildboar.ensemble._ensemble.IntervalForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[18, "wildboar.ensemble._ensemble.IntervalForestRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.isolationshapeletforest method)": [[18, "wildboar.ensemble._ensemble.IsolationShapeletForest.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[18, "wildboar.ensemble._ensemble.PivotForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[18, "wildboar.ensemble._ensemble.ProximityForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[18, "wildboar.ensemble._ensemble.RocketForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[18, "wildboar.ensemble._ensemble.RocketForestRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[18, "wildboar.ensemble._ensemble.ShapeletForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[18, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[18, "wildboar.ensemble._ensemble.ShapeletForestRegressor.get_metadata_routing"]], "get_params() (wildboar.ensemble._ensemble.baggingclassifier method)": [[18, "wildboar.ensemble._ensemble.BaggingClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.baggingregressor method)": [[18, "wildboar.ensemble._ensemble.BaggingRegressor.get_params"]], "get_params() (wildboar.ensemble._ensemble.basebagging method)": [[18, "wildboar.ensemble._ensemble.BaseBagging.get_params"]], "get_params() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[18, "wildboar.ensemble._ensemble.BaseForestClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.baseforestregressor method)": [[18, "wildboar.ensemble._ensemble.BaseForestRegressor.get_params"]], "get_params() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[18, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[18, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.get_params"]], "get_params() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[18, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[18, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.get_params"]], "get_params() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[18, "wildboar.ensemble._ensemble.IntervalForestClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[18, "wildboar.ensemble._ensemble.IntervalForestRegressor.get_params"]], "get_params() (wildboar.ensemble._ensemble.isolationshapeletforest method)": [[18, "wildboar.ensemble._ensemble.IsolationShapeletForest.get_params"]], "get_params() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[18, "wildboar.ensemble._ensemble.PivotForestClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[18, "wildboar.ensemble._ensemble.ProximityForestClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[18, "wildboar.ensemble._ensemble.RocketForestClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[18, "wildboar.ensemble._ensemble.RocketForestRegressor.get_params"]], "get_params() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[18, "wildboar.ensemble._ensemble.ShapeletForestClassifier.get_params"]], "get_params() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[18, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.get_params"]], "get_params() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[18, "wildboar.ensemble._ensemble.ShapeletForestRegressor.get_params"]], "predict() (wildboar.ensemble._ensemble.baggingclassifier method)": [[18, "wildboar.ensemble._ensemble.BaggingClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.baggingregressor method)": [[18, "wildboar.ensemble._ensemble.BaggingRegressor.predict"]], "predict() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[18, "wildboar.ensemble._ensemble.BaseForestClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.baseforestregressor method)": [[18, "wildboar.ensemble._ensemble.BaseForestRegressor.predict"]], "predict() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[18, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[18, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.predict"]], "predict() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[18, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[18, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.predict"]], "predict() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[18, "wildboar.ensemble._ensemble.IntervalForestClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[18, "wildboar.ensemble._ensemble.IntervalForestRegressor.predict"]], "predict() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[18, "wildboar.ensemble._ensemble.PivotForestClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[18, "wildboar.ensemble._ensemble.ProximityForestClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[18, "wildboar.ensemble._ensemble.RocketForestClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[18, "wildboar.ensemble._ensemble.RocketForestRegressor.predict"]], "predict() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[18, "wildboar.ensemble._ensemble.ShapeletForestClassifier.predict"]], "predict() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[18, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.predict"]], "predict() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[18, "wildboar.ensemble._ensemble.ShapeletForestRegressor.predict"]], "predict_log_proba() (wildboar.ensemble._ensemble.baggingclassifier method)": [[18, "wildboar.ensemble._ensemble.BaggingClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[18, "wildboar.ensemble._ensemble.BaseForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[18, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[18, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[18, "wildboar.ensemble._ensemble.IntervalForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[18, "wildboar.ensemble._ensemble.PivotForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[18, "wildboar.ensemble._ensemble.ProximityForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[18, "wildboar.ensemble._ensemble.RocketForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[18, "wildboar.ensemble._ensemble.ShapeletForestClassifier.predict_log_proba"]], "predict_proba() (wildboar.ensemble._ensemble.baggingclassifier method)": [[18, "wildboar.ensemble._ensemble.BaggingClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[18, "wildboar.ensemble._ensemble.BaseForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[18, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[18, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[18, "wildboar.ensemble._ensemble.IntervalForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[18, "wildboar.ensemble._ensemble.PivotForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[18, "wildboar.ensemble._ensemble.ProximityForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[18, "wildboar.ensemble._ensemble.RocketForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[18, "wildboar.ensemble._ensemble.ShapeletForestClassifier.predict_proba"]], "score() (wildboar.ensemble._ensemble.baggingclassifier method)": [[18, "wildboar.ensemble._ensemble.BaggingClassifier.score"]], "score() (wildboar.ensemble._ensemble.baggingregressor method)": [[18, "wildboar.ensemble._ensemble.BaggingRegressor.score"]], "score() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[18, "wildboar.ensemble._ensemble.BaseForestClassifier.score"]], "score() (wildboar.ensemble._ensemble.baseforestregressor method)": [[18, "wildboar.ensemble._ensemble.BaseForestRegressor.score"]], "score() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[18, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.score"]], "score() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[18, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.score"]], "score() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[18, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.score"]], "score() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[18, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.score"]], "score() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[18, "wildboar.ensemble._ensemble.IntervalForestClassifier.score"]], "score() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[18, "wildboar.ensemble._ensemble.IntervalForestRegressor.score"]], "score() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[18, "wildboar.ensemble._ensemble.PivotForestClassifier.score"]], "score() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[18, "wildboar.ensemble._ensemble.ProximityForestClassifier.score"]], "score() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[18, "wildboar.ensemble._ensemble.RocketForestClassifier.score"]], "score() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[18, "wildboar.ensemble._ensemble.RocketForestRegressor.score"]], "score() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[18, "wildboar.ensemble._ensemble.ShapeletForestClassifier.score"]], "score() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[18, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.score"]], "score() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[18, "wildboar.ensemble._ensemble.ShapeletForestRegressor.score"]], "set_params() (wildboar.ensemble._ensemble.baggingclassifier method)": [[18, "wildboar.ensemble._ensemble.BaggingClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.baggingregressor method)": [[18, "wildboar.ensemble._ensemble.BaggingRegressor.set_params"]], "set_params() (wildboar.ensemble._ensemble.basebagging method)": [[18, "wildboar.ensemble._ensemble.BaseBagging.set_params"]], "set_params() (wildboar.ensemble._ensemble.baseforestclassifier method)": [[18, "wildboar.ensemble._ensemble.BaseForestClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.baseforestregressor method)": [[18, "wildboar.ensemble._ensemble.BaseForestRegressor.set_params"]], "set_params() (wildboar.ensemble._ensemble.baseshapeletforestclassifier method)": [[18, "wildboar.ensemble._ensemble.BaseShapeletForestClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.baseshapeletforestregressor method)": [[18, "wildboar.ensemble._ensemble.BaseShapeletForestRegressor.set_params"]], "set_params() (wildboar.ensemble._ensemble.extrashapelettreesclassifier method)": [[18, "wildboar.ensemble._ensemble.ExtraShapeletTreesClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.extrashapelettreesregressor method)": [[18, "wildboar.ensemble._ensemble.ExtraShapeletTreesRegressor.set_params"]], "set_params() (wildboar.ensemble._ensemble.intervalforestclassifier method)": [[18, "wildboar.ensemble._ensemble.IntervalForestClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.intervalforestregressor method)": [[18, "wildboar.ensemble._ensemble.IntervalForestRegressor.set_params"]], "set_params() (wildboar.ensemble._ensemble.isolationshapeletforest method)": [[18, "wildboar.ensemble._ensemble.IsolationShapeletForest.set_params"]], "set_params() (wildboar.ensemble._ensemble.pivotforestclassifier method)": [[18, "wildboar.ensemble._ensemble.PivotForestClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.proximityforestclassifier method)": [[18, "wildboar.ensemble._ensemble.ProximityForestClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.rocketforestclassifier method)": [[18, "wildboar.ensemble._ensemble.RocketForestClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.rocketforestregressor method)": [[18, "wildboar.ensemble._ensemble.RocketForestRegressor.set_params"]], "set_params() (wildboar.ensemble._ensemble.shapeletforestclassifier method)": [[18, "wildboar.ensemble._ensemble.ShapeletForestClassifier.set_params"]], "set_params() (wildboar.ensemble._ensemble.shapeletforestembedding method)": [[18, "wildboar.ensemble._ensemble.ShapeletForestEmbedding.set_params"]], "set_params() (wildboar.ensemble._ensemble.shapeletforestregressor method)": [[18, "wildboar.ensemble._ensemble.ShapeletForestRegressor.set_params"]], "wildboar.ensemble._ensemble": [[18, "module-wildboar.ensemble._ensemble"]], "baggingclassifier (class in wildboar.ensemble)": [[19, "wildboar.ensemble.BaggingClassifier"]], "baggingregressor (class in wildboar.ensemble)": [[19, "wildboar.ensemble.BaggingRegressor"]], "basebagging (class in wildboar.ensemble)": [[19, "wildboar.ensemble.BaseBagging"]], "elasticensembleclassifier (class in wildboar.ensemble)": [[19, "wildboar.ensemble.ElasticEnsembleClassifier"]], "extrashapelettreesclassifier (class in wildboar.ensemble)": [[19, "wildboar.ensemble.ExtraShapeletTreesClassifier"]], "extrashapelettreesregressor (class in wildboar.ensemble)": [[19, "wildboar.ensemble.ExtraShapeletTreesRegressor"]], "intervalforestclassifier (class in wildboar.ensemble)": [[19, "wildboar.ensemble.IntervalForestClassifier"]], "intervalforestregressor (class in wildboar.ensemble)": [[19, "wildboar.ensemble.IntervalForestRegressor"]], "isolationshapeletforest (class in wildboar.ensemble)": [[19, "wildboar.ensemble.IsolationShapeletForest"]], "pivotforestclassifier (class in wildboar.ensemble)": [[19, "wildboar.ensemble.PivotForestClassifier"]], "proximityforestclassifier (class in wildboar.ensemble)": [[19, "wildboar.ensemble.ProximityForestClassifier"]], "rocketforestclassifier (class in wildboar.ensemble)": [[19, "wildboar.ensemble.RocketForestClassifier"]], "rocketforestregressor (class in wildboar.ensemble)": [[19, "wildboar.ensemble.RocketForestRegressor"]], "shapeletforestclassifier (class in wildboar.ensemble)": [[19, "wildboar.ensemble.ShapeletForestClassifier"]], "shapeletforestembedding (class in wildboar.ensemble)": [[19, "wildboar.ensemble.ShapeletForestEmbedding"]], "shapeletforestregressor (class in wildboar.ensemble)": [[19, "wildboar.ensemble.ShapeletForestRegressor"]], "decision_function() (wildboar.ensemble.baggingclassifier method)": [[19, "wildboar.ensemble.BaggingClassifier.decision_function"]], "decision_function() (wildboar.ensemble.extrashapelettreesclassifier method)": [[19, "wildboar.ensemble.ExtraShapeletTreesClassifier.decision_function"]], "decision_function() (wildboar.ensemble.intervalforestclassifier method)": [[19, "wildboar.ensemble.IntervalForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble.pivotforestclassifier method)": [[19, "wildboar.ensemble.PivotForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble.proximityforestclassifier method)": [[19, "wildboar.ensemble.ProximityForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble.rocketforestclassifier method)": [[19, "wildboar.ensemble.RocketForestClassifier.decision_function"]], "decision_function() (wildboar.ensemble.shapeletforestclassifier method)": [[19, "wildboar.ensemble.ShapeletForestClassifier.decision_function"]], "estimators_samples_ (wildboar.ensemble.baggingclassifier property)": [[19, "wildboar.ensemble.BaggingClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.baggingregressor property)": [[19, "wildboar.ensemble.BaggingRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.basebagging property)": [[19, "wildboar.ensemble.BaseBagging.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.extrashapelettreesclassifier property)": [[19, "wildboar.ensemble.ExtraShapeletTreesClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.extrashapelettreesregressor property)": [[19, "wildboar.ensemble.ExtraShapeletTreesRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.intervalforestclassifier property)": [[19, "wildboar.ensemble.IntervalForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.intervalforestregressor property)": [[19, "wildboar.ensemble.IntervalForestRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.isolationshapeletforest property)": [[19, "wildboar.ensemble.IsolationShapeletForest.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.pivotforestclassifier property)": [[19, "wildboar.ensemble.PivotForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.proximityforestclassifier property)": [[19, "wildboar.ensemble.ProximityForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.rocketforestclassifier property)": [[19, "wildboar.ensemble.RocketForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.rocketforestregressor property)": [[19, "wildboar.ensemble.RocketForestRegressor.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.shapeletforestclassifier property)": [[19, "wildboar.ensemble.ShapeletForestClassifier.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.shapeletforestembedding property)": [[19, "wildboar.ensemble.ShapeletForestEmbedding.estimators_samples_"]], "estimators_samples_ (wildboar.ensemble.shapeletforestregressor property)": [[19, "wildboar.ensemble.ShapeletForestRegressor.estimators_samples_"]], "fit() (wildboar.ensemble.baggingclassifier method)": [[19, "wildboar.ensemble.BaggingClassifier.fit"]], "fit() (wildboar.ensemble.baggingregressor method)": [[19, "wildboar.ensemble.BaggingRegressor.fit"]], "fit() (wildboar.ensemble.basebagging method)": [[19, "wildboar.ensemble.BaseBagging.fit"]], "fit() (wildboar.ensemble.elasticensembleclassifier method)": [[19, "wildboar.ensemble.ElasticEnsembleClassifier.fit"]], "fit() (wildboar.ensemble.extrashapelettreesclassifier method)": [[19, "wildboar.ensemble.ExtraShapeletTreesClassifier.fit"]], "fit() (wildboar.ensemble.extrashapelettreesregressor method)": [[19, "wildboar.ensemble.ExtraShapeletTreesRegressor.fit"]], "fit() (wildboar.ensemble.intervalforestclassifier method)": [[19, "wildboar.ensemble.IntervalForestClassifier.fit"]], "fit() (wildboar.ensemble.intervalforestregressor method)": [[19, "wildboar.ensemble.IntervalForestRegressor.fit"]], "fit() (wildboar.ensemble.isolationshapeletforest method)": [[19, "wildboar.ensemble.IsolationShapeletForest.fit"]], "fit() (wildboar.ensemble.pivotforestclassifier method)": [[19, "wildboar.ensemble.PivotForestClassifier.fit"]], "fit() (wildboar.ensemble.proximityforestclassifier method)": [[19, "wildboar.ensemble.ProximityForestClassifier.fit"]], "fit() (wildboar.ensemble.rocketforestclassifier method)": [[19, "wildboar.ensemble.RocketForestClassifier.fit"]], "fit() (wildboar.ensemble.rocketforestregressor method)": [[19, "wildboar.ensemble.RocketForestRegressor.fit"]], "fit() (wildboar.ensemble.shapeletforestclassifier method)": [[19, "wildboar.ensemble.ShapeletForestClassifier.fit"]], "fit() (wildboar.ensemble.shapeletforestembedding method)": [[19, "wildboar.ensemble.ShapeletForestEmbedding.fit"]], "fit() (wildboar.ensemble.shapeletforestregressor method)": [[19, "wildboar.ensemble.ShapeletForestRegressor.fit"]], "fit_predict() (wildboar.ensemble.isolationshapeletforest method)": [[19, "wildboar.ensemble.IsolationShapeletForest.fit_predict"]], "get_metadata_routing() (wildboar.ensemble.baggingclassifier method)": [[19, "wildboar.ensemble.BaggingClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.baggingregressor method)": [[19, "wildboar.ensemble.BaggingRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.basebagging method)": [[19, "wildboar.ensemble.BaseBagging.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.elasticensembleclassifier method)": [[19, "wildboar.ensemble.ElasticEnsembleClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.extrashapelettreesclassifier method)": [[19, "wildboar.ensemble.ExtraShapeletTreesClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.extrashapelettreesregressor method)": [[19, "wildboar.ensemble.ExtraShapeletTreesRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.intervalforestclassifier method)": [[19, "wildboar.ensemble.IntervalForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.intervalforestregressor method)": [[19, "wildboar.ensemble.IntervalForestRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.isolationshapeletforest method)": [[19, "wildboar.ensemble.IsolationShapeletForest.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.pivotforestclassifier method)": [[19, "wildboar.ensemble.PivotForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.proximityforestclassifier method)": [[19, "wildboar.ensemble.ProximityForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.rocketforestclassifier method)": [[19, "wildboar.ensemble.RocketForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.rocketforestregressor method)": [[19, "wildboar.ensemble.RocketForestRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.shapeletforestclassifier method)": [[19, "wildboar.ensemble.ShapeletForestClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.shapeletforestembedding method)": [[19, "wildboar.ensemble.ShapeletForestEmbedding.get_metadata_routing"]], "get_metadata_routing() (wildboar.ensemble.shapeletforestregressor method)": [[19, "wildboar.ensemble.ShapeletForestRegressor.get_metadata_routing"]], "get_params() (wildboar.ensemble.baggingclassifier method)": [[19, "wildboar.ensemble.BaggingClassifier.get_params"]], "get_params() (wildboar.ensemble.baggingregressor method)": [[19, "wildboar.ensemble.BaggingRegressor.get_params"]], "get_params() (wildboar.ensemble.basebagging method)": [[19, "wildboar.ensemble.BaseBagging.get_params"]], "get_params() (wildboar.ensemble.elasticensembleclassifier method)": [[19, "wildboar.ensemble.ElasticEnsembleClassifier.get_params"]], "get_params() (wildboar.ensemble.extrashapelettreesclassifier method)": [[19, "wildboar.ensemble.ExtraShapeletTreesClassifier.get_params"]], "get_params() (wildboar.ensemble.extrashapelettreesregressor method)": [[19, "wildboar.ensemble.ExtraShapeletTreesRegressor.get_params"]], "get_params() (wildboar.ensemble.intervalforestclassifier method)": [[19, "wildboar.ensemble.IntervalForestClassifier.get_params"]], "get_params() (wildboar.ensemble.intervalforestregressor method)": [[19, "wildboar.ensemble.IntervalForestRegressor.get_params"]], "get_params() (wildboar.ensemble.isolationshapeletforest method)": [[19, "wildboar.ensemble.IsolationShapeletForest.get_params"]], "get_params() (wildboar.ensemble.pivotforestclassifier method)": [[19, "wildboar.ensemble.PivotForestClassifier.get_params"]], "get_params() (wildboar.ensemble.proximityforestclassifier method)": [[19, "wildboar.ensemble.ProximityForestClassifier.get_params"]], "get_params() (wildboar.ensemble.rocketforestclassifier method)": [[19, "wildboar.ensemble.RocketForestClassifier.get_params"]], "get_params() (wildboar.ensemble.rocketforestregressor method)": [[19, "wildboar.ensemble.RocketForestRegressor.get_params"]], "get_params() (wildboar.ensemble.shapeletforestclassifier method)": [[19, "wildboar.ensemble.ShapeletForestClassifier.get_params"]], "get_params() (wildboar.ensemble.shapeletforestembedding method)": [[19, "wildboar.ensemble.ShapeletForestEmbedding.get_params"]], "get_params() (wildboar.ensemble.shapeletforestregressor method)": [[19, "wildboar.ensemble.ShapeletForestRegressor.get_params"]], "predict() (wildboar.ensemble.baggingclassifier method)": [[19, "wildboar.ensemble.BaggingClassifier.predict"]], "predict() (wildboar.ensemble.baggingregressor method)": [[19, "wildboar.ensemble.BaggingRegressor.predict"]], "predict() (wildboar.ensemble.elasticensembleclassifier method)": [[19, "wildboar.ensemble.ElasticEnsembleClassifier.predict"]], "predict() (wildboar.ensemble.extrashapelettreesclassifier method)": [[19, "wildboar.ensemble.ExtraShapeletTreesClassifier.predict"]], "predict() (wildboar.ensemble.extrashapelettreesregressor method)": [[19, "wildboar.ensemble.ExtraShapeletTreesRegressor.predict"]], "predict() (wildboar.ensemble.intervalforestclassifier method)": [[19, "wildboar.ensemble.IntervalForestClassifier.predict"]], "predict() (wildboar.ensemble.intervalforestregressor method)": [[19, "wildboar.ensemble.IntervalForestRegressor.predict"]], "predict() (wildboar.ensemble.pivotforestclassifier method)": [[19, "wildboar.ensemble.PivotForestClassifier.predict"]], "predict() (wildboar.ensemble.proximityforestclassifier method)": [[19, "wildboar.ensemble.ProximityForestClassifier.predict"]], "predict() (wildboar.ensemble.rocketforestclassifier method)": [[19, "wildboar.ensemble.RocketForestClassifier.predict"]], "predict() (wildboar.ensemble.rocketforestregressor method)": [[19, "wildboar.ensemble.RocketForestRegressor.predict"]], "predict() (wildboar.ensemble.shapeletforestclassifier method)": [[19, "wildboar.ensemble.ShapeletForestClassifier.predict"]], "predict() (wildboar.ensemble.shapeletforestembedding method)": [[19, "wildboar.ensemble.ShapeletForestEmbedding.predict"]], "predict() (wildboar.ensemble.shapeletforestregressor method)": [[19, "wildboar.ensemble.ShapeletForestRegressor.predict"]], "predict_log_proba() (wildboar.ensemble.baggingclassifier method)": [[19, "wildboar.ensemble.BaggingClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble.extrashapelettreesclassifier method)": [[19, "wildboar.ensemble.ExtraShapeletTreesClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble.intervalforestclassifier method)": [[19, "wildboar.ensemble.IntervalForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble.pivotforestclassifier method)": [[19, "wildboar.ensemble.PivotForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble.proximityforestclassifier method)": [[19, "wildboar.ensemble.ProximityForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble.rocketforestclassifier method)": [[19, "wildboar.ensemble.RocketForestClassifier.predict_log_proba"]], "predict_log_proba() (wildboar.ensemble.shapeletforestclassifier method)": [[19, "wildboar.ensemble.ShapeletForestClassifier.predict_log_proba"]], "predict_proba() (wildboar.ensemble.baggingclassifier method)": [[19, "wildboar.ensemble.BaggingClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble.elasticensembleclassifier method)": [[19, "wildboar.ensemble.ElasticEnsembleClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble.extrashapelettreesclassifier method)": [[19, "wildboar.ensemble.ExtraShapeletTreesClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble.intervalforestclassifier method)": [[19, "wildboar.ensemble.IntervalForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble.pivotforestclassifier method)": [[19, "wildboar.ensemble.PivotForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble.proximityforestclassifier method)": [[19, "wildboar.ensemble.ProximityForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble.rocketforestclassifier method)": [[19, "wildboar.ensemble.RocketForestClassifier.predict_proba"]], "predict_proba() (wildboar.ensemble.shapeletforestclassifier method)": [[19, "wildboar.ensemble.ShapeletForestClassifier.predict_proba"]], "score() (wildboar.ensemble.baggingclassifier method)": [[19, "wildboar.ensemble.BaggingClassifier.score"]], "score() (wildboar.ensemble.baggingregressor method)": [[19, "wildboar.ensemble.BaggingRegressor.score"]], "score() (wildboar.ensemble.elasticensembleclassifier method)": [[19, "wildboar.ensemble.ElasticEnsembleClassifier.score"]], "score() (wildboar.ensemble.extrashapelettreesclassifier method)": [[19, "wildboar.ensemble.ExtraShapeletTreesClassifier.score"]], "score() (wildboar.ensemble.extrashapelettreesregressor method)": [[19, "wildboar.ensemble.ExtraShapeletTreesRegressor.score"]], "score() (wildboar.ensemble.intervalforestclassifier method)": [[19, "wildboar.ensemble.IntervalForestClassifier.score"]], "score() (wildboar.ensemble.intervalforestregressor method)": [[19, "wildboar.ensemble.IntervalForestRegressor.score"]], "score() (wildboar.ensemble.pivotforestclassifier method)": [[19, "wildboar.ensemble.PivotForestClassifier.score"]], "score() (wildboar.ensemble.proximityforestclassifier method)": [[19, "wildboar.ensemble.ProximityForestClassifier.score"]], "score() (wildboar.ensemble.rocketforestclassifier method)": [[19, "wildboar.ensemble.RocketForestClassifier.score"]], "score() (wildboar.ensemble.rocketforestregressor method)": [[19, "wildboar.ensemble.RocketForestRegressor.score"]], "score() (wildboar.ensemble.shapeletforestclassifier method)": [[19, "wildboar.ensemble.ShapeletForestClassifier.score"]], "score() (wildboar.ensemble.shapeletforestembedding method)": [[19, "wildboar.ensemble.ShapeletForestEmbedding.score"]], "score() (wildboar.ensemble.shapeletforestregressor method)": [[19, "wildboar.ensemble.ShapeletForestRegressor.score"]], "set_params() (wildboar.ensemble.baggingclassifier method)": [[19, "wildboar.ensemble.BaggingClassifier.set_params"]], "set_params() (wildboar.ensemble.baggingregressor method)": [[19, "wildboar.ensemble.BaggingRegressor.set_params"]], "set_params() (wildboar.ensemble.basebagging method)": [[19, "wildboar.ensemble.BaseBagging.set_params"]], "set_params() (wildboar.ensemble.elasticensembleclassifier method)": [[19, "wildboar.ensemble.ElasticEnsembleClassifier.set_params"]], "set_params() (wildboar.ensemble.extrashapelettreesclassifier method)": [[19, "wildboar.ensemble.ExtraShapeletTreesClassifier.set_params"]], "set_params() (wildboar.ensemble.extrashapelettreesregressor method)": [[19, "wildboar.ensemble.ExtraShapeletTreesRegressor.set_params"]], "set_params() (wildboar.ensemble.intervalforestclassifier method)": [[19, "wildboar.ensemble.IntervalForestClassifier.set_params"]], "set_params() (wildboar.ensemble.intervalforestregressor method)": [[19, "wildboar.ensemble.IntervalForestRegressor.set_params"]], "set_params() (wildboar.ensemble.isolationshapeletforest method)": [[19, "wildboar.ensemble.IsolationShapeletForest.set_params"]], "set_params() (wildboar.ensemble.pivotforestclassifier method)": [[19, "wildboar.ensemble.PivotForestClassifier.set_params"]], "set_params() (wildboar.ensemble.proximityforestclassifier method)": [[19, "wildboar.ensemble.ProximityForestClassifier.set_params"]], "set_params() (wildboar.ensemble.rocketforestclassifier method)": [[19, "wildboar.ensemble.RocketForestClassifier.set_params"]], "set_params() (wildboar.ensemble.rocketforestregressor method)": [[19, "wildboar.ensemble.RocketForestRegressor.set_params"]], "set_params() (wildboar.ensemble.shapeletforestclassifier method)": [[19, "wildboar.ensemble.ShapeletForestClassifier.set_params"]], "set_params() (wildboar.ensemble.shapeletforestembedding method)": [[19, "wildboar.ensemble.ShapeletForestEmbedding.set_params"]], "set_params() (wildboar.ensemble.shapeletforestregressor method)": [[19, "wildboar.ensemble.ShapeletForestRegressor.set_params"]], "wildboar.ensemble": [[19, "module-wildboar.ensemble"]], "amplitudeimportance (class in wildboar.explain._importance)": [[20, "wildboar.explain._importance.AmplitudeImportance"]], "frequencyimportance (class in wildboar.explain._importance)": [[20, "wildboar.explain._importance.FrequencyImportance"]], "intervalimportance (class in wildboar.explain._importance)": [[20, "wildboar.explain._importance.IntervalImportance"]], "permuteimportance (class in wildboar.explain._importance)": [[20, "wildboar.explain._importance.PermuteImportance"]], "shapeletimportance (class in wildboar.explain._importance)": [[20, "wildboar.explain._importance.ShapeletImportance"]], "fit_explain() (wildboar.explain._importance.amplitudeimportance method)": [[20, "wildboar.explain._importance.AmplitudeImportance.fit_explain"]], "fit_explain() (wildboar.explain._importance.frequencyimportance method)": [[20, "wildboar.explain._importance.FrequencyImportance.fit_explain"]], "fit_explain() (wildboar.explain._importance.intervalimportance method)": [[20, "wildboar.explain._importance.IntervalImportance.fit_explain"]], "fit_explain() (wildboar.explain._importance.shapeletimportance method)": [[20, "wildboar.explain._importance.ShapeletImportance.fit_explain"]], "get_metadata_routing() (wildboar.explain._importance.amplitudeimportance method)": [[20, "wildboar.explain._importance.AmplitudeImportance.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain._importance.frequencyimportance method)": [[20, "wildboar.explain._importance.FrequencyImportance.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain._importance.intervalimportance method)": [[20, "wildboar.explain._importance.IntervalImportance.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain._importance.permuteimportance method)": [[20, "wildboar.explain._importance.PermuteImportance.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain._importance.shapeletimportance method)": [[20, "wildboar.explain._importance.ShapeletImportance.get_metadata_routing"]], "get_params() (wildboar.explain._importance.amplitudeimportance method)": [[20, "wildboar.explain._importance.AmplitudeImportance.get_params"]], "get_params() (wildboar.explain._importance.frequencyimportance method)": [[20, "wildboar.explain._importance.FrequencyImportance.get_params"]], "get_params() (wildboar.explain._importance.intervalimportance method)": [[20, "wildboar.explain._importance.IntervalImportance.get_params"]], "get_params() (wildboar.explain._importance.permuteimportance method)": [[20, "wildboar.explain._importance.PermuteImportance.get_params"]], "get_params() (wildboar.explain._importance.shapeletimportance method)": [[20, "wildboar.explain._importance.ShapeletImportance.get_params"]], "plot() (wildboar.explain._importance.amplitudeimportance method)": [[20, "wildboar.explain._importance.AmplitudeImportance.plot"]], "plot() (wildboar.explain._importance.frequencyimportance method)": [[20, "wildboar.explain._importance.FrequencyImportance.plot"]], "plot() (wildboar.explain._importance.intervalimportance method)": [[20, "wildboar.explain._importance.IntervalImportance.plot"]], "plot() (wildboar.explain._importance.shapeletimportance method)": [[20, "wildboar.explain._importance.ShapeletImportance.plot"]], "plot_importances() (in module wildboar.explain._importance)": [[20, "wildboar.explain._importance.plot_importances"]], "set_params() (wildboar.explain._importance.amplitudeimportance method)": [[20, "wildboar.explain._importance.AmplitudeImportance.set_params"]], "set_params() (wildboar.explain._importance.frequencyimportance method)": [[20, "wildboar.explain._importance.FrequencyImportance.set_params"]], "set_params() (wildboar.explain._importance.intervalimportance method)": [[20, "wildboar.explain._importance.IntervalImportance.set_params"]], "set_params() (wildboar.explain._importance.permuteimportance method)": [[20, "wildboar.explain._importance.PermuteImportance.set_params"]], "set_params() (wildboar.explain._importance.shapeletimportance method)": [[20, "wildboar.explain._importance.ShapeletImportance.set_params"]], "wildboar.explain._importance": [[20, "module-wildboar.explain._importance"]], "counterfactuals() (in module wildboar.explain.counterfactual._helper)": [[21, "wildboar.explain.counterfactual._helper.counterfactuals"]], "wildboar.explain.counterfactual._helper": [[21, "module-wildboar.explain.counterfactual._helper"]], "kneighborscounterfactual (class in wildboar.explain.counterfactual._nn)": [[22, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual"]], "fit_explain() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[22, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.fit_explain"]], "get_metadata_routing() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[22, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.get_metadata_routing"]], "get_params() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[22, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.get_params"]], "plot() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[22, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.plot"]], "score() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[22, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.score"]], "set_params() (wildboar.explain.counterfactual._nn.kneighborscounterfactual method)": [[22, "wildboar.explain.counterfactual._nn.KNeighborsCounterfactual.set_params"]], "wildboar.explain.counterfactual._nn": [[22, "module-wildboar.explain.counterfactual._nn"]], "dynamictimewarptransform (class in wildboar.explain.counterfactual._proto)": [[23, "wildboar.explain.counterfactual._proto.DynamicTimeWarpTransform"]], "euclideantransform (class in wildboar.explain.counterfactual._proto)": [[23, "wildboar.explain.counterfactual._proto.EuclideanTransform"]], "knearestprototypesampler (class in wildboar.explain.counterfactual._proto)": [[23, "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler"]], "knearestshapeletprototypesampler (class in wildboar.explain.counterfactual._proto)": [[23, "wildboar.explain.counterfactual._proto.KNearestShapeletPrototypeSampler"]], "metrictransform (class in wildboar.explain.counterfactual._proto)": [[23, "wildboar.explain.counterfactual._proto.MetricTransform"]], "predictevaluator (class in wildboar.explain.counterfactual._proto)": [[23, "wildboar.explain.counterfactual._proto.PredictEvaluator"]], "probabilityevaluator (class in wildboar.explain.counterfactual._proto)": [[23, "wildboar.explain.counterfactual._proto.ProbabilityEvaluator"]], "prototypecounterfactual (class in wildboar.explain.counterfactual._proto)": [[23, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual"]], "prototypesampler (class in wildboar.explain.counterfactual._proto)": [[23, "wildboar.explain.counterfactual._proto.PrototypeSampler"]], "shapeletprototypesampler (class in wildboar.explain.counterfactual._proto)": [[23, "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler"]], "targetevaluator (class in wildboar.explain.counterfactual._proto)": [[23, "wildboar.explain.counterfactual._proto.TargetEvaluator"]], "uniformprototypesampler (class in wildboar.explain.counterfactual._proto)": [[23, "wildboar.explain.counterfactual._proto.UniformPrototypeSampler"]], "weighteddynamictimewarptransform (class in wildboar.explain.counterfactual._proto)": [[23, "wildboar.explain.counterfactual._proto.WeightedDynamicTimeWarpTransform"]], "fit_explain() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[23, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.fit_explain"]], "get_metadata_routing() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[23, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.get_metadata_routing"]], "get_params() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[23, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.get_params"]], "is_counterfactual() (wildboar.explain.counterfactual._proto.predictevaluator method)": [[23, "wildboar.explain.counterfactual._proto.PredictEvaluator.is_counterfactual"]], "is_counterfactual() (wildboar.explain.counterfactual._proto.probabilityevaluator method)": [[23, "wildboar.explain.counterfactual._proto.ProbabilityEvaluator.is_counterfactual"]], "is_counterfactual() (wildboar.explain.counterfactual._proto.targetevaluator method)": [[23, "wildboar.explain.counterfactual._proto.TargetEvaluator.is_counterfactual"]], "move() (wildboar.explain.counterfactual._proto.dynamictimewarptransform method)": [[23, "wildboar.explain.counterfactual._proto.DynamicTimeWarpTransform.move"]], "move() (wildboar.explain.counterfactual._proto.euclideantransform method)": [[23, "wildboar.explain.counterfactual._proto.EuclideanTransform.move"]], "move() (wildboar.explain.counterfactual._proto.knearestprototypesampler method)": [[23, "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler.move"]], "move() (wildboar.explain.counterfactual._proto.knearestshapeletprototypesampler method)": [[23, "wildboar.explain.counterfactual._proto.KNearestShapeletPrototypeSampler.move"]], "move() (wildboar.explain.counterfactual._proto.metrictransform method)": [[23, "wildboar.explain.counterfactual._proto.MetricTransform.move"]], "move() (wildboar.explain.counterfactual._proto.prototypesampler method)": [[23, "wildboar.explain.counterfactual._proto.PrototypeSampler.move"]], "move() (wildboar.explain.counterfactual._proto.shapeletprototypesampler method)": [[23, "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler.move"]], "move() (wildboar.explain.counterfactual._proto.uniformprototypesampler method)": [[23, "wildboar.explain.counterfactual._proto.UniformPrototypeSampler.move"]], "move() (wildboar.explain.counterfactual._proto.weighteddynamictimewarptransform method)": [[23, "wildboar.explain.counterfactual._proto.WeightedDynamicTimeWarpTransform.move"]], "nearest_index() (wildboar.explain.counterfactual._proto.knearestprototypesampler method)": [[23, "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler.nearest_index"]], "plot() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[23, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.plot"]], "sample() (wildboar.explain.counterfactual._proto.knearestprototypesampler method)": [[23, "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler.sample"]], "sample() (wildboar.explain.counterfactual._proto.knearestshapeletprototypesampler method)": [[23, "wildboar.explain.counterfactual._proto.KNearestShapeletPrototypeSampler.sample"]], "sample() (wildboar.explain.counterfactual._proto.prototypesampler method)": [[23, "wildboar.explain.counterfactual._proto.PrototypeSampler.sample"]], "sample() (wildboar.explain.counterfactual._proto.shapeletprototypesampler method)": [[23, "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler.sample"]], "sample() (wildboar.explain.counterfactual._proto.uniformprototypesampler method)": [[23, "wildboar.explain.counterfactual._proto.UniformPrototypeSampler.sample"]], "sample_move() (wildboar.explain.counterfactual._proto.knearestprototypesampler method)": [[23, "wildboar.explain.counterfactual._proto.KNearestPrototypeSampler.sample_move"]], "sample_move() (wildboar.explain.counterfactual._proto.knearestshapeletprototypesampler method)": [[23, "wildboar.explain.counterfactual._proto.KNearestShapeletPrototypeSampler.sample_move"]], "sample_move() (wildboar.explain.counterfactual._proto.prototypesampler method)": [[23, "wildboar.explain.counterfactual._proto.PrototypeSampler.sample_move"]], "sample_move() (wildboar.explain.counterfactual._proto.shapeletprototypesampler method)": [[23, "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler.sample_move"]], "sample_move() (wildboar.explain.counterfactual._proto.uniformprototypesampler method)": [[23, "wildboar.explain.counterfactual._proto.UniformPrototypeSampler.sample_move"]], "sample_shapelet() (wildboar.explain.counterfactual._proto.shapeletprototypesampler method)": [[23, "wildboar.explain.counterfactual._proto.ShapeletPrototypeSampler.sample_shapelet"]], "score() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[23, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.score"]], "set_params() (wildboar.explain.counterfactual._proto.prototypecounterfactual method)": [[23, "wildboar.explain.counterfactual._proto.PrototypeCounterfactual.set_params"]], "wildboar.explain.counterfactual._proto": [[23, "module-wildboar.explain.counterfactual._proto"]], "shapeletforestcounterfactual (class in wildboar.explain.counterfactual._sf)": [[24, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual"]], "fit_explain() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[24, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.fit_explain"]], "get_metadata_routing() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[24, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.get_metadata_routing"]], "get_params() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[24, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.get_params"]], "plot() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[24, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.plot"]], "score() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[24, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.score"]], "set_params() (wildboar.explain.counterfactual._sf.shapeletforestcounterfactual method)": [[24, "wildboar.explain.counterfactual._sf.ShapeletForestCounterfactual.set_params"]], "wildboar.explain.counterfactual._sf": [[24, "module-wildboar.explain.counterfactual._sf"]], "kneighborscounterfactual (class in wildboar.explain.counterfactual)": [[25, "wildboar.explain.counterfactual.KNeighborsCounterfactual"]], "prototypecounterfactual (class in wildboar.explain.counterfactual)": [[25, "wildboar.explain.counterfactual.PrototypeCounterfactual"]], "shapeletforestcounterfactual (class in wildboar.explain.counterfactual)": [[25, "wildboar.explain.counterfactual.ShapeletForestCounterfactual"]], "counterfactuals() (in module wildboar.explain.counterfactual)": [[25, "wildboar.explain.counterfactual.counterfactuals"]], "fit_explain() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[25, "wildboar.explain.counterfactual.KNeighborsCounterfactual.fit_explain"]], "fit_explain() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[25, "wildboar.explain.counterfactual.PrototypeCounterfactual.fit_explain"]], "fit_explain() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[25, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.fit_explain"]], "get_metadata_routing() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[25, "wildboar.explain.counterfactual.KNeighborsCounterfactual.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[25, "wildboar.explain.counterfactual.PrototypeCounterfactual.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[25, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.get_metadata_routing"]], "get_params() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[25, "wildboar.explain.counterfactual.KNeighborsCounterfactual.get_params"]], "get_params() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[25, "wildboar.explain.counterfactual.PrototypeCounterfactual.get_params"]], "get_params() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[25, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.get_params"]], "plot() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[25, "wildboar.explain.counterfactual.KNeighborsCounterfactual.plot"]], "plot() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[25, "wildboar.explain.counterfactual.PrototypeCounterfactual.plot"]], "plot() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[25, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.plot"]], "proximity() (in module wildboar.explain.counterfactual)": [[25, "wildboar.explain.counterfactual.proximity"]], "score() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[25, "wildboar.explain.counterfactual.KNeighborsCounterfactual.score"]], "score() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[25, "wildboar.explain.counterfactual.PrototypeCounterfactual.score"]], "score() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[25, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.score"]], "set_params() (wildboar.explain.counterfactual.kneighborscounterfactual method)": [[25, "wildboar.explain.counterfactual.KNeighborsCounterfactual.set_params"]], "set_params() (wildboar.explain.counterfactual.prototypecounterfactual method)": [[25, "wildboar.explain.counterfactual.PrototypeCounterfactual.set_params"]], "set_params() (wildboar.explain.counterfactual.shapeletforestcounterfactual method)": [[25, "wildboar.explain.counterfactual.ShapeletForestCounterfactual.set_params"]], "wildboar.explain.counterfactual": [[25, "module-wildboar.explain.counterfactual"]], "amplitudeimportance (class in wildboar.explain)": [[26, "wildboar.explain.AmplitudeImportance"]], "frequencyimportance (class in wildboar.explain)": [[26, "wildboar.explain.FrequencyImportance"]], "intervalimportance (class in wildboar.explain)": [[26, "wildboar.explain.IntervalImportance"]], "shapeletimportance (class in wildboar.explain)": [[26, "wildboar.explain.ShapeletImportance"]], "fit_explain() (wildboar.explain.amplitudeimportance method)": [[26, "wildboar.explain.AmplitudeImportance.fit_explain"]], "fit_explain() (wildboar.explain.frequencyimportance method)": [[26, "wildboar.explain.FrequencyImportance.fit_explain"]], "fit_explain() (wildboar.explain.intervalimportance method)": [[26, "wildboar.explain.IntervalImportance.fit_explain"]], "fit_explain() (wildboar.explain.shapeletimportance method)": [[26, "wildboar.explain.ShapeletImportance.fit_explain"]], "get_metadata_routing() (wildboar.explain.amplitudeimportance method)": [[26, "wildboar.explain.AmplitudeImportance.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain.frequencyimportance method)": [[26, "wildboar.explain.FrequencyImportance.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain.intervalimportance method)": [[26, "wildboar.explain.IntervalImportance.get_metadata_routing"]], "get_metadata_routing() (wildboar.explain.shapeletimportance method)": [[26, "wildboar.explain.ShapeletImportance.get_metadata_routing"]], "get_params() (wildboar.explain.amplitudeimportance method)": [[26, "wildboar.explain.AmplitudeImportance.get_params"]], "get_params() (wildboar.explain.frequencyimportance method)": [[26, "wildboar.explain.FrequencyImportance.get_params"]], "get_params() (wildboar.explain.intervalimportance method)": [[26, "wildboar.explain.IntervalImportance.get_params"]], "get_params() (wildboar.explain.shapeletimportance method)": [[26, "wildboar.explain.ShapeletImportance.get_params"]], "plot() (wildboar.explain.amplitudeimportance method)": [[26, "wildboar.explain.AmplitudeImportance.plot"]], "plot() (wildboar.explain.frequencyimportance method)": [[26, "wildboar.explain.FrequencyImportance.plot"]], "plot() (wildboar.explain.intervalimportance method)": [[26, "wildboar.explain.IntervalImportance.plot"]], "plot() (wildboar.explain.shapeletimportance method)": [[26, "wildboar.explain.ShapeletImportance.plot"]], "plot_importances() (in module wildboar.explain)": [[26, "wildboar.explain.plot_importances"]], "set_params() (wildboar.explain.amplitudeimportance method)": [[26, "wildboar.explain.AmplitudeImportance.set_params"]], "set_params() (wildboar.explain.frequencyimportance method)": [[26, "wildboar.explain.FrequencyImportance.set_params"]], "set_params() (wildboar.explain.intervalimportance method)": [[26, "wildboar.explain.IntervalImportance.set_params"]], "set_params() (wildboar.explain.shapeletimportance method)": [[26, "wildboar.explain.ShapeletImportance.set_params"]], "wildboar.explain": [[26, "module-wildboar.explain"]], "iseos() (in module wildboar)": [[27, "wildboar.iseos"]], "wildboar": [[27, "module-wildboar"]], "hydraclassifier (class in wildboar.linear_model._hydra)": [[28, "wildboar.linear_model._hydra.HydraClassifier"]], "get_metadata_routing() (wildboar.linear_model._hydra.hydraclassifier method)": [[28, "wildboar.linear_model._hydra.HydraClassifier.get_metadata_routing"]], "get_params() (wildboar.linear_model._hydra.hydraclassifier method)": [[28, "wildboar.linear_model._hydra.HydraClassifier.get_params"]], "score() (wildboar.linear_model._hydra.hydraclassifier method)": [[28, "wildboar.linear_model._hydra.HydraClassifier.score"]], "set_params() (wildboar.linear_model._hydra.hydraclassifier method)": [[28, "wildboar.linear_model._hydra.HydraClassifier.set_params"]], "wildboar.linear_model._hydra": [[28, "module-wildboar.linear_model._hydra"]], "rocketclassifier (class in wildboar.linear_model._rocket)": [[29, "wildboar.linear_model._rocket.RocketClassifier"]], "rocketregressor (class in wildboar.linear_model._rocket)": [[29, "wildboar.linear_model._rocket.RocketRegressor"]], "get_metadata_routing() (wildboar.linear_model._rocket.rocketclassifier method)": [[29, "wildboar.linear_model._rocket.RocketClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model._rocket.rocketregressor method)": [[29, "wildboar.linear_model._rocket.RocketRegressor.get_metadata_routing"]], "get_params() (wildboar.linear_model._rocket.rocketclassifier method)": [[29, "wildboar.linear_model._rocket.RocketClassifier.get_params"]], "get_params() (wildboar.linear_model._rocket.rocketregressor method)": [[29, "wildboar.linear_model._rocket.RocketRegressor.get_params"]], "score() (wildboar.linear_model._rocket.rocketclassifier method)": [[29, "wildboar.linear_model._rocket.RocketClassifier.score"]], "score() (wildboar.linear_model._rocket.rocketregressor method)": [[29, "wildboar.linear_model._rocket.RocketRegressor.score"]], "set_params() (wildboar.linear_model._rocket.rocketclassifier method)": [[29, "wildboar.linear_model._rocket.RocketClassifier.set_params"]], "set_params() (wildboar.linear_model._rocket.rocketregressor method)": [[29, "wildboar.linear_model._rocket.RocketRegressor.set_params"]], "wildboar.linear_model._rocket": [[29, "module-wildboar.linear_model._rocket"]], "castorclassifier (class in wildboar.linear_model._shapelet)": [[30, "wildboar.linear_model._shapelet.CastorClassifier"]], "dilatedshapeletclassifier (class in wildboar.linear_model._shapelet)": [[30, "wildboar.linear_model._shapelet.DilatedShapeletClassifier"]], "randomshapeletclassifier (class in wildboar.linear_model._shapelet)": [[30, "wildboar.linear_model._shapelet.RandomShapeletClassifier"]], "randomshapeletregressor (class in wildboar.linear_model._shapelet)": [[30, "wildboar.linear_model._shapelet.RandomShapeletRegressor"]], "get_metadata_routing() (wildboar.linear_model._shapelet.castorclassifier method)": [[30, "wildboar.linear_model._shapelet.CastorClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model._shapelet.dilatedshapeletclassifier method)": [[30, "wildboar.linear_model._shapelet.DilatedShapeletClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model._shapelet.randomshapeletclassifier method)": [[30, "wildboar.linear_model._shapelet.RandomShapeletClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model._shapelet.randomshapeletregressor method)": [[30, "wildboar.linear_model._shapelet.RandomShapeletRegressor.get_metadata_routing"]], "get_params() (wildboar.linear_model._shapelet.castorclassifier method)": [[30, "wildboar.linear_model._shapelet.CastorClassifier.get_params"]], "get_params() (wildboar.linear_model._shapelet.dilatedshapeletclassifier method)": [[30, "wildboar.linear_model._shapelet.DilatedShapeletClassifier.get_params"]], "get_params() (wildboar.linear_model._shapelet.randomshapeletclassifier method)": [[30, "wildboar.linear_model._shapelet.RandomShapeletClassifier.get_params"]], "get_params() (wildboar.linear_model._shapelet.randomshapeletregressor method)": [[30, "wildboar.linear_model._shapelet.RandomShapeletRegressor.get_params"]], "score() (wildboar.linear_model._shapelet.castorclassifier method)": [[30, "wildboar.linear_model._shapelet.CastorClassifier.score"]], "score() (wildboar.linear_model._shapelet.dilatedshapeletclassifier method)": [[30, "wildboar.linear_model._shapelet.DilatedShapeletClassifier.score"]], "score() (wildboar.linear_model._shapelet.randomshapeletclassifier method)": [[30, "wildboar.linear_model._shapelet.RandomShapeletClassifier.score"]], "score() (wildboar.linear_model._shapelet.randomshapeletregressor method)": [[30, "wildboar.linear_model._shapelet.RandomShapeletRegressor.score"]], "set_params() (wildboar.linear_model._shapelet.castorclassifier method)": [[30, "wildboar.linear_model._shapelet.CastorClassifier.set_params"]], "set_params() (wildboar.linear_model._shapelet.dilatedshapeletclassifier method)": [[30, "wildboar.linear_model._shapelet.DilatedShapeletClassifier.set_params"]], "set_params() (wildboar.linear_model._shapelet.randomshapeletclassifier method)": [[30, "wildboar.linear_model._shapelet.RandomShapeletClassifier.set_params"]], "set_params() (wildboar.linear_model._shapelet.randomshapeletregressor method)": [[30, "wildboar.linear_model._shapelet.RandomShapeletRegressor.set_params"]], "wildboar.linear_model._shapelet": [[30, "module-wildboar.linear_model._shapelet"]], "basetransformclassifier (class in wildboar.linear_model._transform)": [[31, "wildboar.linear_model._transform.BaseTransformClassifier"]], "basetransformestimator (class in wildboar.linear_model._transform)": [[31, "wildboar.linear_model._transform.BaseTransformEstimator"]], "basetransformregressor (class in wildboar.linear_model._transform)": [[31, "wildboar.linear_model._transform.BaseTransformRegressor"]], "transformridgecv (class in wildboar.linear_model._transform)": [[31, "wildboar.linear_model._transform.TransformRidgeCV"]], "transformridgeclassifiercv (class in wildboar.linear_model._transform)": [[31, "wildboar.linear_model._transform.TransformRidgeClassifierCV"]], "get_metadata_routing() (wildboar.linear_model._transform.basetransformclassifier method)": [[31, "wildboar.linear_model._transform.BaseTransformClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model._transform.basetransformestimator method)": [[31, "wildboar.linear_model._transform.BaseTransformEstimator.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model._transform.basetransformregressor method)": [[31, "wildboar.linear_model._transform.BaseTransformRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model._transform.transformridgecv method)": [[31, "wildboar.linear_model._transform.TransformRidgeCV.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model._transform.transformridgeclassifiercv method)": [[31, "wildboar.linear_model._transform.TransformRidgeClassifierCV.get_metadata_routing"]], "get_params() (wildboar.linear_model._transform.basetransformclassifier method)": [[31, "wildboar.linear_model._transform.BaseTransformClassifier.get_params"]], "get_params() (wildboar.linear_model._transform.basetransformestimator method)": [[31, "wildboar.linear_model._transform.BaseTransformEstimator.get_params"]], "get_params() (wildboar.linear_model._transform.basetransformregressor method)": [[31, "wildboar.linear_model._transform.BaseTransformRegressor.get_params"]], "get_params() (wildboar.linear_model._transform.transformridgecv method)": [[31, "wildboar.linear_model._transform.TransformRidgeCV.get_params"]], "get_params() (wildboar.linear_model._transform.transformridgeclassifiercv method)": [[31, "wildboar.linear_model._transform.TransformRidgeClassifierCV.get_params"]], "score() (wildboar.linear_model._transform.basetransformclassifier method)": [[31, "wildboar.linear_model._transform.BaseTransformClassifier.score"]], "score() (wildboar.linear_model._transform.basetransformregressor method)": [[31, "wildboar.linear_model._transform.BaseTransformRegressor.score"]], "score() (wildboar.linear_model._transform.transformridgecv method)": [[31, "wildboar.linear_model._transform.TransformRidgeCV.score"]], "score() (wildboar.linear_model._transform.transformridgeclassifiercv method)": [[31, "wildboar.linear_model._transform.TransformRidgeClassifierCV.score"]], "set_params() (wildboar.linear_model._transform.basetransformclassifier method)": [[31, "wildboar.linear_model._transform.BaseTransformClassifier.set_params"]], "set_params() (wildboar.linear_model._transform.basetransformestimator method)": [[31, "wildboar.linear_model._transform.BaseTransformEstimator.set_params"]], "set_params() (wildboar.linear_model._transform.basetransformregressor method)": [[31, "wildboar.linear_model._transform.BaseTransformRegressor.set_params"]], "set_params() (wildboar.linear_model._transform.transformridgecv method)": [[31, "wildboar.linear_model._transform.TransformRidgeCV.set_params"]], "set_params() (wildboar.linear_model._transform.transformridgeclassifiercv method)": [[31, "wildboar.linear_model._transform.TransformRidgeClassifierCV.set_params"]], "wildboar.linear_model._transform": [[31, "module-wildboar.linear_model._transform"]], "castorclassifier (class in wildboar.linear_model)": [[32, "wildboar.linear_model.CastorClassifier"]], "dilatedshapeletclassifier (class in wildboar.linear_model)": [[32, "wildboar.linear_model.DilatedShapeletClassifier"]], "hydraclassifier (class in wildboar.linear_model)": [[32, "wildboar.linear_model.HydraClassifier"]], "randomshapeletclassifier (class in wildboar.linear_model)": [[32, "wildboar.linear_model.RandomShapeletClassifier"]], "randomshapeletregressor (class in wildboar.linear_model)": [[32, "wildboar.linear_model.RandomShapeletRegressor"]], "rocketclassifier (class in wildboar.linear_model)": [[32, "wildboar.linear_model.RocketClassifier"]], "rocketregressor (class in wildboar.linear_model)": [[32, "wildboar.linear_model.RocketRegressor"]], "get_metadata_routing() (wildboar.linear_model.castorclassifier method)": [[32, "wildboar.linear_model.CastorClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model.dilatedshapeletclassifier method)": [[32, "wildboar.linear_model.DilatedShapeletClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model.hydraclassifier method)": [[32, "wildboar.linear_model.HydraClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model.randomshapeletclassifier method)": [[32, "wildboar.linear_model.RandomShapeletClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model.randomshapeletregressor method)": [[32, "wildboar.linear_model.RandomShapeletRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model.rocketclassifier method)": [[32, "wildboar.linear_model.RocketClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.linear_model.rocketregressor method)": [[32, "wildboar.linear_model.RocketRegressor.get_metadata_routing"]], "get_params() (wildboar.linear_model.castorclassifier method)": [[32, "wildboar.linear_model.CastorClassifier.get_params"]], "get_params() (wildboar.linear_model.dilatedshapeletclassifier method)": [[32, "wildboar.linear_model.DilatedShapeletClassifier.get_params"]], "get_params() (wildboar.linear_model.hydraclassifier method)": [[32, "wildboar.linear_model.HydraClassifier.get_params"]], "get_params() (wildboar.linear_model.randomshapeletclassifier method)": [[32, "wildboar.linear_model.RandomShapeletClassifier.get_params"]], "get_params() (wildboar.linear_model.randomshapeletregressor method)": [[32, "wildboar.linear_model.RandomShapeletRegressor.get_params"]], "get_params() (wildboar.linear_model.rocketclassifier method)": [[32, "wildboar.linear_model.RocketClassifier.get_params"]], "get_params() (wildboar.linear_model.rocketregressor method)": [[32, "wildboar.linear_model.RocketRegressor.get_params"]], "score() (wildboar.linear_model.castorclassifier method)": [[32, "wildboar.linear_model.CastorClassifier.score"]], "score() (wildboar.linear_model.dilatedshapeletclassifier method)": [[32, "wildboar.linear_model.DilatedShapeletClassifier.score"]], "score() (wildboar.linear_model.hydraclassifier method)": [[32, "wildboar.linear_model.HydraClassifier.score"]], "score() (wildboar.linear_model.randomshapeletclassifier method)": [[32, "wildboar.linear_model.RandomShapeletClassifier.score"]], "score() (wildboar.linear_model.randomshapeletregressor method)": [[32, "wildboar.linear_model.RandomShapeletRegressor.score"]], "score() (wildboar.linear_model.rocketclassifier method)": [[32, "wildboar.linear_model.RocketClassifier.score"]], "score() (wildboar.linear_model.rocketregressor method)": [[32, "wildboar.linear_model.RocketRegressor.score"]], "set_params() (wildboar.linear_model.castorclassifier method)": [[32, "wildboar.linear_model.CastorClassifier.set_params"]], "set_params() (wildboar.linear_model.dilatedshapeletclassifier method)": [[32, "wildboar.linear_model.DilatedShapeletClassifier.set_params"]], "set_params() (wildboar.linear_model.hydraclassifier method)": [[32, "wildboar.linear_model.HydraClassifier.set_params"]], "set_params() (wildboar.linear_model.randomshapeletclassifier method)": [[32, "wildboar.linear_model.RandomShapeletClassifier.set_params"]], "set_params() (wildboar.linear_model.randomshapeletregressor method)": [[32, "wildboar.linear_model.RandomShapeletRegressor.set_params"]], "set_params() (wildboar.linear_model.rocketclassifier method)": [[32, "wildboar.linear_model.RocketClassifier.set_params"]], "set_params() (wildboar.linear_model.rocketregressor method)": [[32, "wildboar.linear_model.RocketRegressor.set_params"]], "wildboar.linear_model": [[32, "module-wildboar.linear_model"]], "silhouette_samples() (in module wildboar.metrics._cluster)": [[33, "wildboar.metrics._cluster.silhouette_samples"]], "silhouette_score() (in module wildboar.metrics._cluster)": [[33, "wildboar.metrics._cluster.silhouette_score"]], "wildboar.metrics._cluster": [[33, "module-wildboar.metrics._cluster"]], "compactness_score() (in module wildboar.metrics._counterfactual)": [[34, "wildboar.metrics._counterfactual.compactness_score"]], "plausability_score() (in module wildboar.metrics._counterfactual)": [[34, "wildboar.metrics._counterfactual.plausability_score"]], "proximity_score() (in module wildboar.metrics._counterfactual)": [[34, "wildboar.metrics._counterfactual.proximity_score"]], "redudancy_score() (in module wildboar.metrics._counterfactual)": [[34, "wildboar.metrics._counterfactual.redudancy_score"]], "relative_proximity_score() (in module wildboar.metrics._counterfactual)": [[34, "wildboar.metrics._counterfactual.relative_proximity_score"]], "validity_score() (in module wildboar.metrics._counterfactual)": [[34, "wildboar.metrics._counterfactual.validity_score"]], "wildboar.metrics._counterfactual": [[34, "module-wildboar.metrics._counterfactual"]], "compactness_score() (in module wildboar.metrics)": [[35, "wildboar.metrics.compactness_score"]], "plausability_score() (in module wildboar.metrics)": [[35, "wildboar.metrics.plausability_score"]], "proximity_score() (in module wildboar.metrics)": [[35, "wildboar.metrics.proximity_score"]], "redudancy_score() (in module wildboar.metrics)": [[35, "wildboar.metrics.redudancy_score"]], "relative_proximity_score() (in module wildboar.metrics)": [[35, "wildboar.metrics.relative_proximity_score"]], "silhouette_samples() (in module wildboar.metrics)": [[35, "wildboar.metrics.silhouette_samples"]], "silhouette_score() (in module wildboar.metrics)": [[35, "wildboar.metrics.silhouette_score"]], "validity_score() (in module wildboar.metrics)": [[35, "wildboar.metrics.validity_score"]], "wildboar.metrics": [[35, "module-wildboar.metrics"]], "repeatedoutliersplit (class in wildboar.model_selection._cv)": [[36, "wildboar.model_selection._cv.RepeatedOutlierSplit"]], "get_n_splits() (wildboar.model_selection._cv.repeatedoutliersplit method)": [[36, "wildboar.model_selection._cv.RepeatedOutlierSplit.get_n_splits"]], "split() (wildboar.model_selection._cv.repeatedoutliersplit method)": [[36, "wildboar.model_selection._cv.RepeatedOutlierSplit.split"]], "wildboar.model_selection._cv": [[36, "module-wildboar.model_selection._cv"]], "outlier_train_test_split() (in module wildboar.model_selection._outlier)": [[37, "wildboar.model_selection._outlier.outlier_train_test_split"]], "wildboar.model_selection._outlier": [[37, "module-wildboar.model_selection._outlier"]], "repeatedoutliersplit (class in wildboar.model_selection)": [[38, "wildboar.model_selection.RepeatedOutlierSplit"]], "get_n_splits() (wildboar.model_selection.repeatedoutliersplit method)": [[38, "wildboar.model_selection.RepeatedOutlierSplit.get_n_splits"]], "outlier_train_test_split() (in module wildboar.model_selection)": [[38, "wildboar.model_selection.outlier_train_test_split"]], "split() (wildboar.model_selection.repeatedoutliersplit method)": [[38, "wildboar.model_selection.RepeatedOutlierSplit.split"]], "wildboar.model_selection": [[38, "module-wildboar.model_selection"]], "baseattributetransform (class in wildboar.transform._base)": [[39, "wildboar.transform._base.BaseAttributeTransform"]], "fit() (wildboar.transform._base.baseattributetransform method)": [[39, "wildboar.transform._base.BaseAttributeTransform.fit"]], "fit_transform() (wildboar.transform._base.baseattributetransform method)": [[39, "wildboar.transform._base.BaseAttributeTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._base.baseattributetransform method)": [[39, "wildboar.transform._base.BaseAttributeTransform.get_metadata_routing"]], "get_params() (wildboar.transform._base.baseattributetransform method)": [[39, "wildboar.transform._base.BaseAttributeTransform.get_params"]], "set_output() (wildboar.transform._base.baseattributetransform method)": [[39, "wildboar.transform._base.BaseAttributeTransform.set_output"]], "set_params() (wildboar.transform._base.baseattributetransform method)": [[39, "wildboar.transform._base.BaseAttributeTransform.set_params"]], "transform() (wildboar.transform._base.baseattributetransform method)": [[39, "wildboar.transform._base.BaseAttributeTransform.transform"]], "wildboar.transform._base": [[39, "module-wildboar.transform._base"]], "convolve() (in module wildboar.transform._conv)": [[40, "wildboar.transform._conv.convolve"]], "wildboar.transform._conv": [[40, "module-wildboar.transform._conv"]], "derivativetransform (class in wildboar.transform._diff)": [[41, "wildboar.transform._diff.DerivativeTransform"]], "difftransform (class in wildboar.transform._diff)": [[41, "wildboar.transform._diff.DiffTransform"]], "fit_transform() (wildboar.transform._diff.derivativetransform method)": [[41, "wildboar.transform._diff.DerivativeTransform.fit_transform"]], "fit_transform() (wildboar.transform._diff.difftransform method)": [[41, "wildboar.transform._diff.DiffTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._diff.derivativetransform method)": [[41, "wildboar.transform._diff.DerivativeTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform._diff.difftransform method)": [[41, "wildboar.transform._diff.DiffTransform.get_metadata_routing"]], "get_params() (wildboar.transform._diff.derivativetransform method)": [[41, "wildboar.transform._diff.DerivativeTransform.get_params"]], "get_params() (wildboar.transform._diff.difftransform method)": [[41, "wildboar.transform._diff.DiffTransform.get_params"]], "set_output() (wildboar.transform._diff.derivativetransform method)": [[41, "wildboar.transform._diff.DerivativeTransform.set_output"]], "set_output() (wildboar.transform._diff.difftransform method)": [[41, "wildboar.transform._diff.DiffTransform.set_output"]], "set_params() (wildboar.transform._diff.derivativetransform method)": [[41, "wildboar.transform._diff.DerivativeTransform.set_params"]], "set_params() (wildboar.transform._diff.difftransform method)": [[41, "wildboar.transform._diff.DiffTransform.set_params"]], "wildboar.transform._diff": [[41, "module-wildboar.transform._diff"]], "hydratransform (class in wildboar.transform._hydra)": [[42, "wildboar.transform._hydra.HydraTransform"]], "fit() (wildboar.transform._hydra.hydratransform method)": [[42, "wildboar.transform._hydra.HydraTransform.fit"]], "fit_transform() (wildboar.transform._hydra.hydratransform method)": [[42, "wildboar.transform._hydra.HydraTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._hydra.hydratransform method)": [[42, "wildboar.transform._hydra.HydraTransform.get_metadata_routing"]], "get_params() (wildboar.transform._hydra.hydratransform method)": [[42, "wildboar.transform._hydra.HydraTransform.get_params"]], "set_output() (wildboar.transform._hydra.hydratransform method)": [[42, "wildboar.transform._hydra.HydraTransform.set_output"]], "set_params() (wildboar.transform._hydra.hydratransform method)": [[42, "wildboar.transform._hydra.HydraTransform.set_params"]], "transform() (wildboar.transform._hydra.hydratransform method)": [[42, "wildboar.transform._hydra.HydraTransform.transform"]], "wildboar.transform._hydra": [[42, "module-wildboar.transform._hydra"]], "featuretransform (class in wildboar.transform._interval)": [[43, "wildboar.transform._interval.FeatureTransform"]], "intervalmixin (class in wildboar.transform._interval)": [[43, "wildboar.transform._interval.IntervalMixin"]], "intervaltransform (class in wildboar.transform._interval)": [[43, "wildboar.transform._interval.IntervalTransform"]], "fit() (wildboar.transform._interval.featuretransform method)": [[43, "wildboar.transform._interval.FeatureTransform.fit"]], "fit() (wildboar.transform._interval.intervaltransform method)": [[43, "wildboar.transform._interval.IntervalTransform.fit"]], "fit_transform() (wildboar.transform._interval.featuretransform method)": [[43, "wildboar.transform._interval.FeatureTransform.fit_transform"]], "fit_transform() (wildboar.transform._interval.intervaltransform method)": [[43, "wildboar.transform._interval.IntervalTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._interval.featuretransform method)": [[43, "wildboar.transform._interval.FeatureTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform._interval.intervaltransform method)": [[43, "wildboar.transform._interval.IntervalTransform.get_metadata_routing"]], "get_params() (wildboar.transform._interval.featuretransform method)": [[43, "wildboar.transform._interval.FeatureTransform.get_params"]], "get_params() (wildboar.transform._interval.intervaltransform method)": [[43, "wildboar.transform._interval.IntervalTransform.get_params"]], "set_output() (wildboar.transform._interval.featuretransform method)": [[43, "wildboar.transform._interval.FeatureTransform.set_output"]], "set_output() (wildboar.transform._interval.intervaltransform method)": [[43, "wildboar.transform._interval.IntervalTransform.set_output"]], "set_params() (wildboar.transform._interval.featuretransform method)": [[43, "wildboar.transform._interval.FeatureTransform.set_params"]], "set_params() (wildboar.transform._interval.intervaltransform method)": [[43, "wildboar.transform._interval.IntervalTransform.set_params"]], "transform() (wildboar.transform._interval.featuretransform method)": [[43, "wildboar.transform._interval.FeatureTransform.transform"]], "transform() (wildboar.transform._interval.intervaltransform method)": [[43, "wildboar.transform._interval.IntervalTransform.transform"]], "wildboar.transform._interval": [[43, "module-wildboar.transform._interval"]], "matrixprofiletransform (class in wildboar.transform._matrix_profile)": [[44, "wildboar.transform._matrix_profile.MatrixProfileTransform"]], "fit() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[44, "wildboar.transform._matrix_profile.MatrixProfileTransform.fit"]], "fit_transform() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[44, "wildboar.transform._matrix_profile.MatrixProfileTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[44, "wildboar.transform._matrix_profile.MatrixProfileTransform.get_metadata_routing"]], "get_params() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[44, "wildboar.transform._matrix_profile.MatrixProfileTransform.get_params"]], "set_output() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[44, "wildboar.transform._matrix_profile.MatrixProfileTransform.set_output"]], "set_params() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[44, "wildboar.transform._matrix_profile.MatrixProfileTransform.set_params"]], "transform() (wildboar.transform._matrix_profile.matrixprofiletransform method)": [[44, "wildboar.transform._matrix_profile.MatrixProfileTransform.transform"]], "wildboar.transform._matrix_profile": [[44, "module-wildboar.transform._matrix_profile"]], "pivotmixin (class in wildboar.transform._pivot)": [[45, "wildboar.transform._pivot.PivotMixin"]], "pivottransform (class in wildboar.transform._pivot)": [[45, "wildboar.transform._pivot.PivotTransform"]], "proximitytransform (class in wildboar.transform._pivot)": [[45, "wildboar.transform._pivot.ProximityTransform"]], "fit() (wildboar.transform._pivot.pivottransform method)": [[45, "wildboar.transform._pivot.PivotTransform.fit"]], "fit_transform() (wildboar.transform._pivot.pivottransform method)": [[45, "wildboar.transform._pivot.PivotTransform.fit_transform"]], "fit_transform() (wildboar.transform._pivot.proximitytransform method)": [[45, "wildboar.transform._pivot.ProximityTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._pivot.pivottransform method)": [[45, "wildboar.transform._pivot.PivotTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform._pivot.proximitytransform method)": [[45, "wildboar.transform._pivot.ProximityTransform.get_metadata_routing"]], "get_params() (wildboar.transform._pivot.pivottransform method)": [[45, "wildboar.transform._pivot.PivotTransform.get_params"]], "get_params() (wildboar.transform._pivot.proximitytransform method)": [[45, "wildboar.transform._pivot.ProximityTransform.get_params"]], "set_output() (wildboar.transform._pivot.pivottransform method)": [[45, "wildboar.transform._pivot.PivotTransform.set_output"]], "set_output() (wildboar.transform._pivot.proximitytransform method)": [[45, "wildboar.transform._pivot.ProximityTransform.set_output"]], "set_params() (wildboar.transform._pivot.pivottransform method)": [[45, "wildboar.transform._pivot.PivotTransform.set_params"]], "set_params() (wildboar.transform._pivot.proximitytransform method)": [[45, "wildboar.transform._pivot.ProximityTransform.set_params"]], "transform() (wildboar.transform._pivot.pivottransform method)": [[45, "wildboar.transform._pivot.PivotTransform.transform"]], "wildboar.transform._pivot": [[45, "module-wildboar.transform._pivot"]], "rocketmixin (class in wildboar.transform._rocket)": [[46, "wildboar.transform._rocket.RocketMixin"]], "rockettransform (class in wildboar.transform._rocket)": [[46, "wildboar.transform._rocket.RocketTransform"]], "fit() (wildboar.transform._rocket.rockettransform method)": [[46, "wildboar.transform._rocket.RocketTransform.fit"]], "fit_transform() (wildboar.transform._rocket.rockettransform method)": [[46, "wildboar.transform._rocket.RocketTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._rocket.rockettransform method)": [[46, "wildboar.transform._rocket.RocketTransform.get_metadata_routing"]], "get_params() (wildboar.transform._rocket.rockettransform method)": [[46, "wildboar.transform._rocket.RocketTransform.get_params"]], "set_output() (wildboar.transform._rocket.rockettransform method)": [[46, "wildboar.transform._rocket.RocketTransform.set_output"]], "set_params() (wildboar.transform._rocket.rockettransform method)": [[46, "wildboar.transform._rocket.RocketTransform.set_params"]], "transform() (wildboar.transform._rocket.rockettransform method)": [[46, "wildboar.transform._rocket.RocketTransform.transform"]], "wildboar.transform._rocket": [[46, "module-wildboar.transform._rocket"]], "binning (class in wildboar.transform._sax)": [[47, "wildboar.transform._sax.Binning"]], "normalbinning (class in wildboar.transform._sax)": [[47, "wildboar.transform._sax.NormalBinning"]], "paa (class in wildboar.transform._sax)": [[47, "wildboar.transform._sax.PAA"]], "sax (class in wildboar.transform._sax)": [[47, "wildboar.transform._sax.SAX"]], "uniformbinning (class in wildboar.transform._sax)": [[47, "wildboar.transform._sax.UniformBinning"]], "fit_transform() (wildboar.transform._sax.paa method)": [[47, "wildboar.transform._sax.PAA.fit_transform"]], "fit_transform() (wildboar.transform._sax.sax method)": [[47, "wildboar.transform._sax.SAX.fit_transform"]], "get_metadata_routing() (wildboar.transform._sax.paa method)": [[47, "wildboar.transform._sax.PAA.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform._sax.sax method)": [[47, "wildboar.transform._sax.SAX.get_metadata_routing"]], "get_params() (wildboar.transform._sax.paa method)": [[47, "wildboar.transform._sax.PAA.get_params"]], "get_params() (wildboar.transform._sax.sax method)": [[47, "wildboar.transform._sax.SAX.get_params"]], "get_thresholds() (wildboar.transform._sax.binning method)": [[47, "wildboar.transform._sax.Binning.get_thresholds"]], "get_thresholds() (wildboar.transform._sax.normalbinning method)": [[47, "wildboar.transform._sax.NormalBinning.get_thresholds"]], "get_thresholds() (wildboar.transform._sax.uniformbinning method)": [[47, "wildboar.transform._sax.UniformBinning.get_thresholds"]], "piecewice_aggregate_approximation() (in module wildboar.transform._sax)": [[47, "wildboar.transform._sax.piecewice_aggregate_approximation"]], "scale() (wildboar.transform._sax.binning method)": [[47, "wildboar.transform._sax.Binning.scale"]], "scale() (wildboar.transform._sax.normalbinning method)": [[47, "wildboar.transform._sax.NormalBinning.scale"]], "scale() (wildboar.transform._sax.uniformbinning method)": [[47, "wildboar.transform._sax.UniformBinning.scale"]], "set_output() (wildboar.transform._sax.paa method)": [[47, "wildboar.transform._sax.PAA.set_output"]], "set_output() (wildboar.transform._sax.sax method)": [[47, "wildboar.transform._sax.SAX.set_output"]], "set_params() (wildboar.transform._sax.paa method)": [[47, "wildboar.transform._sax.PAA.set_params"]], "set_params() (wildboar.transform._sax.sax method)": [[47, "wildboar.transform._sax.SAX.set_params"]], "symbolic_aggregate_approximation() (in module wildboar.transform._sax)": [[47, "wildboar.transform._sax.symbolic_aggregate_approximation"]], "wildboar.transform._sax": [[47, "module-wildboar.transform._sax"]], "castortransform (class in wildboar.transform._shapelet)": [[48, "wildboar.transform._shapelet.CastorTransform"]], "dilatedshapelettransform (class in wildboar.transform._shapelet)": [[48, "wildboar.transform._shapelet.DilatedShapeletTransform"]], "randomshapelettransform (class in wildboar.transform._shapelet)": [[48, "wildboar.transform._shapelet.RandomShapeletTransform"]], "shapeletmixin (class in wildboar.transform._shapelet)": [[48, "wildboar.transform._shapelet.ShapeletMixin"]], "fit() (wildboar.transform._shapelet.castortransform method)": [[48, "wildboar.transform._shapelet.CastorTransform.fit"]], "fit() (wildboar.transform._shapelet.dilatedshapelettransform method)": [[48, "wildboar.transform._shapelet.DilatedShapeletTransform.fit"]], "fit() (wildboar.transform._shapelet.randomshapelettransform method)": [[48, "wildboar.transform._shapelet.RandomShapeletTransform.fit"]], "fit_transform() (wildboar.transform._shapelet.castortransform method)": [[48, "wildboar.transform._shapelet.CastorTransform.fit_transform"]], "fit_transform() (wildboar.transform._shapelet.dilatedshapelettransform method)": [[48, "wildboar.transform._shapelet.DilatedShapeletTransform.fit_transform"]], "fit_transform() (wildboar.transform._shapelet.randomshapelettransform method)": [[48, "wildboar.transform._shapelet.RandomShapeletTransform.fit_transform"]], "get_metadata_routing() (wildboar.transform._shapelet.castortransform method)": [[48, "wildboar.transform._shapelet.CastorTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform._shapelet.dilatedshapelettransform method)": [[48, "wildboar.transform._shapelet.DilatedShapeletTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform._shapelet.randomshapelettransform method)": [[48, "wildboar.transform._shapelet.RandomShapeletTransform.get_metadata_routing"]], "get_params() (wildboar.transform._shapelet.castortransform method)": [[48, "wildboar.transform._shapelet.CastorTransform.get_params"]], "get_params() (wildboar.transform._shapelet.dilatedshapelettransform method)": [[48, "wildboar.transform._shapelet.DilatedShapeletTransform.get_params"]], "get_params() (wildboar.transform._shapelet.randomshapelettransform method)": [[48, "wildboar.transform._shapelet.RandomShapeletTransform.get_params"]], "set_output() (wildboar.transform._shapelet.castortransform method)": [[48, "wildboar.transform._shapelet.CastorTransform.set_output"]], "set_output() (wildboar.transform._shapelet.dilatedshapelettransform method)": [[48, "wildboar.transform._shapelet.DilatedShapeletTransform.set_output"]], "set_output() (wildboar.transform._shapelet.randomshapelettransform method)": [[48, "wildboar.transform._shapelet.RandomShapeletTransform.set_output"]], "set_params() (wildboar.transform._shapelet.castortransform method)": [[48, "wildboar.transform._shapelet.CastorTransform.set_params"]], "set_params() (wildboar.transform._shapelet.dilatedshapelettransform method)": [[48, "wildboar.transform._shapelet.DilatedShapeletTransform.set_params"]], "set_params() (wildboar.transform._shapelet.randomshapelettransform method)": [[48, "wildboar.transform._shapelet.RandomShapeletTransform.set_params"]], "transform() (wildboar.transform._shapelet.castortransform method)": [[48, "wildboar.transform._shapelet.CastorTransform.transform"]], "transform() (wildboar.transform._shapelet.dilatedshapelettransform method)": [[48, "wildboar.transform._shapelet.DilatedShapeletTransform.transform"]], "transform() (wildboar.transform._shapelet.randomshapelettransform method)": [[48, "wildboar.transform._shapelet.RandomShapeletTransform.transform"]], "wildboar.transform._shapelet": [[48, "module-wildboar.transform._shapelet"]], "castortransform (class in wildboar.transform)": [[49, "wildboar.transform.CastorTransform"]], "derivativetransform (class in wildboar.transform)": [[49, "wildboar.transform.DerivativeTransform"]], "difftransform (class in wildboar.transform)": [[49, "wildboar.transform.DiffTransform"]], "dilatedshapelettransform (class in wildboar.transform)": [[49, "wildboar.transform.DilatedShapeletTransform"]], "featuretransform (class in wildboar.transform)": [[49, "wildboar.transform.FeatureTransform"]], "hydratransform (class in wildboar.transform)": [[49, "wildboar.transform.HydraTransform"]], "intervaltransform (class in wildboar.transform)": [[49, "wildboar.transform.IntervalTransform"]], "matrixprofiletransform (class in wildboar.transform)": [[49, "wildboar.transform.MatrixProfileTransform"]], "paa (class in wildboar.transform)": [[49, "wildboar.transform.PAA"]], "pivottransform (class in wildboar.transform)": [[49, "wildboar.transform.PivotTransform"]], "proximitytransform (class in wildboar.transform)": [[49, "wildboar.transform.ProximityTransform"]], "randomshapelettransform (class in wildboar.transform)": [[49, "wildboar.transform.RandomShapeletTransform"]], "rockettransform (class in wildboar.transform)": [[49, "wildboar.transform.RocketTransform"]], "sax (class in wildboar.transform)": [[49, "wildboar.transform.SAX"]], "convolve() (in module wildboar.transform)": [[49, "wildboar.transform.convolve"]], "fit() (wildboar.transform.castortransform method)": [[49, "wildboar.transform.CastorTransform.fit"]], "fit() (wildboar.transform.dilatedshapelettransform method)": [[49, "wildboar.transform.DilatedShapeletTransform.fit"]], "fit() (wildboar.transform.featuretransform method)": [[49, "wildboar.transform.FeatureTransform.fit"]], "fit() (wildboar.transform.hydratransform method)": [[49, "wildboar.transform.HydraTransform.fit"]], "fit() (wildboar.transform.intervaltransform method)": [[49, "wildboar.transform.IntervalTransform.fit"]], "fit() (wildboar.transform.matrixprofiletransform method)": [[49, "wildboar.transform.MatrixProfileTransform.fit"]], "fit() (wildboar.transform.pivottransform method)": [[49, "wildboar.transform.PivotTransform.fit"]], "fit() (wildboar.transform.randomshapelettransform method)": [[49, "wildboar.transform.RandomShapeletTransform.fit"]], "fit() (wildboar.transform.rockettransform method)": [[49, "wildboar.transform.RocketTransform.fit"]], "fit_transform() (wildboar.transform.castortransform method)": [[49, "wildboar.transform.CastorTransform.fit_transform"]], "fit_transform() (wildboar.transform.derivativetransform method)": [[49, "wildboar.transform.DerivativeTransform.fit_transform"]], "fit_transform() (wildboar.transform.difftransform method)": [[49, "wildboar.transform.DiffTransform.fit_transform"]], "fit_transform() (wildboar.transform.dilatedshapelettransform method)": [[49, "wildboar.transform.DilatedShapeletTransform.fit_transform"]], "fit_transform() (wildboar.transform.featuretransform method)": [[49, "wildboar.transform.FeatureTransform.fit_transform"]], "fit_transform() (wildboar.transform.hydratransform method)": [[49, "wildboar.transform.HydraTransform.fit_transform"]], "fit_transform() (wildboar.transform.intervaltransform method)": [[49, "wildboar.transform.IntervalTransform.fit_transform"]], "fit_transform() (wildboar.transform.matrixprofiletransform method)": [[49, "wildboar.transform.MatrixProfileTransform.fit_transform"]], "fit_transform() (wildboar.transform.paa method)": [[49, "wildboar.transform.PAA.fit_transform"]], "fit_transform() (wildboar.transform.pivottransform method)": [[49, "wildboar.transform.PivotTransform.fit_transform"]], "fit_transform() (wildboar.transform.proximitytransform method)": [[49, "wildboar.transform.ProximityTransform.fit_transform"]], "fit_transform() (wildboar.transform.randomshapelettransform method)": [[49, "wildboar.transform.RandomShapeletTransform.fit_transform"]], "fit_transform() (wildboar.transform.rockettransform method)": [[49, "wildboar.transform.RocketTransform.fit_transform"]], "fit_transform() (wildboar.transform.sax method)": [[49, "wildboar.transform.SAX.fit_transform"]], "get_metadata_routing() (wildboar.transform.castortransform method)": [[49, "wildboar.transform.CastorTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.derivativetransform method)": [[49, "wildboar.transform.DerivativeTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.difftransform method)": [[49, "wildboar.transform.DiffTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.dilatedshapelettransform method)": [[49, "wildboar.transform.DilatedShapeletTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.featuretransform method)": [[49, "wildboar.transform.FeatureTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.hydratransform method)": [[49, "wildboar.transform.HydraTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.intervaltransform method)": [[49, "wildboar.transform.IntervalTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.matrixprofiletransform method)": [[49, "wildboar.transform.MatrixProfileTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.paa method)": [[49, "wildboar.transform.PAA.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.pivottransform method)": [[49, "wildboar.transform.PivotTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.proximitytransform method)": [[49, "wildboar.transform.ProximityTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.randomshapelettransform method)": [[49, "wildboar.transform.RandomShapeletTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.rockettransform method)": [[49, "wildboar.transform.RocketTransform.get_metadata_routing"]], "get_metadata_routing() (wildboar.transform.sax method)": [[49, "wildboar.transform.SAX.get_metadata_routing"]], "get_params() (wildboar.transform.castortransform method)": [[49, "wildboar.transform.CastorTransform.get_params"]], "get_params() (wildboar.transform.derivativetransform method)": [[49, "wildboar.transform.DerivativeTransform.get_params"]], "get_params() (wildboar.transform.difftransform method)": [[49, "wildboar.transform.DiffTransform.get_params"]], "get_params() (wildboar.transform.dilatedshapelettransform method)": [[49, "wildboar.transform.DilatedShapeletTransform.get_params"]], "get_params() (wildboar.transform.featuretransform method)": [[49, "wildboar.transform.FeatureTransform.get_params"]], "get_params() (wildboar.transform.hydratransform method)": [[49, "wildboar.transform.HydraTransform.get_params"]], "get_params() (wildboar.transform.intervaltransform method)": [[49, "wildboar.transform.IntervalTransform.get_params"]], "get_params() (wildboar.transform.matrixprofiletransform method)": [[49, "wildboar.transform.MatrixProfileTransform.get_params"]], "get_params() (wildboar.transform.paa method)": [[49, "wildboar.transform.PAA.get_params"]], "get_params() (wildboar.transform.pivottransform method)": [[49, "wildboar.transform.PivotTransform.get_params"]], "get_params() (wildboar.transform.proximitytransform method)": [[49, "wildboar.transform.ProximityTransform.get_params"]], "get_params() (wildboar.transform.randomshapelettransform method)": [[49, "wildboar.transform.RandomShapeletTransform.get_params"]], "get_params() (wildboar.transform.rockettransform method)": [[49, "wildboar.transform.RocketTransform.get_params"]], "get_params() (wildboar.transform.sax method)": [[49, "wildboar.transform.SAX.get_params"]], "piecewice_aggregate_approximation() (in module wildboar.transform)": [[49, "wildboar.transform.piecewice_aggregate_approximation"]], "set_output() (wildboar.transform.castortransform method)": [[49, "wildboar.transform.CastorTransform.set_output"]], "set_output() (wildboar.transform.derivativetransform method)": [[49, "wildboar.transform.DerivativeTransform.set_output"]], "set_output() (wildboar.transform.difftransform method)": [[49, "wildboar.transform.DiffTransform.set_output"]], "set_output() (wildboar.transform.dilatedshapelettransform method)": [[49, "wildboar.transform.DilatedShapeletTransform.set_output"]], "set_output() (wildboar.transform.featuretransform method)": [[49, "wildboar.transform.FeatureTransform.set_output"]], "set_output() (wildboar.transform.hydratransform method)": [[49, "wildboar.transform.HydraTransform.set_output"]], "set_output() (wildboar.transform.intervaltransform method)": [[49, "wildboar.transform.IntervalTransform.set_output"]], "set_output() (wildboar.transform.matrixprofiletransform method)": [[49, "wildboar.transform.MatrixProfileTransform.set_output"]], "set_output() (wildboar.transform.paa method)": [[49, "wildboar.transform.PAA.set_output"]], "set_output() (wildboar.transform.pivottransform method)": [[49, "wildboar.transform.PivotTransform.set_output"]], "set_output() (wildboar.transform.proximitytransform method)": [[49, "wildboar.transform.ProximityTransform.set_output"]], "set_output() (wildboar.transform.randomshapelettransform method)": [[49, "wildboar.transform.RandomShapeletTransform.set_output"]], "set_output() (wildboar.transform.rockettransform method)": [[49, "wildboar.transform.RocketTransform.set_output"]], "set_output() (wildboar.transform.sax method)": [[49, "wildboar.transform.SAX.set_output"]], "set_params() (wildboar.transform.castortransform method)": [[49, "wildboar.transform.CastorTransform.set_params"]], "set_params() (wildboar.transform.derivativetransform method)": [[49, "wildboar.transform.DerivativeTransform.set_params"]], "set_params() (wildboar.transform.difftransform method)": [[49, "wildboar.transform.DiffTransform.set_params"]], "set_params() (wildboar.transform.dilatedshapelettransform method)": [[49, "wildboar.transform.DilatedShapeletTransform.set_params"]], "set_params() (wildboar.transform.featuretransform method)": [[49, "wildboar.transform.FeatureTransform.set_params"]], "set_params() (wildboar.transform.hydratransform method)": [[49, "wildboar.transform.HydraTransform.set_params"]], "set_params() (wildboar.transform.intervaltransform method)": [[49, "wildboar.transform.IntervalTransform.set_params"]], "set_params() (wildboar.transform.matrixprofiletransform method)": [[49, "wildboar.transform.MatrixProfileTransform.set_params"]], "set_params() (wildboar.transform.paa method)": [[49, "wildboar.transform.PAA.set_params"]], "set_params() (wildboar.transform.pivottransform method)": [[49, "wildboar.transform.PivotTransform.set_params"]], "set_params() (wildboar.transform.proximitytransform method)": [[49, "wildboar.transform.ProximityTransform.set_params"]], "set_params() (wildboar.transform.randomshapelettransform method)": [[49, "wildboar.transform.RandomShapeletTransform.set_params"]], "set_params() (wildboar.transform.rockettransform method)": [[49, "wildboar.transform.RocketTransform.set_params"]], "set_params() (wildboar.transform.sax method)": [[49, "wildboar.transform.SAX.set_params"]], "symbolic_aggregate_approximation() (in module wildboar.transform)": [[49, "wildboar.transform.symbolic_aggregate_approximation"]], "transform() (wildboar.transform.castortransform method)": [[49, "wildboar.transform.CastorTransform.transform"]], "transform() (wildboar.transform.dilatedshapelettransform method)": [[49, "wildboar.transform.DilatedShapeletTransform.transform"]], "transform() (wildboar.transform.featuretransform method)": [[49, "wildboar.transform.FeatureTransform.transform"]], "transform() (wildboar.transform.hydratransform method)": [[49, "wildboar.transform.HydraTransform.transform"]], "transform() (wildboar.transform.intervaltransform method)": [[49, "wildboar.transform.IntervalTransform.transform"]], "transform() (wildboar.transform.matrixprofiletransform method)": [[49, "wildboar.transform.MatrixProfileTransform.transform"]], "transform() (wildboar.transform.pivottransform method)": [[49, "wildboar.transform.PivotTransform.transform"]], "transform() (wildboar.transform.randomshapelettransform method)": [[49, "wildboar.transform.RandomShapeletTransform.transform"]], "transform() (wildboar.transform.rockettransform method)": [[49, "wildboar.transform.RocketTransform.transform"]], "wildboar.transform": [[49, "module-wildboar.transform"]], "basetree (class in wildboar.tree._base)": [[50, "wildboar.tree._base.BaseTree"]], "basetreeclassifier (class in wildboar.tree._base)": [[50, "wildboar.tree._base.BaseTreeClassifier"]], "basetreeregressor (class in wildboar.tree._base)": [[50, "wildboar.tree._base.BaseTreeRegressor"]], "apply() (wildboar.tree._base.basetree method)": [[50, "wildboar.tree._base.BaseTree.apply"]], "apply() (wildboar.tree._base.basetreeclassifier method)": [[50, "wildboar.tree._base.BaseTreeClassifier.apply"]], "apply() (wildboar.tree._base.basetreeregressor method)": [[50, "wildboar.tree._base.BaseTreeRegressor.apply"]], "decision_path() (wildboar.tree._base.basetree method)": [[50, "wildboar.tree._base.BaseTree.decision_path"]], "decision_path() (wildboar.tree._base.basetreeclassifier method)": [[50, "wildboar.tree._base.BaseTreeClassifier.decision_path"]], "decision_path() (wildboar.tree._base.basetreeregressor method)": [[50, "wildboar.tree._base.BaseTreeRegressor.decision_path"]], "fit() (wildboar.tree._base.basetreeclassifier method)": [[50, "wildboar.tree._base.BaseTreeClassifier.fit"]], "fit() (wildboar.tree._base.basetreeregressor method)": [[50, "wildboar.tree._base.BaseTreeRegressor.fit"]], "get_metadata_routing() (wildboar.tree._base.basetree method)": [[50, "wildboar.tree._base.BaseTree.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._base.basetreeclassifier method)": [[50, "wildboar.tree._base.BaseTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._base.basetreeregressor method)": [[50, "wildboar.tree._base.BaseTreeRegressor.get_metadata_routing"]], "get_params() (wildboar.tree._base.basetree method)": [[50, "wildboar.tree._base.BaseTree.get_params"]], "get_params() (wildboar.tree._base.basetreeclassifier method)": [[50, "wildboar.tree._base.BaseTreeClassifier.get_params"]], "get_params() (wildboar.tree._base.basetreeregressor method)": [[50, "wildboar.tree._base.BaseTreeRegressor.get_params"]], "predict() (wildboar.tree._base.basetreeclassifier method)": [[50, "wildboar.tree._base.BaseTreeClassifier.predict"]], "predict() (wildboar.tree._base.basetreeregressor method)": [[50, "wildboar.tree._base.BaseTreeRegressor.predict"]], "predict_proba() (wildboar.tree._base.basetreeclassifier method)": [[50, "wildboar.tree._base.BaseTreeClassifier.predict_proba"]], "score() (wildboar.tree._base.basetreeclassifier method)": [[50, "wildboar.tree._base.BaseTreeClassifier.score"]], "score() (wildboar.tree._base.basetreeregressor method)": [[50, "wildboar.tree._base.BaseTreeRegressor.score"]], "set_params() (wildboar.tree._base.basetree method)": [[50, "wildboar.tree._base.BaseTree.set_params"]], "set_params() (wildboar.tree._base.basetreeclassifier method)": [[50, "wildboar.tree._base.BaseTreeClassifier.set_params"]], "set_params() (wildboar.tree._base.basetreeregressor method)": [[50, "wildboar.tree._base.BaseTreeRegressor.set_params"]], "wildboar.tree._base": [[50, "module-wildboar.tree._base"]], "proximitytreeclassifier (class in wildboar.tree._ptree)": [[51, "wildboar.tree._ptree.ProximityTreeClassifier"]], "apply() (wildboar.tree._ptree.proximitytreeclassifier method)": [[51, "wildboar.tree._ptree.ProximityTreeClassifier.apply"]], "decision_path() (wildboar.tree._ptree.proximitytreeclassifier method)": [[51, "wildboar.tree._ptree.ProximityTreeClassifier.decision_path"]], "fit() (wildboar.tree._ptree.proximitytreeclassifier method)": [[51, "wildboar.tree._ptree.ProximityTreeClassifier.fit"]], "get_metadata_routing() (wildboar.tree._ptree.proximitytreeclassifier method)": [[51, "wildboar.tree._ptree.ProximityTreeClassifier.get_metadata_routing"]], "get_params() (wildboar.tree._ptree.proximitytreeclassifier method)": [[51, "wildboar.tree._ptree.ProximityTreeClassifier.get_params"]], "predict() (wildboar.tree._ptree.proximitytreeclassifier method)": [[51, "wildboar.tree._ptree.ProximityTreeClassifier.predict"]], "predict_proba() (wildboar.tree._ptree.proximitytreeclassifier method)": [[51, "wildboar.tree._ptree.ProximityTreeClassifier.predict_proba"]], "score() (wildboar.tree._ptree.proximitytreeclassifier method)": [[51, "wildboar.tree._ptree.ProximityTreeClassifier.score"]], "set_params() (wildboar.tree._ptree.proximitytreeclassifier method)": [[51, "wildboar.tree._ptree.ProximityTreeClassifier.set_params"]], "wildboar.tree._ptree": [[51, "module-wildboar.tree._ptree"]], "basefeaturetreeclassifier (class in wildboar.tree._tree)": [[52, "wildboar.tree._tree.BaseFeatureTreeClassifier"]], "basefeaturetreeregressor (class in wildboar.tree._tree)": [[52, "wildboar.tree._tree.BaseFeatureTreeRegressor"]], "dilatedshapelettreeclassifier (class in wildboar.tree._tree)": [[52, "wildboar.tree._tree.DilatedShapeletTreeClassifier"]], "extrashapelettreeclassifier (class in wildboar.tree._tree)": [[52, "wildboar.tree._tree.ExtraShapeletTreeClassifier"]], "extrashapelettreeregressor (class in wildboar.tree._tree)": [[52, "wildboar.tree._tree.ExtraShapeletTreeRegressor"]], "intervaltreeclassifier (class in wildboar.tree._tree)": [[52, "wildboar.tree._tree.IntervalTreeClassifier"]], "intervaltreeregressor (class in wildboar.tree._tree)": [[52, "wildboar.tree._tree.IntervalTreeRegressor"]], "pivottreeclassifier (class in wildboar.tree._tree)": [[52, "wildboar.tree._tree.PivotTreeClassifier"]], "rockettreeclassifier (class in wildboar.tree._tree)": [[52, "wildboar.tree._tree.RocketTreeClassifier"]], "rockettreeregressor (class in wildboar.tree._tree)": [[52, "wildboar.tree._tree.RocketTreeRegressor"]], "shapelettreeclassifier (class in wildboar.tree._tree)": [[52, "wildboar.tree._tree.ShapeletTreeClassifier"]], "shapelettreeregressor (class in wildboar.tree._tree)": [[52, "wildboar.tree._tree.ShapeletTreeRegressor"]], "apply() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[52, "wildboar.tree._tree.BaseFeatureTreeClassifier.apply"]], "apply() (wildboar.tree._tree.basefeaturetreeregressor method)": [[52, "wildboar.tree._tree.BaseFeatureTreeRegressor.apply"]], "apply() (wildboar.tree._tree.dilatedshapelettreeclassifier method)": [[52, "wildboar.tree._tree.DilatedShapeletTreeClassifier.apply"]], "apply() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[52, "wildboar.tree._tree.ExtraShapeletTreeClassifier.apply"]], "apply() (wildboar.tree._tree.extrashapelettreeregressor method)": [[52, "wildboar.tree._tree.ExtraShapeletTreeRegressor.apply"]], "apply() (wildboar.tree._tree.intervaltreeclassifier method)": [[52, "wildboar.tree._tree.IntervalTreeClassifier.apply"]], "apply() (wildboar.tree._tree.intervaltreeregressor method)": [[52, "wildboar.tree._tree.IntervalTreeRegressor.apply"]], "apply() (wildboar.tree._tree.pivottreeclassifier method)": [[52, "wildboar.tree._tree.PivotTreeClassifier.apply"]], "apply() (wildboar.tree._tree.rockettreeclassifier method)": [[52, "wildboar.tree._tree.RocketTreeClassifier.apply"]], "apply() (wildboar.tree._tree.rockettreeregressor method)": [[52, "wildboar.tree._tree.RocketTreeRegressor.apply"]], "apply() (wildboar.tree._tree.shapelettreeclassifier method)": [[52, "wildboar.tree._tree.ShapeletTreeClassifier.apply"]], "apply() (wildboar.tree._tree.shapelettreeregressor method)": [[52, "wildboar.tree._tree.ShapeletTreeRegressor.apply"]], "decision_path() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[52, "wildboar.tree._tree.BaseFeatureTreeClassifier.decision_path"]], "decision_path() (wildboar.tree._tree.basefeaturetreeregressor method)": [[52, "wildboar.tree._tree.BaseFeatureTreeRegressor.decision_path"]], "decision_path() (wildboar.tree._tree.dilatedshapelettreeclassifier method)": [[52, "wildboar.tree._tree.DilatedShapeletTreeClassifier.decision_path"]], "decision_path() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[52, "wildboar.tree._tree.ExtraShapeletTreeClassifier.decision_path"]], "decision_path() (wildboar.tree._tree.extrashapelettreeregressor method)": [[52, "wildboar.tree._tree.ExtraShapeletTreeRegressor.decision_path"]], "decision_path() (wildboar.tree._tree.intervaltreeclassifier method)": [[52, "wildboar.tree._tree.IntervalTreeClassifier.decision_path"]], "decision_path() (wildboar.tree._tree.intervaltreeregressor method)": [[52, "wildboar.tree._tree.IntervalTreeRegressor.decision_path"]], "decision_path() (wildboar.tree._tree.pivottreeclassifier method)": [[52, "wildboar.tree._tree.PivotTreeClassifier.decision_path"]], "decision_path() (wildboar.tree._tree.rockettreeclassifier method)": [[52, "wildboar.tree._tree.RocketTreeClassifier.decision_path"]], "decision_path() (wildboar.tree._tree.rockettreeregressor method)": [[52, "wildboar.tree._tree.RocketTreeRegressor.decision_path"]], "decision_path() (wildboar.tree._tree.shapelettreeclassifier method)": [[52, "wildboar.tree._tree.ShapeletTreeClassifier.decision_path"]], "decision_path() (wildboar.tree._tree.shapelettreeregressor method)": [[52, "wildboar.tree._tree.ShapeletTreeRegressor.decision_path"]], "fit() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[52, "wildboar.tree._tree.BaseFeatureTreeClassifier.fit"]], "fit() (wildboar.tree._tree.basefeaturetreeregressor method)": [[52, "wildboar.tree._tree.BaseFeatureTreeRegressor.fit"]], "fit() (wildboar.tree._tree.dilatedshapelettreeclassifier method)": [[52, "wildboar.tree._tree.DilatedShapeletTreeClassifier.fit"]], "fit() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[52, "wildboar.tree._tree.ExtraShapeletTreeClassifier.fit"]], "fit() (wildboar.tree._tree.extrashapelettreeregressor method)": [[52, "wildboar.tree._tree.ExtraShapeletTreeRegressor.fit"]], "fit() (wildboar.tree._tree.intervaltreeclassifier method)": [[52, "wildboar.tree._tree.IntervalTreeClassifier.fit"]], "fit() (wildboar.tree._tree.intervaltreeregressor method)": [[52, "wildboar.tree._tree.IntervalTreeRegressor.fit"]], "fit() (wildboar.tree._tree.pivottreeclassifier method)": [[52, "wildboar.tree._tree.PivotTreeClassifier.fit"]], "fit() (wildboar.tree._tree.rockettreeclassifier method)": [[52, "wildboar.tree._tree.RocketTreeClassifier.fit"]], "fit() (wildboar.tree._tree.rockettreeregressor method)": [[52, "wildboar.tree._tree.RocketTreeRegressor.fit"]], "fit() (wildboar.tree._tree.shapelettreeclassifier method)": [[52, "wildboar.tree._tree.ShapeletTreeClassifier.fit"]], "fit() (wildboar.tree._tree.shapelettreeregressor method)": [[52, "wildboar.tree._tree.ShapeletTreeRegressor.fit"]], "get_metadata_routing() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[52, "wildboar.tree._tree.BaseFeatureTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.basefeaturetreeregressor method)": [[52, "wildboar.tree._tree.BaseFeatureTreeRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.dilatedshapelettreeclassifier method)": [[52, "wildboar.tree._tree.DilatedShapeletTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[52, "wildboar.tree._tree.ExtraShapeletTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.extrashapelettreeregressor method)": [[52, "wildboar.tree._tree.ExtraShapeletTreeRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.intervaltreeclassifier method)": [[52, "wildboar.tree._tree.IntervalTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.intervaltreeregressor method)": [[52, "wildboar.tree._tree.IntervalTreeRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.pivottreeclassifier method)": [[52, "wildboar.tree._tree.PivotTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.rockettreeclassifier method)": [[52, "wildboar.tree._tree.RocketTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.rockettreeregressor method)": [[52, "wildboar.tree._tree.RocketTreeRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.shapelettreeclassifier method)": [[52, "wildboar.tree._tree.ShapeletTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree._tree.shapelettreeregressor method)": [[52, "wildboar.tree._tree.ShapeletTreeRegressor.get_metadata_routing"]], "get_params() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[52, "wildboar.tree._tree.BaseFeatureTreeClassifier.get_params"]], "get_params() (wildboar.tree._tree.basefeaturetreeregressor method)": [[52, "wildboar.tree._tree.BaseFeatureTreeRegressor.get_params"]], "get_params() (wildboar.tree._tree.dilatedshapelettreeclassifier method)": [[52, "wildboar.tree._tree.DilatedShapeletTreeClassifier.get_params"]], "get_params() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[52, "wildboar.tree._tree.ExtraShapeletTreeClassifier.get_params"]], "get_params() (wildboar.tree._tree.extrashapelettreeregressor method)": [[52, "wildboar.tree._tree.ExtraShapeletTreeRegressor.get_params"]], "get_params() (wildboar.tree._tree.intervaltreeclassifier method)": [[52, "wildboar.tree._tree.IntervalTreeClassifier.get_params"]], "get_params() (wildboar.tree._tree.intervaltreeregressor method)": [[52, "wildboar.tree._tree.IntervalTreeRegressor.get_params"]], "get_params() (wildboar.tree._tree.pivottreeclassifier method)": [[52, "wildboar.tree._tree.PivotTreeClassifier.get_params"]], "get_params() (wildboar.tree._tree.rockettreeclassifier method)": [[52, "wildboar.tree._tree.RocketTreeClassifier.get_params"]], "get_params() (wildboar.tree._tree.rockettreeregressor method)": [[52, "wildboar.tree._tree.RocketTreeRegressor.get_params"]], "get_params() (wildboar.tree._tree.shapelettreeclassifier method)": [[52, "wildboar.tree._tree.ShapeletTreeClassifier.get_params"]], "get_params() (wildboar.tree._tree.shapelettreeregressor method)": [[52, "wildboar.tree._tree.ShapeletTreeRegressor.get_params"]], "predict() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[52, "wildboar.tree._tree.BaseFeatureTreeClassifier.predict"]], "predict() (wildboar.tree._tree.basefeaturetreeregressor method)": [[52, "wildboar.tree._tree.BaseFeatureTreeRegressor.predict"]], "predict() (wildboar.tree._tree.dilatedshapelettreeclassifier method)": [[52, "wildboar.tree._tree.DilatedShapeletTreeClassifier.predict"]], "predict() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[52, "wildboar.tree._tree.ExtraShapeletTreeClassifier.predict"]], "predict() (wildboar.tree._tree.extrashapelettreeregressor method)": [[52, "wildboar.tree._tree.ExtraShapeletTreeRegressor.predict"]], "predict() (wildboar.tree._tree.intervaltreeclassifier method)": [[52, "wildboar.tree._tree.IntervalTreeClassifier.predict"]], "predict() (wildboar.tree._tree.intervaltreeregressor method)": [[52, "wildboar.tree._tree.IntervalTreeRegressor.predict"]], "predict() (wildboar.tree._tree.pivottreeclassifier method)": [[52, "wildboar.tree._tree.PivotTreeClassifier.predict"]], "predict() (wildboar.tree._tree.rockettreeclassifier method)": [[52, "wildboar.tree._tree.RocketTreeClassifier.predict"]], "predict() (wildboar.tree._tree.rockettreeregressor method)": [[52, "wildboar.tree._tree.RocketTreeRegressor.predict"]], "predict() (wildboar.tree._tree.shapelettreeclassifier method)": [[52, "wildboar.tree._tree.ShapeletTreeClassifier.predict"]], "predict() (wildboar.tree._tree.shapelettreeregressor method)": [[52, "wildboar.tree._tree.ShapeletTreeRegressor.predict"]], "predict_proba() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[52, "wildboar.tree._tree.BaseFeatureTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree._tree.dilatedshapelettreeclassifier method)": [[52, "wildboar.tree._tree.DilatedShapeletTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[52, "wildboar.tree._tree.ExtraShapeletTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree._tree.intervaltreeclassifier method)": [[52, "wildboar.tree._tree.IntervalTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree._tree.pivottreeclassifier method)": [[52, "wildboar.tree._tree.PivotTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree._tree.rockettreeclassifier method)": [[52, "wildboar.tree._tree.RocketTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree._tree.shapelettreeclassifier method)": [[52, "wildboar.tree._tree.ShapeletTreeClassifier.predict_proba"]], "score() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[52, "wildboar.tree._tree.BaseFeatureTreeClassifier.score"]], "score() (wildboar.tree._tree.basefeaturetreeregressor method)": [[52, "wildboar.tree._tree.BaseFeatureTreeRegressor.score"]], "score() (wildboar.tree._tree.dilatedshapelettreeclassifier method)": [[52, "wildboar.tree._tree.DilatedShapeletTreeClassifier.score"]], "score() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[52, "wildboar.tree._tree.ExtraShapeletTreeClassifier.score"]], "score() (wildboar.tree._tree.extrashapelettreeregressor method)": [[52, "wildboar.tree._tree.ExtraShapeletTreeRegressor.score"]], "score() (wildboar.tree._tree.intervaltreeclassifier method)": [[52, "wildboar.tree._tree.IntervalTreeClassifier.score"]], "score() (wildboar.tree._tree.intervaltreeregressor method)": [[52, "wildboar.tree._tree.IntervalTreeRegressor.score"]], "score() (wildboar.tree._tree.pivottreeclassifier method)": [[52, "wildboar.tree._tree.PivotTreeClassifier.score"]], "score() (wildboar.tree._tree.rockettreeclassifier method)": [[52, "wildboar.tree._tree.RocketTreeClassifier.score"]], "score() (wildboar.tree._tree.rockettreeregressor method)": [[52, "wildboar.tree._tree.RocketTreeRegressor.score"]], "score() (wildboar.tree._tree.shapelettreeclassifier method)": [[52, "wildboar.tree._tree.ShapeletTreeClassifier.score"]], "score() (wildboar.tree._tree.shapelettreeregressor method)": [[52, "wildboar.tree._tree.ShapeletTreeRegressor.score"]], "set_params() (wildboar.tree._tree.basefeaturetreeclassifier method)": [[52, "wildboar.tree._tree.BaseFeatureTreeClassifier.set_params"]], "set_params() (wildboar.tree._tree.basefeaturetreeregressor method)": [[52, "wildboar.tree._tree.BaseFeatureTreeRegressor.set_params"]], "set_params() (wildboar.tree._tree.dilatedshapelettreeclassifier method)": [[52, "wildboar.tree._tree.DilatedShapeletTreeClassifier.set_params"]], "set_params() (wildboar.tree._tree.extrashapelettreeclassifier method)": [[52, "wildboar.tree._tree.ExtraShapeletTreeClassifier.set_params"]], "set_params() (wildboar.tree._tree.extrashapelettreeregressor method)": [[52, "wildboar.tree._tree.ExtraShapeletTreeRegressor.set_params"]], "set_params() (wildboar.tree._tree.intervaltreeclassifier method)": [[52, "wildboar.tree._tree.IntervalTreeClassifier.set_params"]], "set_params() (wildboar.tree._tree.intervaltreeregressor method)": [[52, "wildboar.tree._tree.IntervalTreeRegressor.set_params"]], "set_params() (wildboar.tree._tree.pivottreeclassifier method)": [[52, "wildboar.tree._tree.PivotTreeClassifier.set_params"]], "set_params() (wildboar.tree._tree.rockettreeclassifier method)": [[52, "wildboar.tree._tree.RocketTreeClassifier.set_params"]], "set_params() (wildboar.tree._tree.rockettreeregressor method)": [[52, "wildboar.tree._tree.RocketTreeRegressor.set_params"]], "set_params() (wildboar.tree._tree.shapelettreeclassifier method)": [[52, "wildboar.tree._tree.ShapeletTreeClassifier.set_params"]], "set_params() (wildboar.tree._tree.shapelettreeregressor method)": [[52, "wildboar.tree._tree.ShapeletTreeRegressor.set_params"]], "wildboar.tree._tree": [[52, "module-wildboar.tree._tree"]], "extrashapelettreeclassifier (class in wildboar.tree)": [[53, "wildboar.tree.ExtraShapeletTreeClassifier"]], "extrashapelettreeregressor (class in wildboar.tree)": [[53, "wildboar.tree.ExtraShapeletTreeRegressor"]], "intervaltreeclassifier (class in wildboar.tree)": [[53, "wildboar.tree.IntervalTreeClassifier"]], "intervaltreeregressor (class in wildboar.tree)": [[53, "wildboar.tree.IntervalTreeRegressor"]], "pivottreeclassifier (class in wildboar.tree)": [[53, "wildboar.tree.PivotTreeClassifier"]], "proximitytreeclassifier (class in wildboar.tree)": [[53, "wildboar.tree.ProximityTreeClassifier"]], "rockettreeclassifier (class in wildboar.tree)": [[53, "wildboar.tree.RocketTreeClassifier"]], "rockettreeregressor (class in wildboar.tree)": [[53, "wildboar.tree.RocketTreeRegressor"]], "shapelettreeclassifier (class in wildboar.tree)": [[53, "wildboar.tree.ShapeletTreeClassifier"]], "shapelettreeregressor (class in wildboar.tree)": [[53, "wildboar.tree.ShapeletTreeRegressor"]], "apply() (wildboar.tree.extrashapelettreeclassifier method)": [[53, "wildboar.tree.ExtraShapeletTreeClassifier.apply"]], "apply() (wildboar.tree.extrashapelettreeregressor method)": [[53, "wildboar.tree.ExtraShapeletTreeRegressor.apply"]], "apply() (wildboar.tree.intervaltreeclassifier method)": [[53, "wildboar.tree.IntervalTreeClassifier.apply"]], "apply() (wildboar.tree.intervaltreeregressor method)": [[53, "wildboar.tree.IntervalTreeRegressor.apply"]], "apply() (wildboar.tree.pivottreeclassifier method)": [[53, "wildboar.tree.PivotTreeClassifier.apply"]], "apply() (wildboar.tree.proximitytreeclassifier method)": [[53, "wildboar.tree.ProximityTreeClassifier.apply"]], "apply() (wildboar.tree.rockettreeclassifier method)": [[53, "wildboar.tree.RocketTreeClassifier.apply"]], "apply() (wildboar.tree.rockettreeregressor method)": [[53, "wildboar.tree.RocketTreeRegressor.apply"]], "apply() (wildboar.tree.shapelettreeclassifier method)": [[53, "wildboar.tree.ShapeletTreeClassifier.apply"]], "apply() (wildboar.tree.shapelettreeregressor method)": [[53, "wildboar.tree.ShapeletTreeRegressor.apply"]], "decision_path() (wildboar.tree.extrashapelettreeclassifier method)": [[53, "wildboar.tree.ExtraShapeletTreeClassifier.decision_path"]], "decision_path() (wildboar.tree.extrashapelettreeregressor method)": [[53, "wildboar.tree.ExtraShapeletTreeRegressor.decision_path"]], "decision_path() (wildboar.tree.intervaltreeclassifier method)": [[53, "wildboar.tree.IntervalTreeClassifier.decision_path"]], "decision_path() (wildboar.tree.intervaltreeregressor method)": [[53, "wildboar.tree.IntervalTreeRegressor.decision_path"]], "decision_path() (wildboar.tree.pivottreeclassifier method)": [[53, "wildboar.tree.PivotTreeClassifier.decision_path"]], "decision_path() (wildboar.tree.proximitytreeclassifier method)": [[53, "wildboar.tree.ProximityTreeClassifier.decision_path"]], "decision_path() (wildboar.tree.rockettreeclassifier method)": [[53, "wildboar.tree.RocketTreeClassifier.decision_path"]], "decision_path() (wildboar.tree.rockettreeregressor method)": [[53, "wildboar.tree.RocketTreeRegressor.decision_path"]], "decision_path() (wildboar.tree.shapelettreeclassifier method)": [[53, "wildboar.tree.ShapeletTreeClassifier.decision_path"]], "decision_path() (wildboar.tree.shapelettreeregressor method)": [[53, "wildboar.tree.ShapeletTreeRegressor.decision_path"]], "fit() (wildboar.tree.extrashapelettreeclassifier method)": [[53, "wildboar.tree.ExtraShapeletTreeClassifier.fit"]], "fit() (wildboar.tree.extrashapelettreeregressor method)": [[53, "wildboar.tree.ExtraShapeletTreeRegressor.fit"]], "fit() (wildboar.tree.intervaltreeclassifier method)": [[53, "wildboar.tree.IntervalTreeClassifier.fit"]], "fit() (wildboar.tree.intervaltreeregressor method)": [[53, "wildboar.tree.IntervalTreeRegressor.fit"]], "fit() (wildboar.tree.pivottreeclassifier method)": [[53, "wildboar.tree.PivotTreeClassifier.fit"]], "fit() (wildboar.tree.proximitytreeclassifier method)": [[53, "wildboar.tree.ProximityTreeClassifier.fit"]], "fit() (wildboar.tree.rockettreeclassifier method)": [[53, "wildboar.tree.RocketTreeClassifier.fit"]], "fit() (wildboar.tree.rockettreeregressor method)": [[53, "wildboar.tree.RocketTreeRegressor.fit"]], "fit() (wildboar.tree.shapelettreeclassifier method)": [[53, "wildboar.tree.ShapeletTreeClassifier.fit"]], "fit() (wildboar.tree.shapelettreeregressor method)": [[53, "wildboar.tree.ShapeletTreeRegressor.fit"]], "get_metadata_routing() (wildboar.tree.extrashapelettreeclassifier method)": [[53, "wildboar.tree.ExtraShapeletTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.extrashapelettreeregressor method)": [[53, "wildboar.tree.ExtraShapeletTreeRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.intervaltreeclassifier method)": [[53, "wildboar.tree.IntervalTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.intervaltreeregressor method)": [[53, "wildboar.tree.IntervalTreeRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.pivottreeclassifier method)": [[53, "wildboar.tree.PivotTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.proximitytreeclassifier method)": [[53, "wildboar.tree.ProximityTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.rockettreeclassifier method)": [[53, "wildboar.tree.RocketTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.rockettreeregressor method)": [[53, "wildboar.tree.RocketTreeRegressor.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.shapelettreeclassifier method)": [[53, "wildboar.tree.ShapeletTreeClassifier.get_metadata_routing"]], "get_metadata_routing() (wildboar.tree.shapelettreeregressor method)": [[53, "wildboar.tree.ShapeletTreeRegressor.get_metadata_routing"]], "get_params() (wildboar.tree.extrashapelettreeclassifier method)": [[53, "wildboar.tree.ExtraShapeletTreeClassifier.get_params"]], "get_params() (wildboar.tree.extrashapelettreeregressor method)": [[53, "wildboar.tree.ExtraShapeletTreeRegressor.get_params"]], "get_params() (wildboar.tree.intervaltreeclassifier method)": [[53, "wildboar.tree.IntervalTreeClassifier.get_params"]], "get_params() (wildboar.tree.intervaltreeregressor method)": [[53, "wildboar.tree.IntervalTreeRegressor.get_params"]], "get_params() (wildboar.tree.pivottreeclassifier method)": [[53, "wildboar.tree.PivotTreeClassifier.get_params"]], "get_params() (wildboar.tree.proximitytreeclassifier method)": [[53, "wildboar.tree.ProximityTreeClassifier.get_params"]], "get_params() (wildboar.tree.rockettreeclassifier method)": [[53, "wildboar.tree.RocketTreeClassifier.get_params"]], "get_params() (wildboar.tree.rockettreeregressor method)": [[53, "wildboar.tree.RocketTreeRegressor.get_params"]], "get_params() (wildboar.tree.shapelettreeclassifier method)": [[53, "wildboar.tree.ShapeletTreeClassifier.get_params"]], "get_params() (wildboar.tree.shapelettreeregressor method)": [[53, "wildboar.tree.ShapeletTreeRegressor.get_params"]], "predict() (wildboar.tree.extrashapelettreeclassifier method)": [[53, "wildboar.tree.ExtraShapeletTreeClassifier.predict"]], "predict() (wildboar.tree.extrashapelettreeregressor method)": [[53, "wildboar.tree.ExtraShapeletTreeRegressor.predict"]], "predict() (wildboar.tree.intervaltreeclassifier method)": [[53, "wildboar.tree.IntervalTreeClassifier.predict"]], "predict() (wildboar.tree.intervaltreeregressor method)": [[53, "wildboar.tree.IntervalTreeRegressor.predict"]], "predict() (wildboar.tree.pivottreeclassifier method)": [[53, "wildboar.tree.PivotTreeClassifier.predict"]], "predict() (wildboar.tree.proximitytreeclassifier method)": [[53, "wildboar.tree.ProximityTreeClassifier.predict"]], "predict() (wildboar.tree.rockettreeclassifier method)": [[53, "wildboar.tree.RocketTreeClassifier.predict"]], "predict() (wildboar.tree.rockettreeregressor method)": [[53, "wildboar.tree.RocketTreeRegressor.predict"]], "predict() (wildboar.tree.shapelettreeclassifier method)": [[53, "wildboar.tree.ShapeletTreeClassifier.predict"]], "predict() (wildboar.tree.shapelettreeregressor method)": [[53, "wildboar.tree.ShapeletTreeRegressor.predict"]], "predict_proba() (wildboar.tree.extrashapelettreeclassifier method)": [[53, "wildboar.tree.ExtraShapeletTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree.intervaltreeclassifier method)": [[53, "wildboar.tree.IntervalTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree.pivottreeclassifier method)": [[53, "wildboar.tree.PivotTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree.proximitytreeclassifier method)": [[53, "wildboar.tree.ProximityTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree.rockettreeclassifier method)": [[53, "wildboar.tree.RocketTreeClassifier.predict_proba"]], "predict_proba() (wildboar.tree.shapelettreeclassifier method)": [[53, "wildboar.tree.ShapeletTreeClassifier.predict_proba"]], "score() (wildboar.tree.extrashapelettreeclassifier method)": [[53, "wildboar.tree.ExtraShapeletTreeClassifier.score"]], "score() (wildboar.tree.extrashapelettreeregressor method)": [[53, "wildboar.tree.ExtraShapeletTreeRegressor.score"]], "score() (wildboar.tree.intervaltreeclassifier method)": [[53, "wildboar.tree.IntervalTreeClassifier.score"]], "score() (wildboar.tree.intervaltreeregressor method)": [[53, "wildboar.tree.IntervalTreeRegressor.score"]], "score() (wildboar.tree.pivottreeclassifier method)": [[53, "wildboar.tree.PivotTreeClassifier.score"]], "score() (wildboar.tree.proximitytreeclassifier method)": [[53, "wildboar.tree.ProximityTreeClassifier.score"]], "score() (wildboar.tree.rockettreeclassifier method)": [[53, "wildboar.tree.RocketTreeClassifier.score"]], "score() (wildboar.tree.rockettreeregressor method)": [[53, "wildboar.tree.RocketTreeRegressor.score"]], "score() (wildboar.tree.shapelettreeclassifier method)": [[53, "wildboar.tree.ShapeletTreeClassifier.score"]], "score() (wildboar.tree.shapelettreeregressor method)": [[53, "wildboar.tree.ShapeletTreeRegressor.score"]], "set_params() (wildboar.tree.extrashapelettreeclassifier method)": [[53, "wildboar.tree.ExtraShapeletTreeClassifier.set_params"]], "set_params() (wildboar.tree.extrashapelettreeregressor method)": [[53, "wildboar.tree.ExtraShapeletTreeRegressor.set_params"]], "set_params() (wildboar.tree.intervaltreeclassifier method)": [[53, "wildboar.tree.IntervalTreeClassifier.set_params"]], "set_params() (wildboar.tree.intervaltreeregressor method)": [[53, "wildboar.tree.IntervalTreeRegressor.set_params"]], "set_params() (wildboar.tree.pivottreeclassifier method)": [[53, "wildboar.tree.PivotTreeClassifier.set_params"]], "set_params() (wildboar.tree.proximitytreeclassifier method)": [[53, "wildboar.tree.ProximityTreeClassifier.set_params"]], "set_params() (wildboar.tree.rockettreeclassifier method)": [[53, "wildboar.tree.RocketTreeClassifier.set_params"]], "set_params() (wildboar.tree.rockettreeregressor method)": [[53, "wildboar.tree.RocketTreeRegressor.set_params"]], "set_params() (wildboar.tree.shapelettreeclassifier method)": [[53, "wildboar.tree.ShapeletTreeClassifier.set_params"]], "set_params() (wildboar.tree.shapelettreeregressor method)": [[53, "wildboar.tree.ShapeletTreeRegressor.set_params"]], "wildboar.tree": [[53, "module-wildboar.tree"]], "run_in_parallel() (in module wildboar.utils._parallel)": [[54, "wildboar.utils._parallel.run_in_parallel"]], "wildboar.utils._parallel": [[54, "module-wildboar.utils._parallel"]], "assert_exhaustive_parameter_checks() (in module wildboar.utils._testing)": [[55, "wildboar.utils._testing.assert_exhaustive_parameter_checks"]], "assert_parameter_checks() (in module wildboar.utils._testing)": [[55, "wildboar.utils._testing.assert_parameter_checks"]], "wildboar.utils._testing": [[55, "module-wildboar.utils._testing"]], "array_or_scalar() (in module wildboar.utils.decorators)": [[56, "wildboar.utils.decorators.array_or_scalar"]], "singleton() (in module wildboar.utils.decorators)": [[56, "wildboar.utils.decorators.singleton"]], "unstable() (in module wildboar.utils.decorators)": [[56, "wildboar.utils.decorators.unstable"]], "wildboar.utils.decorators": [[56, "module-wildboar.utils.decorators"]], "check_estimator() (in module wildboar.utils.estimator_checks)": [[57, "wildboar.utils.estimator_checks.check_estimator"]], "wildboar.utils.estimator_checks": [[57, "module-wildboar.utils.estimator_checks"]], "check_x_y() (in module wildboar.utils)": [[58, "wildboar.utils.check_X_y"]], "check_array() (in module wildboar.utils)": [[58, "wildboar.utils.check_array"]], "wildboar.utils": [[58, "module-wildboar.utils"]], "midpointnormalize (class in wildboar.utils.plot)": [[59, "wildboar.utils.plot.MidpointNormalize"]], "autoscale() (wildboar.utils.plot.midpointnormalize method)": [[59, "wildboar.utils.plot.MidpointNormalize.autoscale"]], "autoscale_none() (wildboar.utils.plot.midpointnormalize method)": [[59, "wildboar.utils.plot.MidpointNormalize.autoscale_None"]], "plot_frequency_domain() (in module wildboar.utils.plot)": [[59, "wildboar.utils.plot.plot_frequency_domain"]], "plot_time_domain() (in module wildboar.utils.plot)": [[59, "wildboar.utils.plot.plot_time_domain"]], "process_value() (wildboar.utils.plot.midpointnormalize static method)": [[59, "wildboar.utils.plot.MidpointNormalize.process_value"]], "scaled() (wildboar.utils.plot.midpointnormalize method)": [[59, "wildboar.utils.plot.MidpointNormalize.scaled"]], "wildboar.utils.plot": [[59, "module-wildboar.utils.plot"]], "check_x_y() (in module wildboar.utils.validation)": [[60, "wildboar.utils.validation.check_X_y"]], "check_array() (in module wildboar.utils.validation)": [[60, "wildboar.utils.validation.check_array"]], "check_classification_targets() (in module wildboar.utils.validation)": [[60, "wildboar.utils.validation.check_classification_targets"]], "check_option() (in module wildboar.utils.validation)": [[60, "wildboar.utils.validation.check_option"]], "check_type() (in module wildboar.utils.validation)": [[60, "wildboar.utils.validation.check_type"]], "wildboar.utils.validation": [[60, "module-wildboar.utils.validation"]], "get_variable_length() (in module wildboar.utils.variable_len)": [[61, "wildboar.utils.variable_len.get_variable_length"]], "is_end_of_series() (in module wildboar.utils.variable_len)": [[61, "wildboar.utils.variable_len.is_end_of_series"]], "is_variable_length() (in module wildboar.utils.variable_len)": [[61, "wildboar.utils.variable_len.is_variable_length"]], "wildboar.utils.variable_len": [[61, "module-wildboar.utils.variable_len"]], "wildboar.version": [[62, "module-wildboar.version"]]}})