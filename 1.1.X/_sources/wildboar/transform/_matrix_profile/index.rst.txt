:orphan:

:py:mod:`wildboar.transform._matrix_profile`
============================================

.. py:module:: wildboar.transform._matrix_profile


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   wildboar.transform._matrix_profile.MatrixProfileTransform




.. py:class:: MatrixProfileTransform(window=0.1, exclude=None, n_jobs=None)

   Bases: :py:obj:`sklearn.base.TransformerMixin`, :py:obj:`wildboar.base.BaseEstimator`

   Transform each time series in a dataset to its MatrixProfile similarity self-join

   .. rubric:: Examples

   >>> from wildboar.datasets import load_two_lead_ecg()
   >>> from wildboar.transform import MatrixProfileTransform
   >>> x, y = load_two_lead_ecg()
   >>> t = MatrixProfileTransform()
   >>> t.fit_transform(x)

   :param window:
   :type window: int or float, optional
   :param The subsequence size:
   :param by default 0.1:
   :param - if float:
   :param a fraction of n_timestep:
   :param - if int:
   :param the exact subsequence size:
   :param exclude: The size of the exclusion zone. The default exclusion zone is 0.2

                   - if float, expressed as a fraction of the windows size
                   - if int, exact size (0 < exclude)
   :type exclude: int or float, optional
   :param n_jobs: The number of jobs to use when computing the
   :type n_jobs: int, optional

   .. py:method:: fit(x, y=None)

      Fit the matrix profile. Sets the expected input dimensions

      :param x: The samples
      :type x: array-like of shape (n_samples, n_timesteps)         or (n_samples, n_dims, n_timesteps)
      :param y: The optional labels.
      :type y: ignored

      :returns: **self**
      :rtype: a fitted instance


   .. py:method:: transform(x)

      Transform the samples to their MatrixProfile self-join.

      :param x: The samples
      :type x: array-like of shape (n_samples, n_timesteps)         or (n_samples, n_dims, n_timesteps)

      :returns: **mp** -- The matrix matrix profile of each sample
      :rtype: ndarray of shape (n_samples, n_timestep)         or (n_samples, n_dims, n_timesteps)



